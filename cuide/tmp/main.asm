@_$MSG1
.string "invalid pointer or corruption detected.\n"
@_$MSG2
.string ".."
@_$MSG3
.string "/"
@_$MSG4
.string "/"
@_$MSG5
.string "/"
@_$MSG6
.string "."
@_$MSG7
.string "/"
@_$MSG8
.string "/"
@_$MSG9
.string "."
@_$MSG10
.string "/"
@_$MSG11
.string "."
@_$MSG12
.string "070701"
@_$MSG13
.string "TRAILER!!!"
@_$MSG14
.string "build-script"
@_$MSG15
.string "# Write your build commands here.\n"
@_$MSG16
.string "# Internal commands:\n"
@_$MSG17
.string "# scpp, scc, asm -- internal compilers (See manual pages for usage)\n"
@_$MSG18
.string "# mkdir -- create directories\n"
@_$MSG19
.string "# remove -- remove files or directories\n"
@_$MSG20
.string "# rename -- rename file or directory\n"
@_$MSG21
.string "/include"
@_$MSG22
.string "build-script"
@_$MSG23
.string "./"
@_$MSG24
.string "."
@_$MSG25
.string ".."
@_$MSG26
.string "X -- quit; UP/DOWN -- scroll up/down; RIGHT -- open; D -- new directory;"
@_$MSG27
.string "LEFT -- go to parent directory; F -- new file; B -- run build script"
@_$MSG28
.string "^ -- remove file permanently"
@_$MSG29
.string "Please read manual pages before using this program."
@_$MSG30
.string "[DIR ]"
@_$MSG31
.string "[FILE]"
@_$MSG32
.string "/"
@_$MSG33
.string "_cursor_record"
@_$MSG34
.string "_cursor_record"
@_$MSG35
.string "."
@_$MSG36
.string ".."
@_$MSG37
.string "."
@_$MSG38
.string "\033[?25l\x0f\033[1;1H\033[0m"
@_$MSG39
.string "\033[0m"
@_$MSG40
.string "\033[1m\033[37m\033[40m"
@_$MSG41
.string "\033[0m"
@_$MSG42
.string "\033["
@_$MSG43
.string ";"
@_$MSG44
.string "H"
@_$MSG45
.string "\033[?25h"
@_$MSG46
.string "\033[?25l\x0f\033[1;1H\033[0m"
@_$MSG47
.string "\033[47m\033[30m"
@_$MSG48
.string "\033[0m"
@_$MSG49
.string "\033[47m \033[0m"
@_$MSG50
.string "\033[42m \033[0m"
@_$MSG51
.string "\033[47m \033[0m"
@_$MSG52
.string "\033[44m \033[0m"
@_$MSG53
.string "                    \r"
@_$MSG54
.string "Insert"
@_$MSG55
.string "Select"
@_$MSG56
.string ">"
@_$MSG57
.string " "
@_$MSG58
.string "\033["
@_$MSG59
.string ";"
@_$MSG60
.string "H"
@_$MSG61
.string "\033[37m\033[43m"
@_$MSG62
.string "\033[0m"
@_$MSG63
.string "\033[?25h"
@_$MSG64
.string "FATAL: cannot allocate memory.\n"
@_$MSG65
.string "file \""
@_$MSG66
.string "\" line "
@_$MSG67
.string ": error: "
@_$MSG68
.string " "
@_$MSG69
.string " "
@_$MSG70
.string "."
@_$MSG71
.string "too many levels of #include."
@_$MSG72
.string "cannot open file."
@_$MSG73
.string "expected file name in #include."
@_$MSG74
.string "include"
@_$MSG75
.string "error"
@_$MSG76
.string "define"
@_$MSG77
.string "macro redefined."
@_$MSG78
.string "undef"
@_$MSG79
.string "macro not defined."
@_$MSG80
.string "ifdef"
@_$MSG81
.string "ifndef"
@_$MSG82
.string "endif"
@_$MSG83
.string "#endif without #ifdef or #ifndef."
@_$MSG84
.string "else"
@_$MSG85
.string "#else without #ifdef or #ifndef."
@_$MSG86
.string "unknown preprocessor command."
@_$MSG87
.string "#endif not found at end of file."
@_$MSG88
.string "("
@_$MSG89
.string "#define format error."
@_$MSG90
.string "#define format error."
@_$MSG91
.string "#define format error."
@_$MSG92
.string "numbers of arguments did not match."
@_$MSG93
.string "#define is too long."
@_$MSG94
.string "Usage: scpp <input> <output>\n"
@_$MSG95
.string "Cannot open input file\n"
@_$MSG96
.string "Cannot open output file\n"
@_$MSG97
.string "."
@_$MSG98
.string "define"
@_$MSG99
.string "expected macro name after #define."
@_$MSG100
.string "undef"
@_$MSG101
.string "expected macro name after #undef."
@_$MSG102
.string "\n"
@_$MSG103
.string "FATAL: cannot allocate memory.\n"
@_$MSG104
.string "line "
@_$MSG105
.string " column "
@_$MSG106
.string ": error: "
@_$MSG107
.string "string not complete."
@_$MSG108
.string "string not complete."
@_$MSG109
.string "unrecognized character \'"
@_$MSG110
.string "\0"
@_$MSG111
.string "Identifier"
@_$MSG112
.string "FConstant"
@_$MSG113
.string "Constant"
@_$MSG114
.string "Identifier"
@_$MSG115
.string ","
@_$MSG116
.string ","
@_$MSG117
.string "expected expression after \',\'."
@_$MSG118
.string ","
@_$MSG119
.string "expected expression after \'"
@_$MSG120
.string "\'."
@_$MSG121
.string "\?"
@_$MSG122
.string "?:"
@_$MSG123
.string "expected expression after \'\?\'."
@_$MSG124
.string ":"
@_$MSG125
.string "expected \':\' after \'\?\'."
@_$MSG126
.string "expected expression after \':\'."
@_$MSG127
.string "\?"
@_$MSG128
.string "||"
@_$MSG129
.string "||"
@_$MSG130
.string "expected expression after \'||\'."
@_$MSG131
.string "||"
@_$MSG132
.string "&&"
@_$MSG133
.string "&&"
@_$MSG134
.string "expected expression after \'&&\'."
@_$MSG135
.string "&&"
@_$MSG136
.string "|"
@_$MSG137
.string "|"
@_$MSG138
.string "expected expression after \'|\'."
@_$MSG139
.string "|"
@_$MSG140
.string "^"
@_$MSG141
.string "^"
@_$MSG142
.string "expected expression after \'^\'."
@_$MSG143
.string "^"
@_$MSG144
.string "&"
@_$MSG145
.string "&"
@_$MSG146
.string "expected expression after \'&\'."
@_$MSG147
.string "&"
@_$MSG148
.string "expected expression after \'"
@_$MSG149
.string "\'."
@_$MSG150
.string "expected expression after \'"
@_$MSG151
.string "\'."
@_$MSG152
.string "expected expression after \'"
@_$MSG153
.string "\'."
@_$MSG154
.string "expected expression after \'"
@_$MSG155
.string "\'."
@_$MSG156
.string "expected expression after \'"
@_$MSG157
.string "\'."
@_$MSG158
.string "sizeof"
@_$MSG159
.string "("
@_$MSG160
.string "sizeof_type"
@_$MSG161
.string "invalid declaration."
@_$MSG162
.string ")"
@_$MSG163
.string "expected \')\' after declaration."
@_$MSG164
.string "("
@_$MSG165
.string "cast"
@_$MSG166
.string "invalid declaration."
@_$MSG167
.string ")"
@_$MSG168
.string "expected \')\' after declaration."
@_$MSG169
.string "-"
@_$MSG170
.string "neg"
@_$MSG171
.string "*"
@_$MSG172
.string "deref"
@_$MSG173
.string "&"
@_$MSG174
.string "addr"
@_$MSG175
.string "expected expression after \'"
@_$MSG176
.string "\'."
@_$MSG177
.string "expected expression after \')\'."
@_$MSG178
.string "("
@_$MSG179
.string "call_noarg"
@_$MSG180
.string ")"
@_$MSG181
.string "expected \')\' after \'(\'."
@_$MSG182
.string "call"
@_$MSG183
.string ","
@_$MSG184
.string "expected expression after \',\'."
@_$MSG185
.string ","
@_$MSG186
.string ")"
@_$MSG187
.string "expected \')\' after \'(\'."
@_$MSG188
.string "["
@_$MSG189
.string "[]"
@_$MSG190
.string "expected expression after \'(\'."
@_$MSG191
.string "]"
@_$MSG192
.string "expected \']\' after \'[\'."
@_$MSG193
.string "."
@_$MSG194
.string "."
@_$MSG195
.string "expected member name after \'.\'."
@_$MSG196
.string "->"
@_$MSG197
.string "->"
@_$MSG198
.string "expected member name after \'->\'."
@_$MSG199
.string "("
@_$MSG200
.string "expected expression after \'(\'."
@_$MSG201
.string ")"
@_$MSG202
.string "expected \')\' after \'(\'."
@_$MSG203
.string ";"
@_$MSG204
.string "expected \';\' after expression."
@_$MSG205
.string "expr"
@_$MSG206
.string "="
@_$MSG207
.string "+="
@_$MSG208
.string "-="
@_$MSG209
.string "*="
@_$MSG210
.string "/="
@_$MSG211
.string "%="
@_$MSG212
.string "&="
@_$MSG213
.string "|="
@_$MSG214
.string "^="
@_$MSG215
.string "<<="
@_$MSG216
.string ">>="
@_$MSG217
.string "=="
@_$MSG218
.string "!="
@_$MSG219
.string ">"
@_$MSG220
.string ">="
@_$MSG221
.string "<"
@_$MSG222
.string "<="
@_$MSG223
.string "<<"
@_$MSG224
.string ">>"
@_$MSG225
.string "+"
@_$MSG226
.string "-"
@_$MSG227
.string "/"
@_$MSG228
.string "*"
@_$MSG229
.string "%"
@_$MSG230
.string "-"
@_$MSG231
.string "++"
@_$MSG232
.string "--"
@_$MSG233
.string "*"
@_$MSG234
.string "&"
@_$MSG235
.string "!"
@_$MSG236
.string "~"
@_$MSG237
.string "sizeof"
@_$MSG238
.string "<NULL>"
@_$MSG239
.string "Identifier"
@_$MSG240
.string "void"
@_$MSG241
.string "void"
@_$MSG242
.string "invalid type."
@_$MSG243
.string "invalid type."
@_$MSG244
.string "invalid type."
@_$MSG245
.string "hfloat"
@_$MSG246
.string "float"
@_$MSG247
.string "u8"
@_$MSG248
.string "s8"
@_$MSG249
.string "u16"
@_$MSG250
.string "s16"
@_$MSG251
.string "u64"
@_$MSG252
.string "s64"
@_$MSG253
.string "u32"
@_$MSG254
.string "s32"
@_$MSG255
.string "struct"
@_$MSG256
.string "struct"
@_$MSG257
.string "union"
@_$MSG258
.string "union"
@_$MSG259
.string "{"
@_$MSG260
.string "invalid declaration.\n"
@_$MSG261
.string ";"
@_$MSG262
.string "expected \';\' after declaration.\n"
@_$MSG263
.string "}"
@_$MSG264
.string "expected \'}\' after member list.\n"
@_$MSG265
.string "["
@_$MSG266
.string "]"
@_$MSG267
.string "array_nosize"
@_$MSG268
.string "expected \']\' or expression after \'[\'."
@_$MSG269
.string "]"
@_$MSG270
.string "expected \']\' after expression."
@_$MSG271
.string "array"
@_$MSG272
.string "function"
@_$MSG273
.string ")"
@_$MSG274
.string "void"
@_$MSG275
.string ")"
@_$MSG276
.string "invalid declaration type."
@_$MSG277
.string "invalid declaration."
@_$MSG278
.string ","
@_$MSG279
.string "("
@_$MSG280
.string ")"
@_$MSG281
.string "expected \')\' after argument list."
@_$MSG282
.string "*"
@_$MSG283
.string "pointer"
@_$MSG284
.string "("
@_$MSG285
.string ")"
@_$MSG286
.string "expected \')\' after \'(\'."
@_$MSG287
.string "char"
@_$MSG288
.string "int"
@_$MSG289
.string "short"
@_$MSG290
.string "long"
@_$MSG291
.string "unsigned"
@_$MSG292
.string "signed"
@_$MSG293
.string "float"
@_$MSG294
.string "double"
@_$MSG295
.string "asm"
@_$MSG296
.string "asm"
@_$MSG297
.string "expected string after \'asm\'."
@_$MSG298
.string "asm_str"
@_$MSG299
.string "{"
@_$MSG300
.string "init"
@_$MSG301
.string "invalid expression in initializer."
@_$MSG302
.string ","
@_$MSG303
.string "}"
@_$MSG304
.string "expected \'}\' after expression."
@_$MSG305
.string "decl"
@_$MSG306
.string "invalid declaration."
@_$MSG307
.string "="
@_$MSG308
.string "invalid initializer."
@_$MSG309
.string "Init"
@_$MSG310
.string ","
@_$MSG311
.string ";"
@_$MSG312
.string "expected \';\' after declarations."
@_$MSG313
.string "extern"
@_$MSG314
.string "extern_decl"
@_$MSG315
.string "invalid declaration."
@_$MSG316
.string "="
@_$MSG317
.string "invalid initializer."
@_$MSG318
.string ","
@_$MSG319
.string ";"
@_$MSG320
.string "expected \';\' after declarations."
@_$MSG321
.string "static"
@_$MSG322
.string "static_decl"
@_$MSG323
.string "invalid declaration."
@_$MSG324
.string "="
@_$MSG325
.string "invalid initializer."
@_$MSG326
.string ","
@_$MSG327
.string ";"
@_$MSG328
.string "expected \';\' after declarations."
@_$MSG329
.string "{"
@_$MSG330
.string "block"
@_$MSG331
.string "}"
@_$MSG332
.string "expected \'}\' after statement."
@_$MSG333
.string "if"
@_$MSG334
.string "if"
@_$MSG335
.string "("
@_$MSG336
.string "expected \'(\' after \'if\'."
@_$MSG337
.string "expected expression after \'(\'."
@_$MSG338
.string ")"
@_$MSG339
.string "expected \')\' after expression."
@_$MSG340
.string "invalid statement."
@_$MSG341
.string "else"
@_$MSG342
.string "invalid statement."
@_$MSG343
.string "ifelse"
@_$MSG344
.string "while"
@_$MSG345
.string "while"
@_$MSG346
.string "("
@_$MSG347
.string "expected \'(\' after \'while\'."
@_$MSG348
.string "expected expression after \'(\'."
@_$MSG349
.string ")"
@_$MSG350
.string "expected \')\' after expression."
@_$MSG351
.string "invalid statement."
@_$MSG352
.string "do"
@_$MSG353
.string "dowhile"
@_$MSG354
.string "invalid statement."
@_$MSG355
.string "while"
@_$MSG356
.string "expected \'while\' after \'do\'."
@_$MSG357
.string "("
@_$MSG358
.string "expected \'(\' after \'while\'."
@_$MSG359
.string "expected expression after \'(\'."
@_$MSG360
.string ")"
@_$MSG361
.string "expected \')\' after expression."
@_$MSG362
.string ";"
@_$MSG363
.string "expected \';\' after \')\'."
@_$MSG364
.string "return"
@_$MSG365
.string "return"
@_$MSG366
.string ";"
@_$MSG367
.string "expected \';\' after expression."
@_$MSG368
.string "break"
@_$MSG369
.string "break"
@_$MSG370
.string ";"
@_$MSG371
.string "expected \';\' after expression."
@_$MSG372
.string "goto"
@_$MSG373
.string "goto"
@_$MSG374
.string "expected label name after \'goto\'."
@_$MSG375
.string ";"
@_$MSG376
.string "expected \';\' after expression."
@_$MSG377
.string "Label"
@_$MSG378
.string ":"
@_$MSG379
.string "namespace"
@_$MSG380
.string "namespace"
@_$MSG381
.string ";"
@_$MSG382
.string "expected \';\' after expression."
@_$MSG383
.string ";"
@_$MSG384
.string "null"
@_$MSG385
.string "decl"
@_$MSG386
.string "invalid declaration."
@_$MSG387
.string "="
@_$MSG388
.string "invalid initializer."
@_$MSG389
.string "Init"
@_$MSG390
.string ","
@_$MSG391
.string ";"
@_$MSG392
.string "{"
@_$MSG393
.string "invalid function definition."
@_$MSG394
.string "fundef"
@_$MSG395
.string "expected \';\' after declarations."
@_$MSG396
.string "file"
@_$MSG397
.string "break"
@_$MSG398
.string "char"
@_$MSG399
.string "do"
@_$MSG400
.string "double"
@_$MSG401
.string "else"
@_$MSG402
.string "extern"
@_$MSG403
.string "float"
@_$MSG404
.string "goto"
@_$MSG405
.string "if"
@_$MSG406
.string "int"
@_$MSG407
.string "long"
@_$MSG408
.string "return"
@_$MSG409
.string "short"
@_$MSG410
.string "signed"
@_$MSG411
.string "sizeof"
@_$MSG412
.string "static"
@_$MSG413
.string "union"
@_$MSG414
.string "unsigned"
@_$MSG415
.string "void"
@_$MSG416
.string "while"
@_$MSG417
.string "asm"
@_$MSG418
.string "namespace"
@_$MSG419
.string "<NULL>"
@_$MSG420
.string "__"
@_$MSG421
.string "__"
@_$MSG422
.string "_$lo"
@_$MSG423
.string "$"
@_$MSG424
.string "__"
@_$MSG425
.string "_$lo"
@_$MSG426
.string "$"
@_$MSG427
.string "__"
@_$MSG428
.string "Identifier"
@_$MSG429
.string "Identifier"
@_$MSG430
.string "Identifier"
@_$MSG431
.string "Identifier"
@_$MSG432
.string "Identifier"
@_$MSG433
.string "Identifier"
@_$MSG434
.string "Identifier"
@_$MSG435
.string "Identifier"
@_$MSG436
.string "pointer"
@_$MSG437
.string "struct"
@_$MSG438
.string "incomplete type."
@_$MSG439
.string "union"
@_$MSG440
.string "incomplete type."
@_$MSG441
.string "Identifier"
@_$MSG442
.string "function"
@_$MSG443
.string "function"
@_$MSG444
.string "function returning a function declared."
@_$MSG445
.string "array"
@_$MSG446
.string "array_nosize"
@_$MSG447
.string "function returning an array declared."
@_$MSG448
.string "array"
@_$MSG449
.string "array_nosize"
@_$MSG450
.string "function"
@_$MSG451
.string "array of functions declared."
@_$MSG452
.string "function"
@_$MSG453
.string "struct"
@_$MSG454
.string "cannot use structure type as function argument."
@_$MSG455
.string "union"
@_$MSG456
.string "cannot use union type as function argument."
@_$MSG457
.string "Identifier"
@_$MSG458
.string "Identifier"
@_$MSG459
.string "void"
@_$MSG460
.string "invalid use of \'void\'."
@_$MSG461
.string "function"
@_$MSG462
.string "struct"
@_$MSG463
.string "cannot use structure type as returning value."
@_$MSG464
.string "union"
@_$MSG465
.string "cannot use union type as returning value."
@_$MSG466
.string "array"
@_$MSG467
.string "array_nosize"
@_$MSG468
.string "void"
@_$MSG469
.string "invalid use of \'void\'."
@_$MSG470
.string "struct"
@_$MSG471
.string "union"
@_$MSG472
.string "function"
@_$MSG473
.string "cannot use function as structure or union member."
@_$MSG474
.string "duplicate member name."
@_$MSG475
.string "<NULL>"
@_$MSG476
.string "no structure or union name and no member list."
@_$MSG477
.string "incomplete type."
@_$MSG478
.string "struct"
@_$MSG479
.string "union"
@_$MSG480
.string "<NULL>"
@_$MSG481
.string "union redefined."
@_$MSG482
.string "structure redefined."
@_$MSG483
.string "struct"
@_$MSG484
.string "union"
@_$MSG485
.string "Identifier"
@_$MSG486
.string "function"
@_$MSG487
.string "<NULL>"
@_$MSG488
.string "identifier redeclared as different type."
@_$MSG489
.string "<NULL>"
@_$MSG490
.string "identifier redefined."
@_$MSG491
.string "identifier redeclared as different type."
@_$MSG492
.string "initializer not supported."
@_$MSG493
.string "function"
@_$MSG494
.string "float"
@_$MSG495
.string "hfloat"
@_$MSG496
.string "array"
@_$MSG497
.string "cannot determine array size."
@_$MSG498
.string "array_nosize"
@_$MSG499
.string "cannot determine array size."
@_$MSG500
.string "init"
@_$MSG501
.string "<NULL>"
@_$MSG502
.string "__"
@_$MSG503
.string "_$lo"
@_$MSG504
.string "$"
@_$MSG505
.string "global "
@_$MSG506
.string "local "
@_$MSG507
.string "pointer"
@_$MSG508
.string "u64 "
@_$MSG509
.string "Identifier"
@_$MSG510
.string "struct"
@_$MSG511
.string "union"
@_$MSG512
.string "mem "
@_$MSG513
.string " "
@_$MSG514
.string " "
@_$MSG515
.string "fun "
@_$MSG516
.string "global "
@_$MSG517
.string "local "
@_$MSG518
.string "mem "
@_$MSG519
.string " "
@_$MSG520
.string "\n"
@_$MSG521
.string "Identifier"
@_$MSG522
.string "function"
@_$MSG523
.string "Init"
@_$MSG524
.string "function"
@_$MSG525
.string "declaration is not a function."
@_$MSG526
.string "arglist\n"
@_$MSG527
.string "enda\n"
@_$MSG528
.string "endf\n"
@_$MSG529
.string "pointer"
@_$MSG530
.string "array"
@_$MSG531
.string "cannot determine array size."
@_$MSG532
.string "array_nosize"
@_$MSG533
.string "Identifier"
@_$MSG534
.string "void"
@_$MSG535
.string "s8"
@_$MSG536
.string "u8"
@_$MSG537
.string "s16"
@_$MSG538
.string "u16"
@_$MSG539
.string "s32"
@_$MSG540
.string "u32"
@_$MSG541
.string "s64"
@_$MSG542
.string "u64"
@_$MSG543
.string "hfloat"
@_$MSG544
.string "float"
@_$MSG545
.string "struct"
@_$MSG546
.string "union"
@_$MSG547
.string "s8"
@_$MSG548
.string "u8"
@_$MSG549
.string "s16"
@_$MSG550
.string "u16"
@_$MSG551
.string "s32"
@_$MSG552
.string "u32"
@_$MSG553
.string "s64"
@_$MSG554
.string "u64"
@_$MSG555
.string "float"
@_$MSG556
.string "hfloat"
@_$MSG557
.string "Identifier"
@_$MSG558
.string "float"
@_$MSG559
.string "hfloat"
@_$MSG560
.string "pointer"
@_$MSG561
.string "array"
@_$MSG562
.string "array_nosize"
@_$MSG563
.string "function"
@_$MSG564
.string "pointer"
@_$MSG565
.string "array"
@_$MSG566
.string "array_nosize"
@_$MSG567
.string "function"
@_$MSG568
.string "function"
@_$MSG569
.string "array"
@_$MSG570
.string "array_nosize"
@_$MSG571
.string "pointer"
@_$MSG572
.string "void"
@_$MSG573
.string "pointer"
@_$MSG574
.string "Identifier"
@_$MSG575
.string "void"
@_$MSG576
.string "Identifier"
@_$MSG577
.string "array"
@_$MSG578
.string "pointer"
@_$MSG579
.string "array_nosize"
@_$MSG580
.string "pointer"
@_$MSG581
.string "function"
@_$MSG582
.string "pointer"
@_$MSG583
.string "union"
@_$MSG584
.string "struct"
@_$MSG585
.string "union"
@_$MSG586
.string "struct"
@_$MSG587
.string "union"
@_$MSG588
.string "struct"
@_$MSG589
.string "function"
@_$MSG590
.string "Init"
@_$MSG591
.string "Init"
@_$MSG592
.string "_$T$"
@_$MSG593
.string "pointer"
@_$MSG594
.string "Identifier"
@_$MSG595
.string "identifier not declared."
@_$MSG596
.string "function"
@_$MSG597
.string "s8"
@_$MSG598
.string "Identifier"
@_$MSG599
.string "pointer"
@_$MSG600
.string "local u64 "
@_$MSG601
.string "\n"
@_$MSG602
.string "mov "
@_$MSG603
.string " "
@_$MSG604
.string "\n"
@_$MSG605
.string "u64"
@_$MSG606
.string "<NULL>"
@_$MSG607
.string "Identifier"
@_$MSG608
.string "float"
@_$MSG609
.string "Identifier"
@_$MSG610
.string "local float "
@_$MSG611
.string "\n"
@_$MSG612
.string "mov "
@_$MSG613
.string " "
@_$MSG614
.string "\n"
@_$MSG615
.string "pointer"
@_$MSG616
.string "q "
@_$MSG617
.string "Identifier"
@_$MSG618
.string "struct"
@_$MSG619
.string "invalid use of structure."
@_$MSG620
.string "union"
@_$MSG621
.string "invalid use of union."
@_$MSG622
.string "void"
@_$MSG623
.string "invalid type."
@_$MSG624
.string "s8"
@_$MSG625
.string "u8"
@_$MSG626
.string "b "
@_$MSG627
.string "s16"
@_$MSG628
.string "u16"
@_$MSG629
.string "w "
@_$MSG630
.string "s32"
@_$MSG631
.string "u32"
@_$MSG632
.string "l "
@_$MSG633
.string "s64"
@_$MSG634
.string "u64"
@_$MSG635
.string "q "
@_$MSG636
.string "float"
@_$MSG637
.string "f "
@_$MSG638
.string "hfloat"
@_$MSG639
.string "h "
@_$MSG640
.string "add "
@_$MSG641
.string " "
@_$MSG642
.string " "
@_$MSG643
.string "\n"
@_$MSG644
.string "ldo"
@_$MSG645
.string "ld"
@_$MSG646
.string " "
@_$MSG647
.string " "
@_$MSG648
.string "\n"
@_$MSG649
.string "Identifier"
@_$MSG650
.string "mul "
@_$MSG651
.string " "
@_$MSG652
.string " "
@_$MSG653
.string "\n"
@_$MSG654
.string "Identifier"
@_$MSG655
.string "div "
@_$MSG656
.string " "
@_$MSG657
.string " "
@_$MSG658
.string "\n"
@_$MSG659
.string "label "
@_$MSG660
.string "\n"
@_$MSG661
.string "incompatible type."
@_$MSG662
.string "bgt "
@_$MSG663
.string "blt "
@_$MSG664
.string "bge "
@_$MSG665
.string "ble "
@_$MSG666
.string "beq "
@_$MSG667
.string "bne "
@_$MSG668
.string "bal "
@_$MSG669
.string "\n"
@_$MSG670
.string "bal "
@_$MSG671
.string "\n"
@_$MSG672
.string " "
@_$MSG673
.string " "
@_$MSG674
.string "\n"
@_$MSG675
.string "bal "
@_$MSG676
.string "\n"
@_$MSG677
.string " "
@_$MSG678
.string " "
@_$MSG679
.string "\n"
@_$MSG680
.string "<="
@_$MSG681
.string "bgt "
@_$MSG682
.string "ble "
@_$MSG683
.string ">="
@_$MSG684
.string "blt "
@_$MSG685
.string "bge "
@_$MSG686
.string "<"
@_$MSG687
.string "bge "
@_$MSG688
.string "blt "
@_$MSG689
.string ">"
@_$MSG690
.string "ble "
@_$MSG691
.string "bgt "
@_$MSG692
.string "=="
@_$MSG693
.string "bne "
@_$MSG694
.string "beq "
@_$MSG695
.string "!="
@_$MSG696
.string "beq "
@_$MSG697
.string "bne "
@_$MSG698
.string "!"
@_$MSG699
.string "&&"
@_$MSG700
.string "||"
@_$MSG701
.string "bal "
@_$MSG702
.string "\n"
@_$MSG703
.string "bal "
@_$MSG704
.string "\n"
@_$MSG705
.string "bne "
@_$MSG706
.string " 0 "
@_$MSG707
.string "\n"
@_$MSG708
.string "bal "
@_$MSG709
.string "\n"
@_$MSG710
.string "beq "
@_$MSG711
.string " 0 "
@_$MSG712
.string "\n"
@_$MSG713
.string "lvalue required here."
@_$MSG714
.string "incompatible type."
@_$MSG715
.string "o"
@_$MSG716
.string "pointer"
@_$MSG717
.string "q "
@_$MSG718
.string "Identifier"
@_$MSG719
.string "struct"
@_$MSG720
.string "invalid use of structure."
@_$MSG721
.string "union"
@_$MSG722
.string "invalid use of union."
@_$MSG723
.string "float"
@_$MSG724
.string "f "
@_$MSG725
.string "h "
@_$MSG726
.string "b "
@_$MSG727
.string "w "
@_$MSG728
.string "l "
@_$MSG729
.string "q "
@_$MSG730
.string "invalid assignment."
@_$MSG731
.string "invalid assignment."
@_$MSG732
.string "incompatible type."
@_$MSG733
.string " "
@_$MSG734
.string "mov"
@_$MSG735
.string " "
@_$MSG736
.string " "
@_$MSG737
.string " "
@_$MSG738
.string "\n"
@_$MSG739
.string "incompatible type."
@_$MSG740
.string "cannot use pointer as right operand of \'+\'."
@_$MSG741
.string "invalid use of \'+\'."
@_$MSG742
.string "Identifier"
@_$MSG743
.string "add "
@_$MSG744
.string " "
@_$MSG745
.string " "
@_$MSG746
.string "\n"
@_$MSG747
.string "incompatible type."
@_$MSG748
.string "cannot use pointer as right operand of \'*\'."
@_$MSG749
.string "cannot use pointer as left operand of \'*\'."
@_$MSG750
.string "Identifier"
@_$MSG751
.string "mul "
@_$MSG752
.string " "
@_$MSG753
.string " "
@_$MSG754
.string "\n"
@_$MSG755
.string "incompatible type."
@_$MSG756
.string "invalid use of \'-\'."
@_$MSG757
.string "s64"
@_$MSG758
.string "<NULL>"
@_$MSG759
.string "Identifier"
@_$MSG760
.string "Identifier"
@_$MSG761
.string "sub "
@_$MSG762
.string " "
@_$MSG763
.string " "
@_$MSG764
.string "\n"
@_$MSG765
.string "division by zero."
@_$MSG766
.string "incompatible type."
@_$MSG767
.string "cannot use pointer as right operand of \'/\'."
@_$MSG768
.string "cannot use pointer as left operand of \'/\'."
@_$MSG769
.string "Identifier"
@_$MSG770
.string "div "
@_$MSG771
.string " "
@_$MSG772
.string " "
@_$MSG773
.string "\n"
@_$MSG774
.string "mod by zero."
@_$MSG775
.string "incompatible type."
@_$MSG776
.string "cannot use pointer as right operand of \'%\'."
@_$MSG777
.string "cannot use pointer as left operand of \'%\'."
@_$MSG778
.string "Identifier"
@_$MSG779
.string "mod "
@_$MSG780
.string " "
@_$MSG781
.string " "
@_$MSG782
.string "\n"
@_$MSG783
.string "invalid operation for floats."
@_$MSG784
.string "incompatible type."
@_$MSG785
.string "cannot use pointer as right operand of \'&\'."
@_$MSG786
.string "cannot use pointer as left operand of \'&\'."
@_$MSG787
.string "invalid operation for floats."
@_$MSG788
.string "Identifier"
@_$MSG789
.string "and "
@_$MSG790
.string " "
@_$MSG791
.string " "
@_$MSG792
.string "\n"
@_$MSG793
.string "invalid operation for floats."
@_$MSG794
.string "incompatible type."
@_$MSG795
.string "cannot use pointer as right operand of \'|\'."
@_$MSG796
.string "cannot use pointer as left operand of \'|\'."
@_$MSG797
.string "invalid operation for floats."
@_$MSG798
.string "Identifier"
@_$MSG799
.string "orr "
@_$MSG800
.string " "
@_$MSG801
.string " "
@_$MSG802
.string "\n"
@_$MSG803
.string "invalid operation for floats."
@_$MSG804
.string "incompatible type."
@_$MSG805
.string "cannot use pointer as right operand of \'^\'."
@_$MSG806
.string "cannot use pointer as left operand of \'^\'."
@_$MSG807
.string "invalid operation for floats."
@_$MSG808
.string "Identifier"
@_$MSG809
.string "eor "
@_$MSG810
.string " "
@_$MSG811
.string " "
@_$MSG812
.string "\n"
@_$MSG813
.string "invalid operation for floats."
@_$MSG814
.string "incompatible type."
@_$MSG815
.string "cannot use pointer as right operand of \'<<\'."
@_$MSG816
.string "cannot use pointer as left operand of \'<<\'."
@_$MSG817
.string "invalid operation for floats."
@_$MSG818
.string "Identifier"
@_$MSG819
.string "lsh "
@_$MSG820
.string " "
@_$MSG821
.string " "
@_$MSG822
.string "\n"
@_$MSG823
.string "invalid operation for floats."
@_$MSG824
.string "incompatible type."
@_$MSG825
.string "cannot use pointer as right operand of \'>>\'."
@_$MSG826
.string "cannot use pointer as left operand of \'>>\'."
@_$MSG827
.string "invalid operation for floats."
@_$MSG828
.string "Identifier"
@_$MSG829
.string "rsh "
@_$MSG830
.string " "
@_$MSG831
.string " "
@_$MSG832
.string "\n"
@_$MSG833
.string "invalid operand for \'-\'"
@_$MSG834
.string "Identifier"
@_$MSG835
.string "neg "
@_$MSG836
.string " "
@_$MSG837
.string "\n"
@_$MSG838
.string "invalid operand for \'~\'"
@_$MSG839
.string "Identifier"
@_$MSG840
.string "not "
@_$MSG841
.string " "
@_$MSG842
.string "\n"
@_$MSG843
.string "bad member name."
@_$MSG844
.string "bad member name."
@_$MSG845
.string "bad member name."
@_$MSG846
.string "bad member name."
@_$MSG847
.string "invalid use of \'->\'."
@_$MSG848
.string "invalid use of \'->\'."
@_$MSG849
.string "bad member name."
@_$MSG850
.string "bad member name."
@_$MSG851
.string "<NULL>"
@_$MSG852
.string "Identifier"
@_$MSG853
.string "u64"
@_$MSG854
.string "<NULL>"
@_$MSG855
.string "Identifier"
@_$MSG856
.string "u64"
@_$MSG857
.string "lvalue required here."
@_$MSG858
.string "add "
@_$MSG859
.string " "
@_$MSG860
.string " "
@_$MSG861
.string "\n"
@_$MSG862
.string "adro "
@_$MSG863
.string "adr "
@_$MSG864
.string " "
@_$MSG865
.string " "
@_$MSG866
.string "\n"
@_$MSG867
.string "pointer required here."
@_$MSG868
.string "add "
@_$MSG869
.string " "
@_$MSG870
.string " "
@_$MSG871
.string "\n"
@_$MSG872
.string "array indexes can only be integers."
@_$MSG873
.string "pointer required here."
@_$MSG874
.string "pointer required here."
@_$MSG875
.string "add "
@_$MSG876
.string " "
@_$MSG877
.string " "
@_$MSG878
.string "\n"
@_$MSG879
.string "lvalue required here."
@_$MSG880
.string "incompatible type."
@_$MSG881
.string "invalid operand for \'++\'."
@_$MSG882
.string "Identifier"
@_$MSG883
.string "float"
@_$MSG884
.string "ldof "
@_$MSG885
.string "ldoh "
@_$MSG886
.string "ldob "
@_$MSG887
.string "ldow "
@_$MSG888
.string "ldol "
@_$MSG889
.string "ldoq "
@_$MSG890
.string "float"
@_$MSG891
.string "ldf "
@_$MSG892
.string "ldh "
@_$MSG893
.string "ldb "
@_$MSG894
.string "ldw "
@_$MSG895
.string "ldl "
@_$MSG896
.string "ldq "
@_$MSG897
.string " "
@_$MSG898
.string " "
@_$MSG899
.string "\n"
@_$MSG900
.string "add "
@_$MSG901
.string " "
@_$MSG902
.string " "
@_$MSG903
.string "\n"
@_$MSG904
.string "float"
@_$MSG905
.string "stof "
@_$MSG906
.string "stoh "
@_$MSG907
.string "stob "
@_$MSG908
.string "stow "
@_$MSG909
.string "stol "
@_$MSG910
.string "stoq "
@_$MSG911
.string "float"
@_$MSG912
.string "stf "
@_$MSG913
.string "sth "
@_$MSG914
.string "stb "
@_$MSG915
.string "stw "
@_$MSG916
.string "stl "
@_$MSG917
.string "stq "
@_$MSG918
.string " "
@_$MSG919
.string " "
@_$MSG920
.string "\n"
@_$MSG921
.string "incompatible type."
@_$MSG922
.string "add "
@_$MSG923
.string " "
@_$MSG924
.string " "
@_$MSG925
.string "\n"
@_$MSG926
.string "lvalue required here."
@_$MSG927
.string "incompatible type."
@_$MSG928
.string "invalid operand for \'--\'."
@_$MSG929
.string "Identifier"
@_$MSG930
.string "float"
@_$MSG931
.string "ldof "
@_$MSG932
.string "ldoh "
@_$MSG933
.string "ldob "
@_$MSG934
.string "ldow "
@_$MSG935
.string "ldol "
@_$MSG936
.string "ldoq "
@_$MSG937
.string "float"
@_$MSG938
.string "ldf "
@_$MSG939
.string "ldh "
@_$MSG940
.string "ldb "
@_$MSG941
.string "ldw "
@_$MSG942
.string "ldl "
@_$MSG943
.string "ldq "
@_$MSG944
.string " "
@_$MSG945
.string " "
@_$MSG946
.string "\n"
@_$MSG947
.string "sub "
@_$MSG948
.string " "
@_$MSG949
.string " "
@_$MSG950
.string "\n"
@_$MSG951
.string "float"
@_$MSG952
.string "stof "
@_$MSG953
.string "stoh "
@_$MSG954
.string "stob "
@_$MSG955
.string "stow "
@_$MSG956
.string "stol "
@_$MSG957
.string "stoq "
@_$MSG958
.string "float"
@_$MSG959
.string "stf "
@_$MSG960
.string "sth "
@_$MSG961
.string "stb "
@_$MSG962
.string "stw "
@_$MSG963
.string "stl "
@_$MSG964
.string "stq "
@_$MSG965
.string " "
@_$MSG966
.string " "
@_$MSG967
.string "\n"
@_$MSG968
.string "incompatible type."
@_$MSG969
.string "sub "
@_$MSG970
.string " "
@_$MSG971
.string " "
@_$MSG972
.string "\n"
@_$MSG973
.string "lvalue required here."
@_$MSG974
.string "invalid operand for \'+=\'."
@_$MSG975
.string "invalid operand for \'+=\'."
@_$MSG976
.string "Identifier"
@_$MSG977
.string "float"
@_$MSG978
.string "ldof "
@_$MSG979
.string "ldoh "
@_$MSG980
.string "ldob "
@_$MSG981
.string "ldow "
@_$MSG982
.string "ldol "
@_$MSG983
.string "ldoq "
@_$MSG984
.string "float"
@_$MSG985
.string "ldf "
@_$MSG986
.string "ldh "
@_$MSG987
.string "ldb "
@_$MSG988
.string "ldw "
@_$MSG989
.string "ldl "
@_$MSG990
.string "ldq "
@_$MSG991
.string " "
@_$MSG992
.string " "
@_$MSG993
.string "\n"
@_$MSG994
.string "add "
@_$MSG995
.string " "
@_$MSG996
.string " "
@_$MSG997
.string "\n"
@_$MSG998
.string "float"
@_$MSG999
.string "stof "
@_$MSG1000
.string "stoh "
@_$MSG1001
.string "stob "
@_$MSG1002
.string "stow "
@_$MSG1003
.string "stol "
@_$MSG1004
.string "stoq "
@_$MSG1005
.string "float"
@_$MSG1006
.string "stf "
@_$MSG1007
.string "sth "
@_$MSG1008
.string "stb "
@_$MSG1009
.string "stw "
@_$MSG1010
.string "stl "
@_$MSG1011
.string "stq "
@_$MSG1012
.string " "
@_$MSG1013
.string " "
@_$MSG1014
.string "\n"
@_$MSG1015
.string "add "
@_$MSG1016
.string " "
@_$MSG1017
.string " "
@_$MSG1018
.string "\n"
@_$MSG1019
.string "lvalue required here."
@_$MSG1020
.string "invalid operand for \'-=\'."
@_$MSG1021
.string "invalid operand for \'-=\'."
@_$MSG1022
.string "Identifier"
@_$MSG1023
.string "float"
@_$MSG1024
.string "ldof "
@_$MSG1025
.string "ldoh "
@_$MSG1026
.string "ldob "
@_$MSG1027
.string "ldow "
@_$MSG1028
.string "ldol "
@_$MSG1029
.string "ldoq "
@_$MSG1030
.string "float"
@_$MSG1031
.string "ldf "
@_$MSG1032
.string "ldh "
@_$MSG1033
.string "ldb "
@_$MSG1034
.string "ldw "
@_$MSG1035
.string "ldl "
@_$MSG1036
.string "ldq "
@_$MSG1037
.string " "
@_$MSG1038
.string " "
@_$MSG1039
.string "\n"
@_$MSG1040
.string "sub "
@_$MSG1041
.string " "
@_$MSG1042
.string " "
@_$MSG1043
.string "\n"
@_$MSG1044
.string "float"
@_$MSG1045
.string "stof "
@_$MSG1046
.string "stoh "
@_$MSG1047
.string "stob "
@_$MSG1048
.string "stow "
@_$MSG1049
.string "stol "
@_$MSG1050
.string "stoq "
@_$MSG1051
.string "float"
@_$MSG1052
.string "stf "
@_$MSG1053
.string "sth "
@_$MSG1054
.string "stb "
@_$MSG1055
.string "stw "
@_$MSG1056
.string "stl "
@_$MSG1057
.string "stq "
@_$MSG1058
.string " "
@_$MSG1059
.string " "
@_$MSG1060
.string "\n"
@_$MSG1061
.string "sub "
@_$MSG1062
.string " "
@_$MSG1063
.string " "
@_$MSG1064
.string "\n"
@_$MSG1065
.string "lvalue required here."
@_$MSG1066
.string "invalid operand for \'"
@_$MSG1067
.string "\'."
@_$MSG1068
.string "*="
@_$MSG1069
.string "/="
@_$MSG1070
.string "invalid operand for \'"
@_$MSG1071
.string "\'."
@_$MSG1072
.string "*="
@_$MSG1073
.string "/="
@_$MSG1074
.string "invalid operand for \'"
@_$MSG1075
.string "\'."
@_$MSG1076
.string "invalid operand for \'"
@_$MSG1077
.string "\'."
@_$MSG1078
.string "Identifier"
@_$MSG1079
.string "float"
@_$MSG1080
.string "ldof "
@_$MSG1081
.string "ldoh "
@_$MSG1082
.string "ldob "
@_$MSG1083
.string "ldow "
@_$MSG1084
.string "ldol "
@_$MSG1085
.string "ldoq "
@_$MSG1086
.string "float"
@_$MSG1087
.string "ldf "
@_$MSG1088
.string "ldh "
@_$MSG1089
.string "ldb "
@_$MSG1090
.string "ldw "
@_$MSG1091
.string "ldl "
@_$MSG1092
.string "ldq "
@_$MSG1093
.string " "
@_$MSG1094
.string " "
@_$MSG1095
.string "\n"
@_$MSG1096
.string " "
@_$MSG1097
.string " "
@_$MSG1098
.string " "
@_$MSG1099
.string "\n"
@_$MSG1100
.string "float"
@_$MSG1101
.string "stof "
@_$MSG1102
.string "stoh "
@_$MSG1103
.string "stob "
@_$MSG1104
.string "stow "
@_$MSG1105
.string "stol "
@_$MSG1106
.string "stoq "
@_$MSG1107
.string "float"
@_$MSG1108
.string "stf "
@_$MSG1109
.string "sth "
@_$MSG1110
.string "stb "
@_$MSG1111
.string "stw "
@_$MSG1112
.string "stl "
@_$MSG1113
.string "stq "
@_$MSG1114
.string " "
@_$MSG1115
.string " "
@_$MSG1116
.string "\n"
@_$MSG1117
.string " "
@_$MSG1118
.string " "
@_$MSG1119
.string " "
@_$MSG1120
.string "\n"
@_$MSG1121
.string "u64"
@_$MSG1122
.string "Identifier"
@_$MSG1123
.string "mov "
@_$MSG1124
.string " 0\n"
@_$MSG1125
.string "mov "
@_$MSG1126
.string " 1\n"
@_$MSG1127
.string "bgt "
@_$MSG1128
.string "blt "
@_$MSG1129
.string "bge "
@_$MSG1130
.string "ble "
@_$MSG1131
.string "beq "
@_$MSG1132
.string "bne "
@_$MSG1133
.string "u64"
@_$MSG1134
.string "<NULL>"
@_$MSG1135
.string "Identifier"
@_$MSG1136
.string "u64"
@_$MSG1137
.string "Identifier"
@_$MSG1138
.string "incompatible type."
@_$MSG1139
.string "mov "
@_$MSG1140
.string " 0\n"
@_$MSG1141
.string " "
@_$MSG1142
.string " "
@_$MSG1143
.string "\n"
@_$MSG1144
.string "mov "
@_$MSG1145
.string " 1\n"
@_$MSG1146
.string "label "
@_$MSG1147
.string "\n"
@_$MSG1148
.string "u64"
@_$MSG1149
.string "<NULL>"
@_$MSG1150
.string "Identifier"
@_$MSG1151
.string "u64"
@_$MSG1152
.string "Identifier"
@_$MSG1153
.string "mov "
@_$MSG1154
.string " 0\n"
@_$MSG1155
.string "bne "
@_$MSG1156
.string " 0 "
@_$MSG1157
.string "\n"
@_$MSG1158
.string "mov "
@_$MSG1159
.string " 1\n"
@_$MSG1160
.string "label "
@_$MSG1161
.string "\n"
@_$MSG1162
.string "u64"
@_$MSG1163
.string "<NULL>"
@_$MSG1164
.string "Identifier"
@_$MSG1165
.string "u64"
@_$MSG1166
.string "Identifier"
@_$MSG1167
.string "mov "
@_$MSG1168
.string " 0\n"
@_$MSG1169
.string "beq "
@_$MSG1170
.string " 0 "
@_$MSG1171
.string "\n"
@_$MSG1172
.string "beq "
@_$MSG1173
.string " 0 "
@_$MSG1174
.string "\n"
@_$MSG1175
.string "mov "
@_$MSG1176
.string " 1\n"
@_$MSG1177
.string "label "
@_$MSG1178
.string "\n"
@_$MSG1179
.string "u64"
@_$MSG1180
.string "<NULL>"
@_$MSG1181
.string "Identifier"
@_$MSG1182
.string "u64"
@_$MSG1183
.string "Identifier"
@_$MSG1184
.string "mov "
@_$MSG1185
.string " 1\n"
@_$MSG1186
.string "bne "
@_$MSG1187
.string " 0 "
@_$MSG1188
.string "\n"
@_$MSG1189
.string "bne "
@_$MSG1190
.string " 0 "
@_$MSG1191
.string "\n"
@_$MSG1192
.string "mov "
@_$MSG1193
.string " 0\n"
@_$MSG1194
.string "label "
@_$MSG1195
.string "\n"
@_$MSG1196
.string "calling a non-function."
@_$MSG1197
.string "calling a non-function."
@_$MSG1198
.string "numbers of arguments did not match."
@_$MSG1199
.string "incompatible type."
@_$MSG1200
.string "float"
@_$MSG1201
.string "pushf "
@_$MSG1202
.string "pushh "
@_$MSG1203
.string "push "
@_$MSG1204
.string "\n"
@_$MSG1205
.string "Identifier"
@_$MSG1206
.string "float"
@_$MSG1207
.string "fcall "
@_$MSG1208
.string "hcall "
@_$MSG1209
.string "call "
@_$MSG1210
.string " "
@_$MSG1211
.string "\n"
@_$MSG1212
.string "del "
@_$MSG1213
.string "\n"
@_$MSG1214
.string "Identifier"
@_$MSG1215
.string "pointer"
@_$MSG1216
.string "invalid cast."
@_$MSG1217
.string "mov "
@_$MSG1218
.string " "
@_$MSG1219
.string "\n"
@_$MSG1220
.string "Identifier"
@_$MSG1221
.string "Constant"
@_$MSG1222
.string "FConstant"
@_$MSG1223
.string ","
@_$MSG1224
.string "="
@_$MSG1225
.string "st"
@_$MSG1226
.string "mov"
@_$MSG1227
.string "+"
@_$MSG1228
.string "*"
@_$MSG1229
.string "-"
@_$MSG1230
.string "/"
@_$MSG1231
.string "%"
@_$MSG1232
.string "&"
@_$MSG1233
.string "|"
@_$MSG1234
.string "^"
@_$MSG1235
.string "<<"
@_$MSG1236
.string ">>"
@_$MSG1237
.string "neg"
@_$MSG1238
.string "~"
@_$MSG1239
.string "."
@_$MSG1240
.string "->"
@_$MSG1241
.string "sizeof"
@_$MSG1242
.string "sizeof_type"
@_$MSG1243
.string "addr"
@_$MSG1244
.string "deref"
@_$MSG1245
.string "[]"
@_$MSG1246
.string "++"
@_$MSG1247
.string "--"
@_$MSG1248
.string "+="
@_$MSG1249
.string "-="
@_$MSG1250
.string "*="
@_$MSG1251
.string "mul"
@_$MSG1252
.string "*="
@_$MSG1253
.string "/="
@_$MSG1254
.string "div"
@_$MSG1255
.string "/="
@_$MSG1256
.string "%="
@_$MSG1257
.string "mod"
@_$MSG1258
.string "%="
@_$MSG1259
.string "<<="
@_$MSG1260
.string "lsh"
@_$MSG1261
.string "<<="
@_$MSG1262
.string ">>="
@_$MSG1263
.string "rsh"
@_$MSG1264
.string ">>="
@_$MSG1265
.string "&="
@_$MSG1266
.string "and"
@_$MSG1267
.string "&="
@_$MSG1268
.string "|="
@_$MSG1269
.string "orr"
@_$MSG1270
.string "|="
@_$MSG1271
.string "^="
@_$MSG1272
.string "eor"
@_$MSG1273
.string "^="
@_$MSG1274
.string ">"
@_$MSG1275
.string "<"
@_$MSG1276
.string ">="
@_$MSG1277
.string "<="
@_$MSG1278
.string "=="
@_$MSG1279
.string "!="
@_$MSG1280
.string "!"
@_$MSG1281
.string "&&"
@_$MSG1282
.string "||"
@_$MSG1283
.string "call"
@_$MSG1284
.string "call_noarg"
@_$MSG1285
.string "cast"
@_$MSG1286
.string "unsupported operator."
@_$MSG1287
.string "retvalh "
@_$MSG1288
.string "retvalf "
@_$MSG1289
.string "retval "
@_$MSG1290
.string "\n"
@_$MSG1291
.string "ret\n"
@_$MSG1292
.string "unexpected \'break\'."
@_$MSG1293
.string "bal "
@_$MSG1294
.string "\n"
@_$MSG1295
.string "bal "
@_$MSG1296
.string "_$CL$"
@_$MSG1297
.string "$"
@_$MSG1298
.string "\n"
@_$MSG1299
.string "label "
@_$MSG1300
.string "_$CL$"
@_$MSG1301
.string "$"
@_$MSG1302
.string "\n"
@_$MSG1303
.string "bal "
@_$MSG1304
.string "\n"
@_$MSG1305
.string "asm "
@_$MSG1306
.string "\n"
@_$MSG1307
.string "asm"
@_$MSG1308
.string "decl"
@_$MSG1309
.string "static_decl"
@_$MSG1310
.string "extern_decl"
@_$MSG1311
.string "\'extern\' not supported."
@_$MSG1312
.string "expr"
@_$MSG1313
.string "block"
@_$MSG1314
.string "return"
@_$MSG1315
.string "if"
@_$MSG1316
.string "ifelse"
@_$MSG1317
.string "while"
@_$MSG1318
.string "dowhile"
@_$MSG1319
.string "break"
@_$MSG1320
.string "goto"
@_$MSG1321
.string "Label"
@_$MSG1322
.string "decl"
@_$MSG1323
.string "fundef"
@_$MSG1324
.string "namespace"
@_$MSG1325
.string "asm"
@_$MSG1326
.string "line "
@_$MSG1327
.string ": error: "
@_$MSG1328
.string " "
@_$MSG1329
.string "string not complete."
@_$MSG1330
.string "@"
@_$MSG1331
.string "\n"
@_$MSG1332
.string "%rbx"
@_$MSG1333
.string "%rsi"
@_$MSG1334
.string "%rdi"
@_$MSG1335
.string "%r8"
@_$MSG1336
.string "%r9"
@_$MSG1337
.string "%r12"
@_$MSG1338
.string "%r13"
@_$MSG1339
.string "%r14"
@_$MSG1340
.string "%r15"
@_$MSG1341
.string "%r10"
@_$MSG1342
.string "%r11"
@_$MSG1343
.string "%ebx"
@_$MSG1344
.string "%esi"
@_$MSG1345
.string "%edi"
@_$MSG1346
.string "%r8d"
@_$MSG1347
.string "%r9d"
@_$MSG1348
.string "%r12d"
@_$MSG1349
.string "%r13d"
@_$MSG1350
.string "%r14d"
@_$MSG1351
.string "%r15d"
@_$MSG1352
.string "%r10d"
@_$MSG1353
.string "%r11d"
@_$MSG1354
.string "%bx"
@_$MSG1355
.string "%si"
@_$MSG1356
.string "%di"
@_$MSG1357
.string "%r8w"
@_$MSG1358
.string "%r9w"
@_$MSG1359
.string "%r12w"
@_$MSG1360
.string "%r13w"
@_$MSG1361
.string "%r14w"
@_$MSG1362
.string "%r15w"
@_$MSG1363
.string "%r10w"
@_$MSG1364
.string "%r11w"
@_$MSG1365
.string "%bl"
@_$MSG1366
.string "%sil"
@_$MSG1367
.string "%dil"
@_$MSG1368
.string "%r8b"
@_$MSG1369
.string "%r9b"
@_$MSG1370
.string "%r12b"
@_$MSG1371
.string "%r13b"
@_$MSG1372
.string "%r14b"
@_$MSG1373
.string "%r15b"
@_$MSG1374
.string "%r10b"
@_$MSG1375
.string "%r11b"
@_$MSG1376
.string "b"
@_$MSG1377
.string "w"
@_$MSG1378
.string "l"
@_$MSG1379
.string "q"
@_$MSG1380
.string "%al"
@_$MSG1381
.string "%ax"
@_$MSG1382
.string "%eax"
@_$MSG1383
.string "%rax"
@_$MSG1384
.string "%cl"
@_$MSG1385
.string "%cx"
@_$MSG1386
.string "%ecx"
@_$MSG1387
.string "%rcx"
@_$MSG1388
.string "%dl"
@_$MSG1389
.string "%dx"
@_$MSG1390
.string "%edx"
@_$MSG1391
.string "%rdx"
@_$MSG1392
.string "cvtsi2sd "
@_$MSG1393
.string "cvtsi2ss "
@_$MSG1394
.string ",%xmm0"
@_$MSG1395
.string "movd %xmm0,"
@_$MSG1396
.string "movq %xmm0,"
@_$MSG1397
.string "\n"
@_$MSG1398
.string "movq "
@_$MSG1399
.string ",%xmm0\ncvtsd2ss %xmm0,%xmm0\nmovd %xmm0,"
@_$MSG1400
.string "\n"
@_$MSG1401
.string "movd "
@_$MSG1402
.string ",%xmm0\ncvtss2sd %xmm0,%xmm0\nmovq %xmm0,"
@_$MSG1403
.string "\n"
@_$MSG1404
.string "movd "
@_$MSG1405
.string ",%xmm0\ncvtss2si %xmm0,"
@_$MSG1406
.string "\n"
@_$MSG1407
.string "movq "
@_$MSG1408
.string ",%xmm0\ncvtsd2si %xmm0,"
@_$MSG1409
.string "\n"
@_$MSG1410
.string "mov"
@_$MSG1411
.string " "
@_$MSG1412
.string ","
@_$MSG1413
.string "\n"
@_$MSG1414
.string "s"
@_$MSG1415
.string "z"
@_$MSG1416
.string "b"
@_$MSG1417
.string "w"
@_$MSG1418
.string "l"
@_$MSG1419
.string "q"
@_$MSG1420
.string "b "
@_$MSG1421
.string "w "
@_$MSG1422
.string "l "
@_$MSG1423
.string "q "
@_$MSG1424
.string ","
@_$MSG1425
.string "\n"
@_$MSG1426
.string "endf"
@_$MSG1427
.string "mov"
@_$MSG1428
.string "not"
@_$MSG1429
.string "neg"
@_$MSG1430
.string "adr"
@_$MSG1431
.string "adro"
@_$MSG1432
.string "add"
@_$MSG1433
.string "sub"
@_$MSG1434
.string "mul"
@_$MSG1435
.string "div"
@_$MSG1436
.string "mod"
@_$MSG1437
.string "and"
@_$MSG1438
.string "orr"
@_$MSG1439
.string "eor"
@_$MSG1440
.string "lsh"
@_$MSG1441
.string "rsh"
@_$MSG1442
.string "push"
@_$MSG1443
.string "pushf"
@_$MSG1444
.string "pushh"
@_$MSG1445
.string "retval"
@_$MSG1446
.string "retvalh"
@_$MSG1447
.string "retvalf"
@_$MSG1448
.string "ret"
@_$MSG1449
.string "call"
@_$MSG1450
.string "fcall"
@_$MSG1451
.string "hcall"
@_$MSG1452
.string "stob"
@_$MSG1453
.string "stow"
@_$MSG1454
.string "stol"
@_$MSG1455
.string "stoq"
@_$MSG1456
.string "stof"
@_$MSG1457
.string "stoh"
@_$MSG1458
.string "ldob"
@_$MSG1459
.string "ldow"
@_$MSG1460
.string "ldol"
@_$MSG1461
.string "ldoq"
@_$MSG1462
.string "ldof"
@_$MSG1463
.string "ldoh"
@_$MSG1464
.string "stb"
@_$MSG1465
.string "stw"
@_$MSG1466
.string "stl"
@_$MSG1467
.string "stq"
@_$MSG1468
.string "stf"
@_$MSG1469
.string "sth"
@_$MSG1470
.string "ldb"
@_$MSG1471
.string "ldw"
@_$MSG1472
.string "ldl"
@_$MSG1473
.string "ldq"
@_$MSG1474
.string "ldf"
@_$MSG1475
.string "ldh"
@_$MSG1476
.string "beq"
@_$MSG1477
.string "bne"
@_$MSG1478
.string "bgt"
@_$MSG1479
.string "blt"
@_$MSG1480
.string "bge"
@_$MSG1481
.string "ble"
@_$MSG1482
.string "bal"
@_$MSG1483
.string "global"
@_$MSG1484
.string "mem"
@_$MSG1485
.string "too few arguments."
@_$MSG1486
.string "s8"
@_$MSG1487
.string "u8"
@_$MSG1488
.string "s16"
@_$MSG1489
.string "u16"
@_$MSG1490
.string "s32"
@_$MSG1491
.string "u32"
@_$MSG1492
.string "s64"
@_$MSG1493
.string "u64"
@_$MSG1494
.string "void"
@_$MSG1495
.string "float"
@_$MSG1496
.string "hfloat"
@_$MSG1497
.string "invalid type."
@_$MSG1498
.string "<NULL>"
@_$MSG1499
.string "label"
@_$MSG1500
.string "beq"
@_$MSG1501
.string "bne"
@_$MSG1502
.string "blt"
@_$MSG1503
.string "bgt"
@_$MSG1504
.string "ble"
@_$MSG1505
.string "bge"
@_$MSG1506
.string "bal"
@_$MSG1507
.string "too few arguments."
@_$MSG1508
.string "label not defined."
@_$MSG1509
.string "label not defined."
@_$MSG1510
.string "arglist"
@_$MSG1511
.string "enda"
@_$MSG1512
.string "local"
@_$MSG1513
.string "mem"
@_$MSG1514
.string "too few arguments."
@_$MSG1515
.string "s8"
@_$MSG1516
.string "u8"
@_$MSG1517
.string "s16"
@_$MSG1518
.string "u16"
@_$MSG1519
.string "s32"
@_$MSG1520
.string "u32"
@_$MSG1521
.string "s64"
@_$MSG1522
.string "u64"
@_$MSG1523
.string "void"
@_$MSG1524
.string "float"
@_$MSG1525
.string "hfloat"
@_$MSG1526
.string "invalid type."
@_$MSG1527
.string "duplicate identifier."
@_$MSG1528
.string "fun"
@_$MSG1529
.string "endf"
@_$MSG1530
.string "endf"
@_$MSG1531
.string "arglist"
@_$MSG1532
.string "enda"
@_$MSG1533
.string "endf"
@_$MSG1534
.string "local"
@_$MSG1535
.string "mem"
@_$MSG1536
.string "too few arguments."
@_$MSG1537
.string "s8"
@_$MSG1538
.string "u8"
@_$MSG1539
.string "s16"
@_$MSG1540
.string "u16"
@_$MSG1541
.string "s32"
@_$MSG1542
.string "u32"
@_$MSG1543
.string "s64"
@_$MSG1544
.string "u64"
@_$MSG1545
.string "void"
@_$MSG1546
.string "float"
@_$MSG1547
.string "hfloat"
@_$MSG1548
.string "invalid type."
@_$MSG1549
.string "fun"
@_$MSG1550
.string "arglist"
@_$MSG1551
.string "enda"
@_$MSG1552
.string "endf"
@_$MSG1553
.string "adr"
@_$MSG1554
.string "too few arguments."
@_$MSG1555
.string "adro"
@_$MSG1556
.string "too few arguments."
@_$MSG1557
.string "local"
@_$MSG1558
.string "too few arguments."
@_$MSG1559
.string "mem"
@_$MSG1560
.string "too few arguments."
@_$MSG1561
.string "s8"
@_$MSG1562
.string "u8"
@_$MSG1563
.string "s16"
@_$MSG1564
.string "u16"
@_$MSG1565
.string "s32"
@_$MSG1566
.string "u32"
@_$MSG1567
.string "s64"
@_$MSG1568
.string "u64"
@_$MSG1569
.string "void"
@_$MSG1570
.string "float"
@_$MSG1571
.string "hfloat"
@_$MSG1572
.string "invalid type."
@_$MSG1573
.string "too few arguments."
@_$MSG1574
.string "@"
@_$MSG1575
.string "(%rbp)"
@_$MSG1576
.string "@_$DATA+"
@_$MSG1577
.string "(%rbp)"
@_$MSG1578
.string "(%rbp)"
@_$MSG1579
.string "@_$DATA+"
@_$MSG1580
.string "(%rbp)"
@_$MSG1581
.string "cvtsi2sd "
@_$MSG1582
.string "cvtsi2ss "
@_$MSG1583
.string ",%xmm0\n"
@_$MSG1584
.string "movq %xmm0,"
@_$MSG1585
.string "movd %xmm0,"
@_$MSG1586
.string "\n"
@_$MSG1587
.string "movq "
@_$MSG1588
.string ",%xmm0\ncvtsd2ss %xmm0,%xmm0\nmovd %xmm0,"
@_$MSG1589
.string "\n"
@_$MSG1590
.string "movd "
@_$MSG1591
.string ",%xmm0\ncvtss2sd %xmm0,%xmm0\nmovq %xmm0,"
@_$MSG1592
.string "\n"
@_$MSG1593
.string "movd "
@_$MSG1594
.string ",%xmm0\ncvtss2si %xmm0,"
@_$MSG1595
.string "\n"
@_$MSG1596
.string "movq "
@_$MSG1597
.string ",%xmm0\ncvtsd2si %xmm0,"
@_$MSG1598
.string "\n"
@_$MSG1599
.string "mov"
@_$MSG1600
.string " "
@_$MSG1601
.string ","
@_$MSG1602
.string "\n"
@_$MSG1603
.string "s"
@_$MSG1604
.string "z"
@_$MSG1605
.string "b"
@_$MSG1606
.string "w"
@_$MSG1607
.string "l"
@_$MSG1608
.string "q"
@_$MSG1609
.string "b "
@_$MSG1610
.string "w "
@_$MSG1611
.string "l "
@_$MSG1612
.string "q "
@_$MSG1613
.string ","
@_$MSG1614
.string "\n"
@_$MSG1615
.string " "
@_$MSG1616
.string ","
@_$MSG1617
.string "$"
@_$MSG1618
.string ","
@_$MSG1619
.string ","
@_$MSG1620
.string "\n"
@_$MSG1621
.string " "
@_$MSG1622
.string ","
@_$MSG1623
.string "$"
@_$MSG1624
.string "\n"
@_$MSG1625
.string " "
@_$MSG1626
.string ","
@_$MSG1627
.string "\n"
@_$MSG1628
.string " "
@_$MSG1629
.string "$"
@_$MSG1630
.string ","
@_$MSG1631
.string "$"
@_$MSG1632
.string "\n"
@_$MSG1633
.string "mov "
@_$MSG1634
.string ","
@_$MSG1635
.string "\n"
@_$MSG1636
.string "mov "
@_$MSG1637
.string ","
@_$MSG1638
.string "\n"
@_$MSG1639
.string "mov $"
@_$MSG1640
.string ","
@_$MSG1641
.string "\n"
@_$MSG1642
.string "lea "
@_$MSG1643
.string ","
@_$MSG1644
.string "\n"
@_$MSG1645
.string "mov "
@_$MSG1646
.string ","
@_$MSG1647
.string "\n"
@_$MSG1648
.string "mov "
@_$MSG1649
.string ","
@_$MSG1650
.string "\n"
@_$MSG1651
.string "mov "
@_$MSG1652
.string ","
@_$MSG1653
.string "\n"
@_$MSG1654
.string "mov "
@_$MSG1655
.string ","
@_$MSG1656
.string "\n"
@_$MSG1657
.string "mov $"
@_$MSG1658
.string ","
@_$MSG1659
.string "\n"
@_$MSG1660
.string "mov "
@_$MSG1661
.string ","
@_$MSG1662
.string "\n"
@_$MSG1663
.string "lea "
@_$MSG1664
.string ","
@_$MSG1665
.string "\n"
@_$MSG1666
.string "mov "
@_$MSG1667
.string ","
@_$MSG1668
.string "\n"
@_$MSG1669
.string "invalid op."
@_$MSG1670
.string "movd "
@_$MSG1671
.string ",%xmm0\nmovd "
@_$MSG1672
.string ",%xmm1\n"
@_$MSG1673
.string "%xmm1,%xmm0\n"
@_$MSG1674
.string "movss %xmm0,"
@_$MSG1675
.string "movd %xmm0,"
@_$MSG1676
.string "\n"
@_$MSG1677
.string "movss "
@_$MSG1678
.string ",%xmm0\nmovd "
@_$MSG1679
.string ",%xmm1\n"
@_$MSG1680
.string "%xmm1,%xmm0\n"
@_$MSG1681
.string "movss %xmm0,"
@_$MSG1682
.string "movd %xmm0,"
@_$MSG1683
.string "\n"
@_$MSG1684
.string "movd "
@_$MSG1685
.string ",%xmm0\n"
@_$MSG1686
.string ",%xmm0\n"
@_$MSG1687
.string "movss %xmm0,"
@_$MSG1688
.string "movd %xmm0,"
@_$MSG1689
.string "\n"
@_$MSG1690
.string "movss "
@_$MSG1691
.string ",%xmm0\n"
@_$MSG1692
.string ",%xmm0\n"
@_$MSG1693
.string "movss %xmm0,"
@_$MSG1694
.string "movd %xmm0,"
@_$MSG1695
.string "\n"
@_$MSG1696
.string "lea "
@_$MSG1697
.string ",%rax\n"
@_$MSG1698
.string "mov "
@_$MSG1699
.string ","
@_$MSG1700
.string "\n"
@_$MSG1701
.string "mov "
@_$MSG1702
.string ",%rax\n"
@_$MSG1703
.string "mov "
@_$MSG1704
.string ",%eax\n"
@_$MSG1705
.string "lea "
@_$MSG1706
.string ",%rcx\n"
@_$MSG1707
.string "mov "
@_$MSG1708
.string ","
@_$MSG1709
.string "\n"
@_$MSG1710
.string "mov "
@_$MSG1711
.string ",%rcx\n"
@_$MSG1712
.string "mov $"
@_$MSG1713
.string ",%eax\n"
@_$MSG1714
.string "movd %eax,%xmm0\n"
@_$MSG1715
.string "movd %ecx,%xmm1\n"
@_$MSG1716
.string "%xmm1,%xmm0\n"
@_$MSG1717
.string "movss %xmm0,"
@_$MSG1718
.string "movd %xmm0,"
@_$MSG1719
.string "\n"
@_$MSG1720
.string "movq "
@_$MSG1721
.string ",%xmm0\nmovq "
@_$MSG1722
.string ",%xmm1\n"
@_$MSG1723
.string "%xmm1,%xmm0\n"
@_$MSG1724
.string "movsd %xmm0,"
@_$MSG1725
.string "movq %xmm0,"
@_$MSG1726
.string "\n"
@_$MSG1727
.string "movsd "
@_$MSG1728
.string ",%xmm0\nmovq "
@_$MSG1729
.string ",%xmm1\n"
@_$MSG1730
.string "%xmm1,%xmm0\n"
@_$MSG1731
.string "movsd %xmm0,"
@_$MSG1732
.string "movq %xmm0,"
@_$MSG1733
.string "\n"
@_$MSG1734
.string "movq "
@_$MSG1735
.string ",%xmm0\n"
@_$MSG1736
.string ",%xmm0\n"
@_$MSG1737
.string "movsd %xmm0,"
@_$MSG1738
.string "movq %xmm0,"
@_$MSG1739
.string "\n"
@_$MSG1740
.string "movsd "
@_$MSG1741
.string ",%xmm0\n"
@_$MSG1742
.string ",%xmm0\n"
@_$MSG1743
.string "movsd %xmm0,"
@_$MSG1744
.string "movq %xmm0,"
@_$MSG1745
.string "\n"
@_$MSG1746
.string "lea "
@_$MSG1747
.string ",%rax\n"
@_$MSG1748
.string "mov "
@_$MSG1749
.string ","
@_$MSG1750
.string "\n"
@_$MSG1751
.string "mov "
@_$MSG1752
.string ",%rax\n"
@_$MSG1753
.string "mov "
@_$MSG1754
.string ",%rax\n"
@_$MSG1755
.string "lea "
@_$MSG1756
.string ",%rcx\n"
@_$MSG1757
.string "mov "
@_$MSG1758
.string ","
@_$MSG1759
.string "\n"
@_$MSG1760
.string "mov "
@_$MSG1761
.string ",%rcx\n"
@_$MSG1762
.string "mov $"
@_$MSG1763
.string ",%rax\n"
@_$MSG1764
.string "movq %rax,%xmm0\n"
@_$MSG1765
.string "movq %rcx,%xmm1\n"
@_$MSG1766
.string "%xmm1,%xmm0\n"
@_$MSG1767
.string "movsd %xmm0,"
@_$MSG1768
.string "movq %xmm0,"
@_$MSG1769
.string "\n"
@_$MSG1770
.string "invalid op."
@_$MSG1771
.string "add"
@_$MSG1772
.string "sub"
@_$MSG1773
.string "add"
@_$MSG1774
.string "addsd "
@_$MSG1775
.string "subsd "
@_$MSG1776
.string "add"
@_$MSG1777
.string "sub"
@_$MSG1778
.string "add"
@_$MSG1779
.string "addss "
@_$MSG1780
.string "subss "
@_$MSG1781
.string "and"
@_$MSG1782
.string "mov"
@_$MSG1783
.string "mov"
@_$MSG1784
.string "mov"
@_$MSG1785
.string "mov"
@_$MSG1786
.string "mov"
@_$MSG1787
.string "mov"
@_$MSG1788
.string "mov"
@_$MSG1789
.string "mov"
@_$MSG1790
.string "mov"
@_$MSG1791
.string "mov"
@_$MSG1792
.string "add"
@_$MSG1793
.string "lea ("
@_$MSG1794
.string ","
@_$MSG1795
.string "),"
@_$MSG1796
.string "\n"
@_$MSG1797
.string "\n"
@_$MSG1798
.string "mov"
@_$MSG1799
.string "and"
@_$MSG1800
.string "mov"
@_$MSG1801
.string "mov"
@_$MSG1802
.string "lea"
@_$MSG1803
.string "lea"
@_$MSG1804
.string "mov"
@_$MSG1805
.string "mov"
@_$MSG1806
.string "lea"
@_$MSG1807
.string "mov"
@_$MSG1808
.string "lea"
@_$MSG1809
.string "mov"
@_$MSG1810
.string "mov"
@_$MSG1811
.string "invalid op."
@_$MSG1812
.string "mulsd "
@_$MSG1813
.string "mulss "
@_$MSG1814
.string "xor"
@_$MSG1815
.string "mov"
@_$MSG1816
.string "shl $"
@_$MSG1817
.string ","
@_$MSG1818
.string "\n"
@_$MSG1819
.string "mov"
@_$MSG1820
.string "shl $"
@_$MSG1821
.string ","
@_$MSG1822
.string "\n"
@_$MSG1823
.string "mov "
@_$MSG1824
.string ","
@_$MSG1825
.string "\n"
@_$MSG1826
.string "mov $"
@_$MSG1827
.string ","
@_$MSG1828
.string "\n"
@_$MSG1829
.string "mov "
@_$MSG1830
.string ","
@_$MSG1831
.string "\n"
@_$MSG1832
.string "lea "
@_$MSG1833
.string ","
@_$MSG1834
.string "\n"
@_$MSG1835
.string "mov "
@_$MSG1836
.string ","
@_$MSG1837
.string "\n"
@_$MSG1838
.string "mov $"
@_$MSG1839
.string ","
@_$MSG1840
.string "\n"
@_$MSG1841
.string "mov "
@_$MSG1842
.string ","
@_$MSG1843
.string "\n"
@_$MSG1844
.string "lea "
@_$MSG1845
.string ","
@_$MSG1846
.string "\n"
@_$MSG1847
.string "i"
@_$MSG1848
.string "mul "
@_$MSG1849
.string "\n"
@_$MSG1850
.string "mov "
@_$MSG1851
.string ","
@_$MSG1852
.string "\n"
@_$MSG1853
.string "mov "
@_$MSG1854
.string ","
@_$MSG1855
.string "\n"
@_$MSG1856
.string "invalid op."
@_$MSG1857
.string "divsd "
@_$MSG1858
.string "divss "
@_$MSG1859
.string "mov "
@_$MSG1860
.string ","
@_$MSG1861
.string "\n"
@_$MSG1862
.string "mov $"
@_$MSG1863
.string ","
@_$MSG1864
.string "\n"
@_$MSG1865
.string "mov "
@_$MSG1866
.string ","
@_$MSG1867
.string "\n"
@_$MSG1868
.string "lea "
@_$MSG1869
.string ","
@_$MSG1870
.string "\n"
@_$MSG1871
.string "mov "
@_$MSG1872
.string ","
@_$MSG1873
.string "\n"
@_$MSG1874
.string "mov $"
@_$MSG1875
.string ","
@_$MSG1876
.string "\n"
@_$MSG1877
.string "mov "
@_$MSG1878
.string ","
@_$MSG1879
.string "\n"
@_$MSG1880
.string "lea "
@_$MSG1881
.string ","
@_$MSG1882
.string "\n"
@_$MSG1883
.string "mov %al,%ah\n"
@_$MSG1884
.string "shr $7,%ah"
@_$MSG1885
.string "neg %ah\n"
@_$MSG1886
.string "xor %ah,%ah"
@_$MSG1887
.string "mov "
@_$MSG1888
.string ","
@_$MSG1889
.string "\n"
@_$MSG1890
.string "shr $"
@_$MSG1891
.string "15,"
@_$MSG1892
.string "31,"
@_$MSG1893
.string "63,"
@_$MSG1894
.string "\n"
@_$MSG1895
.string "neg "
@_$MSG1896
.string "\n"
@_$MSG1897
.string "xor "
@_$MSG1898
.string ","
@_$MSG1899
.string "\n"
@_$MSG1900
.string "i"
@_$MSG1901
.string "div "
@_$MSG1902
.string "\n"
@_$MSG1903
.string "mov "
@_$MSG1904
.string ","
@_$MSG1905
.string "\n"
@_$MSG1906
.string "mov "
@_$MSG1907
.string ","
@_$MSG1908
.string "\n"
@_$MSG1909
.string "invalid op."
@_$MSG1910
.string "mov "
@_$MSG1911
.string ","
@_$MSG1912
.string "\n"
@_$MSG1913
.string "mov $"
@_$MSG1914
.string ","
@_$MSG1915
.string "\n"
@_$MSG1916
.string "mov "
@_$MSG1917
.string ","
@_$MSG1918
.string "\n"
@_$MSG1919
.string "lea "
@_$MSG1920
.string ","
@_$MSG1921
.string "\n"
@_$MSG1922
.string "mov "
@_$MSG1923
.string ","
@_$MSG1924
.string "\n"
@_$MSG1925
.string "mov $"
@_$MSG1926
.string ","
@_$MSG1927
.string "\n"
@_$MSG1928
.string "mov "
@_$MSG1929
.string ","
@_$MSG1930
.string "\n"
@_$MSG1931
.string "lea "
@_$MSG1932
.string ","
@_$MSG1933
.string "\n"
@_$MSG1934
.string "mov %al,%ah\n"
@_$MSG1935
.string "shr $7,%ah"
@_$MSG1936
.string "neg %ah\n"
@_$MSG1937
.string "xor %ah,%ah"
@_$MSG1938
.string "mov "
@_$MSG1939
.string ","
@_$MSG1940
.string "\n"
@_$MSG1941
.string "shr $"
@_$MSG1942
.string "15,"
@_$MSG1943
.string "31,"
@_$MSG1944
.string "63,"
@_$MSG1945
.string "\n"
@_$MSG1946
.string "neg "
@_$MSG1947
.string "\n"
@_$MSG1948
.string "xor "
@_$MSG1949
.string ","
@_$MSG1950
.string "\n"
@_$MSG1951
.string "i"
@_$MSG1952
.string "div "
@_$MSG1953
.string "\n"
@_$MSG1954
.string "mov %ah,%al\n"
@_$MSG1955
.string "mov "
@_$MSG1956
.string ","
@_$MSG1957
.string "\n"
@_$MSG1958
.string "mov "
@_$MSG1959
.string ","
@_$MSG1960
.string "\n"
@_$MSG1961
.string "mov "
@_$MSG1962
.string ","
@_$MSG1963
.string "\n"
@_$MSG1964
.string "invalid op."
@_$MSG1965
.string "mov "
@_$MSG1966
.string ","
@_$MSG1967
.string "\n"
@_$MSG1968
.string "mov $"
@_$MSG1969
.string ","
@_$MSG1970
.string "\n"
@_$MSG1971
.string "mov "
@_$MSG1972
.string ","
@_$MSG1973
.string "\n"
@_$MSG1974
.string "lea "
@_$MSG1975
.string ","
@_$MSG1976
.string "\n"
@_$MSG1977
.string "mov "
@_$MSG1978
.string ","
@_$MSG1979
.string "\n"
@_$MSG1980
.string "mov $"
@_$MSG1981
.string ","
@_$MSG1982
.string "\n"
@_$MSG1983
.string "mov "
@_$MSG1984
.string ","
@_$MSG1985
.string "\n"
@_$MSG1986
.string "lea "
@_$MSG1987
.string ","
@_$MSG1988
.string "\n"
@_$MSG1989
.string "shl %cl,"
@_$MSG1990
.string "\n"
@_$MSG1991
.string "mov "
@_$MSG1992
.string ","
@_$MSG1993
.string "\n"
@_$MSG1994
.string "mov "
@_$MSG1995
.string ","
@_$MSG1996
.string "\n"
@_$MSG1997
.string "invalid op."
@_$MSG1998
.string "mov "
@_$MSG1999
.string ","
@_$MSG2000
.string "\n"
@_$MSG2001
.string "mov $"
@_$MSG2002
.string ","
@_$MSG2003
.string "\n"
@_$MSG2004
.string "mov "
@_$MSG2005
.string ","
@_$MSG2006
.string "\n"
@_$MSG2007
.string "lea "
@_$MSG2008
.string ","
@_$MSG2009
.string "\n"
@_$MSG2010
.string "mov "
@_$MSG2011
.string ","
@_$MSG2012
.string "\n"
@_$MSG2013
.string "mov $"
@_$MSG2014
.string ","
@_$MSG2015
.string "\n"
@_$MSG2016
.string "mov "
@_$MSG2017
.string ","
@_$MSG2018
.string "\n"
@_$MSG2019
.string "lea "
@_$MSG2020
.string ","
@_$MSG2021
.string "\n"
@_$MSG2022
.string "sar %cl,"
@_$MSG2023
.string "shr %cl,"
@_$MSG2024
.string "\n"
@_$MSG2025
.string "mov "
@_$MSG2026
.string ","
@_$MSG2027
.string "\n"
@_$MSG2028
.string "mov "
@_$MSG2029
.string ","
@_$MSG2030
.string "\n"
@_$MSG2031
.string "too few arguments."
@_$MSG2032
.string "mov "
@_$MSG2033
.string ","
@_$MSG2034
.string "\n"
@_$MSG2035
.string "mov $"
@_$MSG2036
.string ","
@_$MSG2037
.string "\n"
@_$MSG2038
.string "mov "
@_$MSG2039
.string ","
@_$MSG2040
.string "\n"
@_$MSG2041
.string "lea "
@_$MSG2042
.string ","
@_$MSG2043
.string "\n"
@_$MSG2044
.string "mov "
@_$MSG2045
.string ","
@_$MSG2046
.string "\n"
@_$MSG2047
.string "mov $"
@_$MSG2048
.string ","
@_$MSG2049
.string "\n"
@_$MSG2050
.string "mov "
@_$MSG2051
.string ","
@_$MSG2052
.string "\n"
@_$MSG2053
.string "lea "
@_$MSG2054
.string ","
@_$MSG2055
.string "\n"
@_$MSG2056
.string "movq %rax,%xmm0\n"
@_$MSG2057
.string "movq %rcx,%xmm1\n"
@_$MSG2058
.string "comisd "
@_$MSG2059
.string "%xmm1,%xmm0\n"
@_$MSG2060
.string "movd %eax,%xmm0\n"
@_$MSG2061
.string "movd %ecx,%xmm1\n"
@_$MSG2062
.string "comiss "
@_$MSG2063
.string "%xmm1,%xmm0\n"
@_$MSG2064
.string "cmp "
@_$MSG2065
.string ","
@_$MSG2066
.string "\n"
@_$MSG2067
.string " @_$LB"
@_$MSG2068
.string "\n"
@_$MSG2069
.string "invalid op."
@_$MSG2070
.string "mov ("
@_$MSG2071
.string "),"
@_$MSG2072
.string "\n"
@_$MSG2073
.string "mov "
@_$MSG2074
.string ","
@_$MSG2075
.string "\n"
@_$MSG2076
.string "mov $"
@_$MSG2077
.string ","
@_$MSG2078
.string "\n"
@_$MSG2079
.string "mov "
@_$MSG2080
.string ","
@_$MSG2081
.string "\n"
@_$MSG2082
.string "mov (%rax),"
@_$MSG2083
.string "\n"
@_$MSG2084
.string "mov ("
@_$MSG2085
.string "),"
@_$MSG2086
.string "\n"
@_$MSG2087
.string "mov "
@_$MSG2088
.string ","
@_$MSG2089
.string "\n"
@_$MSG2090
.string "mov "
@_$MSG2091
.string ","
@_$MSG2092
.string "\n"
@_$MSG2093
.string "mov "
@_$MSG2094
.string ","
@_$MSG2095
.string "\n"
@_$MSG2096
.string "mov $"
@_$MSG2097
.string ","
@_$MSG2098
.string "\n"
@_$MSG2099
.string "mov "
@_$MSG2100
.string ","
@_$MSG2101
.string "\n"
@_$MSG2102
.string "mov (%rax),"
@_$MSG2103
.string "\n"
@_$MSG2104
.string "mov "
@_$MSG2105
.string ","
@_$MSG2106
.string "\n"
@_$MSG2107
.string "invalid op."
@_$MSG2108
.string "invalid op."
@_$MSG2109
.string "mov "
@_$MSG2110
.string "("
@_$MSG2111
.string "),"
@_$MSG2112
.string "\n"
@_$MSG2113
.string "mov "
@_$MSG2114
.string ","
@_$MSG2115
.string "\n"
@_$MSG2116
.string "mov $"
@_$MSG2117
.string ","
@_$MSG2118
.string "\n"
@_$MSG2119
.string "mov "
@_$MSG2120
.string ","
@_$MSG2121
.string "\n"
@_$MSG2122
.string "mov "
@_$MSG2123
.string "(%rax),"
@_$MSG2124
.string "\n"
@_$MSG2125
.string "mov "
@_$MSG2126
.string "("
@_$MSG2127
.string "),"
@_$MSG2128
.string "\n"
@_$MSG2129
.string "mov "
@_$MSG2130
.string ","
@_$MSG2131
.string "\n"
@_$MSG2132
.string "mov "
@_$MSG2133
.string ","
@_$MSG2134
.string "\n"
@_$MSG2135
.string "mov "
@_$MSG2136
.string ","
@_$MSG2137
.string "\n"
@_$MSG2138
.string "mov $"
@_$MSG2139
.string ","
@_$MSG2140
.string "\n"
@_$MSG2141
.string "mov "
@_$MSG2142
.string ","
@_$MSG2143
.string "\n"
@_$MSG2144
.string "mov "
@_$MSG2145
.string "(%rax),"
@_$MSG2146
.string "\n"
@_$MSG2147
.string "mov "
@_$MSG2148
.string ","
@_$MSG2149
.string "\n"
@_$MSG2150
.string "mov"
@_$MSG2151
.string " $"
@_$MSG2152
.string ",("
@_$MSG2153
.string ")\n"
@_$MSG2154
.string "mov $"
@_$MSG2155
.string ","
@_$MSG2156
.string "\n"
@_$MSG2157
.string "mov "
@_$MSG2158
.string ","
@_$MSG2159
.string "\n"
@_$MSG2160
.string "lea "
@_$MSG2161
.string ","
@_$MSG2162
.string "\n"
@_$MSG2163
.string "mov "
@_$MSG2164
.string ",("
@_$MSG2165
.string ")\n"
@_$MSG2166
.string "mov "
@_$MSG2167
.string ","
@_$MSG2168
.string "\n"
@_$MSG2169
.string "mov "
@_$MSG2170
.string ","
@_$MSG2171
.string "\n"
@_$MSG2172
.string "mov $"
@_$MSG2173
.string ","
@_$MSG2174
.string "\n"
@_$MSG2175
.string "mov "
@_$MSG2176
.string ",(%rcx)\n"
@_$MSG2177
.string "invalid op."
@_$MSG2178
.string "mov"
@_$MSG2179
.string " $"
@_$MSG2180
.string ","
@_$MSG2181
.string "("
@_$MSG2182
.string ")\n"
@_$MSG2183
.string "mov $"
@_$MSG2184
.string ","
@_$MSG2185
.string "\n"
@_$MSG2186
.string "mov "
@_$MSG2187
.string ","
@_$MSG2188
.string "\n"
@_$MSG2189
.string "lea "
@_$MSG2190
.string ","
@_$MSG2191
.string "\n"
@_$MSG2192
.string "mov "
@_$MSG2193
.string ","
@_$MSG2194
.string "("
@_$MSG2195
.string ")\n"
@_$MSG2196
.string "mov "
@_$MSG2197
.string ","
@_$MSG2198
.string "\n"
@_$MSG2199
.string "mov "
@_$MSG2200
.string ","
@_$MSG2201
.string "\n"
@_$MSG2202
.string "mov $"
@_$MSG2203
.string ","
@_$MSG2204
.string "\n"
@_$MSG2205
.string "mov "
@_$MSG2206
.string ","
@_$MSG2207
.string "(%rcx)\n"
@_$MSG2208
.string "pushq $"
@_$MSG2209
.string "\n"
@_$MSG2210
.string "push "
@_$MSG2211
.string "\n"
@_$MSG2212
.string "mov "
@_$MSG2213
.string ",%rax\n"
@_$MSG2214
.string "push %rax\n"
@_$MSG2215
.string "mov $"
@_$MSG2216
.string ",%rax\n"
@_$MSG2217
.string "mov "
@_$MSG2218
.string ","
@_$MSG2219
.string "\n"
@_$MSG2220
.string "lea "
@_$MSG2221
.string ","
@_$MSG2222
.string "\n"
@_$MSG2223
.string "push %rax\n"
@_$MSG2224
.string "invalid op."
@_$MSG2225
.string "call "
@_$MSG2226
.string "\n"
@_$MSG2227
.string "call *"
@_$MSG2228
.string "\n"
@_$MSG2229
.string "mov "
@_$MSG2230
.string ","
@_$MSG2231
.string "\n"
@_$MSG2232
.string "lea "
@_$MSG2233
.string ","
@_$MSG2234
.string "\n"
@_$MSG2235
.string "call *%rax\n"
@_$MSG2236
.string "mov "
@_$MSG2237
.string ","
@_$MSG2238
.string "\n"
@_$MSG2239
.string "mov "
@_$MSG2240
.string ","
@_$MSG2241
.string "\n"
@_$MSG2242
.string "ret outside of function."
@_$MSG2243
.string "mov "
@_$MSG2244
.string ",%rax\n"
@_$MSG2245
.string "mov $"
@_$MSG2246
.string ",%rax\n"
@_$MSG2247
.string "mov "
@_$MSG2248
.string ","
@_$MSG2249
.string "\n"
@_$MSG2250
.string "lea "
@_$MSG2251
.string ","
@_$MSG2252
.string "\n"
@_$MSG2253
.string "jmp "
@_$MSG2254
.string "@"
@_$MSG2255
.string "$END\n"
@_$MSG2256
.string "endf"
@_$MSG2257
.string "mov "
@_$MSG2258
.string ","
@_$MSG2259
.string "\n"
@_$MSG2260
.string "not "
@_$MSG2261
.string "\n"
@_$MSG2262
.string "mov "
@_$MSG2263
.string ","
@_$MSG2264
.string "\n"
@_$MSG2265
.string "not "
@_$MSG2266
.string "\n"
@_$MSG2267
.string "mov $"
@_$MSG2268
.string ","
@_$MSG2269
.string "\n"
@_$MSG2270
.string "not "
@_$MSG2271
.string "\n"
@_$MSG2272
.string "lea "
@_$MSG2273
.string ","
@_$MSG2274
.string "\n"
@_$MSG2275
.string "not "
@_$MSG2276
.string "\n"
@_$MSG2277
.string "mov "
@_$MSG2278
.string ","
@_$MSG2279
.string "\n"
@_$MSG2280
.string "not "
@_$MSG2281
.string "\n"
@_$MSG2282
.string "mov "
@_$MSG2283
.string ","
@_$MSG2284
.string "\n"
@_$MSG2285
.string "mov "
@_$MSG2286
.string ","
@_$MSG2287
.string "\n"
@_$MSG2288
.string "not "
@_$MSG2289
.string "\n"
@_$MSG2290
.string "mov "
@_$MSG2291
.string ","
@_$MSG2292
.string "\n"
@_$MSG2293
.string "mov $"
@_$MSG2294
.string ","
@_$MSG2295
.string "\n"
@_$MSG2296
.string "not "
@_$MSG2297
.string "\n"
@_$MSG2298
.string "mov "
@_$MSG2299
.string ","
@_$MSG2300
.string "\n"
@_$MSG2301
.string "lea "
@_$MSG2302
.string ","
@_$MSG2303
.string "\n"
@_$MSG2304
.string "not "
@_$MSG2305
.string "\n"
@_$MSG2306
.string "mov "
@_$MSG2307
.string ","
@_$MSG2308
.string "\n"
@_$MSG2309
.string "invalid op."
@_$MSG2310
.string "lea "
@_$MSG2311
.string ",%ecx\n"
@_$MSG2312
.string "mov "
@_$MSG2313
.string ","
@_$MSG2314
.string "\n"
@_$MSG2315
.string "mov "
@_$MSG2316
.string ",%rcx\n"
@_$MSG2317
.string "mov "
@_$MSG2318
.string ",%ecx\n"
@_$MSG2319
.string "btc $31,%ecx\n"
@_$MSG2320
.string "mov %ecx,"
@_$MSG2321
.string "\n"
@_$MSG2322
.string "lea "
@_$MSG2323
.string ",%rcx\n"
@_$MSG2324
.string "mov "
@_$MSG2325
.string ","
@_$MSG2326
.string "\n"
@_$MSG2327
.string "mov "
@_$MSG2328
.string ",%rcx\n"
@_$MSG2329
.string "mov "
@_$MSG2330
.string ",%rcx\n"
@_$MSG2331
.string "btc $63,%rcx\n"
@_$MSG2332
.string "mov %rcx,"
@_$MSG2333
.string "\n"
@_$MSG2334
.string "mov "
@_$MSG2335
.string ","
@_$MSG2336
.string "\n"
@_$MSG2337
.string "neg "
@_$MSG2338
.string "\n"
@_$MSG2339
.string "mov "
@_$MSG2340
.string ","
@_$MSG2341
.string "\n"
@_$MSG2342
.string "neg "
@_$MSG2343
.string "\n"
@_$MSG2344
.string "mov $"
@_$MSG2345
.string ","
@_$MSG2346
.string "\n"
@_$MSG2347
.string "neg "
@_$MSG2348
.string "\n"
@_$MSG2349
.string "lea "
@_$MSG2350
.string ","
@_$MSG2351
.string "\n"
@_$MSG2352
.string "neg "
@_$MSG2353
.string "\n"
@_$MSG2354
.string "mov "
@_$MSG2355
.string ","
@_$MSG2356
.string "\n"
@_$MSG2357
.string "neg "
@_$MSG2358
.string "\n"
@_$MSG2359
.string "mov "
@_$MSG2360
.string ","
@_$MSG2361
.string "\n"
@_$MSG2362
.string "mov "
@_$MSG2363
.string ","
@_$MSG2364
.string "\n"
@_$MSG2365
.string "neg "
@_$MSG2366
.string "\n"
@_$MSG2367
.string "mov "
@_$MSG2368
.string ","
@_$MSG2369
.string "\n"
@_$MSG2370
.string "mov $"
@_$MSG2371
.string ","
@_$MSG2372
.string "\n"
@_$MSG2373
.string "neg "
@_$MSG2374
.string "\n"
@_$MSG2375
.string "mov "
@_$MSG2376
.string ","
@_$MSG2377
.string "\n"
@_$MSG2378
.string "lea "
@_$MSG2379
.string ","
@_$MSG2380
.string "\n"
@_$MSG2381
.string "neg "
@_$MSG2382
.string "\n"
@_$MSG2383
.string "mov "
@_$MSG2384
.string ","
@_$MSG2385
.string "\n"
@_$MSG2386
.string "invalid op."
@_$MSG2387
.string "invalid op."
@_$MSG2388
.string "lea "
@_$MSG2389
.string ","
@_$MSG2390
.string "\n"
@_$MSG2391
.string "lea "
@_$MSG2392
.string ","
@_$MSG2393
.string "\n"
@_$MSG2394
.string "mov "
@_$MSG2395
.string ","
@_$MSG2396
.string "\n"
@_$MSG2397
.string "invalid op."
@_$MSG2398
.string "invalid op."
@_$MSG2399
.string "lea "
@_$MSG2400
.string ","
@_$MSG2401
.string "\n"
@_$MSG2402
.string "lea "
@_$MSG2403
.string ","
@_$MSG2404
.string "\n"
@_$MSG2405
.string "mov "
@_$MSG2406
.string ","
@_$MSG2407
.string "\n"
@_$MSG2408
.string "invalid op."
@_$MSG2409
.string "asm"
@_$MSG2410
.string "_$MSG"
@_$MSG2411
.string "@"
@_$MSG2412
.string "\n"
@_$MSG2413
.string ".string "
@_$MSG2414
.string "\n"
@_$MSG2415
.string "mov"
@_$MSG2416
.string "add"
@_$MSG2417
.string "add"
@_$MSG2418
.string "sub"
@_$MSG2419
.string "sub"
@_$MSG2420
.string "and"
@_$MSG2421
.string "and"
@_$MSG2422
.string "orr"
@_$MSG2423
.string "or"
@_$MSG2424
.string "eor"
@_$MSG2425
.string "xor"
@_$MSG2426
.string "mul"
@_$MSG2427
.string "div"
@_$MSG2428
.string "mod"
@_$MSG2429
.string "lsh"
@_$MSG2430
.string "rsh"
@_$MSG2431
.string "ble"
@_$MSG2432
.string "ja"
@_$MSG2433
.string "jg"
@_$MSG2434
.string "jbe"
@_$MSG2435
.string "jle"
@_$MSG2436
.string "bge"
@_$MSG2437
.string "jb"
@_$MSG2438
.string "jl"
@_$MSG2439
.string "jae"
@_$MSG2440
.string "jge"
@_$MSG2441
.string "blt"
@_$MSG2442
.string "jae"
@_$MSG2443
.string "jge"
@_$MSG2444
.string "jb"
@_$MSG2445
.string "jl"
@_$MSG2446
.string "bgt"
@_$MSG2447
.string "jbe"
@_$MSG2448
.string "jle"
@_$MSG2449
.string "ja"
@_$MSG2450
.string "jg"
@_$MSG2451
.string "beq"
@_$MSG2452
.string "jne"
@_$MSG2453
.string "jne"
@_$MSG2454
.string "je"
@_$MSG2455
.string "je"
@_$MSG2456
.string "bne"
@_$MSG2457
.string "je"
@_$MSG2458
.string "je"
@_$MSG2459
.string "jne"
@_$MSG2460
.string "jne"
@_$MSG2461
.string "ldb"
@_$MSG2462
.string "ldw"
@_$MSG2463
.string "ldl"
@_$MSG2464
.string "ldq"
@_$MSG2465
.string "ldf"
@_$MSG2466
.string "ldh"
@_$MSG2467
.string "stb"
@_$MSG2468
.string "stw"
@_$MSG2469
.string "stl"
@_$MSG2470
.string "stq"
@_$MSG2471
.string "stf"
@_$MSG2472
.string "sth"
@_$MSG2473
.string "ldob"
@_$MSG2474
.string "ldow"
@_$MSG2475
.string "ldol"
@_$MSG2476
.string "ldoq"
@_$MSG2477
.string "ldof"
@_$MSG2478
.string "ldoh"
@_$MSG2479
.string "stob"
@_$MSG2480
.string "stow"
@_$MSG2481
.string "stol"
@_$MSG2482
.string "stoq"
@_$MSG2483
.string "stof"
@_$MSG2484
.string "stoh"
@_$MSG2485
.string "push"
@_$MSG2486
.string "pushh"
@_$MSG2487
.string "pushf"
@_$MSG2488
.string "call"
@_$MSG2489
.string "hcall"
@_$MSG2490
.string "fcall"
@_$MSG2491
.string "retval"
@_$MSG2492
.string "retvalh"
@_$MSG2493
.string "retvalf"
@_$MSG2494
.string "not"
@_$MSG2495
.string "neg"
@_$MSG2496
.string "adr"
@_$MSG2497
.string "adro"
@_$MSG2498
.string "del"
@_$MSG2499
.string "too few arguments."
@_$MSG2500
.string "add $"
@_$MSG2501
.string ",%rsp\n"
@_$MSG2502
.string "fun"
@_$MSG2503
.string "too few arguments."
@_$MSG2504
.string "push %rbp\n"
@_$MSG2505
.string "mov %rsp,%rbp\n"
@_$MSG2506
.string "sub $"
@_$MSG2507
.string ",%rsp\n"
@_$MSG2508
.string "push "
@_$MSG2509
.string "\n"
@_$MSG2510
.string "mov "
@_$MSG2511
.string "(%rbp),"
@_$MSG2512
.string "\n"
@_$MSG2513
.string "endf"
@_$MSG2514
.string "@"
@_$MSG2515
.string "$END\n"
@_$MSG2516
.string "pop "
@_$MSG2517
.string "\n"
@_$MSG2518
.string "mov %rbp,%rsp\npop %rbp\nret\n"
@_$MSG2519
.string "endf without fun."
@_$MSG2520
.string "ret"
@_$MSG2521
.string "jmp "
@_$MSG2522
.string "@"
@_$MSG2523
.string "$END\n"
@_$MSG2524
.string "endf"
@_$MSG2525
.string "bal"
@_$MSG2526
.string "too few arguments."
@_$MSG2527
.string "jmp @_$LB"
@_$MSG2528
.string "\n"
@_$MSG2529
.string "label"
@_$MSG2530
.string "too few arguments."
@_$MSG2531
.string "@_$LB"
@_$MSG2532
.string "\n"
@_$MSG2533
.string "asm"
@_$MSG2534
.string "too few arguments."
@_$MSG2535
.string "\n"
@_$MSG2536
.string ".datasize "
@_$MSG2537
.string "\n"
@_$MSG2538
.string "Usage: scc <input> <output>\n"
@_$MSG2539
.string "Cannot open input file\n"
@_$MSG2540
.string "Cannot open output file\n"
@_$MSG2541
.string "FATAL: cannot allocate memory.\n"
@_$MSG2542
.string "line "
@_$MSG2543
.string ": error: "
@_$MSG2544
.string " "
@_$MSG2545
.string "0123456789ABCDEF"
@_$MSG2546
.string ": "
@_$MSG2547
.string "\x7f\x45\x4c\x46\x02\x01\x01"
@_$MSG2548
.string "\n"
@_$MSG2549
.string "_$DATA"
@_$MSG2550
.string "label undefined."
@_$MSG2551
.string "eax"
@_$MSG2552
.string "ecx"
@_$MSG2553
.string "edx"
@_$MSG2554
.string "ebx"
@_$MSG2555
.string "esp"
@_$MSG2556
.string "ebp"
@_$MSG2557
.string "esi"
@_$MSG2558
.string "edi"
@_$MSG2559
.string "r8d"
@_$MSG2560
.string "r9d"
@_$MSG2561
.string "r10d"
@_$MSG2562
.string "r11d"
@_$MSG2563
.string "r12d"
@_$MSG2564
.string "r13d"
@_$MSG2565
.string "r14d"
@_$MSG2566
.string "r15d"
@_$MSG2567
.string "eiz"
@_$MSG2568
.string "ax"
@_$MSG2569
.string "cx"
@_$MSG2570
.string "dx"
@_$MSG2571
.string "bx"
@_$MSG2572
.string "sp"
@_$MSG2573
.string "bp"
@_$MSG2574
.string "si"
@_$MSG2575
.string "di"
@_$MSG2576
.string "r8w"
@_$MSG2577
.string "r9w"
@_$MSG2578
.string "r10w"
@_$MSG2579
.string "r11w"
@_$MSG2580
.string "r12w"
@_$MSG2581
.string "r13w"
@_$MSG2582
.string "r14w"
@_$MSG2583
.string "r15w"
@_$MSG2584
.string "al"
@_$MSG2585
.string "cl"
@_$MSG2586
.string "dl"
@_$MSG2587
.string "bl"
@_$MSG2588
.string "r8b"
@_$MSG2589
.string "r9b"
@_$MSG2590
.string "r10b"
@_$MSG2591
.string "r11b"
@_$MSG2592
.string "r12b"
@_$MSG2593
.string "r13b"
@_$MSG2594
.string "r14b"
@_$MSG2595
.string "r15b"
@_$MSG2596
.string "spl"
@_$MSG2597
.string "bpl"
@_$MSG2598
.string "sil"
@_$MSG2599
.string "dil"
@_$MSG2600
.string "ah"
@_$MSG2601
.string "ch"
@_$MSG2602
.string "dh"
@_$MSG2603
.string "bh"
@_$MSG2604
.string "rax"
@_$MSG2605
.string "rcx"
@_$MSG2606
.string "rdx"
@_$MSG2607
.string "rbx"
@_$MSG2608
.string "rsp"
@_$MSG2609
.string "rbp"
@_$MSG2610
.string "rsi"
@_$MSG2611
.string "rdi"
@_$MSG2612
.string "r8"
@_$MSG2613
.string "r9"
@_$MSG2614
.string "r10"
@_$MSG2615
.string "r11"
@_$MSG2616
.string "r12"
@_$MSG2617
.string "r13"
@_$MSG2618
.string "r14"
@_$MSG2619
.string "r15"
@_$MSG2620
.string "riz"
@_$MSG2621
.string "cr0"
@_$MSG2622
.string "cr2"
@_$MSG2623
.string "cr3"
@_$MSG2624
.string "cr4"
@_$MSG2625
.string "cr8"
@_$MSG2626
.string "xmm0"
@_$MSG2627
.string "xmm10"
@_$MSG2628
.string "xmm11"
@_$MSG2629
.string "xmm12"
@_$MSG2630
.string "xmm13"
@_$MSG2631
.string "xmm14"
@_$MSG2632
.string "xmm15"
@_$MSG2633
.string "xmm1"
@_$MSG2634
.string "xmm2"
@_$MSG2635
.string "xmm3"
@_$MSG2636
.string "xmm4"
@_$MSG2637
.string "xmm5"
@_$MSG2638
.string "xmm6"
@_$MSG2639
.string "xmm7"
@_$MSG2640
.string "xmm8"
@_$MSG2641
.string "xmm9"
@_$MSG2642
.string "ymm0"
@_$MSG2643
.string "ymm10"
@_$MSG2644
.string "ymm11"
@_$MSG2645
.string "ymm12"
@_$MSG2646
.string "ymm13"
@_$MSG2647
.string "ymm14"
@_$MSG2648
.string "ymm15"
@_$MSG2649
.string "ymm1"
@_$MSG2650
.string "ymm2"
@_$MSG2651
.string "ymm3"
@_$MSG2652
.string "ymm4"
@_$MSG2653
.string "ymm5"
@_$MSG2654
.string "ymm6"
@_$MSG2655
.string "ymm7"
@_$MSG2656
.string "ymm8"
@_$MSG2657
.string "ymm9"
@_$MSG2658
.string "("
@_$MSG2659
.string "address out of range."
@_$MSG2660
.string "("
@_$MSG2661
.string "%"
@_$MSG2662
.string "register required."
@_$MSG2663
.string ")"
@_$MSG2664
.string ","
@_$MSG2665
.string "expected \')\' or \',\' after register."
@_$MSG2666
.string "%"
@_$MSG2667
.string "register required."
@_$MSG2668
.string "invalid index register."
@_$MSG2669
.string "invalid index register."
@_$MSG2670
.string ")"
@_$MSG2671
.string ","
@_$MSG2672
.string "expected \')\' or \',\' after register."
@_$MSG2673
.string "1"
@_$MSG2674
.string "2"
@_$MSG2675
.string "4"
@_$MSG2676
.string "8"
@_$MSG2677
.string "invalid scaler."
@_$MSG2678
.string ")"
@_$MSG2679
.string "expected \')\' after scaler."
@_$MSG2680
.string ")"
@_$MSG2681
.string ","
@_$MSG2682
.string "expected \')\' or \',\' after register."
@_$MSG2683
.string "%"
@_$MSG2684
.string "register required."
@_$MSG2685
.string "invalid index register."
@_$MSG2686
.string "invalid index register."
@_$MSG2687
.string ")"
@_$MSG2688
.string ","
@_$MSG2689
.string "expected \')\' or \',\' after register."
@_$MSG2690
.string "1"
@_$MSG2691
.string "2"
@_$MSG2692
.string "4"
@_$MSG2693
.string "8"
@_$MSG2694
.string "invalid scaler."
@_$MSG2695
.string ")"
@_$MSG2696
.string "expected \')\' after scaler."
@_$MSG2697
.string "rip"
@_$MSG2698
.string ")"
@_$MSG2699
.string "expected \')\' after %rip."
@_$MSG2700
.string "invalid address."
@_$MSG2701
.string "ADDR"
@_$MSG2702
.string "B1"
@_$MSG2703
.string "B2"
@_$MSG2704
.string "W1"
@_$MSG2705
.string "W2"
@_$MSG2706
.string "L1"
@_$MSG2707
.string "L2"
@_$MSG2708
.string "Q1"
@_$MSG2709
.string "Q2"
@_$MSG2710
.string "C1"
@_$MSG2711
.string "C2"
@_$MSG2712
.string "X1"
@_$MSG2713
.string "X2"
@_$MSG2714
.string "Y1"
@_$MSG2715
.string "Y2"
@_$MSG2716
.string "I"
@_$MSG2717
.string "invalid register with REX."
@_$MSG2718
.string "invalid register with REX."
@_$MSG2719
.string "\x8e"
@_$MSG2720
.string "mov %W1,%ds"
@_$MSG2721
.string "\x8e"
@_$MSG2722
.string "mov %W1,%es"
@_$MSG2723
.string "\x8e"
@_$MSG2724
.string "mov %W1,%fs"
@_$MSG2725
.string "\x8e"
@_$MSG2726
.string "mov %W1,%gs"
@_$MSG2727
.string "\x8e"
@_$MSG2728
.string "mov %W1,%ss"
@_$MSG2729
.string "\x8c"
@_$MSG2730
.string "mov %ds,%L1"
@_$MSG2731
.string "\x8c"
@_$MSG2732
.string "mov %es,%L1"
@_$MSG2733
.string "\x8c"
@_$MSG2734
.string "mov %fs,%L1"
@_$MSG2735
.string "\x8c"
@_$MSG2736
.string "mov %gs,%L1"
@_$MSG2737
.string "\x8c"
@_$MSG2738
.string "mov %ss,%L1"
@_$MSG2739
.string "\x0f\xbe"
@_$MSG2740
.string "\x66"
@_$MSG2741
.string "movsbw %B1,%W2"
@_$MSG2742
.string "\x0f\xbe"
@_$MSG2743
.string "movsbl %B1,%L2"
@_$MSG2744
.string "\x0f\xbe"
@_$MSG2745
.string "movsbq %B1,%Q2"
@_$MSG2746
.string "\x0f\xbf"
@_$MSG2747
.string "movswl %W1,%L2"
@_$MSG2748
.string "\x0f\xbf"
@_$MSG2749
.string "movswq %W1,%Q2"
@_$MSG2750
.string "\x63"
@_$MSG2751
.string "movslq %L1,%Q2"
@_$MSG2752
.string "\x0f\xb6"
@_$MSG2753
.string "\x66"
@_$MSG2754
.string "movzbw %B1,%W2"
@_$MSG2755
.string "\x0f\xb6"
@_$MSG2756
.string "movzbl %B1,%L2"
@_$MSG2757
.string "\x0f\xb6"
@_$MSG2758
.string "movzbq %B1,%Q2"
@_$MSG2759
.string "\x0f\xb7"
@_$MSG2760
.string "movzwl %W1,%L2"
@_$MSG2761
.string "\x0f\xb7"
@_$MSG2762
.string "movzwq %W1,%Q2"
@_$MSG2763
.string "\x0f\xbe"
@_$MSG2764
.string "\x66"
@_$MSG2765
.string "movsbw ADDR,%W2"
@_$MSG2766
.string "\x0f\xbe"
@_$MSG2767
.string "movsbl ADDR,%L2"
@_$MSG2768
.string "\x0f\xbe"
@_$MSG2769
.string "movsbq ADDR,%Q2"
@_$MSG2770
.string "\x0f\xbf"
@_$MSG2771
.string "movswl ADDR,%L2"
@_$MSG2772
.string "\x0f\xbf"
@_$MSG2773
.string "movswq ADDR,%Q2"
@_$MSG2774
.string "\x63"
@_$MSG2775
.string "movslq ADDR,%Q2"
@_$MSG2776
.string "\x0f\xb6"
@_$MSG2777
.string "\x66"
@_$MSG2778
.string "movzbw ADDR,%W2"
@_$MSG2779
.string "\x0f\xb6"
@_$MSG2780
.string "movzbl ADDR,%L2"
@_$MSG2781
.string "\x0f\xb6"
@_$MSG2782
.string "movzbq ADDR,%Q2"
@_$MSG2783
.string "\x0f\xb7"
@_$MSG2784
.string "movzwl ADDR,%L2"
@_$MSG2785
.string "\x0f\xb7"
@_$MSG2786
.string "movzwq ADDR,%Q2"
@_$MSG2787
.string "\xc7"
@_$MSG2788
.string "\x66"
@_$MSG2789
.string "movw $I,ADDR"
@_$MSG2790
.string "\x8b"
@_$MSG2791
.string "\x66"
@_$MSG2792
.string "mov ADDR,%W2"
@_$MSG2793
.string "\x89"
@_$MSG2794
.string "\x66"
@_$MSG2795
.string "mov %W2,ADDR"
@_$MSG2796
.string "\xc6"
@_$MSG2797
.string "movb $I,ADDR"
@_$MSG2798
.string "\x8a"
@_$MSG2799
.string "mov ADDR,%B2"
@_$MSG2800
.string "\x88"
@_$MSG2801
.string "mov %B2,ADDR"
@_$MSG2802
.string "\xc7"
@_$MSG2803
.string "movl $I,ADDR"
@_$MSG2804
.string "\x8b"
@_$MSG2805
.string "mov ADDR,%L2"
@_$MSG2806
.string "\x89"
@_$MSG2807
.string "mov %L2,ADDR"
@_$MSG2808
.string "\xc7"
@_$MSG2809
.string "movq $I,ADDR"
@_$MSG2810
.string "\x8b"
@_$MSG2811
.string "mov ADDR,%Q2"
@_$MSG2812
.string "\x89"
@_$MSG2813
.string "mov %Q2,ADDR"
@_$MSG2814
.string "mov $I,%W1"
@_$MSG2815
.string "mov $I,%B1"
@_$MSG2816
.string "mov $I,%L1"
@_$MSG2817
.string "mov $I,%Q1"
@_$MSG2818
.string "\xc7"
@_$MSG2819
.string "mov $I,%Q1"
@_$MSG2820
.string "mov $I,%Q1"
@_$MSG2821
.string "\x89"
@_$MSG2822
.string "\x66"
@_$MSG2823
.string "mov %W2,%W1"
@_$MSG2824
.string "\x88"
@_$MSG2825
.string "mov %B2,%B1"
@_$MSG2826
.string "\x89"
@_$MSG2827
.string "mov %L2,%L1"
@_$MSG2828
.string "\x89"
@_$MSG2829
.string "mov %Q2,%Q1"
@_$MSG2830
.string "branch out of range."
@_$MSG2831
.string "branch out of range."
@_$MSG2832
.string "branch out of range."
@_$MSG2833
.string "jmp I"
@_$MSG2834
.string "\xff"
@_$MSG2835
.string "jmp *%Q1"
@_$MSG2836
.string "\xff"
@_$MSG2837
.string "jmp *ADDR"
@_$MSG2838
.string "\x70\x0f\x80"
@_$MSG2839
.string "jo I"
@_$MSG2840
.string "\x71\x0f\x81"
@_$MSG2841
.string "jno I"
@_$MSG2842
.string "\x72\x0f\x82"
@_$MSG2843
.string "jb I"
@_$MSG2844
.string "\x73\x0f\x83"
@_$MSG2845
.string "jae I"
@_$MSG2846
.string "\x74\x0f\x84"
@_$MSG2847
.string "je I"
@_$MSG2848
.string "\x75\x0f\x85"
@_$MSG2849
.string "jne I"
@_$MSG2850
.string "\x76\x0f\x86"
@_$MSG2851
.string "jbe I"
@_$MSG2852
.string "\x77\x0f\x87"
@_$MSG2853
.string "ja I"
@_$MSG2854
.string "\x78\x0f\x88"
@_$MSG2855
.string "js I"
@_$MSG2856
.string "\x79\x0f\x89"
@_$MSG2857
.string "jns I"
@_$MSG2858
.string "\x7a\x0f\x8a"
@_$MSG2859
.string "jp I"
@_$MSG2860
.string "\x7b\x0f\x8b"
@_$MSG2861
.string "jnp I"
@_$MSG2862
.string "\x7c\x0f\x8c"
@_$MSG2863
.string "jl I"
@_$MSG2864
.string "\x7d\x0f\x8d"
@_$MSG2865
.string "jge I"
@_$MSG2866
.string "\x7e\x0f\x8e"
@_$MSG2867
.string "jle I"
@_$MSG2868
.string "\x7f\x0f\x8f"
@_$MSG2869
.string "jg I"
@_$MSG2870
.string "call I"
@_$MSG2871
.string "\xff"
@_$MSG2872
.string "call *%Q1"
@_$MSG2873
.string "\xff"
@_$MSG2874
.string "call *ADDR"
@_$MSG2875
.string "\xc3"
@_$MSG2876
.string "ret"
@_$MSG2877
.string "\xff"
@_$MSG2878
.string "inc %L1"
@_$MSG2879
.string "\xff"
@_$MSG2880
.string "inc %Q1"
@_$MSG2881
.string "\xff"
@_$MSG2882
.string "\x66"
@_$MSG2883
.string "inc %W1"
@_$MSG2884
.string "\xfe"
@_$MSG2885
.string "inc %B1"
@_$MSG2886
.string "\xff"
@_$MSG2887
.string "incl ADDR"
@_$MSG2888
.string "\xff"
@_$MSG2889
.string "incq ADDR"
@_$MSG2890
.string "\xff"
@_$MSG2891
.string "\x66"
@_$MSG2892
.string "incw ADDR"
@_$MSG2893
.string "\xfe"
@_$MSG2894
.string "incb ADDR"
@_$MSG2895
.string "\xff"
@_$MSG2896
.string "dec %L1"
@_$MSG2897
.string "\xff"
@_$MSG2898
.string "dec %Q1"
@_$MSG2899
.string "\xff"
@_$MSG2900
.string "\x66"
@_$MSG2901
.string "dec %W1"
@_$MSG2902
.string "\xfe"
@_$MSG2903
.string "dec %B1"
@_$MSG2904
.string "\xff"
@_$MSG2905
.string "decl ADDR"
@_$MSG2906
.string "\xff"
@_$MSG2907
.string "decq ADDR"
@_$MSG2908
.string "\xff"
@_$MSG2909
.string "\x66"
@_$MSG2910
.string "decw ADDR"
@_$MSG2911
.string "\xfe"
@_$MSG2912
.string "decb ADDR"
@_$MSG2913
.string "\xf7"
@_$MSG2914
.string "not %L1"
@_$MSG2915
.string "\xf7"
@_$MSG2916
.string "not %Q1"
@_$MSG2917
.string "\xf7"
@_$MSG2918
.string "\x66"
@_$MSG2919
.string "not %W1"
@_$MSG2920
.string "\xf6"
@_$MSG2921
.string "not %B1"
@_$MSG2922
.string "\xf7"
@_$MSG2923
.string "notl ADDR"
@_$MSG2924
.string "\xf7"
@_$MSG2925
.string "notq ADDR"
@_$MSG2926
.string "\xf7"
@_$MSG2927
.string "\x66"
@_$MSG2928
.string "notw ADDR"
@_$MSG2929
.string "\xf6"
@_$MSG2930
.string "notb ADDR"
@_$MSG2931
.string "\xf7"
@_$MSG2932
.string "neg %L1"
@_$MSG2933
.string "\xf7"
@_$MSG2934
.string "neg %Q1"
@_$MSG2935
.string "\xf7"
@_$MSG2936
.string "\x66"
@_$MSG2937
.string "neg %W1"
@_$MSG2938
.string "\xf6"
@_$MSG2939
.string "neg %B1"
@_$MSG2940
.string "\xf7"
@_$MSG2941
.string "negl ADDR"
@_$MSG2942
.string "\xf7"
@_$MSG2943
.string "negq ADDR"
@_$MSG2944
.string "\xf7"
@_$MSG2945
.string "\x66"
@_$MSG2946
.string "negw ADDR"
@_$MSG2947
.string "\xf6"
@_$MSG2948
.string "negb ADDR"
@_$MSG2949
.string "\x39"
@_$MSG2950
.string "cmp %L2,%L1"
@_$MSG2951
.string "\x39"
@_$MSG2952
.string "cmp %Q2,%Q1"
@_$MSG2953
.string "\x39"
@_$MSG2954
.string "\x66"
@_$MSG2955
.string "cmp %W2,%W1"
@_$MSG2956
.string "\x38"
@_$MSG2957
.string "cmp %B2,%B1"
@_$MSG2958
.string "\x81"
@_$MSG2959
.string "cmp $I,%L1"
@_$MSG2960
.string "\x3d"
@_$MSG2961
.string "cmp $I,%eax"
@_$MSG2962
.string "\x83"
@_$MSG2963
.string "cmp $I,%L1"
@_$MSG2964
.string "\x81"
@_$MSG2965
.string "cmp $I,%Q1"
@_$MSG2966
.string "\x3d"
@_$MSG2967
.string "cmp $I,%rax"
@_$MSG2968
.string "\x83"
@_$MSG2969
.string "cmp $I,%Q1"
@_$MSG2970
.string "\x81"
@_$MSG2971
.string "\x66"
@_$MSG2972
.string "cmp $I,%W1"
@_$MSG2973
.string "\x3d"
@_$MSG2974
.string "\x66"
@_$MSG2975
.string "cmp $I,%ax"
@_$MSG2976
.string "\x83"
@_$MSG2977
.string "\x66"
@_$MSG2978
.string "cmp $I,%W1"
@_$MSG2979
.string "\x80"
@_$MSG2980
.string "cmp $I,%B1"
@_$MSG2981
.string "\x3c"
@_$MSG2982
.string "cmp $I,%al"
@_$MSG2983
.string "\x81"
@_$MSG2984
.string "cmpl $I,ADDR"
@_$MSG2985
.string "\x83"
@_$MSG2986
.string "cmpl $I,ADDR"
@_$MSG2987
.string "\x81"
@_$MSG2988
.string "cmpq $I,ADDR"
@_$MSG2989
.string "\x83"
@_$MSG2990
.string "cmpq $I,ADDR"
@_$MSG2991
.string "\x81"
@_$MSG2992
.string "\x66"
@_$MSG2993
.string "cmpw $I,ADDR"
@_$MSG2994
.string "\x83"
@_$MSG2995
.string "\x66"
@_$MSG2996
.string "cmpw $I,ADDR"
@_$MSG2997
.string "\x80"
@_$MSG2998
.string "cmpb $I,ADDR"
@_$MSG2999
.string "\x39"
@_$MSG3000
.string "cmp %L2,ADDR"
@_$MSG3001
.string "\x3b"
@_$MSG3002
.string "cmp ADDR,%L2"
@_$MSG3003
.string "\x39"
@_$MSG3004
.string "cmp %Q2,ADDR"
@_$MSG3005
.string "\x3b"
@_$MSG3006
.string "cmp ADDR,%Q2"
@_$MSG3007
.string "\x39"
@_$MSG3008
.string "\x66"
@_$MSG3009
.string "cmp %W2,ADDR"
@_$MSG3010
.string "\x3b"
@_$MSG3011
.string "\x66"
@_$MSG3012
.string "cmp ADDR,%W2"
@_$MSG3013
.string "\x38"
@_$MSG3014
.string "cmp %B2,ADDR"
@_$MSG3015
.string "\x3a"
@_$MSG3016
.string "cmp ADDR,%B2"
@_$MSG3017
.string "\x85"
@_$MSG3018
.string "test %L2,%L1"
@_$MSG3019
.string "\x85"
@_$MSG3020
.string "test %Q2,%Q1"
@_$MSG3021
.string "\x85"
@_$MSG3022
.string "\x66"
@_$MSG3023
.string "test %W2,%W1"
@_$MSG3024
.string "\x84"
@_$MSG3025
.string "test %B2,%B1"
@_$MSG3026
.string "\xf7"
@_$MSG3027
.string "test $I,%L1"
@_$MSG3028
.string "\xa9"
@_$MSG3029
.string "test $I,%eax"
@_$MSG3030
.string "\xf7"
@_$MSG3031
.string "test $I,%Q1"
@_$MSG3032
.string "\xa9"
@_$MSG3033
.string "test $I,%rax"
@_$MSG3034
.string "\xf7"
@_$MSG3035
.string "\x66"
@_$MSG3036
.string "test $I,%W1"
@_$MSG3037
.string "\xa9"
@_$MSG3038
.string "\x66"
@_$MSG3039
.string "test $I,%ax"
@_$MSG3040
.string "\xf6"
@_$MSG3041
.string "test $I,%B1"
@_$MSG3042
.string "\xa8"
@_$MSG3043
.string "test $I,%al"
@_$MSG3044
.string "\xf7"
@_$MSG3045
.string "testl $I,ADDR"
@_$MSG3046
.string "\xf7"
@_$MSG3047
.string "testq $I,ADDR"
@_$MSG3048
.string "\xf7"
@_$MSG3049
.string "\x66"
@_$MSG3050
.string "testw $I,ADDR"
@_$MSG3051
.string "\xf6"
@_$MSG3052
.string "testb $I,ADDR"
@_$MSG3053
.string "\x85"
@_$MSG3054
.string "test %L2,ADDR"
@_$MSG3055
.string "\x85"
@_$MSG3056
.string "test ADDR,%L2"
@_$MSG3057
.string "\x85"
@_$MSG3058
.string "test %Q2,ADDR"
@_$MSG3059
.string "\x85"
@_$MSG3060
.string "test ADDR,%Q2"
@_$MSG3061
.string "\x85"
@_$MSG3062
.string "\x66"
@_$MSG3063
.string "test %W2,ADDR"
@_$MSG3064
.string "\x85"
@_$MSG3065
.string "\x66"
@_$MSG3066
.string "test ADDR,%W2"
@_$MSG3067
.string "\x84"
@_$MSG3068
.string "test %B2,ADDR"
@_$MSG3069
.string "\x84"
@_$MSG3070
.string "test ADDR,%B2"
@_$MSG3071
.string "\xc1"
@_$MSG3072
.string "shl $I,%L1"
@_$MSG3073
.string "\xc1"
@_$MSG3074
.string "shl $I,%Q1"
@_$MSG3075
.string "\xc1"
@_$MSG3076
.string "\x66"
@_$MSG3077
.string "shl $I,%W1"
@_$MSG3078
.string "\xc0"
@_$MSG3079
.string "shl $I,%B1"
@_$MSG3080
.string "\xd3"
@_$MSG3081
.string "shl %cl,%L1"
@_$MSG3082
.string "\xd3"
@_$MSG3083
.string "shl %cl,%Q1"
@_$MSG3084
.string "\xd3"
@_$MSG3085
.string "\x66"
@_$MSG3086
.string "shl %cl,%W1"
@_$MSG3087
.string "\xd2"
@_$MSG3088
.string "shl %cl,%B1"
@_$MSG3089
.string "\xc1"
@_$MSG3090
.string "shll $I,ADDR"
@_$MSG3091
.string "\xc1"
@_$MSG3092
.string "shlq $I,ADDR"
@_$MSG3093
.string "\xc1"
@_$MSG3094
.string "\x66"
@_$MSG3095
.string "shll $I,ADDR"
@_$MSG3096
.string "\xc0"
@_$MSG3097
.string "shlb $I,ADDR"
@_$MSG3098
.string "\xc1"
@_$MSG3099
.string "shr $I,%L1"
@_$MSG3100
.string "\xc1"
@_$MSG3101
.string "shr $I,%Q1"
@_$MSG3102
.string "\xc1"
@_$MSG3103
.string "\x66"
@_$MSG3104
.string "shr $I,%W1"
@_$MSG3105
.string "\xc0"
@_$MSG3106
.string "shr $I,%B1"
@_$MSG3107
.string "\xd3"
@_$MSG3108
.string "shr %cl,%L1"
@_$MSG3109
.string "\xd3"
@_$MSG3110
.string "shr %cl,%Q1"
@_$MSG3111
.string "\xd3"
@_$MSG3112
.string "\x66"
@_$MSG3113
.string "shr %cl,%W1"
@_$MSG3114
.string "\xd2"
@_$MSG3115
.string "shr %cl,%B1"
@_$MSG3116
.string "\xc1"
@_$MSG3117
.string "shrl $I,ADDR"
@_$MSG3118
.string "\xc1"
@_$MSG3119
.string "shrq $I,ADDR"
@_$MSG3120
.string "\xc1"
@_$MSG3121
.string "\x66"
@_$MSG3122
.string "shrl $I,ADDR"
@_$MSG3123
.string "\xc0"
@_$MSG3124
.string "shrb $I,ADDR"
@_$MSG3125
.string "\xc1"
@_$MSG3126
.string "sar $I,%L1"
@_$MSG3127
.string "\xc1"
@_$MSG3128
.string "sar $I,%Q1"
@_$MSG3129
.string "\xc1"
@_$MSG3130
.string "\x66"
@_$MSG3131
.string "sar $I,%W1"
@_$MSG3132
.string "\xc0"
@_$MSG3133
.string "sar $I,%B1"
@_$MSG3134
.string "\xd3"
@_$MSG3135
.string "sar %cl,%L1"
@_$MSG3136
.string "\xd3"
@_$MSG3137
.string "sar %cl,%Q1"
@_$MSG3138
.string "\xd3"
@_$MSG3139
.string "\x66"
@_$MSG3140
.string "sar %cl,%W1"
@_$MSG3141
.string "\xd2"
@_$MSG3142
.string "sar %cl,%B1"
@_$MSG3143
.string "\xc1"
@_$MSG3144
.string "sarl $I,ADDR"
@_$MSG3145
.string "\xc1"
@_$MSG3146
.string "sarq $I,ADDR"
@_$MSG3147
.string "\xc1"
@_$MSG3148
.string "\x66"
@_$MSG3149
.string "sarl $I,ADDR"
@_$MSG3150
.string "\xc0"
@_$MSG3151
.string "sarb $I,ADDR"
@_$MSG3152
.string "\x50"
@_$MSG3153
.string "push %rax"
@_$MSG3154
.string "\x51"
@_$MSG3155
.string "push %rcx"
@_$MSG3156
.string "\x52"
@_$MSG3157
.string "push %rdx"
@_$MSG3158
.string "\x53"
@_$MSG3159
.string "push %rbx"
@_$MSG3160
.string "\x54"
@_$MSG3161
.string "push %rsp"
@_$MSG3162
.string "\x55"
@_$MSG3163
.string "push %rbp"
@_$MSG3164
.string "\x56"
@_$MSG3165
.string "push %rsi"
@_$MSG3166
.string "\x57"
@_$MSG3167
.string "push %rdi"
@_$MSG3168
.string "\x50"
@_$MSG3169
.string "push %r8"
@_$MSG3170
.string "\x51"
@_$MSG3171
.string "push %r9"
@_$MSG3172
.string "\x52"
@_$MSG3173
.string "push %r10"
@_$MSG3174
.string "\x53"
@_$MSG3175
.string "push %r11"
@_$MSG3176
.string "\x54"
@_$MSG3177
.string "push %r12"
@_$MSG3178
.string "\x55"
@_$MSG3179
.string "push %r13"
@_$MSG3180
.string "\x56"
@_$MSG3181
.string "push %r14"
@_$MSG3182
.string "\x57"
@_$MSG3183
.string "push %r15"
@_$MSG3184
.string "\x68"
@_$MSG3185
.string "pushq $I"
@_$MSG3186
.string "\xff"
@_$MSG3187
.string "pushq ADDR"
@_$MSG3188
.string "\x58"
@_$MSG3189
.string "pop %rax"
@_$MSG3190
.string "\x59"
@_$MSG3191
.string "pop %rcx"
@_$MSG3192
.string "\x5a"
@_$MSG3193
.string "pop %rdx"
@_$MSG3194
.string "\x5b"
@_$MSG3195
.string "pop %rbx"
@_$MSG3196
.string "\x5c"
@_$MSG3197
.string "pop %rsp"
@_$MSG3198
.string "\x5d"
@_$MSG3199
.string "pop %rbp"
@_$MSG3200
.string "\x5e"
@_$MSG3201
.string "pop %rsi"
@_$MSG3202
.string "\x5f"
@_$MSG3203
.string "pop %rdi"
@_$MSG3204
.string "\x58"
@_$MSG3205
.string "pop %r8"
@_$MSG3206
.string "\x59"
@_$MSG3207
.string "pop %r9"
@_$MSG3208
.string "\x5a"
@_$MSG3209
.string "pop %r10"
@_$MSG3210
.string "\x5b"
@_$MSG3211
.string "pop %r11"
@_$MSG3212
.string "\x5c"
@_$MSG3213
.string "pop %r12"
@_$MSG3214
.string "\x5d"
@_$MSG3215
.string "pop %r13"
@_$MSG3216
.string "\x5e"
@_$MSG3217
.string "pop %r14"
@_$MSG3218
.string "\x5f"
@_$MSG3219
.string "pop %r15"
@_$MSG3220
.string "\x8f"
@_$MSG3221
.string "popq ADDR"
@_$MSG3222
.string "\x8d"
@_$MSG3223
.string "lea ADDR,%L2"
@_$MSG3224
.string "\x8d"
@_$MSG3225
.string "lea ADDR,%Q2"
@_$MSG3226
.string "\x8d"
@_$MSG3227
.string "\x66"
@_$MSG3228
.string "lea ADDR,%W2"
@_$MSG3229
.string "\xf7"
@_$MSG3230
.string "mul %L1"
@_$MSG3231
.string "\xf7"
@_$MSG3232
.string "mul %Q1"
@_$MSG3233
.string "\xf7"
@_$MSG3234
.string "\x66"
@_$MSG3235
.string "mul %W1"
@_$MSG3236
.string "\xf6"
@_$MSG3237
.string "mul %B1"
@_$MSG3238
.string "\xf7"
@_$MSG3239
.string "mull ADDR"
@_$MSG3240
.string "\xf7"
@_$MSG3241
.string "mulq ADDR"
@_$MSG3242
.string "\xf7"
@_$MSG3243
.string "\x66"
@_$MSG3244
.string "mulw ADDR"
@_$MSG3245
.string "\xf6"
@_$MSG3246
.string "mulb ADDR"
@_$MSG3247
.string "\xf7"
@_$MSG3248
.string "imul %L1"
@_$MSG3249
.string "\xf7"
@_$MSG3250
.string "imul %Q1"
@_$MSG3251
.string "\xf7"
@_$MSG3252
.string "\x66"
@_$MSG3253
.string "imul %W1"
@_$MSG3254
.string "\xf6"
@_$MSG3255
.string "imul %B1"
@_$MSG3256
.string "\xf7"
@_$MSG3257
.string "imull ADDR"
@_$MSG3258
.string "\xf7"
@_$MSG3259
.string "imulq ADDR"
@_$MSG3260
.string "\xf7"
@_$MSG3261
.string "\x66"
@_$MSG3262
.string "imulw ADDR"
@_$MSG3263
.string "\xf6"
@_$MSG3264
.string "imulb ADDR"
@_$MSG3265
.string "\xf7"
@_$MSG3266
.string "div %L1"
@_$MSG3267
.string "\xf7"
@_$MSG3268
.string "div %Q1"
@_$MSG3269
.string "\xf7"
@_$MSG3270
.string "\x66"
@_$MSG3271
.string "div %W1"
@_$MSG3272
.string "\xf6"
@_$MSG3273
.string "div %B1"
@_$MSG3274
.string "\xf7"
@_$MSG3275
.string "divl ADDR"
@_$MSG3276
.string "\xf7"
@_$MSG3277
.string "divq ADDR"
@_$MSG3278
.string "\xf7"
@_$MSG3279
.string "\x66"
@_$MSG3280
.string "divw ADDR"
@_$MSG3281
.string "\xf6"
@_$MSG3282
.string "divb ADDR"
@_$MSG3283
.string "\xf7"
@_$MSG3284
.string "idiv %L1"
@_$MSG3285
.string "\xf7"
@_$MSG3286
.string "idiv %Q1"
@_$MSG3287
.string "\xf7"
@_$MSG3288
.string "\x66"
@_$MSG3289
.string "idiv %W1"
@_$MSG3290
.string "\xf6"
@_$MSG3291
.string "idiv %B1"
@_$MSG3292
.string "\xf7"
@_$MSG3293
.string "idivl ADDR"
@_$MSG3294
.string "\xf7"
@_$MSG3295
.string "idivq ADDR"
@_$MSG3296
.string "\xf7"
@_$MSG3297
.string "\x66"
@_$MSG3298
.string "idivw ADDR"
@_$MSG3299
.string "\xf6"
@_$MSG3300
.string "idivb ADDR"
@_$MSG3301
.string "\x01"
@_$MSG3302
.string "add %L2,%L1"
@_$MSG3303
.string "\x01"
@_$MSG3304
.string "add %Q2,%Q1"
@_$MSG3305
.string "\x01"
@_$MSG3306
.string "\x66"
@_$MSG3307
.string "add %W2,%W1"
@_$MSG3308
.string "\x00"
@_$MSG3309
.string "add %B2,%B1"
@_$MSG3310
.string "\x81"
@_$MSG3311
.string "add $I,%L1"
@_$MSG3312
.string "\x05"
@_$MSG3313
.string "add $I,%eax"
@_$MSG3314
.string "\x83"
@_$MSG3315
.string "add $I,%L1"
@_$MSG3316
.string "\x81"
@_$MSG3317
.string "add $I,%Q1"
@_$MSG3318
.string "\x05"
@_$MSG3319
.string "add $I,%rax"
@_$MSG3320
.string "\x83"
@_$MSG3321
.string "add $I,%Q1"
@_$MSG3322
.string "\x81"
@_$MSG3323
.string "\x66"
@_$MSG3324
.string "add $I,%W1"
@_$MSG3325
.string "\x05"
@_$MSG3326
.string "\x66"
@_$MSG3327
.string "add $I,%ax"
@_$MSG3328
.string "\x83"
@_$MSG3329
.string "\x66"
@_$MSG3330
.string "add $I,%W1"
@_$MSG3331
.string "\x80"
@_$MSG3332
.string "add $I,%B1"
@_$MSG3333
.string "\x04"
@_$MSG3334
.string "add $I,%al"
@_$MSG3335
.string "\x81"
@_$MSG3336
.string "addl $I,ADDR"
@_$MSG3337
.string "\x83"
@_$MSG3338
.string "addl $I,ADDR"
@_$MSG3339
.string "\x81"
@_$MSG3340
.string "addq $I,ADDR"
@_$MSG3341
.string "\x83"
@_$MSG3342
.string "addq $I,ADDR"
@_$MSG3343
.string "\x81"
@_$MSG3344
.string "\x66"
@_$MSG3345
.string "addw $I,ADDR"
@_$MSG3346
.string "\x83"
@_$MSG3347
.string "\x66"
@_$MSG3348
.string "addw $I,ADDR"
@_$MSG3349
.string "\x80"
@_$MSG3350
.string "addb $I,ADDR"
@_$MSG3351
.string "\x01"
@_$MSG3352
.string "add %L2,ADDR"
@_$MSG3353
.string "\x03"
@_$MSG3354
.string "add ADDR,%L2"
@_$MSG3355
.string "\x01"
@_$MSG3356
.string "add %Q2,ADDR"
@_$MSG3357
.string "\x03"
@_$MSG3358
.string "add ADDR,%Q2"
@_$MSG3359
.string "\x01"
@_$MSG3360
.string "\x66"
@_$MSG3361
.string "add %W2,ADDR"
@_$MSG3362
.string "\x03"
@_$MSG3363
.string "\x66"
@_$MSG3364
.string "add ADDR,%W2"
@_$MSG3365
.string "\x00"
@_$MSG3366
.string "add %B2,ADDR"
@_$MSG3367
.string "\x02"
@_$MSG3368
.string "add ADDR,%B2"
@_$MSG3369
.string "\x11"
@_$MSG3370
.string "adc %L2,%L1"
@_$MSG3371
.string "\x11"
@_$MSG3372
.string "adc %Q2,%Q1"
@_$MSG3373
.string "\x11"
@_$MSG3374
.string "\x66"
@_$MSG3375
.string "adc %W2,%W1"
@_$MSG3376
.string "\x10"
@_$MSG3377
.string "adc %B2,%B1"
@_$MSG3378
.string "\x81"
@_$MSG3379
.string "adc $I,%L1"
@_$MSG3380
.string "\x83"
@_$MSG3381
.string "adc $I,%L1"
@_$MSG3382
.string "\x81"
@_$MSG3383
.string "adc $I,%Q1"
@_$MSG3384
.string "\x83"
@_$MSG3385
.string "adc $I,%Q1"
@_$MSG3386
.string "\x81"
@_$MSG3387
.string "\x66"
@_$MSG3388
.string "adc $I,%W1"
@_$MSG3389
.string "\x83"
@_$MSG3390
.string "\x66"
@_$MSG3391
.string "adc $I,%W1"
@_$MSG3392
.string "\x80"
@_$MSG3393
.string "adc $I,%B1"
@_$MSG3394
.string "\x81"
@_$MSG3395
.string "adcl $I,ADDR"
@_$MSG3396
.string "\x83"
@_$MSG3397
.string "adcl $I,ADDR"
@_$MSG3398
.string "\x81"
@_$MSG3399
.string "adcq $I,ADDR"
@_$MSG3400
.string "\x83"
@_$MSG3401
.string "adcq $I,ADDR"
@_$MSG3402
.string "\x81"
@_$MSG3403
.string "\x66"
@_$MSG3404
.string "adcw $I,ADDR"
@_$MSG3405
.string "\x83"
@_$MSG3406
.string "\x66"
@_$MSG3407
.string "adcw $I,ADDR"
@_$MSG3408
.string "\x80"
@_$MSG3409
.string "adcb $I,ADDR"
@_$MSG3410
.string "\x11"
@_$MSG3411
.string "adc %L2,ADDR"
@_$MSG3412
.string "\x13"
@_$MSG3413
.string "adc ADDR,%L2"
@_$MSG3414
.string "\x11"
@_$MSG3415
.string "adc %Q2,ADDR"
@_$MSG3416
.string "\x13"
@_$MSG3417
.string "adc ADDR,%Q2"
@_$MSG3418
.string "\x11"
@_$MSG3419
.string "\x66"
@_$MSG3420
.string "adc %W2,ADDR"
@_$MSG3421
.string "\x13"
@_$MSG3422
.string "\x66"
@_$MSG3423
.string "adc ADDR,%W2"
@_$MSG3424
.string "\x10"
@_$MSG3425
.string "adc %B2,ADDR"
@_$MSG3426
.string "\x12"
@_$MSG3427
.string "adc ADDR,%B2"
@_$MSG3428
.string "\x29"
@_$MSG3429
.string "sub %L2,%L1"
@_$MSG3430
.string "\x29"
@_$MSG3431
.string "sub %Q2,%Q1"
@_$MSG3432
.string "\x29"
@_$MSG3433
.string "\x66"
@_$MSG3434
.string "sub %W2,%W1"
@_$MSG3435
.string "\x28"
@_$MSG3436
.string "sub %B2,%B1"
@_$MSG3437
.string "\x81"
@_$MSG3438
.string "sub $I,%L1"
@_$MSG3439
.string "\x2d"
@_$MSG3440
.string "sub $I,%eax"
@_$MSG3441
.string "\x83"
@_$MSG3442
.string "sub $I,%L1"
@_$MSG3443
.string "\x81"
@_$MSG3444
.string "sub $I,%Q1"
@_$MSG3445
.string "\x2d"
@_$MSG3446
.string "sub $I,%rax"
@_$MSG3447
.string "\x83"
@_$MSG3448
.string "sub $I,%Q1"
@_$MSG3449
.string "\x81"
@_$MSG3450
.string "\x66"
@_$MSG3451
.string "sub $I,%W1"
@_$MSG3452
.string "\x2d"
@_$MSG3453
.string "\x66"
@_$MSG3454
.string "sub $I,%ax"
@_$MSG3455
.string "\x83"
@_$MSG3456
.string "\x66"
@_$MSG3457
.string "sub $I,%W1"
@_$MSG3458
.string "\x80"
@_$MSG3459
.string "sub $I,%B1"
@_$MSG3460
.string "\x2c"
@_$MSG3461
.string "sub $I,%al"
@_$MSG3462
.string "\x81"
@_$MSG3463
.string "subl $I,ADDR"
@_$MSG3464
.string "\x83"
@_$MSG3465
.string "subl $I,ADDR"
@_$MSG3466
.string "\x81"
@_$MSG3467
.string "subq $I,ADDR"
@_$MSG3468
.string "\x83"
@_$MSG3469
.string "subq $I,ADDR"
@_$MSG3470
.string "\x81"
@_$MSG3471
.string "\x66"
@_$MSG3472
.string "subw $I,ADDR"
@_$MSG3473
.string "\x83"
@_$MSG3474
.string "\x66"
@_$MSG3475
.string "subw $I,ADDR"
@_$MSG3476
.string "\x80"
@_$MSG3477
.string "subb $I,ADDR"
@_$MSG3478
.string "\x29"
@_$MSG3479
.string "sub %L2,ADDR"
@_$MSG3480
.string "\x2b"
@_$MSG3481
.string "sub ADDR,%L2"
@_$MSG3482
.string "\x29"
@_$MSG3483
.string "sub %Q2,ADDR"
@_$MSG3484
.string "\x2b"
@_$MSG3485
.string "sub ADDR,%Q2"
@_$MSG3486
.string "\x29"
@_$MSG3487
.string "\x66"
@_$MSG3488
.string "sub %W2,ADDR"
@_$MSG3489
.string "\x2b"
@_$MSG3490
.string "\x66"
@_$MSG3491
.string "sub ADDR,%W2"
@_$MSG3492
.string "\x28"
@_$MSG3493
.string "sub %B2,ADDR"
@_$MSG3494
.string "\x2a"
@_$MSG3495
.string "sub ADDR,%B2"
@_$MSG3496
.string "\x19"
@_$MSG3497
.string "sbb %L2,%L1"
@_$MSG3498
.string "\x19"
@_$MSG3499
.string "sbb %Q2,%Q1"
@_$MSG3500
.string "\x19"
@_$MSG3501
.string "\x66"
@_$MSG3502
.string "sbb %W2,%W1"
@_$MSG3503
.string "\x18"
@_$MSG3504
.string "sbb %B2,%B1"
@_$MSG3505
.string "\x81"
@_$MSG3506
.string "sbb $I,%L1"
@_$MSG3507
.string "\x83"
@_$MSG3508
.string "sbb $I,%L1"
@_$MSG3509
.string "\x81"
@_$MSG3510
.string "sbb $I,%Q1"
@_$MSG3511
.string "\x83"
@_$MSG3512
.string "sbb $I,%Q1"
@_$MSG3513
.string "\x81"
@_$MSG3514
.string "\x66"
@_$MSG3515
.string "sbb $I,%W1"
@_$MSG3516
.string "\x83"
@_$MSG3517
.string "\x66"
@_$MSG3518
.string "sbb $I,%W1"
@_$MSG3519
.string "\x80"
@_$MSG3520
.string "sbb $I,%B1"
@_$MSG3521
.string "\x81"
@_$MSG3522
.string "sbbl $I,ADDR"
@_$MSG3523
.string "\x83"
@_$MSG3524
.string "sbbl $I,ADDR"
@_$MSG3525
.string "\x81"
@_$MSG3526
.string "sbbq $I,ADDR"
@_$MSG3527
.string "\x83"
@_$MSG3528
.string "sbbq $I,ADDR"
@_$MSG3529
.string "\x81"
@_$MSG3530
.string "\x66"
@_$MSG3531
.string "sbbw $I,ADDR"
@_$MSG3532
.string "\x83"
@_$MSG3533
.string "\x66"
@_$MSG3534
.string "sbbw $I,ADDR"
@_$MSG3535
.string "\x80"
@_$MSG3536
.string "sbbb $I,ADDR"
@_$MSG3537
.string "\x19"
@_$MSG3538
.string "sbb %L2,ADDR"
@_$MSG3539
.string "\x1b"
@_$MSG3540
.string "sbb ADDR,%L2"
@_$MSG3541
.string "\x19"
@_$MSG3542
.string "sbb %Q2,ADDR"
@_$MSG3543
.string "\x1b"
@_$MSG3544
.string "sbb ADDR,%Q2"
@_$MSG3545
.string "\x19"
@_$MSG3546
.string "\x66"
@_$MSG3547
.string "sbb %W2,ADDR"
@_$MSG3548
.string "\x1b"
@_$MSG3549
.string "\x66"
@_$MSG3550
.string "sbb ADDR,%W2"
@_$MSG3551
.string "\x18"
@_$MSG3552
.string "sbb %B2,ADDR"
@_$MSG3553
.string "\x1a"
@_$MSG3554
.string "sbb ADDR,%B2"
@_$MSG3555
.string "\x21"
@_$MSG3556
.string "and %L2,%L1"
@_$MSG3557
.string "\x21"
@_$MSG3558
.string "and %Q2,%Q1"
@_$MSG3559
.string "\x21"
@_$MSG3560
.string "\x66"
@_$MSG3561
.string "and %W2,%W1"
@_$MSG3562
.string "\x20"
@_$MSG3563
.string "and %B2,%B1"
@_$MSG3564
.string "\x81"
@_$MSG3565
.string "and $I,%L1"
@_$MSG3566
.string "\x25"
@_$MSG3567
.string "and $I,%eax"
@_$MSG3568
.string "\x83"
@_$MSG3569
.string "and $I,%L1"
@_$MSG3570
.string "\x81"
@_$MSG3571
.string "and $I,%Q1"
@_$MSG3572
.string "\x25"
@_$MSG3573
.string "and $I,%rax"
@_$MSG3574
.string "\x83"
@_$MSG3575
.string "and $I,%Q1"
@_$MSG3576
.string "\x81"
@_$MSG3577
.string "\x66"
@_$MSG3578
.string "and $I,%W1"
@_$MSG3579
.string "\x25"
@_$MSG3580
.string "\x66"
@_$MSG3581
.string "and $I,%ax"
@_$MSG3582
.string "\x83"
@_$MSG3583
.string "\x66"
@_$MSG3584
.string "and $I,%W1"
@_$MSG3585
.string "\x80"
@_$MSG3586
.string "and $I,%B1"
@_$MSG3587
.string "\x24"
@_$MSG3588
.string "and $I,%al"
@_$MSG3589
.string "\x81"
@_$MSG3590
.string "andl $I,ADDR"
@_$MSG3591
.string "\x83"
@_$MSG3592
.string "andl $I,ADDR"
@_$MSG3593
.string "\x81"
@_$MSG3594
.string "andq $I,ADDR"
@_$MSG3595
.string "\x83"
@_$MSG3596
.string "andq $I,ADDR"
@_$MSG3597
.string "\x81"
@_$MSG3598
.string "\x66"
@_$MSG3599
.string "andw $I,ADDR"
@_$MSG3600
.string "\x83"
@_$MSG3601
.string "\x66"
@_$MSG3602
.string "andw $I,ADDR"
@_$MSG3603
.string "\x80"
@_$MSG3604
.string "andb $I,ADDR"
@_$MSG3605
.string "\x21"
@_$MSG3606
.string "and %L2,ADDR"
@_$MSG3607
.string "\x23"
@_$MSG3608
.string "and ADDR,%L2"
@_$MSG3609
.string "\x21"
@_$MSG3610
.string "and %Q2,ADDR"
@_$MSG3611
.string "\x23"
@_$MSG3612
.string "and ADDR,%Q2"
@_$MSG3613
.string "\x21"
@_$MSG3614
.string "\x66"
@_$MSG3615
.string "and %W2,ADDR"
@_$MSG3616
.string "\x23"
@_$MSG3617
.string "\x66"
@_$MSG3618
.string "and ADDR,%W2"
@_$MSG3619
.string "\x20"
@_$MSG3620
.string "and %B2,ADDR"
@_$MSG3621
.string "\x22"
@_$MSG3622
.string "and ADDR,%B2"
@_$MSG3623
.string "\x09"
@_$MSG3624
.string "or %L2,%L1"
@_$MSG3625
.string "\x09"
@_$MSG3626
.string "or %Q2,%Q1"
@_$MSG3627
.string "\x09"
@_$MSG3628
.string "\x66"
@_$MSG3629
.string "or %W2,%W1"
@_$MSG3630
.string "\x08"
@_$MSG3631
.string "or %B2,%B1"
@_$MSG3632
.string "\x81"
@_$MSG3633
.string "or $I,%L1"
@_$MSG3634
.string "\x0d"
@_$MSG3635
.string "or $I,%eax"
@_$MSG3636
.string "\x83"
@_$MSG3637
.string "or $I,%L1"
@_$MSG3638
.string "\x81"
@_$MSG3639
.string "or $I,%Q1"
@_$MSG3640
.string "\x0d"
@_$MSG3641
.string "or $I,%rax"
@_$MSG3642
.string "\x83"
@_$MSG3643
.string "or $I,%Q1"
@_$MSG3644
.string "\x81"
@_$MSG3645
.string "\x66"
@_$MSG3646
.string "or $I,%W1"
@_$MSG3647
.string "\x0d"
@_$MSG3648
.string "\x66"
@_$MSG3649
.string "or $I,%ax"
@_$MSG3650
.string "\x83"
@_$MSG3651
.string "\x66"
@_$MSG3652
.string "or $I,%W1"
@_$MSG3653
.string "\x80"
@_$MSG3654
.string "or $I,%B1"
@_$MSG3655
.string "\x0c"
@_$MSG3656
.string "or $I,%al"
@_$MSG3657
.string "\x81"
@_$MSG3658
.string "orl $I,ADDR"
@_$MSG3659
.string "\x83"
@_$MSG3660
.string "orl $I,ADDR"
@_$MSG3661
.string "\x81"
@_$MSG3662
.string "orq $I,ADDR"
@_$MSG3663
.string "\x83"
@_$MSG3664
.string "orq $I,ADDR"
@_$MSG3665
.string "\x81"
@_$MSG3666
.string "\x66"
@_$MSG3667
.string "orw $I,ADDR"
@_$MSG3668
.string "\x83"
@_$MSG3669
.string "\x66"
@_$MSG3670
.string "orw $I,ADDR"
@_$MSG3671
.string "\x80"
@_$MSG3672
.string "orb $I,ADDR"
@_$MSG3673
.string "\x09"
@_$MSG3674
.string "or %L2,ADDR"
@_$MSG3675
.string "\x0b"
@_$MSG3676
.string "or ADDR,%L2"
@_$MSG3677
.string "\x09"
@_$MSG3678
.string "or %Q2,ADDR"
@_$MSG3679
.string "\x0b"
@_$MSG3680
.string "or ADDR,%Q2"
@_$MSG3681
.string "\x09"
@_$MSG3682
.string "\x66"
@_$MSG3683
.string "or %W2,ADDR"
@_$MSG3684
.string "\x0b"
@_$MSG3685
.string "\x66"
@_$MSG3686
.string "or ADDR,%W2"
@_$MSG3687
.string "\x08"
@_$MSG3688
.string "or %B2,ADDR"
@_$MSG3689
.string "\x0a"
@_$MSG3690
.string "or ADDR,%B2"
@_$MSG3691
.string "\x31"
@_$MSG3692
.string "xor %L2,%L1"
@_$MSG3693
.string "\x31"
@_$MSG3694
.string "xor %Q2,%Q1"
@_$MSG3695
.string "\x31"
@_$MSG3696
.string "\x66"
@_$MSG3697
.string "xor %W2,%W1"
@_$MSG3698
.string "\x30"
@_$MSG3699
.string "xor %B2,%B1"
@_$MSG3700
.string "\x81"
@_$MSG3701
.string "xor $I,%L1"
@_$MSG3702
.string "\x35"
@_$MSG3703
.string "xor $I,%eax"
@_$MSG3704
.string "\x83"
@_$MSG3705
.string "xor $I,%L1"
@_$MSG3706
.string "\x81"
@_$MSG3707
.string "xor $I,%Q1"
@_$MSG3708
.string "\x35"
@_$MSG3709
.string "xor $I,%rax"
@_$MSG3710
.string "\x83"
@_$MSG3711
.string "xor $I,%Q1"
@_$MSG3712
.string "\x81"
@_$MSG3713
.string "\x66"
@_$MSG3714
.string "xor $I,%W1"
@_$MSG3715
.string "\x35"
@_$MSG3716
.string "\x66"
@_$MSG3717
.string "xor $I,%ax"
@_$MSG3718
.string "\x83"
@_$MSG3719
.string "\x66"
@_$MSG3720
.string "xor $I,%W1"
@_$MSG3721
.string "\x80"
@_$MSG3722
.string "xor $I,%B1"
@_$MSG3723
.string "\x34"
@_$MSG3724
.string "xor $I,%al"
@_$MSG3725
.string "\x81"
@_$MSG3726
.string "xorl $I,ADDR"
@_$MSG3727
.string "\x83"
@_$MSG3728
.string "xorl $I,ADDR"
@_$MSG3729
.string "\x81"
@_$MSG3730
.string "xorq $I,ADDR"
@_$MSG3731
.string "\x83"
@_$MSG3732
.string "xorq $I,ADDR"
@_$MSG3733
.string "\x81"
@_$MSG3734
.string "\x66"
@_$MSG3735
.string "xorw $I,ADDR"
@_$MSG3736
.string "\x83"
@_$MSG3737
.string "\x66"
@_$MSG3738
.string "xorw $I,ADDR"
@_$MSG3739
.string "\x80"
@_$MSG3740
.string "xorb $I,ADDR"
@_$MSG3741
.string "\x31"
@_$MSG3742
.string "xor %L2,ADDR"
@_$MSG3743
.string "\x33"
@_$MSG3744
.string "xor ADDR,%L2"
@_$MSG3745
.string "\x31"
@_$MSG3746
.string "xor %Q2,ADDR"
@_$MSG3747
.string "\x33"
@_$MSG3748
.string "xor ADDR,%Q2"
@_$MSG3749
.string "\x31"
@_$MSG3750
.string "\x66"
@_$MSG3751
.string "xor %W2,ADDR"
@_$MSG3752
.string "\x33"
@_$MSG3753
.string "\x66"
@_$MSG3754
.string "xor ADDR,%W2"
@_$MSG3755
.string "\x30"
@_$MSG3756
.string "xor %B2,ADDR"
@_$MSG3757
.string "\x32"
@_$MSG3758
.string "xor ADDR,%B2"
@_$MSG3759
.string "\x0f\xba"
@_$MSG3760
.string "btc $I,%L1"
@_$MSG3761
.string "\x0f\xba"
@_$MSG3762
.string "btc $I,%Q1"
@_$MSG3763
.string "\x87"
@_$MSG3764
.string "xchg %L2,%L1"
@_$MSG3765
.string "\x91"
@_$MSG3766
.string "xchg %eax,%ecx"
@_$MSG3767
.string "\x92"
@_$MSG3768
.string "xchg %eax,%edx"
@_$MSG3769
.string "\x93"
@_$MSG3770
.string "xchg %eax,%ebx"
@_$MSG3771
.string "\x94"
@_$MSG3772
.string "xchg %eax,%esp"
@_$MSG3773
.string "\x95"
@_$MSG3774
.string "xchg %eax,%ebp"
@_$MSG3775
.string "\x96"
@_$MSG3776
.string "xchg %eax,%esi"
@_$MSG3777
.string "\x97"
@_$MSG3778
.string "xchg %eax,%edi"
@_$MSG3779
.string "\x90"
@_$MSG3780
.string "xchg %eax,%r8d"
@_$MSG3781
.string "\x91"
@_$MSG3782
.string "xchg %eax,%r9d"
@_$MSG3783
.string "\x92"
@_$MSG3784
.string "xchg %eax,%r10d"
@_$MSG3785
.string "\x93"
@_$MSG3786
.string "xchg %eax,%r11d"
@_$MSG3787
.string "\x94"
@_$MSG3788
.string "xchg %eax,%r12d"
@_$MSG3789
.string "\x95"
@_$MSG3790
.string "xchg %eax,%r13d"
@_$MSG3791
.string "\x96"
@_$MSG3792
.string "xchg %eax,%r14d"
@_$MSG3793
.string "\x97"
@_$MSG3794
.string "xchg %eax,%r15d"
@_$MSG3795
.string "\x91"
@_$MSG3796
.string "xchg %ecx,%eax"
@_$MSG3797
.string "\x92"
@_$MSG3798
.string "xchg %edx,%eax"
@_$MSG3799
.string "\x93"
@_$MSG3800
.string "xchg %ebx,%eax"
@_$MSG3801
.string "\x94"
@_$MSG3802
.string "xchg %esp,%eax"
@_$MSG3803
.string "\x95"
@_$MSG3804
.string "xchg %ebp,%eax"
@_$MSG3805
.string "\x96"
@_$MSG3806
.string "xchg %esi,%eax"
@_$MSG3807
.string "\x97"
@_$MSG3808
.string "xchg %edi,%eax"
@_$MSG3809
.string "\x90"
@_$MSG3810
.string "xchg %r8d,%eax"
@_$MSG3811
.string "\x91"
@_$MSG3812
.string "xchg %r9d,%eax"
@_$MSG3813
.string "\x92"
@_$MSG3814
.string "xchg %r10d,%eax"
@_$MSG3815
.string "\x93"
@_$MSG3816
.string "xchg %r11d,%eax"
@_$MSG3817
.string "\x94"
@_$MSG3818
.string "xchg %r12d,%eax"
@_$MSG3819
.string "\x95"
@_$MSG3820
.string "xchg %r13d,%eax"
@_$MSG3821
.string "\x96"
@_$MSG3822
.string "xchg %r14d,%eax"
@_$MSG3823
.string "\x97"
@_$MSG3824
.string "xchg %r15d,%eax"
@_$MSG3825
.string "\x87\xc0"
@_$MSG3826
.string "xchg %eax,%eax"
@_$MSG3827
.string "\x87"
@_$MSG3828
.string "xchg %Q2,%Q1"
@_$MSG3829
.string "\x91"
@_$MSG3830
.string "xchg %rax,%rcx"
@_$MSG3831
.string "\x92"
@_$MSG3832
.string "xchg %rax,%rdx"
@_$MSG3833
.string "\x93"
@_$MSG3834
.string "xchg %rax,%rbx"
@_$MSG3835
.string "\x94"
@_$MSG3836
.string "xchg %rax,%rsp"
@_$MSG3837
.string "\x95"
@_$MSG3838
.string "xchg %rax,%rbp"
@_$MSG3839
.string "\x96"
@_$MSG3840
.string "xchg %rax,%rsi"
@_$MSG3841
.string "\x97"
@_$MSG3842
.string "xchg %rax,%rdi"
@_$MSG3843
.string "\x90"
@_$MSG3844
.string "xchg %rax,%r8"
@_$MSG3845
.string "\x91"
@_$MSG3846
.string "xchg %rax,%r9"
@_$MSG3847
.string "\x92"
@_$MSG3848
.string "xchg %rax,%r10"
@_$MSG3849
.string "\x93"
@_$MSG3850
.string "xchg %rax,%r11"
@_$MSG3851
.string "\x94"
@_$MSG3852
.string "xchg %rax,%r12"
@_$MSG3853
.string "\x95"
@_$MSG3854
.string "xchg %rax,%r13"
@_$MSG3855
.string "\x96"
@_$MSG3856
.string "xchg %rax,%r14"
@_$MSG3857
.string "\x97"
@_$MSG3858
.string "xchg %rax,%r15"
@_$MSG3859
.string "\x91"
@_$MSG3860
.string "xchg %rcx,%rax"
@_$MSG3861
.string "\x92"
@_$MSG3862
.string "xchg %rdx,%rax"
@_$MSG3863
.string "\x93"
@_$MSG3864
.string "xchg %rbx,%rax"
@_$MSG3865
.string "\x94"
@_$MSG3866
.string "xchg %rsp,%rax"
@_$MSG3867
.string "\x95"
@_$MSG3868
.string "xchg %rbp,%rax"
@_$MSG3869
.string "\x96"
@_$MSG3870
.string "xchg %rsi,%rax"
@_$MSG3871
.string "\x97"
@_$MSG3872
.string "xchg %rdi,%rax"
@_$MSG3873
.string "\x90"
@_$MSG3874
.string "xchg %r8,%rax"
@_$MSG3875
.string "\x91"
@_$MSG3876
.string "xchg %r9,%rax"
@_$MSG3877
.string "\x92"
@_$MSG3878
.string "xchg %r10,%rax"
@_$MSG3879
.string "\x93"
@_$MSG3880
.string "xchg %r11,%rax"
@_$MSG3881
.string "\x94"
@_$MSG3882
.string "xchg %r12,%rax"
@_$MSG3883
.string "\x95"
@_$MSG3884
.string "xchg %r13,%rax"
@_$MSG3885
.string "\x96"
@_$MSG3886
.string "xchg %r14,%rax"
@_$MSG3887
.string "\x97"
@_$MSG3888
.string "xchg %r15,%rax"
@_$MSG3889
.string "\x87\xc0"
@_$MSG3890
.string "xchg %rax,%rax"
@_$MSG3891
.string "\x87"
@_$MSG3892
.string "\x66"
@_$MSG3893
.string "xchg %W2,%W1"
@_$MSG3894
.string "\x91"
@_$MSG3895
.string "\x66"
@_$MSG3896
.string "xchg %ax,%cx"
@_$MSG3897
.string "\x92"
@_$MSG3898
.string "\x66"
@_$MSG3899
.string "xchg %ax,%dx"
@_$MSG3900
.string "\x93"
@_$MSG3901
.string "\x66"
@_$MSG3902
.string "xchg %ax,%bx"
@_$MSG3903
.string "\x94"
@_$MSG3904
.string "\x66"
@_$MSG3905
.string "xchg %ax,%sp"
@_$MSG3906
.string "\x95"
@_$MSG3907
.string "\x66"
@_$MSG3908
.string "xchg %ax,%bp"
@_$MSG3909
.string "\x96"
@_$MSG3910
.string "\x66"
@_$MSG3911
.string "xchg %ax,%si"
@_$MSG3912
.string "\x97"
@_$MSG3913
.string "\x66"
@_$MSG3914
.string "xchg %ax,%di"
@_$MSG3915
.string "\x90"
@_$MSG3916
.string "\x66"
@_$MSG3917
.string "xchg %ax,%r8w"
@_$MSG3918
.string "\x91"
@_$MSG3919
.string "\x66"
@_$MSG3920
.string "xchg %ax,%r9w"
@_$MSG3921
.string "\x92"
@_$MSG3922
.string "\x66"
@_$MSG3923
.string "xchg %ax,%r10w"
@_$MSG3924
.string "\x93"
@_$MSG3925
.string "\x66"
@_$MSG3926
.string "xchg %ax,%r11w"
@_$MSG3927
.string "\x94"
@_$MSG3928
.string "\x66"
@_$MSG3929
.string "xchg %ax,%r12w"
@_$MSG3930
.string "\x95"
@_$MSG3931
.string "\x66"
@_$MSG3932
.string "xchg %ax,%r13w"
@_$MSG3933
.string "\x96"
@_$MSG3934
.string "\x66"
@_$MSG3935
.string "xchg %ax,%r14w"
@_$MSG3936
.string "\x97"
@_$MSG3937
.string "\x66"
@_$MSG3938
.string "xchg %ax,%r15w"
@_$MSG3939
.string "\x91"
@_$MSG3940
.string "\x66"
@_$MSG3941
.string "xchg %cx,%ax"
@_$MSG3942
.string "\x92"
@_$MSG3943
.string "\x66"
@_$MSG3944
.string "xchg %dx,%ax"
@_$MSG3945
.string "\x93"
@_$MSG3946
.string "\x66"
@_$MSG3947
.string "xchg %bx,%ax"
@_$MSG3948
.string "\x94"
@_$MSG3949
.string "\x66"
@_$MSG3950
.string "xchg %sp,%ax"
@_$MSG3951
.string "\x95"
@_$MSG3952
.string "\x66"
@_$MSG3953
.string "xchg %bp,%ax"
@_$MSG3954
.string "\x96"
@_$MSG3955
.string "\x66"
@_$MSG3956
.string "xchg %si,%ax"
@_$MSG3957
.string "\x97"
@_$MSG3958
.string "\x66"
@_$MSG3959
.string "xchg %di,%ax"
@_$MSG3960
.string "\x90"
@_$MSG3961
.string "\x66"
@_$MSG3962
.string "xchg %r8w,%ax"
@_$MSG3963
.string "\x91"
@_$MSG3964
.string "\x66"
@_$MSG3965
.string "xchg %r9w,%ax"
@_$MSG3966
.string "\x92"
@_$MSG3967
.string "\x66"
@_$MSG3968
.string "xchg %r10w,%ax"
@_$MSG3969
.string "\x93"
@_$MSG3970
.string "\x66"
@_$MSG3971
.string "xchg %r11w,%ax"
@_$MSG3972
.string "\x94"
@_$MSG3973
.string "\x66"
@_$MSG3974
.string "xchg %r12w,%ax"
@_$MSG3975
.string "\x95"
@_$MSG3976
.string "\x66"
@_$MSG3977
.string "xchg %r13w,%ax"
@_$MSG3978
.string "\x96"
@_$MSG3979
.string "\x66"
@_$MSG3980
.string "xchg %r14w,%ax"
@_$MSG3981
.string "\x97"
@_$MSG3982
.string "\x66"
@_$MSG3983
.string "xchg %r15w,%ax"
@_$MSG3984
.string "\x87\xc0"
@_$MSG3985
.string "\x66"
@_$MSG3986
.string "xchg %ax,%ax"
@_$MSG3987
.string "\x86"
@_$MSG3988
.string "xchg %B2,%B1"
@_$MSG3989
.string "\x87"
@_$MSG3990
.string "xchg %L2,ADDR"
@_$MSG3991
.string "\x87"
@_$MSG3992
.string "xchg ADDR,%L2"
@_$MSG3993
.string "\x87"
@_$MSG3994
.string "xchg %Q2,ADDR"
@_$MSG3995
.string "\x87"
@_$MSG3996
.string "xchg ADDR,%Q2"
@_$MSG3997
.string "\x87"
@_$MSG3998
.string "\x66"
@_$MSG3999
.string "xchg %W2,ADDR"
@_$MSG4000
.string "\x87"
@_$MSG4001
.string "\x66"
@_$MSG4002
.string "xchg ADDR,%W2"
@_$MSG4003
.string "\x86"
@_$MSG4004
.string "xchg %B2,ADDR"
@_$MSG4005
.string "\x86"
@_$MSG4006
.string "xchg ADDR,%B2"
@_$MSG4007
.string "\x0f\xc1"
@_$MSG4008
.string "xadd %L2,ADDR"
@_$MSG4009
.string "\xe4"
@_$MSG4010
.string "in $I,%al"
@_$MSG4011
.string "\xe6"
@_$MSG4012
.string "out %al,$I"
@_$MSG4013
.string "\xcd"
@_$MSG4014
.string "int $I"
@_$MSG4015
.string "\xcc"
@_$MSG4016
.string "int3"
@_$MSG4017
.string "\x0f\x05"
@_$MSG4018
.string "syscall"
@_$MSG4019
.string "\xfa"
@_$MSG4020
.string "cli"
@_$MSG4021
.string "\xfb"
@_$MSG4022
.string "sti"
@_$MSG4023
.string "\xf4"
@_$MSG4024
.string "hlt"
@_$MSG4025
.string "\x0f\x01"
@_$MSG4026
.string "lgdt ADDR"
@_$MSG4027
.string "\x0f\x01"
@_$MSG4028
.string "lidt ADDR"
@_$MSG4029
.string "\x0f\x00"
@_$MSG4030
.string "ltr %W1"
@_$MSG4031
.string "\x0f\x20"
@_$MSG4032
.string "mov %C2,%Q1"
@_$MSG4033
.string "\x0f\x22"
@_$MSG4034
.string "mov %Q1,%C2"
@_$MSG4035
.string "\xcf"
@_$MSG4036
.string "iretq"
@_$MSG4037
.string "\xcb"
@_$MSG4038
.string "lretq"
@_$MSG4039
.string "\x0f\x32"
@_$MSG4040
.string "rdmsr"
@_$MSG4041
.string "\x0f\x30"
@_$MSG4042
.string "wrmsr"
@_$MSG4043
.string "\x0f\xa2"
@_$MSG4044
.string "cpuid"
@_$MSG4045
.string "\x9c"
@_$MSG4046
.string "pushfq"
@_$MSG4047
.string "\x9d"
@_$MSG4048
.string "popfq"
@_$MSG4049
.string "\xdd"
@_$MSG4050
.string "fldl ADDR"
@_$MSG4051
.string "\xdd"
@_$MSG4052
.string "fstpl ADDR"
@_$MSG4053
.string "\xd9"
@_$MSG4054
.string "flds ADDR"
@_$MSG4055
.string "\xd9"
@_$MSG4056
.string "fstps ADDR"
@_$MSG4057
.string "\xdf"
@_$MSG4058
.string "fildq ADDR"
@_$MSG4059
.string "\xdf"
@_$MSG4060
.string "fistpq ADDR"
@_$MSG4061
.string "\xde\xc1"
@_$MSG4062
.string "faddp"
@_$MSG4063
.string "\xde\xe1"
@_$MSG4064
.string "fsubp"
@_$MSG4065
.string "\xde\xe9"
@_$MSG4066
.string "fsubrp"
@_$MSG4067
.string "\xde\xc9"
@_$MSG4068
.string "fmulp"
@_$MSG4069
.string "\xde\xf1"
@_$MSG4070
.string "fdivp"
@_$MSG4071
.string "\xde\xf9"
@_$MSG4072
.string "fdivrp"
@_$MSG4073
.string "\xdf\xf1"
@_$MSG4074
.string "fcomip"
@_$MSG4075
.string "\xd9\xe0"
@_$MSG4076
.string "fchs"
@_$MSG4077
.string "\x0f\x10"
@_$MSG4078
.string "movups %X1,%X2"
@_$MSG4079
.string "\x0f\x10"
@_$MSG4080
.string "movups ADDR,%X2"
@_$MSG4081
.string "\x0f\x11"
@_$MSG4082
.string "movups %X2,ADDR"
@_$MSG4083
.string "\x0f\x6e"
@_$MSG4084
.string "\x66"
@_$MSG4085
.string "movq %Q1,%X2"
@_$MSG4086
.string "\x0f\x7e"
@_$MSG4087
.string "\x66"
@_$MSG4088
.string "movq %X2,%Q1"
@_$MSG4089
.string "\x0f\x6e"
@_$MSG4090
.string "\x66"
@_$MSG4091
.string "movd %L1,%X2"
@_$MSG4092
.string "\x0f\x7e"
@_$MSG4093
.string "\x66"
@_$MSG4094
.string "movd %X2,%L1"
@_$MSG4095
.string "\x0f\x58"
@_$MSG4096
.string "\xf2"
@_$MSG4097
.string "addsd %X1,%X2"
@_$MSG4098
.string "\x0f\x58"
@_$MSG4099
.string "\xf2"
@_$MSG4100
.string "addsd ADDR,%X2"
@_$MSG4101
.string "\x0f\x5c"
@_$MSG4102
.string "\xf2"
@_$MSG4103
.string "subsd %X1,%X2"
@_$MSG4104
.string "\x0f\x5c"
@_$MSG4105
.string "\xf2"
@_$MSG4106
.string "subsd ADDR,%X2"
@_$MSG4107
.string "\x0f\x59"
@_$MSG4108
.string "\xf2"
@_$MSG4109
.string "mulsd %X1,%X2"
@_$MSG4110
.string "\x0f\x59"
@_$MSG4111
.string "\xf2"
@_$MSG4112
.string "mulsd ADDR,%X2"
@_$MSG4113
.string "\x0f\x5e"
@_$MSG4114
.string "\xf2"
@_$MSG4115
.string "divsd %X1,%X2"
@_$MSG4116
.string "\x0f\x5e"
@_$MSG4117
.string "\xf2"
@_$MSG4118
.string "divsd ADDR,%X2"
@_$MSG4119
.string "\x0f\x2f"
@_$MSG4120
.string "\x66"
@_$MSG4121
.string "comisd %X1,%X2"
@_$MSG4122
.string "\x0f\x58"
@_$MSG4123
.string "\xf3"
@_$MSG4124
.string "addss %X1,%X2"
@_$MSG4125
.string "\x0f\x58"
@_$MSG4126
.string "\xf3"
@_$MSG4127
.string "addss ADDR,%X2"
@_$MSG4128
.string "\x0f\x5c"
@_$MSG4129
.string "\xf3"
@_$MSG4130
.string "subss %X1,%X2"
@_$MSG4131
.string "\x0f\x5c"
@_$MSG4132
.string "\xf3"
@_$MSG4133
.string "subss ADDR,%X2"
@_$MSG4134
.string "\x0f\x59"
@_$MSG4135
.string "\xf3"
@_$MSG4136
.string "mulss %X1,%X2"
@_$MSG4137
.string "\x0f\x59"
@_$MSG4138
.string "\xf3"
@_$MSG4139
.string "mulss ADDR,%X2"
@_$MSG4140
.string "\x0f\x5e"
@_$MSG4141
.string "\xf3"
@_$MSG4142
.string "divss %X1,%X2"
@_$MSG4143
.string "\x0f\x5e"
@_$MSG4144
.string "\xf3"
@_$MSG4145
.string "divss ADDR,%X2"
@_$MSG4146
.string "\x0f\x2f"
@_$MSG4147
.string "comiss %X1,%X2"
@_$MSG4148
.string "\x0f\x11"
@_$MSG4149
.string "\xf2"
@_$MSG4150
.string "movsd %X2,ADDR"
@_$MSG4151
.string "\x0f\x10"
@_$MSG4152
.string "\xf2"
@_$MSG4153
.string "movsd ADDR,%X2"
@_$MSG4154
.string "\x0f\x10"
@_$MSG4155
.string "\xf2"
@_$MSG4156
.string "movsd %X1,%X2"
@_$MSG4157
.string "\x0f\x11"
@_$MSG4158
.string "\xf3"
@_$MSG4159
.string "movss %X2,ADDR"
@_$MSG4160
.string "\x0f\x10"
@_$MSG4161
.string "\xf3"
@_$MSG4162
.string "movss ADDR,%X2"
@_$MSG4163
.string "\x0f\x10"
@_$MSG4164
.string "\xf3"
@_$MSG4165
.string "movss %X1,%X2"
@_$MSG4166
.string "\x0f\xc2"
@_$MSG4167
.string "\xf2"
@_$MSG4168
.string "cmpsd $I,%X1,%X2"
@_$MSG4169
.string "\x0f\x58"
@_$MSG4170
.string "\x66"
@_$MSG4171
.string "addpd %X1,%X2"
@_$MSG4172
.string "\x0f\x5c"
@_$MSG4173
.string "\x66"
@_$MSG4174
.string "subpd %X1,%X2"
@_$MSG4175
.string "\x0f\x59"
@_$MSG4176
.string "\x66"
@_$MSG4177
.string "mulpd %X1,%X2"
@_$MSG4178
.string "\x0f\x5e"
@_$MSG4179
.string "\x66"
@_$MSG4180
.string "divpd %X1,%X2"
@_$MSG4181
.string "\x0f\x5f"
@_$MSG4182
.string "\x66"
@_$MSG4183
.string "maxpd ADDR,%X2"
@_$MSG4184
.string "\x0f\x5d"
@_$MSG4185
.string "\x66"
@_$MSG4186
.string "minpd ADDR,%X2"
@_$MSG4187
.string "\x0f\x5f"
@_$MSG4188
.string "\xf2"
@_$MSG4189
.string "maxsd %X1,%X2"
@_$MSG4190
.string "\x0f\x5d"
@_$MSG4191
.string "\xf2"
@_$MSG4192
.string "minsd %X1,%X2"
@_$MSG4193
.string "\x0f\x5f"
@_$MSG4194
.string "\x66"
@_$MSG4195
.string "maxpd %X1,%X2"
@_$MSG4196
.string "\x0f\x5d"
@_$MSG4197
.string "\x66"
@_$MSG4198
.string "minpd %X1,%X2"
@_$MSG4199
.string "\x0f\xc2"
@_$MSG4200
.string "\xf3"
@_$MSG4201
.string "cmpss $I,%X1,%X2"
@_$MSG4202
.string "\x0f\x58"
@_$MSG4203
.string "addps %X1,%X2"
@_$MSG4204
.string "\x0f\x5c"
@_$MSG4205
.string "subps %X1,%X2"
@_$MSG4206
.string "\x0f\x59"
@_$MSG4207
.string "mulps %X1,%X2"
@_$MSG4208
.string "\x0f\x5e"
@_$MSG4209
.string "divps %X1,%X2"
@_$MSG4210
.string "\x0f\x5f"
@_$MSG4211
.string "maxps ADDR,%X2"
@_$MSG4212
.string "\x0f\x5d"
@_$MSG4213
.string "minps ADDR,%X2"
@_$MSG4214
.string "\x0f\x5f"
@_$MSG4215
.string "maxss %X1,%X2"
@_$MSG4216
.string "\x0f\x5d"
@_$MSG4217
.string "minss %X1,%X2"
@_$MSG4218
.string "\x0f\x5f"
@_$MSG4219
.string "maxps %X1,%X2"
@_$MSG4220
.string "\x0f\x5d"
@_$MSG4221
.string "minps %X1,%X2"
@_$MSG4222
.string "\x0f\x58"
@_$MSG4223
.string "\x66"
@_$MSG4224
.string "addpd ADDR,%X2"
@_$MSG4225
.string "\x0f\x5c"
@_$MSG4226
.string "\x66"
@_$MSG4227
.string "subpd ADDR,%X2"
@_$MSG4228
.string "\x0f\x59"
@_$MSG4229
.string "\x66"
@_$MSG4230
.string "mulpd ADDR,%X2"
@_$MSG4231
.string "\x0f\x5e"
@_$MSG4232
.string "\x66"
@_$MSG4233
.string "divpd ADDR,%X2"
@_$MSG4234
.string "\x0f\x58"
@_$MSG4235
.string "addps ADDR,%X2"
@_$MSG4236
.string "\x0f\x5c"
@_$MSG4237
.string "subps ADDR,%X2"
@_$MSG4238
.string "\x0f\x59"
@_$MSG4239
.string "mulps ADDR,%X2"
@_$MSG4240
.string "\x0f\x5e"
@_$MSG4241
.string "divps ADDR,%X2"
@_$MSG4242
.string "\x0f\x5a"
@_$MSG4243
.string "\xf3"
@_$MSG4244
.string "cvtss2sd %X1,%X2"
@_$MSG4245
.string "\x0f\x5a"
@_$MSG4246
.string "\xf2"
@_$MSG4247
.string "cvtsd2ss %X1,%X2"
@_$MSG4248
.string "\x0f\x2a"
@_$MSG4249
.string "\xf3"
@_$MSG4250
.string "cvtsi2ss %L1,%X2"
@_$MSG4251
.string "\x0f\x2d"
@_$MSG4252
.string "\xf3"
@_$MSG4253
.string "cvtss2si %X1,%L2"
@_$MSG4254
.string "\x0f\x2a"
@_$MSG4255
.string "\xf3"
@_$MSG4256
.string "cvtsi2ss %Q1,%X2"
@_$MSG4257
.string "\x0f\x2d"
@_$MSG4258
.string "\xf3"
@_$MSG4259
.string "cvtss2si %X1,%Q2"
@_$MSG4260
.string "\x0f\x2a"
@_$MSG4261
.string "\xf2"
@_$MSG4262
.string "cvtsi2sd %L1,%X2"
@_$MSG4263
.string "\x0f\x2d"
@_$MSG4264
.string "\xf2"
@_$MSG4265
.string "cvtsd2si %X1,%L2"
@_$MSG4266
.string "\x0f\x2a"
@_$MSG4267
.string "\xf2"
@_$MSG4268
.string "cvtsi2sd %Q1,%X2"
@_$MSG4269
.string "\x0f\x2d"
@_$MSG4270
.string "\xf2"
@_$MSG4271
.string "cvtsd2si %X1,%Q2"
@_$MSG4272
.string "\x0f\xc6"
@_$MSG4273
.string "shufps $I,%X1,%X2"
@_$MSG4274
.string "\x0f\xc2"
@_$MSG4275
.string "\x66"
@_$MSG4276
.string "cmppd $I,%X1,%X2"
@_$MSG4277
.string "\x0f\xc2"
@_$MSG4278
.string "cmpps $I,%X1,%X2"
@_$MSG4279
.string "\x0f\xc2"
@_$MSG4280
.string "\x66"
@_$MSG4281
.string "cmppd $I,ADDR,%X2"
@_$MSG4282
.string "\x0f\xc2"
@_$MSG4283
.string "cmpps $I,ADDR,%X2"
@_$MSG4284
.string "\x0f\xc2"
@_$MSG4285
.string "\xf3"
@_$MSG4286
.string "cmpsd $I,ADDR,%X2"
@_$MSG4287
.string "\x0f\xc2"
@_$MSG4288
.string "\xf2"
@_$MSG4289
.string "cmpss $I,ADDR,%X2"
@_$MSG4290
.string "\x0f\x54"
@_$MSG4291
.string "andps %X1,%X2"
@_$MSG4292
.string "\x0f\x56"
@_$MSG4293
.string "orps %X1,%X2"
@_$MSG4294
.string "\xc5\xfc\x10"
@_$MSG4295
.string "vmovups ADDR,%Y2"
@_$MSG4296
.string "\xc5\xfc\x11"
@_$MSG4297
.string "vmovups %Y2,ADDR"
@_$MSG4298
.string "unknown instruction."
@_$MSG4299
.string "\x90"
@_$MSG4300
.string "nop"
@_$MSG4301
.string "string"
@_$MSG4302
.string "expected string after \'.string\'."
@_$MSG4303
.string "entry"
@_$MSG4304
.string "datasize"
@_$MSG4305
.string "byte"
@_$MSG4306
.string "invalid constant expression."
@_$MSG4307
.string ","
@_$MSG4308
.string "word"
@_$MSG4309
.string "invalid constant expression."
@_$MSG4310
.string ","
@_$MSG4311
.string "long"
@_$MSG4312
.string "invalid constant expression."
@_$MSG4313
.string ","
@_$MSG4314
.string "quad"
@_$MSG4315
.string "invalid constant expression."
@_$MSG4316
.string ","
@_$MSG4317
.string "offset"
@_$MSG4318
.string "invalid offset."
@_$MSG4319
.string "addr"
@_$MSG4320
.string "dataaddr"
@_$MSG4321
.string "align"
@_$MSG4322
.string "unknown pseudo-op."
@_$MSG4323
.string "Usage: asm <input> <output> [addrmap]\n"
@_$MSG4324
.string "Cannot open input file\n"
@_$MSG4325
.string "Cannot open output file\n"
@_$MSG4326
.string "label redefined."
@_$MSG4327
.string "\n"
@_$MSG4328
.string "scpp"
@_$MSG4329
.string "scc"
@_$MSG4330
.string "asm"
@_$MSG4331
.string "mkdir"
@_$MSG4332
.string "rename"
@_$MSG4333
.string "remove"
@_$MSG4334
.string "build-script"
@_$MSG4335
.string "\033[2J\033[1;1H"
@_$MSG4336
.string "\nPress any key to continue\n"
@_$MSG4337
.string "\033[2J\033[1;1H"
@_$MSG4338
.string "\nPress any key to continue\n"
@_$MSG4339
.string "\033[2J\033[1;1H"
@_$MSG4340
.string "\nPress any key to continue\n"
@_$MSG4341
.string "\033[2J\033[1;1H"
@_$MSG4342
.string "\033[2J\033[1;1H"
@_$MSG4343
.string "Directory Name: "
@_$MSG4344
.string "\033[2J\033[1;1H"
@_$MSG4345
.string "\033[2J\033[1;1H"
@_$MSG4346
.string "File Name: "
@_$MSG4347
.string "\033[2J\033[1;1H"
@_$MSG4348
.string "build-script"
@_$MSG4349
.string "./"
@_$MSG4350
.string "\033[2J\033[1;1H"
@_$MSG4351
.string "Remove directory (AND ITS CONTENTS) \""
@_$MSG4352
.string "Remove file \""
@_$MSG4353
.string "\" (y/N)? "
@_$MSG4354
.string "\033[2J\033[1;1H"
@_$MSG4355
.string "Usage: cuide <ProjectDirectory>\n"
@_$MSG4356
.string "If <ProjectDirectory> does not exist, a new project will be created.\n"
@_$MSG4357
.string "Failed to initialize project.\n"
@_$MSG4358
.string "\033[2J\033[1;1H"
@_$MSG4359
.string "\033[2J\033[1;1H"
.entry
lea 8(%rsp),%rax
push %rax
pushq 8(%rsp)
call @main
mov %rax,%rdi
mov $231,%eax
syscall
@__syscall
push %rdi
push %rsi
push %rdx
push %r10
push %r11
push %r8
push %r9
mov 64(%rsp),%rax
mov 72(%rsp),%rdi
mov 80(%rsp),%rsi
mov 88(%rsp),%rdx
mov 96(%rsp),%r10
mov 104(%rsp),%r8
mov 112(%rsp),%r9
syscall
pop %r9
pop %r8
pop %r11
pop %r10
pop %rdx
pop %rsi
pop %rdi
ret
@vfork
pop %rdx
mov $58,%eax
syscall
jmp *%rdx
@execv
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
mov $0,%rax
mov %rax,18446744073709551600(%rbp)
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea 18446744073709551600(%rbp),%rbx
push %rbx
mov %rsi,%rbx
push %rbx
mov %rdi,%rbx
push %rbx
mov $59,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
@execv$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@wait
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %rsi,%rbx
push %rbx
mov $18446744073709551615,%rbx
push %rbx
mov $61,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
@wait$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@waitpid
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 32(%rbp),%rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %esi,%ebx
movslq %ebx,%rbx
push %rbx
mov %rdi,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $61,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
@waitpid$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@sleep
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
mov 24(%rbp),%rsi
mov %ebx,%ebx
mov %rbx,18446744073709551600(%rbp)
mov %esi,%ebx
mov %esi,%eax
mov $1000,%ecx
mul %ecx
mov %eax,%ebx
mov %ebx,%ebx
mov %rbx,18446744073709551608(%rbp)
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea 18446744073709551600(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov $35,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@sleep$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@lock_set32
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 24(%rbp),%rbx
push %rsi
mov 16(%rbp),%rsi
mov 16(%rbp),%rcx
mov 24(%rbp),%eax
xchg %eax,(%rcx)
@lock_set32$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@spin_lock
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
pushq $1
push %rsi
call @lock_set32
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5
@_$LB3
mov (%rsi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8
@_$LB6
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
.word 0x90f3
mov (%rsi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6
@_$LB8
pushq $1
push %rsi
call @lock_set32
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3
@_$LB5
@spin_lock$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@spin_unlock
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 16(%rbp),%rbx
movl $0,(%rbx)
@spin_unlock$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@mutex_lock
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
pushq $1
push %rsi
call @lock_set32
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11
@_$LB9
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %rsi,%rbx
push %rbx
mov $202,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
pushq $1
push %rsi
call @lock_set32
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9
@_$LB11
@mutex_lock$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@mutex_unlock
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
movl $0,(%rsi)
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov %rsi,%rbx
push %rbx
mov $202,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@mutex_unlock$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_size_add
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 24(%rbp),%r12
push %r13
mov 16(%rbp),%r13
mov (%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB14
mov %r12,(%r13)
movb $1,6(%r12)
movq $0,72(%r12)
movq $0,80(%r12)
movq $0,88(%r12)
jmp @__malloc_zone_size_add$END
@_$LB14
mov (%r13),%rbx
mov %rbx,%r8
@_$LB15
mov %r8,%rdi
mov 16(%r12),%rsi
mov 16(%rdi),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
ja @_$LB23
mov 16(%r12),%rsi
mov 16(%rdi),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB19
mov %r12,%rsi
mov %rdi,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jbe @_$LB19
@_$LB26
@_$LB23
mov 80(%rdi),%rbx
mov %rbx,%r8
mov $0,%ebx
jmp @_$LB20
@_$LB19
mov 72(%rdi),%rbx
mov %rbx,%r8
mov $1,%ebx
@_$LB20
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB15
@_$LB17
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB28
mov %r12,72(%rdi)
jmp @_$LB29
@_$LB28
mov %r12,80(%rdi)
@_$LB29
movb $0,6(%r12)
movq $0,72(%r12)
movq $0,80(%r12)
mov %rdi,88(%r12)
mov %rdi,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB35
mov 6(%r8),%bl
mov %bl,%al
mov $1,%cl
cmp %cl,%al
jne @_$LB32
@_$LB35
jmp @__malloc_zone_size_add$END
@_$LB32
mov 88(%rdi),%rbx
mov %rbx,%r9
@_$LB36
mov 72(%r9),%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jne @_$LB40
mov 80(%r9),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB43
mov 6(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB43
@_$LB47
movb $1,6(%rsi)
movb $1,6(%r8)
movb $0,6(%r9)
mov %r9,%r12
mov 88(%r12),%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB53
mov 6(%r8),%bl
mov %bl,%al
mov $1,%cl
cmp %cl,%al
jne @_$LB50
@_$LB53
jmp @_$LB38
@_$LB50
mov 88(%r8),%rbx
mov %rbx,%r9
jmp @_$LB44
@_$LB43
mov 80(%r8),%rbx
mov %rbx,%rax
mov %r12,%rcx
cmp %rcx,%rax
jne @_$LB56
mov 80(%r8),%rbx
mov %rbx,%rdi
mov 72(%rdi),%rbx
mov %rbx,%rsi
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB58
mov 72(%r9),%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jne @_$LB61
mov %rdi,72(%r9)
jmp @_$LB62
@_$LB61
mov %rdi,80(%r9)
@_$LB62
jmp @_$LB59
@_$LB58
mov %rdi,(%r13)
@_$LB59
mov %r9,88(%rdi)
mov %r8,72(%rdi)
mov %rdi,88(%r8)
mov %rsi,80(%r8)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB65
mov %r8,88(%rsi)
@_$LB65
mov %r12,%r8
mov 72(%r8),%rbx
mov %rbx,%r12
@_$LB56
movb $0,6(%r9)
movb $1,6(%r8)
mov 88(%r9),%rbx
mov %rbx,%r8
mov 72(%r9),%rbx
mov %rbx,%rdi
mov 80(%rdi),%rbx
mov %rbx,%rsi
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB67
mov 72(%r8),%rbx
mov %rbx,%rax
mov %r9,%rcx
cmp %rcx,%rax
jne @_$LB70
mov %rdi,72(%r8)
jmp @_$LB71
@_$LB70
mov %rdi,80(%r8)
@_$LB71
jmp @_$LB68
@_$LB67
mov %rdi,(%r13)
@_$LB68
mov %r8,88(%rdi)
mov %r9,80(%rdi)
mov %rdi,88(%r9)
mov %rsi,72(%r9)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB74
mov %r9,88(%rsi)
@_$LB74
jmp @_$LB38
@_$LB44
jmp @_$LB41
@_$LB40
mov 72(%r9),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB76
mov 6(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB76
@_$LB80
movb $1,6(%rsi)
movb $1,6(%r8)
movb $0,6(%r9)
mov %r9,%r12
mov 88(%r12),%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB86
mov 6(%r8),%bl
mov %bl,%al
mov $1,%cl
cmp %cl,%al
jne @_$LB83
@_$LB86
jmp @_$LB38
@_$LB83
mov 88(%r8),%rbx
mov %rbx,%r9
jmp @_$LB77
@_$LB76
mov 72(%r8),%rbx
mov %rbx,%rax
mov %r12,%rcx
cmp %rcx,%rax
jne @_$LB89
mov 72(%r8),%rbx
mov %rbx,%rdi
mov 80(%rdi),%rbx
mov %rbx,%rsi
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB91
mov 72(%r9),%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jne @_$LB94
mov %rdi,72(%r9)
jmp @_$LB95
@_$LB94
mov %rdi,80(%r9)
@_$LB95
jmp @_$LB92
@_$LB91
mov %rdi,(%r13)
@_$LB92
mov %r9,88(%rdi)
mov %r8,80(%rdi)
mov %rdi,88(%r8)
mov %rsi,72(%r8)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB98
mov %r8,88(%rsi)
@_$LB98
mov %r12,%r8
mov 80(%r8),%rbx
mov %rbx,%r12
@_$LB89
movb $0,6(%r9)
movb $1,6(%r8)
mov 88(%r9),%rbx
mov %rbx,%r8
mov 80(%r9),%rbx
mov %rbx,%rdi
mov 72(%rdi),%rbx
mov %rbx,%rsi
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB100
mov 72(%r8),%rbx
mov %rbx,%rax
mov %r9,%rcx
cmp %rcx,%rax
jne @_$LB103
mov %rdi,72(%r8)
jmp @_$LB104
@_$LB103
mov %rdi,80(%r8)
@_$LB104
jmp @_$LB101
@_$LB100
mov %rdi,(%r13)
@_$LB101
mov %r8,88(%rdi)
mov %r9,72(%rdi)
mov %rdi,88(%r9)
mov %rsi,80(%r9)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB107
mov %r9,88(%rsi)
@_$LB107
jmp @_$LB38
@_$LB77
@_$LB41
jmp @_$LB36
@_$LB38
mov (%r13),%rbx
movb $1,6(%rbx)
@__malloc_zone_size_add$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_size_del
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
mov 16(%rbp),%r15
mov (%r15),%rbx
mov %rbx,%r14
@_$LB108
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB113
mov $0,%rax
jmp @__malloc_zone_size_del$END
@_$LB113
mov 16(%rdi),%rsi
mov 16(%r14),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
ja @_$LB119
mov 16(%rdi),%rsi
mov 16(%r14),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB115
mov %rdi,%rsi
mov %r14,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jbe @_$LB115
@_$LB122
@_$LB119
mov 80(%r14),%rbx
mov %rbx,%r14
jmp @_$LB116
@_$LB115
mov 16(%r14),%rsi
mov 16(%rdi),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
ja @_$LB128
mov 16(%r14),%rsi
mov 16(%rdi),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB124
mov %r14,%rsi
mov %rdi,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jbe @_$LB124
@_$LB131
@_$LB128
mov 72(%r14),%rbx
mov %rbx,%r14
jmp @_$LB125
@_$LB124
jmp @_$LB110
@_$LB125
@_$LB116
jmp @_$LB108
@_$LB110
mov %r14,%r9
mov 72(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB133
mov 80(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB136
mov 88(%r14),%rbx
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB139
mov 72(%r13),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB142
movq $0,72(%r13)
mov $1,%r8d
jmp @_$LB143
@_$LB142
movq $0,80(%r13)
mov $0,%r8d
@_$LB143
jmp @_$LB140
@_$LB139
movq $0,(%r15)
mov %r9,%rax
jmp @__malloc_zone_size_del$END
@_$LB140
jmp @_$LB137
@_$LB136
mov 88(%r14),%rbx
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB145
mov 72(%r13),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB148
mov 80(%r14),%rbx
mov %rbx,72(%r13)
mov $1,%r8d
jmp @_$LB149
@_$LB148
mov 80(%r14),%rbx
mov %rbx,80(%r13)
mov $0,%r8d
@_$LB149
mov 80(%r14),%rbx
mov %r13,88(%rbx)
jmp @_$LB146
@_$LB145
mov 80(%r14),%rbx
mov %rbx,(%r15)
mov 80(%r14),%rbx
movq $0,88(%rbx)
mov (%r15),%rbx
movb $1,6(%rbx)
mov %r9,%rax
jmp @__malloc_zone_size_del$END
@_$LB146
@_$LB137
mov 6(%r14),%bl
mov %bl,%sil
movzbl %sil,%esi
jmp @_$LB134
@_$LB133
mov 80(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB151
mov 88(%r14),%rbx
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB154
mov 72(%r13),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB157
mov 72(%r14),%rbx
mov %rbx,72(%r13)
mov $1,%r8d
jmp @_$LB158
@_$LB157
mov 72(%r14),%rbx
mov %rbx,80(%r13)
mov $0,%r8d
@_$LB158
mov 72(%r14),%rbx
mov %r13,88(%rbx)
jmp @_$LB155
@_$LB154
mov 72(%r14),%rbx
mov %rbx,(%r15)
mov 72(%r14),%rbx
movq $0,88(%rbx)
mov (%r15),%rbx
movb $1,6(%rbx)
mov %r9,%rax
jmp @__malloc_zone_size_del$END
@_$LB155
mov 6(%r14),%bl
mov %bl,%sil
movzbl %sil,%esi
jmp @_$LB152
@_$LB151
mov 80(%r14),%rbx
mov %rbx,%r12
mov 72(%r12),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB161
@_$LB159
mov 72(%r12),%rbx
mov %rbx,%r12
mov 72(%r12),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB159
@_$LB161
mov 80(%r14),%rbx
mov %r12,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB163
mov 88(%r14),%rbx
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB166
mov 72(%r13),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB169
mov %r12,72(%r13)
jmp @_$LB170
@_$LB169
mov %r12,80(%r13)
@_$LB170
jmp @_$LB167
@_$LB166
mov %r12,(%r15)
@_$LB167
mov %r13,88(%r12)
mov 72(%r14),%rbx
mov %rbx,72(%r12)
mov 72(%r14),%rbx
mov %r12,88(%rbx)
mov 6(%r12),%bl
mov %bl,%sil
movzbl %sil,%esi
mov 6(%r14),%bl
mov %bl,6(%r12)
mov %r12,%r13
mov $0,%r8d
jmp @_$LB164
@_$LB163
mov 88(%r12),%rbx
mov %rbx,%r13
mov 72(%r13),%rbx
mov %rbx,%rax
mov %r12,%rcx
cmp %rcx,%rax
jne @_$LB172
mov 80(%r12),%rbx
mov %rbx,72(%r13)
jmp @_$LB173
@_$LB172
mov 80(%r12),%rbx
mov %rbx,80(%r13)
@_$LB173
mov 80(%r12),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB176
mov 80(%r12),%rbx
mov %r13,88(%rbx)
@_$LB176
mov 72(%r14),%rbx
mov %rbx,72(%r12)
mov 80(%r14),%rbx
mov %rbx,80(%r12)
mov 88(%r14),%rbx
mov %rbx,88(%r12)
mov 6(%r12),%bl
mov %bl,%sil
movzbl %sil,%esi
mov 6(%r14),%bl
mov %bl,6(%r12)
mov 88(%r14),%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB178
mov 72(%rdi),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB181
mov %r12,72(%rdi)
jmp @_$LB182
@_$LB181
mov %r12,80(%rdi)
@_$LB182
jmp @_$LB179
@_$LB178
mov %r12,(%r15)
@_$LB179
mov 72(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB185
mov 72(%r14),%rbx
mov %r12,88(%rbx)
@_$LB185
mov 80(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB188
mov 80(%r14),%rbx
mov %r12,88(%rbx)
@_$LB188
mov $1,%r8d
@_$LB164
@_$LB152
@_$LB134
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB191
mov %r9,%rax
jmp @__malloc_zone_size_del$END
@_$LB191
mov %r13,%r14
@_$LB192
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB196
mov 72(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB200
mov 72(%r14),%rsi
mov 6(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB200
@_$LB203
mov 72(%r14),%rbx
movb $1,6(%rbx)
jmp @_$LB194
@_$LB200
mov 80(%r14),%rbx
mov %rbx,%r13
jmp @_$LB197
@_$LB196
mov 80(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB206
mov 80(%r14),%rsi
mov 6(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB206
@_$LB209
mov 80(%r14),%rbx
movb $1,6(%rbx)
jmp @_$LB194
@_$LB206
mov 72(%r14),%rbx
mov %rbx,%r13
@_$LB197
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB211
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB214
mov 6(%r13),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB214
@_$LB218
movb $1,6(%r13)
movb $0,6(%r14)
mov 88(%r14),%rbx
mov %rbx,%r12
mov 80(%r14),%rbx
mov %rbx,%rdi
mov 72(%rdi),%rbx
mov %rbx,%rsi
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB220
mov 72(%r12),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB223
mov %rdi,72(%r12)
jmp @_$LB224
@_$LB223
mov %rdi,80(%r12)
@_$LB224
jmp @_$LB221
@_$LB220
mov %rdi,(%r15)
@_$LB221
mov %r12,88(%rdi)
mov %r14,72(%rdi)
mov %rdi,88(%r14)
mov %rsi,80(%r14)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB227
mov %r14,88(%rsi)
@_$LB227
jmp @_$LB215
@_$LB214
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB229
mov 80(%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB229
@_$LB236
mov 80(%r13),%rsi
mov 6(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB229
@_$LB233
mov 6(%r14),%bl
mov %bl,6(%r13)
movb $1,6(%r14)
mov 80(%r13),%rbx
movb $1,6(%rbx)
mov 88(%r14),%rbx
mov %rbx,%r12
mov 80(%r14),%rbx
mov %rbx,%rdi
mov 72(%rdi),%rbx
mov %rbx,%rsi
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB238
mov 72(%r12),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB241
mov %rdi,72(%r12)
jmp @_$LB242
@_$LB241
mov %rdi,80(%r12)
@_$LB242
jmp @_$LB239
@_$LB238
mov %rdi,(%r15)
@_$LB239
mov %r12,88(%rdi)
mov %r14,72(%rdi)
mov %rdi,88(%r14)
mov %rsi,80(%r14)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB245
mov %r14,88(%rsi)
@_$LB245
jmp @_$LB194
jmp @_$LB230
@_$LB229
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB247
mov 72(%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB247
@_$LB254
mov 72(%r13),%rsi
mov 6(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB247
@_$LB251
mov 72(%r13),%rbx
movb $1,6(%rbx)
movb $0,6(%r13)
mov 72(%r13),%rbx
mov %rbx,%rdi
mov 80(%rdi),%rbx
mov %rbx,%rsi
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB256
mov 72(%r14),%rbx
mov %rbx,%rax
mov %r13,%rcx
cmp %rcx,%rax
jne @_$LB259
mov %rdi,72(%r14)
jmp @_$LB260
@_$LB259
mov %rdi,80(%r14)
@_$LB260
jmp @_$LB257
@_$LB256
mov %rdi,(%r15)
@_$LB257
mov %r14,88(%rdi)
mov %r13,80(%rdi)
mov %rdi,88(%r13)
mov %rsi,72(%r13)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB263
mov %r13,88(%rsi)
@_$LB263
jmp @_$LB248
@_$LB247
movb $0,6(%r13)
mov %r14,%r13
mov 88(%r14),%rbx
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB266
jmp @_$LB194
@_$LB266
mov 80(%r14),%rbx
mov %rbx,%rax
mov %r13,%rcx
cmp %rcx,%rax
jne @_$LB269
mov $0,%r8d
@_$LB269
@_$LB248
@_$LB230
@_$LB215
jmp @_$LB212
@_$LB211
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB271
mov 6(%r13),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB271
@_$LB275
movb $1,6(%r13)
movb $0,6(%r14)
mov 88(%r14),%rbx
mov %rbx,%r12
mov 72(%r14),%rbx
mov %rbx,%rdi
mov 80(%rdi),%rbx
mov %rbx,%rsi
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB277
mov 72(%r12),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB280
mov %rdi,72(%r12)
jmp @_$LB281
@_$LB280
mov %rdi,80(%r12)
@_$LB281
jmp @_$LB278
@_$LB277
mov %rdi,(%r15)
@_$LB278
mov %r12,88(%rdi)
mov %r14,80(%rdi)
mov %rdi,88(%r14)
mov %rsi,72(%r14)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB284
mov %r14,88(%rsi)
@_$LB284
jmp @_$LB272
@_$LB271
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB286
mov 72(%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB286
@_$LB293
mov 72(%r13),%rsi
mov 6(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB286
@_$LB290
mov 6(%r14),%bl
mov %bl,6(%r13)
movb $1,6(%r14)
mov 72(%r13),%rbx
movb $1,6(%rbx)
mov 88(%r14),%rbx
mov %rbx,%r12
mov 72(%r14),%rbx
mov %rbx,%rdi
mov 80(%rdi),%rbx
mov %rbx,%rsi
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB295
mov 72(%r12),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB298
mov %rdi,72(%r12)
jmp @_$LB299
@_$LB298
mov %rdi,80(%r12)
@_$LB299
jmp @_$LB296
@_$LB295
mov %rdi,(%r15)
@_$LB296
mov %r12,88(%rdi)
mov %r14,80(%rdi)
mov %rdi,88(%r14)
mov %rsi,72(%r14)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB302
mov %r14,88(%rsi)
@_$LB302
jmp @_$LB194
jmp @_$LB287
@_$LB286
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB304
mov 80(%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB304
@_$LB311
mov 80(%r13),%rsi
mov 6(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB304
@_$LB308
mov 80(%r13),%rbx
movb $1,6(%rbx)
movb $0,6(%r13)
mov 80(%r13),%rbx
mov %rbx,%rdi
mov 72(%rdi),%rbx
mov %rbx,%rsi
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB313
mov 72(%r14),%rbx
mov %rbx,%rax
mov %r13,%rcx
cmp %rcx,%rax
jne @_$LB316
mov %rdi,72(%r14)
jmp @_$LB317
@_$LB316
mov %rdi,80(%r14)
@_$LB317
jmp @_$LB314
@_$LB313
mov %rdi,(%r15)
@_$LB314
mov %r14,88(%rdi)
mov %r13,72(%rdi)
mov %rdi,88(%r13)
mov %rsi,80(%r13)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB320
mov %r13,88(%rsi)
@_$LB320
jmp @_$LB305
@_$LB304
movb $0,6(%r13)
mov %r14,%r13
mov 88(%r14),%rbx
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB323
jmp @_$LB194
@_$LB323
mov 72(%r14),%rbx
mov %rbx,%rax
mov %r13,%rcx
cmp %rcx,%rax
jne @_$LB326
mov $1,%r8d
@_$LB326
@_$LB305
@_$LB287
@_$LB272
@_$LB212
jmp @_$LB192
@_$LB194
mov (%r15),%rbx
movb $1,6(%rbx)
mov %r9,%rax
@__malloc_zone_size_del$END
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_start_add
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 24(%rbp),%r12
push %r13
mov 16(%rbp),%r13
mov (%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB329
mov %r12,(%r13)
movb $1,4(%r12)
movq $0,24(%r12)
movq $0,32(%r12)
movq $0,40(%r12)
jmp @__malloc_zone_start_add$END
@_$LB329
mov (%r13),%rbx
mov %rbx,%r8
@_$LB330
mov %r8,%rdi
mov %r12,%rsi
mov %rdi,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jbe @_$LB334
mov 32(%rdi),%rbx
mov %rbx,%r8
mov $0,%ebx
jmp @_$LB335
@_$LB334
mov 24(%rdi),%rbx
mov %rbx,%r8
mov $1,%ebx
@_$LB335
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB330
@_$LB332
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB337
mov %r12,24(%rdi)
jmp @_$LB338
@_$LB337
mov %r12,32(%rdi)
@_$LB338
movb $0,4(%r12)
movq $0,24(%r12)
movq $0,32(%r12)
mov %rdi,40(%r12)
mov %rdi,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB344
mov 4(%r8),%bl
mov %bl,%al
mov $1,%cl
cmp %cl,%al
jne @_$LB341
@_$LB344
jmp @__malloc_zone_start_add$END
@_$LB341
mov 40(%rdi),%rbx
mov %rbx,%r9
@_$LB345
mov 24(%r9),%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jne @_$LB349
mov 32(%r9),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB352
mov 4(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB352
@_$LB356
movb $1,4(%rsi)
movb $1,4(%r8)
movb $0,4(%r9)
mov %r9,%r12
mov 40(%r12),%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB362
mov 4(%r8),%bl
mov %bl,%al
mov $1,%cl
cmp %cl,%al
jne @_$LB359
@_$LB362
jmp @_$LB347
@_$LB359
mov 40(%r8),%rbx
mov %rbx,%r9
jmp @_$LB353
@_$LB352
mov 32(%r8),%rbx
mov %rbx,%rax
mov %r12,%rcx
cmp %rcx,%rax
jne @_$LB365
mov 32(%r8),%rbx
mov %rbx,%rdi
mov 24(%rdi),%rbx
mov %rbx,%rsi
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB367
mov 24(%r9),%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jne @_$LB370
mov %rdi,24(%r9)
jmp @_$LB371
@_$LB370
mov %rdi,32(%r9)
@_$LB371
jmp @_$LB368
@_$LB367
mov %rdi,(%r13)
@_$LB368
mov %r9,40(%rdi)
mov %r8,24(%rdi)
mov %rdi,40(%r8)
mov %rsi,32(%r8)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB374
mov %r8,40(%rsi)
@_$LB374
mov %r12,%r8
mov 24(%r8),%rbx
mov %rbx,%r12
@_$LB365
movb $0,4(%r9)
movb $1,4(%r8)
mov 40(%r9),%rbx
mov %rbx,%r8
mov 24(%r9),%rbx
mov %rbx,%rdi
mov 32(%rdi),%rbx
mov %rbx,%rsi
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB376
mov 24(%r8),%rbx
mov %rbx,%rax
mov %r9,%rcx
cmp %rcx,%rax
jne @_$LB379
mov %rdi,24(%r8)
jmp @_$LB380
@_$LB379
mov %rdi,32(%r8)
@_$LB380
jmp @_$LB377
@_$LB376
mov %rdi,(%r13)
@_$LB377
mov %r8,40(%rdi)
mov %r9,32(%rdi)
mov %rdi,40(%r9)
mov %rsi,24(%r9)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB383
mov %r9,40(%rsi)
@_$LB383
jmp @_$LB347
@_$LB353
jmp @_$LB350
@_$LB349
mov 24(%r9),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB385
mov 4(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB385
@_$LB389
movb $1,4(%rsi)
movb $1,4(%r8)
movb $0,4(%r9)
mov %r9,%r12
mov 40(%r12),%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB395
mov 4(%r8),%bl
mov %bl,%al
mov $1,%cl
cmp %cl,%al
jne @_$LB392
@_$LB395
jmp @_$LB347
@_$LB392
mov 40(%r8),%rbx
mov %rbx,%r9
jmp @_$LB386
@_$LB385
mov 24(%r8),%rbx
mov %rbx,%rax
mov %r12,%rcx
cmp %rcx,%rax
jne @_$LB398
mov 24(%r8),%rbx
mov %rbx,%rdi
mov 32(%rdi),%rbx
mov %rbx,%rsi
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB400
mov 24(%r9),%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jne @_$LB403
mov %rdi,24(%r9)
jmp @_$LB404
@_$LB403
mov %rdi,32(%r9)
@_$LB404
jmp @_$LB401
@_$LB400
mov %rdi,(%r13)
@_$LB401
mov %r9,40(%rdi)
mov %r8,32(%rdi)
mov %rdi,40(%r8)
mov %rsi,24(%r8)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB407
mov %r8,40(%rsi)
@_$LB407
mov %r12,%r8
mov 32(%r8),%rbx
mov %rbx,%r12
@_$LB398
movb $0,4(%r9)
movb $1,4(%r8)
mov 40(%r9),%rbx
mov %rbx,%r8
mov 32(%r9),%rbx
mov %rbx,%rdi
mov 24(%rdi),%rbx
mov %rbx,%rsi
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB409
mov 24(%r8),%rbx
mov %rbx,%rax
mov %r9,%rcx
cmp %rcx,%rax
jne @_$LB412
mov %rdi,24(%r8)
jmp @_$LB413
@_$LB412
mov %rdi,32(%r8)
@_$LB413
jmp @_$LB410
@_$LB409
mov %rdi,(%r13)
@_$LB410
mov %r8,40(%rdi)
mov %r9,24(%rdi)
mov %rdi,40(%r9)
mov %rsi,32(%r9)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB416
mov %r9,40(%rsi)
@_$LB416
jmp @_$LB347
@_$LB386
@_$LB350
jmp @_$LB345
@_$LB347
mov (%r13),%rbx
movb $1,4(%rbx)
@__malloc_zone_start_add$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_start_del
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
mov 16(%rbp),%r15
mov (%r15),%rbx
mov %rbx,%r14
@_$LB417
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB422
mov $0,%rax
jmp @__malloc_zone_start_del$END
@_$LB422
mov %rdi,%rsi
mov %r14,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jbe @_$LB424
mov 32(%r14),%rbx
mov %rbx,%r14
jmp @_$LB425
@_$LB424
mov %r14,%rsi
mov %rdi,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jbe @_$LB427
mov 24(%r14),%rbx
mov %rbx,%r14
jmp @_$LB428
@_$LB427
jmp @_$LB419
@_$LB428
@_$LB425
jmp @_$LB417
@_$LB419
mov %r14,%r9
mov 24(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB430
mov 32(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB433
mov 40(%r14),%rbx
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB436
mov 24(%r13),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB439
movq $0,24(%r13)
mov $1,%r8d
jmp @_$LB440
@_$LB439
movq $0,32(%r13)
mov $0,%r8d
@_$LB440
jmp @_$LB437
@_$LB436
movq $0,(%r15)
mov %r9,%rax
jmp @__malloc_zone_start_del$END
@_$LB437
jmp @_$LB434
@_$LB433
mov 40(%r14),%rbx
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB442
mov 24(%r13),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB445
mov 32(%r14),%rbx
mov %rbx,24(%r13)
mov $1,%r8d
jmp @_$LB446
@_$LB445
mov 32(%r14),%rbx
mov %rbx,32(%r13)
mov $0,%r8d
@_$LB446
mov 32(%r14),%rbx
mov %r13,40(%rbx)
jmp @_$LB443
@_$LB442
mov 32(%r14),%rbx
mov %rbx,(%r15)
mov 32(%r14),%rbx
movq $0,40(%rbx)
mov (%r15),%rbx
movb $1,4(%rbx)
mov %r9,%rax
jmp @__malloc_zone_start_del$END
@_$LB443
@_$LB434
mov 4(%r14),%bl
mov %bl,%sil
movzbl %sil,%esi
jmp @_$LB431
@_$LB430
mov 32(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB448
mov 40(%r14),%rbx
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB451
mov 24(%r13),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB454
mov 24(%r14),%rbx
mov %rbx,24(%r13)
mov $1,%r8d
jmp @_$LB455
@_$LB454
mov 24(%r14),%rbx
mov %rbx,32(%r13)
mov $0,%r8d
@_$LB455
mov 24(%r14),%rbx
mov %r13,40(%rbx)
jmp @_$LB452
@_$LB451
mov 24(%r14),%rbx
mov %rbx,(%r15)
mov 24(%r14),%rbx
movq $0,40(%rbx)
mov (%r15),%rbx
movb $1,4(%rbx)
mov %r9,%rax
jmp @__malloc_zone_start_del$END
@_$LB452
mov 4(%r14),%bl
mov %bl,%sil
movzbl %sil,%esi
jmp @_$LB449
@_$LB448
mov 32(%r14),%rbx
mov %rbx,%r12
mov 24(%r12),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB458
@_$LB456
mov 24(%r12),%rbx
mov %rbx,%r12
mov 24(%r12),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB456
@_$LB458
mov 32(%r14),%rbx
mov %r12,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB460
mov 40(%r14),%rbx
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB463
mov 24(%r13),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB466
mov %r12,24(%r13)
jmp @_$LB467
@_$LB466
mov %r12,32(%r13)
@_$LB467
jmp @_$LB464
@_$LB463
mov %r12,(%r15)
@_$LB464
mov %r13,40(%r12)
mov 24(%r14),%rbx
mov %rbx,24(%r12)
mov 24(%r14),%rbx
mov %r12,40(%rbx)
mov 4(%r12),%bl
mov %bl,%sil
movzbl %sil,%esi
mov 4(%r14),%bl
mov %bl,4(%r12)
mov %r12,%r13
mov $0,%r8d
jmp @_$LB461
@_$LB460
mov 40(%r12),%rbx
mov %rbx,%r13
mov 24(%r13),%rbx
mov %rbx,%rax
mov %r12,%rcx
cmp %rcx,%rax
jne @_$LB469
mov 32(%r12),%rbx
mov %rbx,24(%r13)
jmp @_$LB470
@_$LB469
mov 32(%r12),%rbx
mov %rbx,32(%r13)
@_$LB470
mov 32(%r12),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB473
mov 32(%r12),%rbx
mov %r13,40(%rbx)
@_$LB473
mov 24(%r14),%rbx
mov %rbx,24(%r12)
mov 32(%r14),%rbx
mov %rbx,32(%r12)
mov 40(%r14),%rbx
mov %rbx,40(%r12)
mov 4(%r12),%bl
mov %bl,%sil
movzbl %sil,%esi
mov 4(%r14),%bl
mov %bl,4(%r12)
mov 40(%r14),%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB475
mov 24(%rdi),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB478
mov %r12,24(%rdi)
jmp @_$LB479
@_$LB478
mov %r12,32(%rdi)
@_$LB479
jmp @_$LB476
@_$LB475
mov %r12,(%r15)
@_$LB476
mov 24(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB482
mov 24(%r14),%rbx
mov %r12,40(%rbx)
@_$LB482
mov 32(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB485
mov 32(%r14),%rbx
mov %r12,40(%rbx)
@_$LB485
mov $1,%r8d
@_$LB461
@_$LB449
@_$LB431
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB488
mov %r9,%rax
jmp @__malloc_zone_start_del$END
@_$LB488
mov %r13,%r14
@_$LB489
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB493
mov 24(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB497
mov 24(%r14),%rsi
mov 4(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB497
@_$LB500
mov 24(%r14),%rbx
movb $1,4(%rbx)
jmp @_$LB491
@_$LB497
mov 32(%r14),%rbx
mov %rbx,%r13
jmp @_$LB494
@_$LB493
mov 32(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB503
mov 32(%r14),%rsi
mov 4(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB503
@_$LB506
mov 32(%r14),%rbx
movb $1,4(%rbx)
jmp @_$LB491
@_$LB503
mov 24(%r14),%rbx
mov %rbx,%r13
@_$LB494
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB508
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB511
mov 4(%r13),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB511
@_$LB515
movb $1,4(%r13)
movb $0,4(%r14)
mov 40(%r14),%rbx
mov %rbx,%r12
mov 32(%r14),%rbx
mov %rbx,%rdi
mov 24(%rdi),%rbx
mov %rbx,%rsi
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB517
mov 24(%r12),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB520
mov %rdi,24(%r12)
jmp @_$LB521
@_$LB520
mov %rdi,32(%r12)
@_$LB521
jmp @_$LB518
@_$LB517
mov %rdi,(%r15)
@_$LB518
mov %r12,40(%rdi)
mov %r14,24(%rdi)
mov %rdi,40(%r14)
mov %rsi,32(%r14)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB524
mov %r14,40(%rsi)
@_$LB524
jmp @_$LB512
@_$LB511
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB526
mov 32(%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB526
@_$LB533
mov 32(%r13),%rsi
mov 4(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB526
@_$LB530
mov 4(%r14),%bl
mov %bl,4(%r13)
movb $1,4(%r14)
mov 32(%r13),%rbx
movb $1,4(%rbx)
mov 40(%r14),%rbx
mov %rbx,%r12
mov 32(%r14),%rbx
mov %rbx,%rdi
mov 24(%rdi),%rbx
mov %rbx,%rsi
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB535
mov 24(%r12),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB538
mov %rdi,24(%r12)
jmp @_$LB539
@_$LB538
mov %rdi,32(%r12)
@_$LB539
jmp @_$LB536
@_$LB535
mov %rdi,(%r15)
@_$LB536
mov %r12,40(%rdi)
mov %r14,24(%rdi)
mov %rdi,40(%r14)
mov %rsi,32(%r14)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB542
mov %r14,40(%rsi)
@_$LB542
jmp @_$LB491
jmp @_$LB527
@_$LB526
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB544
mov 24(%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB544
@_$LB551
mov 24(%r13),%rsi
mov 4(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB544
@_$LB548
mov 24(%r13),%rbx
movb $1,4(%rbx)
movb $0,4(%r13)
mov 24(%r13),%rbx
mov %rbx,%rdi
mov 32(%rdi),%rbx
mov %rbx,%rsi
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB553
mov 24(%r14),%rbx
mov %rbx,%rax
mov %r13,%rcx
cmp %rcx,%rax
jne @_$LB556
mov %rdi,24(%r14)
jmp @_$LB557
@_$LB556
mov %rdi,32(%r14)
@_$LB557
jmp @_$LB554
@_$LB553
mov %rdi,(%r15)
@_$LB554
mov %r14,40(%rdi)
mov %r13,32(%rdi)
mov %rdi,40(%r13)
mov %rsi,24(%r13)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB560
mov %r13,40(%rsi)
@_$LB560
jmp @_$LB545
@_$LB544
movb $0,4(%r13)
mov %r14,%r13
mov 40(%r14),%rbx
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB563
jmp @_$LB491
@_$LB563
mov 32(%r14),%rbx
mov %rbx,%rax
mov %r13,%rcx
cmp %rcx,%rax
jne @_$LB566
mov $0,%r8d
@_$LB566
@_$LB545
@_$LB527
@_$LB512
jmp @_$LB509
@_$LB508
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB568
mov 4(%r13),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB568
@_$LB572
movb $1,4(%r13)
movb $0,4(%r14)
mov 40(%r14),%rbx
mov %rbx,%r12
mov 24(%r14),%rbx
mov %rbx,%rdi
mov 32(%rdi),%rbx
mov %rbx,%rsi
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB574
mov 24(%r12),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB577
mov %rdi,24(%r12)
jmp @_$LB578
@_$LB577
mov %rdi,32(%r12)
@_$LB578
jmp @_$LB575
@_$LB574
mov %rdi,(%r15)
@_$LB575
mov %r12,40(%rdi)
mov %r14,32(%rdi)
mov %rdi,40(%r14)
mov %rsi,24(%r14)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB581
mov %r14,40(%rsi)
@_$LB581
jmp @_$LB569
@_$LB568
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB583
mov 24(%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB583
@_$LB590
mov 24(%r13),%rsi
mov 4(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB583
@_$LB587
mov 4(%r14),%bl
mov %bl,4(%r13)
movb $1,4(%r14)
mov 24(%r13),%rbx
movb $1,4(%rbx)
mov 40(%r14),%rbx
mov %rbx,%r12
mov 24(%r14),%rbx
mov %rbx,%rdi
mov 32(%rdi),%rbx
mov %rbx,%rsi
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB592
mov 24(%r12),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB595
mov %rdi,24(%r12)
jmp @_$LB596
@_$LB595
mov %rdi,32(%r12)
@_$LB596
jmp @_$LB593
@_$LB592
mov %rdi,(%r15)
@_$LB593
mov %r12,40(%rdi)
mov %r14,32(%rdi)
mov %rdi,40(%r14)
mov %rsi,24(%r14)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB599
mov %r14,40(%rsi)
@_$LB599
jmp @_$LB491
jmp @_$LB584
@_$LB583
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB601
mov 32(%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB601
@_$LB608
mov 32(%r13),%rsi
mov 4(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB601
@_$LB605
mov 32(%r13),%rbx
movb $1,4(%rbx)
movb $0,4(%r13)
mov 32(%r13),%rbx
mov %rbx,%rdi
mov 24(%rdi),%rbx
mov %rbx,%rsi
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB610
mov 24(%r14),%rbx
mov %rbx,%rax
mov %r13,%rcx
cmp %rcx,%rax
jne @_$LB613
mov %rdi,24(%r14)
jmp @_$LB614
@_$LB613
mov %rdi,32(%r14)
@_$LB614
jmp @_$LB611
@_$LB610
mov %rdi,(%r15)
@_$LB611
mov %r14,40(%rdi)
mov %r13,24(%rdi)
mov %rdi,40(%r13)
mov %rsi,32(%r13)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB617
mov %r13,40(%rsi)
@_$LB617
jmp @_$LB602
@_$LB601
movb $0,4(%r13)
mov %r14,%r13
mov 40(%r14),%rbx
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB620
jmp @_$LB491
@_$LB620
mov 24(%r14),%rbx
mov %rbx,%rax
mov %r13,%rcx
cmp %rcx,%rax
jne @_$LB623
mov $1,%r8d
@_$LB623
@_$LB602
@_$LB584
@_$LB569
@_$LB509
jmp @_$LB489
@_$LB491
mov (%r15),%rbx
movb $1,4(%rbx)
mov %r9,%rax
@__malloc_zone_start_del$END
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_end_add
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 24(%rbp),%r12
push %r13
mov 16(%rbp),%r13
mov (%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB626
mov %r12,(%r13)
movb $1,5(%r12)
movq $0,48(%r12)
movq $0,56(%r12)
movq $0,64(%r12)
jmp @__malloc_zone_end_add$END
@_$LB626
mov (%r13),%rbx
mov %rbx,%r8
@_$LB627
mov %r8,%r9
mov %r12,%rsi
mov 16(%r12),%rbx
lea (%rsi,%rbx),%r8
mov %r9,%rdi
mov 16(%r9),%rsi
lea (%rdi,%rsi),%rbx
mov %r8,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jbe @_$LB631
mov 56(%r9),%rbx
mov %rbx,%r8
mov $0,%ebx
jmp @_$LB632
@_$LB631
mov 48(%r9),%rbx
mov %rbx,%r8
mov $1,%ebx
@_$LB632
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB627
@_$LB629
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB634
mov %r12,48(%r9)
jmp @_$LB635
@_$LB634
mov %r12,56(%r9)
@_$LB635
movb $0,5(%r12)
movq $0,48(%r12)
movq $0,56(%r12)
mov %r9,64(%r12)
mov %r9,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB641
mov 5(%r8),%bl
mov %bl,%al
mov $1,%cl
cmp %cl,%al
jne @_$LB638
@_$LB641
jmp @__malloc_zone_end_add$END
@_$LB638
mov 64(%r9),%rbx
mov %rbx,%r9
@_$LB642
mov 48(%r9),%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jne @_$LB646
mov 56(%r9),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB649
mov 5(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB649
@_$LB653
movb $1,5(%rsi)
movb $1,5(%r8)
movb $0,5(%r9)
mov %r9,%r12
mov 64(%r12),%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB659
mov 5(%r8),%bl
mov %bl,%al
mov $1,%cl
cmp %cl,%al
jne @_$LB656
@_$LB659
jmp @_$LB644
@_$LB656
mov 64(%r8),%rbx
mov %rbx,%r9
jmp @_$LB650
@_$LB649
mov 56(%r8),%rbx
mov %rbx,%rax
mov %r12,%rcx
cmp %rcx,%rax
jne @_$LB662
mov 56(%r8),%rbx
mov %rbx,%rdi
mov 48(%rdi),%rbx
mov %rbx,%rsi
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB664
mov 48(%r9),%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jne @_$LB667
mov %rdi,48(%r9)
jmp @_$LB668
@_$LB667
mov %rdi,56(%r9)
@_$LB668
jmp @_$LB665
@_$LB664
mov %rdi,(%r13)
@_$LB665
mov %r9,64(%rdi)
mov %r8,48(%rdi)
mov %rdi,64(%r8)
mov %rsi,56(%r8)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB671
mov %r8,64(%rsi)
@_$LB671
mov %r12,%r8
mov 48(%r8),%rbx
mov %rbx,%r12
@_$LB662
movb $0,5(%r9)
movb $1,5(%r8)
mov 64(%r9),%rbx
mov %rbx,%r8
mov 48(%r9),%rbx
mov %rbx,%rdi
mov 56(%rdi),%rbx
mov %rbx,%rsi
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB673
mov 48(%r8),%rbx
mov %rbx,%rax
mov %r9,%rcx
cmp %rcx,%rax
jne @_$LB676
mov %rdi,48(%r8)
jmp @_$LB677
@_$LB676
mov %rdi,56(%r8)
@_$LB677
jmp @_$LB674
@_$LB673
mov %rdi,(%r13)
@_$LB674
mov %r8,64(%rdi)
mov %r9,56(%rdi)
mov %rdi,64(%r9)
mov %rsi,48(%r9)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB680
mov %r9,64(%rsi)
@_$LB680
jmp @_$LB644
@_$LB650
jmp @_$LB647
@_$LB646
mov 48(%r9),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB682
mov 5(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB682
@_$LB686
movb $1,5(%rsi)
movb $1,5(%r8)
movb $0,5(%r9)
mov %r9,%r12
mov 64(%r12),%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB692
mov 5(%r8),%bl
mov %bl,%al
mov $1,%cl
cmp %cl,%al
jne @_$LB689
@_$LB692
jmp @_$LB644
@_$LB689
mov 64(%r8),%rbx
mov %rbx,%r9
jmp @_$LB683
@_$LB682
mov 48(%r8),%rbx
mov %rbx,%rax
mov %r12,%rcx
cmp %rcx,%rax
jne @_$LB695
mov 48(%r8),%rbx
mov %rbx,%rdi
mov 56(%rdi),%rbx
mov %rbx,%rsi
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB697
mov 48(%r9),%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jne @_$LB700
mov %rdi,48(%r9)
jmp @_$LB701
@_$LB700
mov %rdi,56(%r9)
@_$LB701
jmp @_$LB698
@_$LB697
mov %rdi,(%r13)
@_$LB698
mov %r9,64(%rdi)
mov %r8,56(%rdi)
mov %rdi,64(%r8)
mov %rsi,48(%r8)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB704
mov %r8,64(%rsi)
@_$LB704
mov %r12,%r8
mov 56(%r8),%rbx
mov %rbx,%r12
@_$LB695
movb $0,5(%r9)
movb $1,5(%r8)
mov 64(%r9),%rbx
mov %rbx,%r8
mov 56(%r9),%rbx
mov %rbx,%rdi
mov 48(%rdi),%rbx
mov %rbx,%rsi
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB706
mov 48(%r8),%rbx
mov %rbx,%rax
mov %r9,%rcx
cmp %rcx,%rax
jne @_$LB709
mov %rdi,48(%r8)
jmp @_$LB710
@_$LB709
mov %rdi,56(%r8)
@_$LB710
jmp @_$LB707
@_$LB706
mov %rdi,(%r13)
@_$LB707
mov %r8,64(%rdi)
mov %r9,48(%rdi)
mov %rdi,64(%r9)
mov %rsi,56(%r9)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB713
mov %r9,64(%rsi)
@_$LB713
jmp @_$LB644
@_$LB683
@_$LB647
jmp @_$LB642
@_$LB644
mov (%r13),%rbx
movb $1,5(%rbx)
@__malloc_zone_end_add$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_end_del
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
push %r13
push %r14
push %r15
mov 16(%rbp),%r15
mov (%r15),%rbx
mov %rbx,%r14
@_$LB714
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB719
mov $0,%rax
jmp @__malloc_zone_end_del$END
@_$LB719
mov %r9,%rsi
mov 16(%r9),%rbx
lea (%rsi,%rbx),%r8
mov %r14,%rdi
mov 16(%r14),%rsi
lea (%rdi,%rsi),%rbx
mov %r8,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jbe @_$LB721
mov 56(%r14),%rbx
mov %rbx,%r14
jmp @_$LB722
@_$LB721
mov %r14,%rsi
mov 16(%r14),%rbx
lea (%rsi,%rbx),%r8
mov %r9,%rdi
mov 16(%r9),%rsi
lea (%rdi,%rsi),%rbx
mov %r8,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jbe @_$LB724
mov 48(%r14),%rbx
mov %rbx,%r14
jmp @_$LB725
@_$LB724
jmp @_$LB716
@_$LB725
@_$LB722
jmp @_$LB714
@_$LB716
mov %r14,%r9
mov 48(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB727
mov 56(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB730
mov 64(%r14),%rbx
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB733
mov 48(%r13),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB736
movq $0,48(%r13)
mov $1,%r8d
jmp @_$LB737
@_$LB736
movq $0,56(%r13)
mov $0,%r8d
@_$LB737
jmp @_$LB734
@_$LB733
movq $0,(%r15)
mov %r9,%rax
jmp @__malloc_zone_end_del$END
@_$LB734
jmp @_$LB731
@_$LB730
mov 64(%r14),%rbx
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB739
mov 48(%r13),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB742
mov 56(%r14),%rbx
mov %rbx,48(%r13)
mov $1,%r8d
jmp @_$LB743
@_$LB742
mov 56(%r14),%rbx
mov %rbx,56(%r13)
mov $0,%r8d
@_$LB743
mov 56(%r14),%rbx
mov %r13,64(%rbx)
jmp @_$LB740
@_$LB739
mov 56(%r14),%rbx
mov %rbx,(%r15)
mov 56(%r14),%rbx
movq $0,64(%rbx)
mov (%r15),%rbx
movb $1,5(%rbx)
mov %r9,%rax
jmp @__malloc_zone_end_del$END
@_$LB740
@_$LB731
mov 5(%r14),%bl
mov %bl,%sil
movzbl %sil,%esi
jmp @_$LB728
@_$LB727
mov 56(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB745
mov 64(%r14),%rbx
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB748
mov 48(%r13),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB751
mov 48(%r14),%rbx
mov %rbx,48(%r13)
mov $1,%r8d
jmp @_$LB752
@_$LB751
mov 48(%r14),%rbx
mov %rbx,56(%r13)
mov $0,%r8d
@_$LB752
mov 48(%r14),%rbx
mov %r13,64(%rbx)
jmp @_$LB749
@_$LB748
mov 48(%r14),%rbx
mov %rbx,(%r15)
mov 48(%r14),%rbx
movq $0,64(%rbx)
mov (%r15),%rbx
movb $1,5(%rbx)
mov %r9,%rax
jmp @__malloc_zone_end_del$END
@_$LB749
mov 5(%r14),%bl
mov %bl,%sil
movzbl %sil,%esi
jmp @_$LB746
@_$LB745
mov 56(%r14),%rbx
mov %rbx,%r12
mov 48(%r12),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB755
@_$LB753
mov 48(%r12),%rbx
mov %rbx,%r12
mov 48(%r12),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB753
@_$LB755
mov 56(%r14),%rbx
mov %r12,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB757
mov 64(%r14),%rbx
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB760
mov 48(%r13),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB763
mov %r12,48(%r13)
jmp @_$LB764
@_$LB763
mov %r12,56(%r13)
@_$LB764
jmp @_$LB761
@_$LB760
mov %r12,(%r15)
@_$LB761
mov %r13,64(%r12)
mov 48(%r14),%rbx
mov %rbx,48(%r12)
mov 48(%r14),%rbx
mov %r12,64(%rbx)
mov 5(%r12),%bl
mov %bl,%sil
movzbl %sil,%esi
mov 5(%r14),%bl
mov %bl,5(%r12)
mov %r12,%r13
mov $0,%r8d
jmp @_$LB758
@_$LB757
mov 64(%r12),%rbx
mov %rbx,%r13
mov 48(%r13),%rbx
mov %rbx,%rax
mov %r12,%rcx
cmp %rcx,%rax
jne @_$LB766
mov 56(%r12),%rbx
mov %rbx,48(%r13)
jmp @_$LB767
@_$LB766
mov 56(%r12),%rbx
mov %rbx,56(%r13)
@_$LB767
mov 56(%r12),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB770
mov 56(%r12),%rbx
mov %r13,64(%rbx)
@_$LB770
mov 48(%r14),%rbx
mov %rbx,48(%r12)
mov 56(%r14),%rbx
mov %rbx,56(%r12)
mov 64(%r14),%rbx
mov %rbx,64(%r12)
mov 5(%r12),%bl
mov %bl,%sil
movzbl %sil,%esi
mov 5(%r14),%bl
mov %bl,5(%r12)
mov 64(%r14),%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB772
mov 48(%rdi),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB775
mov %r12,48(%rdi)
jmp @_$LB776
@_$LB775
mov %r12,56(%rdi)
@_$LB776
jmp @_$LB773
@_$LB772
mov %r12,(%r15)
@_$LB773
mov 48(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB779
mov 48(%r14),%rbx
mov %r12,64(%rbx)
@_$LB779
mov 56(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB782
mov 56(%r14),%rbx
mov %r12,64(%rbx)
@_$LB782
mov $1,%r8d
@_$LB758
@_$LB746
@_$LB728
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB785
mov %r9,%rax
jmp @__malloc_zone_end_del$END
@_$LB785
mov %r13,%r14
@_$LB786
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB790
mov 48(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB794
mov 48(%r14),%rsi
mov 5(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB794
@_$LB797
mov 48(%r14),%rbx
movb $1,5(%rbx)
jmp @_$LB788
@_$LB794
mov 56(%r14),%rbx
mov %rbx,%r13
jmp @_$LB791
@_$LB790
mov 56(%r14),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB800
mov 56(%r14),%rsi
mov 5(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB800
@_$LB803
mov 56(%r14),%rbx
movb $1,5(%rbx)
jmp @_$LB788
@_$LB800
mov 48(%r14),%rbx
mov %rbx,%r13
@_$LB791
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB805
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB808
mov 5(%r13),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB808
@_$LB812
movb $1,5(%r13)
movb $0,5(%r14)
mov 64(%r14),%rbx
mov %rbx,%r12
mov 56(%r14),%rbx
mov %rbx,%rdi
mov 48(%rdi),%rbx
mov %rbx,%rsi
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB814
mov 48(%r12),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB817
mov %rdi,48(%r12)
jmp @_$LB818
@_$LB817
mov %rdi,56(%r12)
@_$LB818
jmp @_$LB815
@_$LB814
mov %rdi,(%r15)
@_$LB815
mov %r12,64(%rdi)
mov %r14,48(%rdi)
mov %rdi,64(%r14)
mov %rsi,56(%r14)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB821
mov %r14,64(%rsi)
@_$LB821
jmp @_$LB809
@_$LB808
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB823
mov 56(%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB823
@_$LB830
mov 56(%r13),%rsi
mov 5(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB823
@_$LB827
mov 5(%r14),%bl
mov %bl,5(%r13)
movb $1,5(%r14)
mov 56(%r13),%rbx
movb $1,5(%rbx)
mov 64(%r14),%rbx
mov %rbx,%r12
mov 56(%r14),%rbx
mov %rbx,%rdi
mov 48(%rdi),%rbx
mov %rbx,%rsi
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB832
mov 48(%r12),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB835
mov %rdi,48(%r12)
jmp @_$LB836
@_$LB835
mov %rdi,56(%r12)
@_$LB836
jmp @_$LB833
@_$LB832
mov %rdi,(%r15)
@_$LB833
mov %r12,64(%rdi)
mov %r14,48(%rdi)
mov %rdi,64(%r14)
mov %rsi,56(%r14)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB839
mov %r14,64(%rsi)
@_$LB839
jmp @_$LB788
jmp @_$LB824
@_$LB823
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB841
mov 48(%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB841
@_$LB848
mov 48(%r13),%rsi
mov 5(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB841
@_$LB845
mov 48(%r13),%rbx
movb $1,5(%rbx)
movb $0,5(%r13)
mov 48(%r13),%rbx
mov %rbx,%rdi
mov 56(%rdi),%rbx
mov %rbx,%rsi
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB850
mov 48(%r14),%rbx
mov %rbx,%rax
mov %r13,%rcx
cmp %rcx,%rax
jne @_$LB853
mov %rdi,48(%r14)
jmp @_$LB854
@_$LB853
mov %rdi,56(%r14)
@_$LB854
jmp @_$LB851
@_$LB850
mov %rdi,(%r15)
@_$LB851
mov %r14,64(%rdi)
mov %r13,56(%rdi)
mov %rdi,64(%r13)
mov %rsi,48(%r13)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB857
mov %r13,64(%rsi)
@_$LB857
jmp @_$LB842
@_$LB841
movb $0,5(%r13)
mov %r14,%r13
mov 64(%r14),%rbx
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB860
jmp @_$LB788
@_$LB860
mov 56(%r14),%rbx
mov %rbx,%rax
mov %r13,%rcx
cmp %rcx,%rax
jne @_$LB863
mov $0,%r8d
@_$LB863
@_$LB842
@_$LB824
@_$LB809
jmp @_$LB806
@_$LB805
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB865
mov 5(%r13),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB865
@_$LB869
movb $1,5(%r13)
movb $0,5(%r14)
mov 64(%r14),%rbx
mov %rbx,%r12
mov 48(%r14),%rbx
mov %rbx,%rdi
mov 56(%rdi),%rbx
mov %rbx,%rsi
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB871
mov 48(%r12),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB874
mov %rdi,48(%r12)
jmp @_$LB875
@_$LB874
mov %rdi,56(%r12)
@_$LB875
jmp @_$LB872
@_$LB871
mov %rdi,(%r15)
@_$LB872
mov %r12,64(%rdi)
mov %r14,56(%rdi)
mov %rdi,64(%r14)
mov %rsi,48(%r14)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB878
mov %r14,64(%rsi)
@_$LB878
jmp @_$LB866
@_$LB865
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB880
mov 48(%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB880
@_$LB887
mov 48(%r13),%rsi
mov 5(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB880
@_$LB884
mov 5(%r14),%bl
mov %bl,5(%r13)
movb $1,5(%r14)
mov 48(%r13),%rbx
movb $1,5(%rbx)
mov 64(%r14),%rbx
mov %rbx,%r12
mov 48(%r14),%rbx
mov %rbx,%rdi
mov 56(%rdi),%rbx
mov %rbx,%rsi
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB889
mov 48(%r12),%rbx
mov %rbx,%rax
mov %r14,%rcx
cmp %rcx,%rax
jne @_$LB892
mov %rdi,48(%r12)
jmp @_$LB893
@_$LB892
mov %rdi,56(%r12)
@_$LB893
jmp @_$LB890
@_$LB889
mov %rdi,(%r15)
@_$LB890
mov %r12,64(%rdi)
mov %r14,56(%rdi)
mov %rdi,64(%r14)
mov %rsi,48(%r14)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB896
mov %r14,64(%rsi)
@_$LB896
jmp @_$LB788
jmp @_$LB881
@_$LB880
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB898
mov 56(%r13),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB898
@_$LB905
mov 56(%r13),%rsi
mov 5(%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB898
@_$LB902
mov 56(%r13),%rbx
movb $1,5(%rbx)
movb $0,5(%r13)
mov 56(%r13),%rbx
mov %rbx,%rdi
mov 48(%rdi),%rbx
mov %rbx,%rsi
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB907
mov 48(%r14),%rbx
mov %rbx,%rax
mov %r13,%rcx
cmp %rcx,%rax
jne @_$LB910
mov %rdi,48(%r14)
jmp @_$LB911
@_$LB910
mov %rdi,56(%r14)
@_$LB911
jmp @_$LB908
@_$LB907
mov %rdi,(%r15)
@_$LB908
mov %r14,64(%rdi)
mov %r13,48(%rdi)
mov %rdi,64(%r13)
mov %rsi,56(%r13)
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB914
mov %r13,64(%rsi)
@_$LB914
jmp @_$LB899
@_$LB898
movb $0,5(%r13)
mov %r14,%r13
mov 64(%r14),%rbx
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB917
jmp @_$LB788
@_$LB917
mov 48(%r14),%rbx
mov %rbx,%rax
mov %r13,%rcx
cmp %rcx,%rax
jne @_$LB920
mov $1,%r8d
@_$LB920
@_$LB899
@_$LB881
@_$LB866
@_$LB806
jmp @_$LB786
@_$LB788
mov (%r15),%rbx
movb $1,5(%rbx)
mov %r9,%rax
@__malloc_zone_end_del$END
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__set_heap_size
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov @_$DATA+32,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB923
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $12,%rbx
push %rbx
call @__syscall
mov %rax,%rsi
add $56,%rsp
mov %rsi,%rbx
mov %rbx,%rax
mov %rax,@_$DATA+32
@_$LB923
mov @_$DATA+32,%rax
mov @_$DATA+48,%rcx
add %rcx,%rax
mov %rax,%rbx
mov %rbx,%rdi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+32,%rsi
add %r8,%rsi
mov %rsi,%rbx
push %rbx
mov $12,%rbx
push %rbx
call @__syscall
mov %rax,%rsi
add $56,%rsp
mov %rsi,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov %rdi,%rcx
cmp %rcx,%rax
jne @_$LB926
mov %r8,%rax
mov @_$DATA+48,%rcx
cmp %rcx,%rax
je @_$LB926
@_$LB929
mov $0,%rax
jmp @__set_heap_size$END
@_$LB926
mov %r8,%rax
mov %rax,@_$DATA+48
mov %rdi,%rax
@__set_heap_size$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_start_tab_add
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov %r8,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $16,%cl
shr %cl,%rax
mov %rax,%rdi
mov %rsi,%rax
mov $48,%cl
shl %cl,%rax
mov %rax,%rbx
mov %rdi,%rsi
or %rbx,%rsi
mov %rsi,%rax
mov $65537,%rcx
xor %rdx,%rdx
div %rcx
mov %rdx,%rax
mov %rax,%rbx
mov %rbx,%rdi
push %r8
mov %edi,%esi
shl $3,%esi
lea @_$DATA+64,%rbx
movslq %esi,%rsi
add %rsi,%rbx
push %rbx
call @__malloc_zone_start_add
add $16,%rsp
@__malloc_zone_start_tab_add$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_end_tab_add
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov %r8,%rdi
mov 16(%r8),%rsi
lea (%rdi,%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $16,%cl
shr %cl,%rax
mov %rax,%rdi
mov %rsi,%rax
mov $48,%cl
shl %cl,%rax
mov %rax,%rbx
mov %rdi,%rsi
or %rbx,%rsi
mov %rsi,%rax
mov $65537,%rcx
xor %rdx,%rdx
div %rcx
mov %rdx,%rax
mov %rax,%rbx
mov %rbx,%rdi
push %r8
mov %edi,%esi
shl $3,%esi
lea @_$DATA+524368,%rbx
movslq %esi,%rsi
add %rsi,%rbx
push %rbx
call @__malloc_zone_end_add
add $16,%rsp
@__malloc_zone_end_tab_add$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_start_tab_del
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov %r8,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $16,%cl
shr %cl,%rax
mov %rax,%rdi
mov %rsi,%rax
mov $48,%cl
shl %cl,%rax
mov %rax,%rbx
mov %rdi,%rsi
or %rbx,%rsi
mov %rsi,%rax
mov $65537,%rcx
xor %rdx,%rdx
div %rcx
mov %rdx,%rax
mov %rax,%rbx
mov %rbx,%rdi
push %r8
mov %edi,%esi
shl $3,%esi
lea @_$DATA+64,%rbx
movslq %esi,%rsi
add %rsi,%rbx
push %rbx
call @__malloc_zone_start_del
mov %rax,%rbx
add $16,%rsp
@__malloc_zone_start_tab_del$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_end_tab_del
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov %r8,%rdi
mov 16(%r8),%rsi
lea (%rdi,%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $16,%cl
shr %cl,%rax
mov %rax,%rdi
mov %rsi,%rax
mov $48,%cl
shl %cl,%rax
mov %rax,%rbx
mov %rdi,%rsi
or %rbx,%rsi
mov %rsi,%rax
mov $65537,%rcx
xor %rdx,%rdx
div %rcx
mov %rdx,%rax
mov %rax,%rbx
mov %rbx,%rdi
push %r8
mov %edi,%esi
shl $3,%esi
lea @_$DATA+524368,%rbx
movslq %esi,%rsi
add %rsi,%rbx
push %rbx
call @__malloc_zone_end_del
mov %rax,%rbx
add $16,%rsp
@__malloc_zone_end_tab_del$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_start_tab_find
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
push %r8
mov %rsi,%rbx
mov %rbx,%r8
mov %r8,%rax
mov $16,%cl
shr %cl,%rax
mov %rax,%rdi
mov %r8,%rax
mov $48,%cl
shl %cl,%rax
mov %rax,%rbx
mov %rdi,%rsi
or %rbx,%rsi
mov %rsi,%rax
mov $65537,%rcx
xor %rdx,%rdx
div %rcx
mov %rdx,%rax
mov %rax,%rbx
mov %rbx,%rsi
mov %esi,%ebx
shl $3,%ebx
lea @_$DATA+64,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB932
mov %rsi,%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
je @_$LB932
@_$LB935
@_$LB930
mov %rsi,%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jbe @_$LB937
mov 24(%rsi),%rbx
mov %rbx,%rsi
jmp @_$LB938
@_$LB937
mov 32(%rsi),%rbx
mov %rbx,%rsi
@_$LB938
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB941
mov %rsi,%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jne @_$LB930
@_$LB941
@_$LB932
mov %rsi,%rax
@__malloc_zone_start_tab_find$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_end_tab_find
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
push %r8
push %r9
mov %rsi,%rbx
mov %rbx,%r9
mov %r9,%rax
mov $16,%cl
shr %cl,%rax
mov %rax,%rdi
mov %r9,%rax
mov $48,%cl
shl %cl,%rax
mov %rax,%rbx
mov %rdi,%rsi
or %rbx,%rsi
mov %rsi,%rax
mov $65537,%rcx
xor %rdx,%rdx
div %rcx
mov %rdx,%rax
mov %rax,%rbx
mov %rbx,%rsi
mov %esi,%ebx
shl $3,%ebx
lea @_$DATA+524368,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB944
mov %r8,%rdi
mov 16(%r8),%rsi
lea (%rdi,%rsi),%rbx
mov %rbx,%rax
mov %r9,%rcx
cmp %rcx,%rax
je @_$LB944
@_$LB947
@_$LB942
mov %r8,%rdi
mov 16(%r8),%rsi
lea (%rdi,%rsi),%rbx
mov %rbx,%rax
mov %r9,%rcx
cmp %rcx,%rax
jbe @_$LB949
mov 48(%r8),%rbx
mov %rbx,%r8
jmp @_$LB950
@_$LB949
mov 56(%r8),%rbx
mov %rbx,%r8
@_$LB950
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB953
mov %r8,%rdi
mov 16(%r8),%rsi
lea (%rdi,%rsi),%rbx
mov %rbx,%rax
mov %r9,%rcx
cmp %rcx,%rax
jne @_$LB942
@_$LB953
@_$LB944
mov %r8,%rax
@__malloc_zone_end_tab_find$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_size_find
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov @_$DATA+1048672,%rdi
mov $0,%rsi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB956
@_$LB954
mov 16(%rdi),%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jb @_$LB958
mov %rdi,%rsi
mov 72(%rdi),%rbx
mov %rbx,%rdi
jmp @_$LB959
@_$LB958
mov 80(%rdi),%rbx
mov %rbx,%rdi
@_$LB959
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB954
@_$LB956
mov %rsi,%rax
@__malloc_zone_size_find$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_error
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $40,%rbx
push %rbx
mov $@_$MSG1,%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB960
int3
jmp @_$LB960
@_$LB962
@__malloc_error$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_add
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov (%rsi),%ebx
mov %ebx,%eax
mov $2901614163,%ecx
cmp %ecx,%eax
je @_$LB965
call @__malloc_error
@_$LB965
movb $0,7(%rsi)
push %rsi
lea @_$DATA+1048672,%rbx
push %rbx
call @__malloc_zone_size_add
add $16,%rsp
push %rsi
call @__malloc_zone_start_tab_add
add $8,%rsp
push %rsi
call @__malloc_zone_end_tab_add
add $8,%rsp
@__malloc_zone_add$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__malloc_zone_del
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov (%rsi),%ebx
mov %ebx,%eax
mov $2901614163,%ecx
cmp %ecx,%eax
je @_$LB968
call @__malloc_error
@_$LB968
movb $0,7(%rsi)
push %rsi
lea @_$DATA+1048672,%rbx
push %rbx
call @__malloc_zone_size_del
mov %rax,%rbx
add $16,%rsp
push %rsi
call @__malloc_zone_start_tab_del
add $8,%rsp
push %rsi
call @__malloc_zone_end_tab_del
add $8,%rsp
@__malloc_zone_del$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@malloc_nolock
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
push %r8
push %r9
push %r12
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB971
mov $0,%rax
jmp @malloc_nolock$END
@_$LB971
mov %rsi,%rbx
sub $1,%rbx
mov %rbx,%rax
mov $4,%cl
shr %cl,%rax
mov %rax,%rsi
mov %rsi,%rbx
add $1,%rbx
mov %rbx,%rax
mov $4,%cl
shl %cl,%rax
mov %rax,%rsi
mov %rsi,%rbx
add $128,%rbx
mov %rbx,%r12
push %r12
call @__malloc_zone_size_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB973
mov %r12,%rax
mov $32768,%rcx
cmp %rcx,%rax
jae @_$LB976
mov $2097152,%rdi
jmp @_$LB977
@_$LB976
mov %r12,%rax
mov $262144,%rcx
cmp %rcx,%rax
jae @_$LB979
mov $16777216,%rdi
jmp @_$LB980
@_$LB979
mov %r12,%rbx
shl $3,%rbx
mov %rbx,%rdi
@_$LB980
@_$LB977
mov %rdi,%rsi
sub $1,%rsi
mov %rsi,%rax
mov $12,%cl
shr %cl,%rax
mov %rax,%rbx
mov %rbx,%rsi
add $1,%rsi
mov %rsi,%rax
mov $12,%cl
shl %cl,%rax
mov %rax,%rbx
mov %rbx,%rdi
mov @_$DATA+48,%rbx
add %rdi,%rbx
push %rbx
call @__set_heap_size
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB983
mov %r12,%rdi
mov %rdi,%rsi
sub $1,%rsi
mov %rsi,%rax
mov $12,%cl
shr %cl,%rax
mov %rax,%rbx
mov %rbx,%rsi
add $1,%rsi
mov %rsi,%rax
mov $12,%cl
shl %cl,%rax
mov %rax,%rbx
mov %rbx,%rdi
mov @_$DATA+48,%rbx
add %rdi,%rbx
push %rbx
call @__set_heap_size
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB986
mov $0,%rax
jmp @malloc_nolock$END
@_$LB986
@_$LB983
mov %rdi,16(%r9)
movl $2901614163,(%r9)
jmp @_$LB974
@_$LB973
push %r9
call @__malloc_zone_del
add $8,%rsp
@_$LB974
mov %r9,%rsi
mov %rsi,%rbx
add $32,%rbx
mov %rbx,%rdi
mov 16(%r9),%rbx
mov %r12,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jbe @_$LB989
call @__malloc_error
@_$LB989
mov %r12,%rsi
add $384,%rsi
mov 16(%r9),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jae @_$LB992
mov %r9,%rbx
lea (%rbx,%r12),%rsi
mov %rsi,%rbx
mov %rbx,%r8
movl $2901614163,(%r8)
mov 16(%r9),%rsi
mov %rsi,%rbx
sub %r12,%rbx
mov %rbx,16(%r8)
push %r8
call @__malloc_zone_add
add $8,%rsp
mov %r12,16(%r9)
@_$LB992
movb $1,7(%r9)
mov %rdi,%rax
@malloc_nolock$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@_free
push %rbp
mov %rsp,%rbp
sub $160,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
push %r8
call @__malloc_zone_add
add $8,%rsp
push %r8
call @__malloc_zone_end_tab_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB995
push %r8
call @__malloc_zone_del
add $8,%rsp
push %rdi
call @__malloc_zone_del
add $8,%rsp
mov 16(%r8),%rsi
mov 16(%rdi),%rbx
add %rsi,%rbx
mov %rbx,16(%rdi)
push %rdi
call @__malloc_zone_add
add $8,%rsp
mov %rdi,%r8
@_$LB995
mov %r8,%rdi
mov 16(%r8),%rsi
lea (%rdi,%rsi),%rbx
push %rbx
call @__malloc_zone_start_tab_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB998
push %r8
call @__malloc_zone_del
add $8,%rsp
push %rdi
call @__malloc_zone_del
add $8,%rsp
mov 16(%rdi),%rsi
mov 16(%r8),%rbx
add %rsi,%rbx
mov %rbx,16(%r8)
push %r8
call @__malloc_zone_add
add $8,%rsp
@_$LB998
mov %r8,%rdi
mov 16(%r8),%rbx
lea (%rdi,%rbx),%rsi
mov @_$DATA+32,%rax
mov @_$DATA+48,%rcx
add %rcx,%rax
mov %rax,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB1001
mov 16(%r8),%rbx
mov %rbx,%rax
mov $16384,%rcx
cmp %rcx,%rax
jb @_$LB1001
@_$LB1004
push %r8
call @__malloc_zone_del
add $8,%rsp
mov 16(%r8),%rsi
mov @_$DATA+48,%rbx
sub %rsi,%rbx
push %rbx
call @__set_heap_size
mov %rax,%rbx
add $8,%rsp
@_$LB1001
@_free$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@free_nolock
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1007
jmp @free_nolock$END
@_$LB1007
mov %rsi,%rbx
mov %rbx,%rsi
sub $32,%rsi
mov %rsi,%rbx
mov %rbx,%rsi
mov 7(%rsi),%bl
mov %bl,%al
mov $1,%cl
cmp %cl,%al
je @_$LB1010
call @__malloc_error
@_$LB1010
push %rsi
call @_free
add $8,%rsp
@free_nolock$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@malloc
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
lea @_$DATA+1048688,%rbx
push %rbx
call @mutex_lock
add $8,%rsp
push %rsi
call @malloc_nolock
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
lea @_$DATA+1048688,%rbx
push %rbx
call @mutex_unlock
add $8,%rsp
mov %rsi,%rax
@malloc$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@free
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
lea @_$DATA+1048688,%rbx
push %rbx
call @mutex_lock
add $8,%rsp
push %rsi
call @free_nolock
add $8,%rsp
lea @_$DATA+1048688,%rbx
push %rbx
call @mutex_unlock
add $8,%rsp
@free$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@_memmove_start
@memcpy
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 32(%rbp),%rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
push %rcx
push %rdx
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r10
push %r11
push %r12
mov 16(%rbp),%rax
mov 24(%rbp),%rdx
mov 32(%rbp),%rcx
cmp $8,%rcx
jb @_memcpy_X33
test $1,%dl
je @_memcpy_X11
mov (%rdx),%bl
mov %bl,(%rax)
inc %rax
inc %rdx
dec %rcx
@_memcpy_X11
test $2,%dl
je @_memcpy_X12
mov (%rdx),%bx
mov %bx,(%rax)
add $2,%rax
add $2,%rdx
sub $2,%rcx
@_memcpy_X12
test $4,%dl
je @_memcpy_X13
mov (%rdx),%ebx
mov %ebx,(%rax)
add $4,%rax
add $4,%rdx
sub $4,%rcx
@_memcpy_X13
sub $64,%rcx
jb @_memcpy_X21
@_memcpy_X22
mov (%rdx),%rbx
mov 8(%rdx),%rsi
mov 16(%rdx),%rdi
mov 24(%rdx),%r8
mov 32(%rdx),%r9
mov 40(%rdx),%r10
mov 48(%rdx),%r11
mov 56(%rdx),%r12
mov %rbx,(%rax)
mov %rsi,8(%rax)
mov %rdi,16(%rax)
mov %r8,24(%rax)
mov %r9,32(%rax)
mov %r10,40(%rax)
mov %r11,48(%rax)
mov %r12,56(%rax)
add $64,%rax
add $64,%rdx
sub $64,%rcx
jae @_memcpy_X22
@_memcpy_X21
test $32,%cl
je @_memcpy_X31
mov (%rdx),%rbx
mov 8(%rdx),%rsi
mov 16(%rdx),%rdi
mov 24(%rdx),%r8
mov %rbx,(%rax)
mov %rsi,8(%rax)
mov %rdi,16(%rax)
mov %r8,24(%rax)
add $32,%rax
add $32,%rdx
@_memcpy_X31
test $16,%cl
je @_memcpy_X32
mov (%rdx),%rbx
mov 8(%rdx),%rsi
mov %rbx,(%rax)
mov %rsi,8(%rax)
add $16,%rax
add $16,%rdx
@_memcpy_X32
test $8,%cl
je @_memcpy_X33
mov (%rdx),%rbx
mov %rbx,(%rax)
add $8,%rax
add $8,%rdx
@_memcpy_X33
test $4,%cl
je @_memcpy_X34
mov (%rdx),%ebx
mov %ebx,(%rax)
add $4,%rax
add $4,%rdx
@_memcpy_X34
test $2,%cl
je @_memcpy_X35
mov (%rdx),%bx
mov %bx,(%rax)
add $2,%rax
add $2,%rdx
@_memcpy_X35
test $1,%cl
je @_memcpy_X36
mov (%rdx),%bl
mov %bl,(%rax)
@_memcpy_X36
pop %r12
pop %r11
pop %r10
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
pop %rdx
pop %rcx
mov 16(%rbp),%rax
@memcpy$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@memcpy_r
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 32(%rbp),%rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
push %rcx
push %rdx
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r10
push %r11
push %r12
mov 16(%rbp),%rax
mov 24(%rbp),%rdx
mov 32(%rbp),%rcx
cmp $8,%rcx
jb @_memcpy_r_X33
test $1,%dl
je @_memcpy_r_X11
dec %rax
dec %rdx
dec %rcx
mov (%rdx),%bl
mov %bl,(%rax)
@_memcpy_r_X11
test $2,%dl
je @_memcpy_r_X12
sub $2,%rax
sub $2,%rdx
sub $2,%rcx
mov (%rdx),%bx
mov %bx,(%rax)
@_memcpy_r_X12
test $4,%dl
je @_memcpy_r_X13
sub $4,%rax
sub $4,%rdx
sub $4,%rcx
mov (%rdx),%ebx
mov %ebx,(%rax)
@_memcpy_r_X13
sub $64,%rcx
jb @_memcpy_r_X21
@_memcpy_r_X22
sub $64,%rax
sub $64,%rdx
mov (%rdx),%rbx
mov 8(%rdx),%rsi
mov 16(%rdx),%rdi
mov 24(%rdx),%r8
mov 32(%rdx),%r9
mov 40(%rdx),%r10
mov 48(%rdx),%r11
mov 56(%rdx),%r12
mov %rbx,(%rax)
mov %rsi,8(%rax)
mov %rdi,16(%rax)
mov %r8,24(%rax)
mov %r9,32(%rax)
mov %r10,40(%rax)
mov %r11,48(%rax)
mov %r12,56(%rax)
sub $64,%rcx
jae @_memcpy_r_X22
@_memcpy_r_X21
test $32,%cl
je @_memcpy_r_X31
sub $32,%rax
sub $32,%rdx
mov (%rdx),%rbx
mov 8(%rdx),%rsi
mov 16(%rdx),%rdi
mov 24(%rdx),%r8
mov %rbx,(%rax)
mov %rsi,8(%rax)
mov %rdi,16(%rax)
mov %r8,24(%rax)
@_memcpy_r_X31
test $16,%cl
je @_memcpy_r_X32
sub $16,%rax
sub $16,%rdx
mov (%rdx),%rbx
mov 8(%rdx),%rsi
mov %rbx,(%rax)
mov %rsi,8(%rax)
@_memcpy_r_X32
test $8,%cl
je @_memcpy_r_X33
sub $8,%rax
sub $8,%rdx
mov (%rdx),%rbx
mov %rbx,(%rax)
@_memcpy_r_X33
test $4,%cl
je @_memcpy_r_X34
sub $4,%rax
sub $4,%rdx
mov (%rdx),%ebx
mov %ebx,(%rax)
@_memcpy_r_X34
test $2,%cl
je @_memcpy_r_X35
sub $2,%rax
sub $2,%rdx
mov (%rdx),%bx
mov %bx,(%rax)
@_memcpy_r_X35
test $1,%cl
je @_memcpy_r_X36
mov -1(%rdx),%bl
mov %bl,-1(%rax)
@_memcpy_r_X36
pop %r12
pop %r11
pop %r10
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
pop %rdx
pop %rcx
mov 16(%rbp),%rax
@memcpy_r$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@memmove
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 32(%rbp),%r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov %r12,%rax
mov %r9,%rcx
cmp %rcx,%rax
jb @_$LB1016
mov %r12,%rdi
mov %r9,%rsi
lea (%rsi,%r8),%rbx
mov %rdi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jb @_$LB1012
@_$LB1016
push %r8
push %r9
push %r12
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov %rbx,%rax
jmp @memmove$END
jmp @_$LB1013
@_$LB1012
push %r8
mov %r9,%rsi
lea (%rsi,%r8),%rbx
push %rbx
mov %r12,%rsi
lea (%rsi,%r8),%rbx
push %rbx
call @memcpy_r
mov %rax,%rbx
add $24,%rsp
mov %r12,%rax
@_$LB1013
@memmove$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@_memmove_end
@memset
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 32(%rbp),%rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
push %rcx
push %rdx
movzbl 24(%rbp),%edx
mov $0x101010101010101,%rax
mul %rdx
mov %rax,%rdx
mov 16(%rbp),%rax
mov 32(%rbp),%rcx
cmp $8,%rcx
jb @_memset_X33
test $1,%al
je @_memset_X11
mov %dl,(%rax)
inc %rax
dec %rcx
@_memset_X11
test $2,%al
je @_memset_X12
mov %dx,(%rax)
add $2,%rax
sub $2,%rcx
@_memset_X12
test $4,%al
je @_memset_X13
mov %edx,(%rax)
add $4,%rax
sub $4,%rcx
@_memset_X13
sub $64,%rcx
jb @_memset_X21
@_memset_X22
mov %rdx,(%rax)
mov %rdx,8(%rax)
mov %rdx,16(%rax)
mov %rdx,24(%rax)
mov %rdx,32(%rax)
mov %rdx,40(%rax)
mov %rdx,48(%rax)
mov %rdx,56(%rax)
add $64,%rax
sub $64,%rcx
jae @_memset_X22
@_memset_X21
test $32,%cl
je @_memset_X31
mov %rdx,(%rax)
mov %rdx,8(%rax)
mov %rdx,16(%rax)
mov %rdx,24(%rax)
add $32,%rax
@_memset_X31
test $16,%cl
je @_memset_X32
mov %rdx,(%rax)
mov %rdx,8(%rax)
add $16,%rax
@_memset_X32
test $8,%cl
je @_memset_X33
mov %rdx,(%rax)
add $8,%rax
@_memset_X33
test $4,%cl
je @_memset_X34
mov %edx,(%rax)
add $4,%rax
@_memset_X34
test $2,%cl
je @_memset_X35
mov %dx,(%rax)
add $2,%rax
@_memset_X35
test $1,%cl
je @_memset_X36
mov %dl,(%rax)
@_memset_X36
pop %rdx
pop %rcx
mov 16(%rbp),%rax
@memset$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@memcmp
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 32(%rbp),%rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
push %rsi
push %rdi
push %rcx
mov 16(%rbp),%rsi
mov 24(%rbp),%rdi
mov 32(%rbp),%rcx
sub $8,%rcx
jb @_memcmp_X1
@_memcmp_X2
mov (%rsi),%rax
sub (%rdi),%rax
jne @_memcmp_E
add $8,%rsi
add $8,%rdi
sub $8,%rcx
jae @_memcmp_X2
@_memcmp_X1
test $4,%cl
je @_memcmp_Y1
mov (%rsi),%eax
sub (%rdi),%eax
jne @_memcmp_E
add $4,%rsi
add $4,%rdi
@_memcmp_Y1
test $2,%cl
je @_memcmp_Y2
mov (%rsi),%ax
sub (%rdi),%ax
jne @_memcmp_E
add $2,%rsi
add $2,%rdi
@_memcmp_Y2
test $1,%cl
je @_memcmp_E2
mov (%rsi),%al
sub (%rdi),%al
jne @_memcmp_E
add $1,%rsi
add $1,%rdi
jmp @_memcmp_E2
@_memcmp_E
test %eax,%eax
jne @_memcmp_E11
shr $32,%rax
@_memcmp_E11
test %ax,%ax
jne @_memcmp_E12
shr $16,%rax
@_memcmp_E12
test %al,%al
jne @_memcmp_E2
mov %ah,%al
@_memcmp_E2
movsbq %al,%rax
pop %rcx
pop %rdi
pop %rsi
@memcmp$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@strlen
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov $0,%rsi
mov (%rdi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB1019
@_$LB1017
add $1,%rsi
add $1,%rdi
mov (%rdi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB1017
@_$LB1019
mov %rsi,%rax
@strlen$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@strnlen
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1022
mov $0,%rax
jmp @strnlen$END
@_$LB1022
sub $1,%rdi
mov $0,%rsi
mov (%r8),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB1025
mov %rsi,%rax
mov %rdi,%rcx
cmp %rcx,%rax
jae @_$LB1025
@_$LB1028
@_$LB1023
add $1,%rsi
add $1,%r8
mov (%r8),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB1031
mov %rsi,%rax
mov %rdi,%rcx
cmp %rcx,%rax
jb @_$LB1023
@_$LB1031
@_$LB1025
mov %rsi,%rax
@strnlen$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@strcmp
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
push %r9
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rdi,%rax
mov %rsi,%rcx
cmp %rcx,%rax
jbe @_$LB1034
mov %rsi,%rdi
@_$LB1034
mov %rdi,%rbx
add $1,%rbx
push %rbx
push %r8
push %r9
call @memcmp
mov %eax,%ebx
add $24,%rsp
movslq %ebx,%rbx
mov %rbx,%rax
@strcmp$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@strncmp
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 32(%rbp),%rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
push %rsi
push %r9
call @strnlen
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %rsi
push %r8
call @strnlen
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov %rdi,%rax
mov %rsi,%rcx
cmp %rcx,%rax
jbe @_$LB1037
mov %rsi,%rdi
@_$LB1037
mov %rdi,%rbx
add $1,%rbx
push %rbx
push %r8
push %r9
call @memcmp
mov %eax,%ebx
add $24,%rsp
movslq %ebx,%rbx
mov %rbx,%rax
@strncmp$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@strcpy
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rsi,%rbx
add $1,%rbx
push %rbx
push %rdi
push %r8
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov %r8,%rax
@strcpy$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@strcat
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
lea (%r8,%rsi),%rbx
push %rbx
call @strcpy
mov %rax,%rbx
add $16,%rsp
mov %r8,%rax
@strcat$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@sprinti
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
mov 32(%rbp),%rsi
push %rdi
push %r8
push %r9
push %r12
mov 24(%rbp),%r12
push %r13
mov 16(%rbp),%r13
mov $10000000000000000000,%r9
mov $20,%ebx
mov %r9,%rax
mov %r12,%rcx
cmp %rcx,%rax
jbe @_$LB1040
mov %ebx,%eax
mov %esi,%ecx
cmp %ecx,%eax
jle @_$LB1040
@_$LB1043
@_$LB1038
mov %r9,%rax
mov $10,%rcx
xor %rdx,%rdx
div %rcx
mov %rax,%r9
sub $1,%ebx
mov %r9,%rax
mov %r12,%rcx
cmp %rcx,%rax
jbe @_$LB1046
mov %ebx,%eax
mov %esi,%ecx
cmp %ecx,%eax
jg @_$LB1038
@_$LB1046
@_$LB1040
mov $0,%r8d
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1049
@_$LB1047
lea 18446744073709551584(%rbp),%rdi
movslq %r8d,%r8
add %r8,%rdi
mov %r12,%rax
mov %r9,%rcx
xor %rdx,%rdx
div %rcx
mov %rax,%rsi
mov %rsi,%rbx
add $48,%rbx
mov %bl,(%rdi)
mov %r12,%rax
mov %r9,%rcx
xor %rdx,%rdx
div %rcx
mov %rdx,%rax
mov %rax,%r12
mov %r9,%rax
mov $10,%rcx
xor %rdx,%rdx
div %rcx
mov %rax,%r9
add $1,%r8d
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1047
@_$LB1049
push %r13
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
movslq %r8d,%r8
push %r8
lea 18446744073709551584(%rbp),%rax
push %rax
lea (%r13,%rdi),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea (%rdi,%r8),%ebx
lea (%rdi,%r8),%esi
lea (%r13,%rsi),%rbx
movb $0,(%rbx)
@sprinti$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@sinputi
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov $0,%rsi
mov (%r12),%bl
mov %bl,%r8b
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB1052
mov %r8b,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB1052
@_$LB1055
@_$LB1050
mov %rsi,%rdi
mov %rsi,%rax
mov $10,%rcx
mul %rcx
mov %rax,%rdi
mov %r8b,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%rsi
add $1,%r12
mov (%r12),%bl
mov %bl,%r8b
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB1058
mov %r8b,%al
mov $57,%cl
cmp %cl,%al
jle @_$LB1050
@_$LB1058
@_$LB1052
mov %rsi,(%r9)
mov %r12,%rax
@sinputi$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@__def_sigreturn
mov $15,%eax
syscall
jmp @__def_sigreturn
@signal
push %rbp
mov %rsp,%rbp
sub $352,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
pushq $152
pushq $0
lea 18446744073709551456(%rbp),%rbx
push %rbx
call @memset
mov %rax,%rbx
add $24,%rsp
mov %rsi,18446744073709551456(%rbp)
mov $67108864,%eax
mov %eax,18446744073709551464(%rbp)
mov $@__def_sigreturn,%rax
mov %rax,18446744073709551472(%rbp)
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $8,%rbx
push %rbx
lea 18446744073709551296(%rbp),%rsi
mov %rsi,%rbx
push %rbx
lea 18446744073709551456(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $13,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov 18446744073709551296(%rbp),%rbx
mov %rbx,%rax
@signal$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@fissubdir
push %rbp
mov %rsp,%rbp
sub $464,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea 18446744073709551472(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $5,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1061
movslq %esi,%rsi
mov %rsi,%rax
jmp @fissubdir$END
@_$LB1061
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $32,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%r8
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1064
movslq %r8d,%r8
mov %r8,%rax
jmp @fissubdir$END
@_$LB1064
mov $4294967295,%edi
@_$LB1065
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea 18446744073709551328(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $5,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1070
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %esi,%rsi
mov %rsi,%rax
jmp @fissubdir$END
@_$LB1070
mov 18446744073709551336(%rbp),%rsi
mov 18446744073709551480(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB1073
mov 18446744073709551328(%rbp),%rsi
mov 18446744073709551472(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB1073
@_$LB1076
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @fissubdir$END
@_$LB1073
mov %edi,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB1079
mov 18446744073709551336(%rbp),%rsi
mov 18446744073709551192(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB1079
@_$LB1085
mov 18446744073709551328(%rbp),%rsi
mov 18446744073709551184(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB1079
@_$LB1082
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rax
jmp @fissubdir$END
@_$LB1079
pushq $144
lea 18446744073709551328(%rbp),%rbx
push %rbx
lea 18446744073709551184(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $@_$MSG2,%rsi
mov %rsi,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $257,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rdi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1088
movslq %edi,%rdi
mov %rdi,%rax
jmp @fissubdir$END
@_$LB1088
mov %edi,%r8d
jmp @_$LB1065
@_$LB1067
@fissubdir$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@dirname_open
push %rbp
mov %rsp,%rbp
sub $304,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 24(%rbp),%r12
push %r13
mov 16(%rbp),%r13
mov $@_$MSG3,%rbx
push %rbx
push %r13
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1091
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1094
mov %r13,(%r12)
@_$LB1094
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $@_$MSG4,%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
jmp @dirname_open$END
@_$LB1091
mov $4294967196,%r9d
mov (%r13),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB1097
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $@_$MSG5,%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%r9
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1100
movslq %r9d,%r9
mov %r9,%rax
jmp @dirname_open$END
@_$LB1100
add $1,%r13
@_$LB1097
mov %r13,%rsi
mov $0,%r8d
mov (%r13),%bl
mov %bl,%dil
movsbl %dil,%edi
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB1103
@_$LB1101
mov %edi,%eax
mov $47,%ecx
cmp %ecx,%eax
jne @_$LB1105
lea 18446744073709551344(%rbp),%rbx
movslq %r8d,%r8
add %r8,%rbx
movb $0,(%rbx)
@_$LB1107
add $1,%r13
mov (%r13),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
je @_$LB1107
@_$LB1109
mov (%r13),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB1112
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea 18446744073709551344(%rbp),%rbx
push %rbx
mov %r9d,%ebx
movslq %ebx,%rbx
push %rbx
mov $257,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r9d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1115
movslq %esi,%rsi
mov %rsi,%rax
jmp @dirname_open$END
@_$LB1115
mov %esi,%r9d
mov %r13,%rsi
@_$LB1112
mov $0,%r8d
jmp @_$LB1106
@_$LB1105
mov %r8d,%eax
mov $256,%ecx
cmp %ecx,%eax
jl @_$LB1118
mov $18446744073709551580,%rax
jmp @dirname_open$END
@_$LB1118
lea 18446744073709551344(%rbp),%rbx
movslq %r8d,%r8
add %r8,%rbx
mov %dil,(%rbx)
add $1,%r13
add $1,%r8d
@_$LB1106
mov (%r13),%bl
mov %bl,%dil
movsbl %dil,%edi
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB1101
@_$LB1103
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1121
mov %rsi,(%r12)
@_$LB1121
mov %r9d,%eax
mov $4294967196,%ecx
cmp %ecx,%eax
jne @_$LB1124
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $@_$MSG6,%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%r9
@_$LB1124
movslq %r9d,%r9
mov %r9,%rax
@dirname_open$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@openl
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
mov 32(%rbp),%r8
push %r9
mov 24(%rbp),%r9
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %rdi
call @dirname_open
mov %eax,%ebx
add $16,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1127
movslq %edi,%rdi
mov %rdi,%rax
jmp @openl$END
@_$LB1127
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov %r9d,%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $257,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %esi,%rsi
mov %rsi,%rax
@openl$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@statl
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
mov 24(%rbp),%r8
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %rdi
call @dirname_open
mov %eax,%ebx
add $16,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1130
movslq %edi,%rdi
mov %rdi,%rax
jmp @statl$END
@_$LB1130
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8,%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $262,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %esi,%rsi
mov %rsi,%rax
@statl$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@lstatl
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
mov 24(%rbp),%r8
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %rdi
call @dirname_open
mov %eax,%ebx
add $16,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1133
movslq %edi,%rdi
mov %rdi,%rax
jmp @lstatl$END
@_$LB1133
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $256,%rbx
push %rbx
mov %r8,%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $262,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %esi,%rsi
mov %rsi,%rax
@lstatl$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@mkdirl
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
mov 24(%rbp),%r8
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %rdi
call @dirname_open
mov %eax,%ebx
add $16,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1136
movslq %edi,%rdi
mov %rdi,%rax
jmp @mkdirl$END
@_$LB1136
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $258,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %esi,%rsi
mov %rsi,%rax
@mkdirl$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@issubdir
push %rbp
mov %rsp,%rbp
sub $176,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
lea 18446744073709551472(%rbp),%rbx
push %rbx
push %r8
call @lstatl
mov %eax,%ebx
add $16,%rsp
mov %ebx,%esi
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1139
movslq %esi,%rsi
mov %rsi,%rax
jmp @issubdir$END
@_$LB1139
mov 18446744073709551496(%rbp),%esi
mov %esi,%ebx
and $61440,%ebx
mov %ebx,%eax
mov $16384,%ecx
cmp %ecx,%eax
je @_$LB1142
mov $0,%rax
jmp @issubdir$END
@_$LB1142
pushq $0
pushq $0
push %r8
call @openl
mov %eax,%ebx
add $24,%rsp
mov %ebx,%r8d
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1145
movslq %r8d,%r8
mov %r8,%rax
jmp @issubdir$END
@_$LB1145
mov $0,%rbx
push %rbx
push %rdi
call @dirname_open
mov %eax,%ebx
add $16,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1148
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %edi,%rdi
mov %rdi,%rax
jmp @issubdir$END
@_$LB1148
movslq %edi,%rdi
push %rdi
movslq %r8d,%r8
push %r8
call @fissubdir
mov %eax,%ebx
add $16,%rsp
mov %ebx,%esi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %esi,%rsi
mov %rsi,%rax
@issubdir$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@dirname_openat
push %rbp
mov %rsp,%rbp
sub $304,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
push %r8
push %r9
push %r12
mov 32(%rbp),%r12
push %r13
mov 24(%rbp),%r13
mov $@_$MSG7,%rbx
push %rbx
push %r13
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1151
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1154
mov %r13,(%r12)
@_$LB1154
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $@_$MSG8,%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
jmp @dirname_openat$END
@_$LB1151
mov %esi,%eax
mov $4294967196,%ecx
cmp %ecx,%eax
jne @_$LB1156
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $@_$MSG9,%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%r9
jmp @_$LB1157
@_$LB1156
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %esi,%ebx
movslq %ebx,%rbx
push %rbx
mov $32,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%r9
@_$LB1157
mov (%r13),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB1159
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r9d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $@_$MSG10,%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%r9
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1163
movslq %r9d,%r9
mov %r9,%rax
jmp @dirname_openat$END
@_$LB1163
add $1,%r13
jmp @_$LB1160
@_$LB1159
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1166
movslq %r9d,%r9
mov %r9,%rax
jmp @dirname_openat$END
@_$LB1166
@_$LB1160
mov %r13,%rsi
mov $0,%r8d
mov (%r13),%bl
mov %bl,%dil
movsbl %dil,%edi
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB1169
@_$LB1167
mov %edi,%eax
mov $47,%ecx
cmp %ecx,%eax
jne @_$LB1171
lea 18446744073709551344(%rbp),%rbx
movslq %r8d,%r8
add %r8,%rbx
movb $0,(%rbx)
@_$LB1173
add $1,%r13
mov (%r13),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
je @_$LB1173
@_$LB1175
mov (%r13),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB1178
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea 18446744073709551344(%rbp),%rbx
push %rbx
mov %r9d,%ebx
movslq %ebx,%rbx
push %rbx
mov $257,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r9d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1181
movslq %esi,%rsi
mov %rsi,%rax
jmp @dirname_openat$END
@_$LB1181
mov %esi,%r9d
mov %r13,%rsi
@_$LB1178
mov $0,%r8d
jmp @_$LB1172
@_$LB1171
mov %r8d,%eax
mov $256,%ecx
cmp %ecx,%eax
jl @_$LB1184
mov $18446744073709551580,%rax
jmp @dirname_openat$END
@_$LB1184
lea 18446744073709551344(%rbp),%rbx
movslq %r8d,%r8
add %r8,%rbx
mov %dil,(%rbx)
add $1,%r13
add $1,%r8d
@_$LB1172
mov (%r13),%bl
mov %bl,%dil
movsbl %dil,%edi
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB1167
@_$LB1169
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1187
mov %rsi,(%r12)
@_$LB1187
mov %r9d,%eax
mov $4294967196,%ecx
cmp %ecx,%eax
jne @_$LB1190
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $@_$MSG11,%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%r9
@_$LB1190
movslq %r9d,%r9
mov %r9,%rax
@dirname_openat$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@openatl
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 40(%rbp),%r8
push %r9
mov 32(%rbp),%r9
push %r12
mov 16(%rbp),%r12
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %rdi
movslq %r12d,%r12
push %r12
call @dirname_openat
mov %eax,%ebx
add $24,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1193
movslq %edi,%rdi
mov %rdi,%rax
jmp @openatl$END
@_$LB1193
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov %r9d,%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $257,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %esi,%rsi
mov %rsi,%rax
@openatl$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@mkdiratl
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 32(%rbp),%r8
push %r9
mov 16(%rbp),%r9
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %rdi
movslq %r9d,%r9
push %r9
call @dirname_openat
mov %eax,%ebx
add $24,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1196
movslq %edi,%rdi
mov %rdi,%rax
jmp @mkdiratl$END
@_$LB1196
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $258,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %esi,%rsi
mov %rsi,%rax
@mkdiratl$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@fchmodatl
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 32(%rbp),%r8
push %r9
mov 16(%rbp),%r9
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %rdi
movslq %r9d,%r9
push %r9
call @dirname_openat
mov %eax,%ebx
add $24,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1199
movslq %edi,%rdi
mov %rdi,%rax
jmp @fchmodatl$END
@_$LB1199
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $268,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %esi,%rsi
mov %rsi,%rax
@fchmodatl$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@fstatatl
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 40(%rbp),%r8
push %r9
mov 32(%rbp),%r9
push %r12
mov 16(%rbp),%r12
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %rdi
movslq %r12d,%r12
push %r12
call @dirname_openat
mov %eax,%ebx
add $24,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1202
movslq %edi,%rdi
mov %rdi,%rax
jmp @fstatatl$END
@_$LB1202
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov %r9,%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $262,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %esi,%rsi
mov %rsi,%rax
@fstatatl$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@symlinkatl
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 32(%rbp),%rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %rdi
movslq %r8d,%r8
push %r8
call @dirname_openat
mov %eax,%ebx
add $24,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1205
movslq %edi,%rdi
mov %rdi,%rax
jmp @symlinkatl$END
@_$LB1205
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov %r9,%rbx
push %rbx
mov $266,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %esi,%rsi
mov %rsi,%rax
@symlinkatl$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@readlinkatl
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 40(%rbp),%r8
push %r9
mov 32(%rbp),%r9
push %r12
mov 16(%rbp),%r12
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %rdi
movslq %r12d,%r12
push %r12
call @dirname_openat
mov %eax,%ebx
add $24,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1208
movslq %edi,%rdi
mov %rdi,%rax
jmp @readlinkatl$END
@_$LB1208
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov %r9,%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $267,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %esi,%rsi
mov %rsi,%rax
@readlinkatl$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@unlinkatl
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 32(%rbp),%r8
push %r9
mov 16(%rbp),%r9
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %rdi
movslq %r9d,%r9
push %r9
call @dirname_openat
mov %eax,%ebx
add $24,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1211
movslq %edi,%rdi
mov %rdi,%rax
jmp @unlinkatl$END
@_$LB1211
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $263,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %esi,%rsi
mov %rsi,%rax
@unlinkatl$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@renameatl
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 40(%rbp),%r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 32(%rbp),%r12
push %r13
mov 16(%rbp),%r13
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %r9
movslq %r13d,%r13
push %r13
call @dirname_openat
mov %eax,%ebx
add $24,%rsp
mov %ebx,%r9d
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1214
movslq %r9d,%r9
mov %r9,%rax
jmp @renameatl$END
@_$LB1214
lea 18446744073709551584(%rbp),%rbx
push %rbx
push %r8
movslq %r12d,%r12
push %r12
call @dirname_openat
mov %eax,%ebx
add $24,%rsp
mov %ebx,%r8d
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1217
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r9d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %r8d,%r8
mov %r8,%rax
jmp @renameatl$END
@_$LB1217
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov 18446744073709551584(%rbp),%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov %r9d,%ebx
movslq %ebx,%rbx
push %rbx
mov $264,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r9d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
movslq %esi,%rsi
mov %rsi,%rax
@renameatl$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@dir_init
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 24(%rbp),%rbx
push %rsi
mov 16(%rbp),%rsi
mov %esi,(%rbx)
movw $0,4(%rbx)
movw $0,6(%rbx)
@dir_init$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@readdir
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov 4(%r8),%si
mov 6(%r8),%bx
mov %si,%ax
mov %bx,%cx
cmp %cx,%ax
jne @_$LB1220
movw $0,4(%r8)
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1016,%rbx
push %rbx
mov %r8,%rsi
add $8,%rsi
mov %rsi,%rbx
push %rbx
mov (%r8),%esi
mov %esi,%ebx
movslq %ebx,%rbx
push %rbx
mov $217,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %bx,6(%r8)
mov 6(%r8),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
jg @_$LB1223
movw $0,6(%r8)
mov $0,%rbx
mov %rbx,%rax
jmp @readdir$END
@_$LB1223
@_$LB1220
mov %r8,%rdi
add $8,%rdi
mov 4(%r8),%bx
movswl %bx,%ebx
lea (%rdi,%rbx),%rsi
mov %rsi,%rbx
mov %rbx,%rdi
mov 16(%rdi),%si
mov 4(%r8),%bx
add %si,%bx
mov %bx,4(%r8)
mov %rdi,%rax
@readdir$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@include_cpio_start
.byte 48,55,48,55,48,49,48,48,48,48,48,48,48,50,48,48,48,48,52,49,69,68,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,51,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,50,48,48,48,48,48,48,48,48,46,0,48,55,48,55,48,49,48,48,48,48,48,48,48,51,48,48
.byte 48,48,56,49,65,52,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,50,57,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,69,48,48,48,48,48,48,48,48,46,47
.byte 100,105,114,101,110,116,46,99,0,0,0,0,35,105,102,110,100,101,102,32,95,68,73,82,69,78,84,95,67,95,10,35
.byte 100,101,102,105,110,101,32,95,68,73,82,69,78,84,95,67,95,10,35,105,110,99,108,117,100,101,32,34,115,121,115,99
.byte 97,108,108,46,99,34,10,35,100,101,102,105,110,101,32,68,73,82,80,95,83,73,90,69,32,49,48,49,54,10,115,116
.byte 114,117,99,116,32,100,105,114,101,110,116,10,123,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116
.byte 32,105,110,111,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,111,102,102,59,10,9,117
.byte 110,115,105,103,110,101,100,32,115,104,111,114,116,32,114,101,99,108,101,110,59,10,9,117,110,115,105,103,110,101,100,32
.byte 99,104,97,114,32,116,121,112,101,59,10,9,99,104,97,114,32,110,97,109,101,91,49,93,59,10,125,59,10,115,116,114
.byte 117,99,116,32,68,73,82,10,123,10,9,105,110,116,32,102,100,59,10,9,115,104,111,114,116,32,111,102,102,59,10,9
.byte 115,104,111,114,116,32,115,105,122,101,59,10,9,117,110,115,105,103,110,101,100,32,99,104,97,114,32,98,117,102,91,68
.byte 73,82,80,95,83,73,90,69,93,59,10,125,59,10,118,111,105,100,32,100,105,114,95,105,110,105,116,40,105,110,116,32
.byte 102,100,44,115,116,114,117,99,116,32,68,73,82,32,42,100,112,41,10,123,10,9,100,112,45,62,102,100,61,102,100,59
.byte 10,9,100,112,45,62,111,102,102,61,48,59,10,9,100,112,45,62,115,105,122,101,61,48,59,10,125,10,115,116,114,117
.byte 99,116,32,100,105,114,101,110,116,32,42,114,101,97,100,100,105,114,40,115,116,114,117,99,116,32,68,73,82,32,42,100
.byte 112,41,10,123,10,9,115,116,114,117,99,116,32,100,105,114,101,110,116,32,42,114,101,116,59,10,9,105,102,40,100,112
.byte 45,62,111,102,102,61,61,100,112,45,62,115,105,122,101,41,10,9,123,10,9,9,100,112,45,62,111,102,102,61,48,59
.byte 10,9,9,100,112,45,62,115,105,122,101,61,103,101,116,100,101,110,116,115,54,52,40,100,112,45,62,102,100,44,100,112
.byte 45,62,98,117,102,44,68,73,82,80,95,83,73,90,69,41,59,10,9,9,105,102,40,100,112,45,62,115,105,122,101,60
.byte 61,48,41,10,9,9,123,10,9,9,9,100,112,45,62,115,105,122,101,61,48,59,10,9,9,9,114,101,116,117,114,110
.byte 32,78,85,76,76,59,10,9,9,125,10,9,125,10,9,114,101,116,61,40,118,111,105,100,32,42,41,40,100,112,45,62
.byte 98,117,102,43,100,112,45,62,111,102,102,41,59,10,9,100,112,45,62,111,102,102,43,61,114,101,116,45,62,114,101,99
.byte 108,101,110,59,10,9,114,101,116,117,114,110,32,114,101,116,59,10,125,10,10,35,101,110,100,105,102,10,48,55,48,55
.byte 48,49,48,48,48,48,48,48,48,52,48,48,48,48,56,49,65,52,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48,48,48,48,50,65,70,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,65,48,48,48,48,48,48,48,48,46,47,102,108,111,97,116,46,99,0,35,105,102,110,100,101,102,32,95,70,76,79
.byte 65,84,95,67,95,10,35,100,101,102,105,110,101,32,95,70,76,79,65,84,95,67,95,10,35,100,101,102,105,110,101,32
.byte 95,69,82,82,79,82,32,48,46,48,48,48,48,48,48,48,48,48,48,48,48,48,49,10,102,108,111,97,116,32,115,113
.byte 114,116,40,102,108,111,97,116,32,97,41,10,123,10,9,102,108,111,97,116,32,114,101,116,44,98,59,10,9,114,101,116
.byte 61,49,46,48,59,10,9,100,111,10,9,123,10,9,9,98,61,114,101,116,59,10,9,9,114,101,116,61,98,42,48,46
.byte 53,43,97,47,40,50,46,48,42,98,41,59,10,9,125,10,9,119,104,105,108,101,40,98,47,114,101,116,62,49,46,48
.byte 43,95,69,82,82,79,82,124,124,98,47,114,101,116,60,49,46,48,45,95,69,82,82,79,82,124,124,98,45,114,101,116
.byte 60,45,95,69,82,82,79,82,124,124,98,45,114,101,116,62,95,69,82,82,79,82,41,59,10,9,114,101,116,117,114,110
.byte 32,114,101,116,59,10,125,10,102,108,111,97,116,32,95,115,105,110,40,102,108,111,97,116,32,97,41,10,123,10,9,102
.byte 108,111,97,116,32,110,44,114,101,116,44,110,49,44,98,59,10,9,114,101,116,61,48,46,48,59,10,9,110,61,49,46
.byte 48,59,10,9,110,49,61,45,51,46,48,59,10,9,98,61,97,59,10,9,97,61,97,42,97,59,10,9,119,104,105,108
.byte 101,40,49,46,48,47,110,62,95,69,82,82,79,82,124,124,49,46,48,47,110,60,45,95,69,82,82,79,82,41,10,9
.byte 123,10,9,9,114,101,116,43,61,98,47,110,59,10,9,9,98,42,61,97,59,10,9,9,110,42,61,45,110,49,42,40
.byte 110,49,43,49,46,48,41,59,10,9,9,110,49,45,61,50,46,48,59,10,9,125,10,9,114,101,116,117,114,110,32,114
.byte 101,116,59,10,125,10,102,108,111,97,116,32,99,111,115,40,102,108,111,97,116,32,97,41,10,123,10,9,105,102,40,97
.byte 60,49,46,48,38,38,97,62,45,49,46,48,41,10,9,123,10,9,9,97,61,95,115,105,110,40,97,41,59,10,9,9
.byte 114,101,116,117,114,110,32,115,113,114,116,40,49,46,48,45,97,42,97,41,59,10,9,125,10,9,97,61,99,111,115,40
.byte 97,42,48,46,53,41,59,10,9,97,61,50,46,48,42,97,42,97,45,49,46,48,59,10,9,114,101,116,117,114,110,32
.byte 97,59,10,125,10,102,108,111,97,116,32,115,105,110,40,102,108,111,97,116,32,97,41,10,123,10,9,105,102,40,97,60
.byte 49,46,48,38,38,97,62,45,49,46,48,41,10,9,123,10,9,9,114,101,116,117,114,110,32,95,115,105,110,40,97,41
.byte 59,10,9,125,10,9,114,101,116,117,114,110,32,99,111,115,40,97,45,51,46,49,52,49,53,57,50,54,53,51,53,56
.byte 57,55,57,51,50,42,48,46,53,41,59,10,125,10,35,117,110,100,101,102,32,95,69,82,82,79,82,10,35,101,110,100
.byte 105,102,10,0,48,55,48,55,48,49,48,48,48,48,48,48,48,53,48,48,48,48,56,49,65,52,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 56,66,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,65,48,48,48,48,48,48,48,48,46,47,101,114,114,111,114,46,99,0,35,105,102,110
.byte 100,101,102,32,95,69,82,82,79,82,95,67,95,10,35,100,101,102,105,110,101,32,95,69,82,82,79,82,95,67,95,10
.byte 35,100,101,102,105,110,101,32,69,65,71,65,73,78,32,49,49,10,35,100,101,102,105,110,101,32,69,69,88,73,83,84
.byte 32,49,55,10,35,100,101,102,105,110,101,32,69,78,79,84,68,73,82,32,50,48,10,35,100,101,102,105,110,101,32,69
.byte 80,73,80,69,32,51,50,10,35,100,101,102,105,110,101,32,69,78,65,77,69,84,79,79,76,79,78,71,32,51,54,10
.byte 35,101,110,100,105,102,10,0,48,55,48,55,48,49,48,48,48,48,48,48,48,54,48,48,48,48,56,49,65,52,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,53,56,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,69,48,48,48,48,48,48,48,48,46,47,115,105,103,110,97,108,46,99
.byte 0,0,0,0,35,105,102,110,100,101,102,32,95,83,73,71,78,65,76,95,67,95,10,35,100,101,102,105,110,101,32,95
.byte 83,73,71,78,65,76,95,67,95,10,35,105,110,99,108,117,100,101,32,34,115,121,115,99,97,108,108,46,99,34,10,35
.byte 105,110,99,108,117,100,101,32,34,109,101,109,46,99,34,10,115,116,114,117,99,116,32,115,105,103,97,99,116,105,111,110
.byte 10,123,10,9,118,111,105,100,32,40,42,104,97,110,100,108,101,114,41,40,105,110,116,41,59,10,9,105,110,116,32,102
.byte 108,97,103,115,59,10,9,105,110,116,32,112,97,100,59,10,9,118,111,105,100,32,40,42,114,101,115,116,111,114,101,114
.byte 41,40,118,111,105,100,41,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,32,105,110,116
.byte 32,109,97,115,107,91,49,54,93,59,10,125,59,10,115,116,114,117,99,116,32,115,105,103,115,101,116,10,123,10,9,117
.byte 110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,32,105,110,116,32,118,97,108,91,49,54,93,59,10,125
.byte 59,10,35,100,101,102,105,110,101,32,83,73,71,72,85,80,32,49,10,35,100,101,102,105,110,101,32,83,73,71,73,78
.byte 84,32,50,10,35,100,101,102,105,110,101,32,83,73,71,81,85,73,84,32,51,10,35,100,101,102,105,110,101,32,83,73
.byte 71,73,76,76,32,52,10,35,100,101,102,105,110,101,32,83,73,71,84,82,65,80,32,53,10,35,100,101,102,105,110,101
.byte 32,83,73,71,65,66,82,84,32,54,10,35,100,101,102,105,110,101,32,83,73,71,66,85,83,32,55,10,35,100,101,102
.byte 105,110,101,32,83,73,71,70,80,69,32,56,10,35,100,101,102,105,110,101,32,83,73,71,75,73,76,76,32,57,10,35
.byte 100,101,102,105,110,101,32,83,73,71,85,83,82,49,32,49,48,10,35,100,101,102,105,110,101,32,83,73,71,83,69,71
.byte 86,32,49,49,10,35,100,101,102,105,110,101,32,83,73,71,85,83,82,50,32,49,50,10,35,100,101,102,105,110,101,32
.byte 83,73,71,80,73,80,69,32,49,51,10,35,100,101,102,105,110,101,32,83,73,71,65,76,82,77,32,49,52,10,35,100
.byte 101,102,105,110,101,32,83,73,71,84,69,82,77,32,49,53,10,35,100,101,102,105,110,101,32,83,73,71,83,84,75,70
.byte 76,84,32,49,54,10,35,100,101,102,105,110,101,32,83,73,71,67,72,76,68,32,49,55,10,35,100,101,102,105,110,101
.byte 32,83,73,71,67,79,78,84,32,49,56,10,35,100,101,102,105,110,101,32,83,73,71,83,84,79,80,32,49,57,10,35
.byte 100,101,102,105,110,101,32,83,73,71,84,83,84,80,32,50,48,10,35,100,101,102,105,110,101,32,83,73,71,84,84,73
.byte 78,32,50,49,10,35,100,101,102,105,110,101,32,83,73,71,84,84,79,85,32,50,50,10,35,100,101,102,105,110,101,32
.byte 83,73,71,85,82,71,32,50,51,10,35,100,101,102,105,110,101,32,83,73,71,88,67,80,85,32,50,52,10,35,100,101
.byte 102,105,110,101,32,83,73,71,88,70,83,90,32,50,53,10,35,100,101,102,105,110,101,32,83,73,71,86,84,65,76,82
.byte 77,32,50,54,10,35,100,101,102,105,110,101,32,83,73,71,80,82,79,70,32,50,55,10,35,100,101,102,105,110,101,32
.byte 83,73,71,87,73,78,67,72,32,50,56,10,35,100,101,102,105,110,101,32,83,73,71,73,79,32,50,57,10,35,100,101
.byte 102,105,110,101,32,83,73,71,80,87,82,32,51,48,10,35,100,101,102,105,110,101,32,83,73,71,83,89,83,32,51,49
.byte 10,118,111,105,100,32,95,95,100,101,102,95,115,105,103,114,101,116,117,114,110,40,118,111,105,100,41,59,10,97,115,109
.byte 32,34,64,95,95,100,101,102,95,115,105,103,114,101,116,117,114,110,34,10,97,115,109,32,34,109,111,118,32,36,49,53
.byte 44,37,101,97,120,34,10,97,115,109,32,34,115,121,115,99,97,108,108,34,10,97,115,109,32,34,106,109,112,32,64,95
.byte 95,100,101,102,95,115,105,103,114,101,116,117,114,110,34,10,35,100,101,102,105,110,101,32,83,73,71,95,68,70,76,32
.byte 40,40,118,111,105,100,32,42,41,48,41,10,35,100,101,102,105,110,101,32,83,73,71,95,73,71,78,32,40,40,118,111
.byte 105,100,32,42,41,49,41,10,35,100,101,102,105,110,101,32,83,65,95,82,69,83,84,79,82,69,82,32,48,120,52,48
.byte 48,48,48,48,48,10,10,35,100,101,102,105,110,101,32,83,73,71,95,66,76,79,67,75,32,48,10,35,100,101,102,105
.byte 110,101,32,83,73,71,95,85,78,66,76,79,67,75,32,49,10,47,47,32,78,79,84,69,58,32,84,104,101,32,83,73
.byte 71,32,97,114,103,117,109,101,110,116,32,111,102,32,115,105,103,110,97,108,32,104,97,110,100,108,101,114,32,105,115,32
.byte 117,110,114,101,108,105,97,98,108,101,32,105,110,32,83,67,67,32,101,110,118,105,114,111,110,109,101,110,116,46,10,118
.byte 111,105,100,32,40,42,115,105,103,110,97,108,40,105,110,116,32,115,105,103,44,118,111,105,100,32,40,42,104,97,110,100
.byte 108,101,114,41,40,105,110,116,41,41,41,40,105,110,116,41,10,123,10,9,115,116,114,117,99,116,32,115,105,103,97,99
.byte 116,105,111,110,32,97,99,116,44,111,108,100,95,97,99,116,59,10,9,109,101,109,115,101,116,40,38,97,99,116,44,48
.byte 44,115,105,122,101,111,102,40,97,99,116,41,41,59,10,9,97,99,116,46,104,97,110,100,108,101,114,61,104,97,110,100
.byte 108,101,114,59,10,9,97,99,116,46,102,108,97,103,115,61,83,65,95,82,69,83,84,79,82,69,82,59,10,9,97,99
.byte 116,46,114,101,115,116,111,114,101,114,61,95,95,100,101,102,95,115,105,103,114,101,116,117,114,110,59,10,9,115,121,115
.byte 99,97,108,108,40,49,51,44,115,105,103,44,38,97,99,116,44,38,111,108,100,95,97,99,116,44,56,44,48,44,48,41
.byte 59,10,9,114,101,116,117,114,110,32,111,108,100,95,97,99,116,46,104,97,110,100,108,101,114,59,10,125,10,35,101,110
.byte 100,105,102,10,48,55,48,55,48,49,48,48,48,48,48,48,48,55,48,48,48,48,56,49,65,52,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48,48,48,48,49
.byte 69,67,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,69,48,48,48,48,48,48,48,48,46,47,115,111,99,107,95,114,101,97,100,46,99,0
.byte 35,105,102,110,100,101,102,32,95,83,79,67,75,95,82,69,65,68,95,67,95,10,35,100,101,102,105,110,101,32,95,83
.byte 79,67,75,95,82,69,65,68,95,67,95,10,35,105,110,99,108,117,100,101,32,34,115,121,115,99,97,108,108,46,99,34
.byte 10,35,105,110,99,108,117,100,101,32,34,115,111,99,107,101,116,46,99,34,10,35,105,110,99,108,117,100,101,32,34,112
.byte 111,108,108,46,99,34,10,105,110,116,32,115,111,99,107,95,114,101,97,100,40,105,110,116,32,102,100,44,118,111,105,100
.byte 32,42,98,117,102,44,105,110,116,32,115,105,122,101,41,10,123,10,9,115,116,114,117,99,116,32,112,111,108,108,102,100
.byte 32,112,102,100,59,10,9,105,110,116,32,110,44,120,59,10,9,110,61,48,59,10,9,119,104,105,108,101,40,110,60,115
.byte 105,122,101,41,10,9,123,10,9,9,112,102,100,46,102,100,61,102,100,59,10,9,9,112,102,100,46,101,118,101,110,116
.byte 115,61,80,79,76,76,73,78,59,10,9,9,112,102,100,46,114,101,118,101,110,116,115,61,48,59,10,9,9,105,102,40
.byte 112,111,108,108,40,38,112,102,100,44,49,44,45,49,41,61,61,49,41,10,9,9,123,10,9,9,9,105,102,40,112,102
.byte 100,46,114,101,118,101,110,116,115,38,80,79,76,76,72,85,80,41,10,9,9,9,123,10,9,9,9,9,98,114,101,97
.byte 107,59,10,9,9,9,125,10,9,9,9,101,108,115,101,32,105,102,40,112,102,100,46,114,101,118,101,110,116,115,38,80
.byte 79,76,76,73,78,41,10,9,9,9,123,10,9,9,9,9,120,61,114,101,97,100,40,102,100,44,98,117,102,44,115,105
.byte 122,101,45,110,41,59,10,9,9,9,9,105,102,40,120,60,48,41,10,9,9,9,9,123,10,9,9,9,9,9,98,114
.byte 101,97,107,59,10,9,9,9,9,125,10,9,9,9,9,110,43,61,120,59,10,9,9,9,9,98,117,102,61,40,99,104
.byte 97,114,32,42,41,98,117,102,43,120,59,10,9,9,9,125,10,9,9,125,10,9,125,10,9,114,101,116,117,114,110,32
.byte 110,59,10,125,10,35,101,110,100,105,102,10,48,55,48,55,48,49,48,48,48,48,48,48,48,56,48,48,48,48,52,49
.byte 69,68,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,50,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,69,48,48,48,48,48,48,48,48,46,47,116,101,109,112
.byte 108,97,116,101,115,0,0,0,48,55,48,55,48,49,48,48,48,48,48,48,48,57,48,48,48,48,56,49,65,52,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48
.byte 48,48,50,54,55,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,49,54,48,48,48,48,48,48,48,48,46,47,116,101,109,112,108,97,116,101
.byte 115,47,114,98,116,114,101,101,46,99,0,0,47,42,32,84,104,105,115,32,102,105,108,101,32,105,115,32,97,32,116,101
.byte 109,112,108,97,116,101,46,10,32,42,32,84,111,32,117,115,101,32,116,104,105,115,32,116,101,109,112,108,97,116,101,44
.byte 32,35,100,101,102,105,110,101,32,115,111,109,101,32,109,97,99,114,111,115,32,97,110,100,32,35,105,110,99,108,117,100
.byte 101,32,105,116,46,10,32,42,10,32,42,32,77,97,99,114,111,115,58,10,32,42,32,82,66,84,82,69,69,95,84,89
.byte 80,69,32,45,45,32,82,66,84,82,69,69,32,115,116,114,117,99,116,117,114,101,32,116,121,112,101,10,32,42,32,82
.byte 66,84,82,69,69,95,67,77,80,40,110,111,100,101,49,44,32,110,111,100,101,50,41,32,45,45,32,102,117,110,99,116
.byte 105,111,110,32,116,111,32,99,111,109,112,97,114,101,32,116,119,111,32,110,111,100,101,115,44,32,114,101,116,117,114,110
.byte 115,32,49,32,105,102,32,110,111,100,101,49,32,62,32,110,111,100,101,50,44,32,48,32,105,102,32,110,111,100,101,49
.byte 32,60,61,32,110,111,100,101,50,10,32,42,32,82,66,84,82,69,69,95,67,79,76,79,82,32,45,45,32,67,79,76
.byte 79,82,32,102,105,101,108,100,32,111,102,32,82,66,84,82,69,69,32,115,116,114,117,99,116,117,114,101,44,32,97,116
.byte 32,108,101,97,115,116,32,49,32,98,105,116,10,32,42,32,82,66,84,82,69,69,95,76,69,70,84,32,45,45,32,76
.byte 69,70,84,95,80,79,73,78,84,69,82,32,102,105,101,108,100,32,111,102,32,82,66,84,82,69,69,32,115,116,114,117
.byte 99,116,117,114,101,10,32,42,32,82,66,84,82,69,69,95,82,73,71,72,84,32,45,45,32,82,73,71,72,84,95,80
.byte 79,73,78,84,69,82,32,102,105,101,108,100,32,111,102,32,82,66,84,82,69,69,32,115,116,114,117,99,116,117,114,101
.byte 10,32,42,32,82,66,84,82,69,69,95,80,65,82,69,78,84,32,45,45,32,80,65,82,69,78,84,95,80,79,73,78
.byte 84,69,82,32,102,105,101,108,100,32,111,102,32,82,66,84,82,69,69,32,115,116,114,117,99,116,117,114,101,10,32,42
.byte 32,82,66,84,82,69,69,95,73,78,83,69,82,84,32,45,45,32,110,97,109,101,32,111,102,32,102,117,110,99,116,105
.byte 111,110,32,116,111,32,105,110,115,101,114,116,32,97,32,110,111,100,101,32,105,110,116,111,32,82,66,84,82,69,69,10
.byte 32,42,32,82,66,84,82,69,69,95,68,69,76,69,84,69,32,45,45,32,110,97,109,101,32,111,102,32,102,117,110,99
.byte 116,105,111,110,32,116,111,32,100,101,108,101,116,101,32,97,32,110,111,100,101,32,102,114,111,109,32,82,66,84,82,69
.byte 69,10,32,42,32,82,66,84,82,69,69,95,70,73,78,68,32,45,45,32,110,97,109,101,32,111,102,32,102,117,110,99
.byte 116,105,111,110,32,116,111,32,102,105,110,100,32,97,32,110,111,100,101,32,105,110,32,82,66,84,82,69,69,10,32,42
.byte 32,82,66,84,82,69,69,95,78,69,88,84,32,45,45,32,110,97,109,101,32,111,102,32,102,117,110,99,116,105,111,110
.byte 32,116,111,32,108,111,99,97,116,101,32,34,110,101,120,116,34,32,110,111,100,101,10,32,42,32,82,66,84,82,69,69
.byte 95,80,82,69,86,32,45,45,32,110,97,109,101,32,111,102,32,102,117,110,99,116,105,111,110,32,116,111,32,108,111,99
.byte 97,116,101,32,34,112,114,101,118,105,111,117,115,34,32,110,111,100,101,10,32,42,32,42,47,10,35,100,101,102,105,110
.byte 101,32,82,66,84,82,69,69,95,82,69,68,32,48,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,66,76
.byte 65,67,75,32,49,10,35,105,102,100,101,102,32,82,66,84,82,69,69,95,73,78,83,69,82,84,10,118,111,105,100,32
.byte 82,66,84,82,69,69,95,73,78,83,69,82,84,40,82,66,84,82,69,69,95,84,89,80,69,32,42,42,114,111,111,116
.byte 44,82,66,84,82,69,69,95,84,89,80,69,32,42,110,111,100,101,41,10,123,10,9,82,66,84,82,69,69,95,84,89
.byte 80,69,32,42,112,44,42,112,112,44,42,112,97,44,42,112,114,44,42,105,110,115,101,114,116,95,112,111,115,59,10,9
.byte 105,110,116,32,105,102,95,108,101,102,116,59,10,9,105,102,40,42,114,111,111,116,61,61,48,41,10,9,123,10,9,9
.byte 42,114,111,111,116,61,110,111,100,101,59,10,9,9,110,111,100,101,45,62,82,66,84,82,69,69,95,67,79,76,79,82
.byte 61,82,66,84,82,69,69,95,66,76,65,67,75,59,10,9,9,110,111,100,101,45,62,82,66,84,82,69,69,95,76,69
.byte 70,84,61,48,59,10,9,9,110,111,100,101,45,62,82,66,84,82,69,69,95,82,73,71,72,84,61,48,59,10,9,9
.byte 110,111,100,101,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,61,48,59,10,9,9,114,101,116,117,114,110,59
.byte 10,9,125,10,9,112,61,42,114,111,111,116,59,10,9,100,111,10,9,123,10,9,9,105,110,115,101,114,116,95,112,111
.byte 115,61,112,59,10,9,9,105,102,40,82,66,84,82,69,69,95,67,77,80,40,110,111,100,101,44,105,110,115,101,114,116
.byte 95,112,111,115,41,41,10,9,9,123,10,9,9,9,112,61,105,110,115,101,114,116,95,112,111,115,45,62,82,66,84,82
.byte 69,69,95,82,73,71,72,84,59,10,9,9,9,105,102,95,108,101,102,116,61,48,59,10,9,9,125,10,9,9,101,108
.byte 115,101,10,9,9,123,10,9,9,9,112,61,105,110,115,101,114,116,95,112,111,115,45,62,82,66,84,82,69,69,95,76
.byte 69,70,84,59,10,9,9,9,105,102,95,108,101,102,116,61,49,59,10,9,9,125,10,9,125,10,9,119,104,105,108,101
.byte 40,112,41,59,10,9,105,102,40,105,102,95,108,101,102,116,41,10,9,123,10,9,9,105,110,115,101,114,116,95,112,111
.byte 115,45,62,82,66,84,82,69,69,95,76,69,70,84,61,110,111,100,101,59,10,9,125,10,9,101,108,115,101,10,9,123
.byte 10,9,9,105,110,115,101,114,116,95,112,111,115,45,62,82,66,84,82,69,69,95,82,73,71,72,84,61,110,111,100,101
.byte 59,10,9,125,10,9,110,111,100,101,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66,84,82,69,69,95
.byte 82,69,68,59,10,9,110,111,100,101,45,62,82,66,84,82,69,69,95,76,69,70,84,61,48,59,10,9,110,111,100,101
.byte 45,62,82,66,84,82,69,69,95,82,73,71,72,84,61,48,59,10,9,110,111,100,101,45,62,82,66,84,82,69,69,95
.byte 80,65,82,69,78,84,61,105,110,115,101,114,116,95,112,111,115,59,10,9,112,61,105,110,115,101,114,116,95,112,111,115
.byte 59,10,9,105,102,40,112,61,61,48,124,124,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,61,82,66,84
.byte 82,69,69,95,66,76,65,67,75,41,10,9,123,10,9,9,114,101,116,117,114,110,59,10,9,125,10,9,112,112,61,105
.byte 110,115,101,114,116,95,112,111,115,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,59,10,9,119,104,105,108,101
.byte 40,49,41,10,9,123,10,9,9,105,102,40,112,112,45,62,82,66,84,82,69,69,95,76,69,70,84,61,61,112,41,10
.byte 9,9,123,10,9,9,9,112,97,61,112,112,45,62,82,66,84,82,69,69,95,82,73,71,72,84,59,10,9,9,9,105
.byte 102,40,112,97,38,38,112,97,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,61,82,66,84,82,69,69,95,82
.byte 69,68,41,10,9,9,9,123,10,9,9,9,9,112,97,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66
.byte 84,82,69,69,95,66,76,65,67,75,59,10,9,9,9,9,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61
.byte 82,66,84,82,69,69,95,66,76,65,67,75,59,10,9,9,9,9,112,112,45,62,82,66,84,82,69,69,95,67,79,76
.byte 79,82,61,82,66,84,82,69,69,95,82,69,68,59,10,9,9,9,9,110,111,100,101,61,112,112,59,10,9,9,9,9
.byte 112,61,110,111,100,101,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,59,10,9,9,9,9,105,102,40,112,61
.byte 61,48,124,124,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,61,82,66,84,82,69,69,95,66,76,65,67
.byte 75,41,10,9,9,9,9,123,10,9,9,9,9,9,98,114,101,97,107,59,10,9,9,9,9,125,10,9,9,9,9,112
.byte 112,61,112,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,59,10,9,9,9,125,10,9,9,9,101,108,115,101
.byte 10,9,9,9,123,10,9,9,9,9,105,102,40,112,45,62,82,66,84,82,69,69,95,82,73,71,72,84,61,61,110,111
.byte 100,101,41,10,9,9,9,9,123,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,82,79,84,65,84,69,95
.byte 76,69,70,84,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69,32
.byte 112,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,80,65,82,69,78,84,95,82,79,84,65,84,69,32,112
.byte 112,10,35,105,110,99,108,117,100,101,32,34,114,98,116,114,101,101,95,114,111,116,97,116,101,46,99,34,10,9,9,9
.byte 9,9,112,61,110,111,100,101,59,10,9,9,9,9,9,110,111,100,101,61,112,45,62,82,66,84,82,69,69,95,76,69
.byte 70,84,59,10,9,9,9,9,125,10,9,9,9,9,112,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82
.byte 66,84,82,69,69,95,82,69,68,59,10,9,9,9,9,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82
.byte 66,84,82,69,69,95,66,76,65,67,75,59,10,9,9,9,9,112,114,61,112,112,45,62,82,66,84,82,69,69,95,80
.byte 65,82,69,78,84,59,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84
.byte 69,32,112,112,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,80,65,82,69,78,84,95,82,79,84,65,84
.byte 69,32,112,114,10,35,105,110,99,108,117,100,101,32,34,114,98,116,114,101,101,95,114,111,116,97,116,101,46,99,34,10
.byte 9,9,9,9,98,114,101,97,107,59,10,9,9,9,125,10,9,9,125,10,9,9,101,108,115,101,10,9,9,123,10,9
.byte 9,9,112,97,61,112,112,45,62,82,66,84,82,69,69,95,76,69,70,84,59,10,9,9,9,105,102,40,112,97,38,38
.byte 112,97,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,61,82,66,84,82,69,69,95,82,69,68,41,10,9,9
.byte 9,123,10,9,9,9,9,112,97,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66,84,82,69,69,95,66
.byte 76,65,67,75,59,10,9,9,9,9,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66,84,82,69,69
.byte 95,66,76,65,67,75,59,10,9,9,9,9,112,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66,84
.byte 82,69,69,95,82,69,68,59,10,9,9,9,9,110,111,100,101,61,112,112,59,10,9,9,9,9,112,61,110,111,100,101
.byte 45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,59,10,9,9,9,9,105,102,40,112,61,61,48,124,124,112,45
.byte 62,82,66,84,82,69,69,95,67,79,76,79,82,61,61,82,66,84,82,69,69,95,66,76,65,67,75,41,10,9,9,9
.byte 9,123,10,9,9,9,9,9,98,114,101,97,107,59,10,9,9,9,9,125,10,9,9,9,9,112,112,61,112,45,62,82
.byte 66,84,82,69,69,95,80,65,82,69,78,84,59,10,9,9,9,125,10,9,9,9,101,108,115,101,10,9,9,9,123,10
.byte 9,9,9,9,105,102,40,112,45,62,82,66,84,82,69,69,95,76,69,70,84,61,61,110,111,100,101,41,10,9,9,9
.byte 9,123,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69,32,112,10
.byte 35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,80,65,82,69,78,84,95,82,79,84,65,84,69,32,112,112,10
.byte 35,105,110,99,108,117,100,101,32,34,114,98,116,114,101,101,95,114,111,116,97,116,101,46,99,34,10,9,9,9,9,9
.byte 112,61,110,111,100,101,59,10,9,9,9,9,9,110,111,100,101,61,112,45,62,82,66,84,82,69,69,95,82,73,71,72
.byte 84,59,10,9,9,9,9,125,10,9,9,9,9,112,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66
.byte 84,82,69,69,95,82,69,68,59,10,9,9,9,9,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66
.byte 84,82,69,69,95,66,76,65,67,75,59,10,9,9,9,9,112,114,61,112,112,45,62,82,66,84,82,69,69,95,80,65
.byte 82,69,78,84,59,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,82,79,84,65,84,69,95,76,69,70,84
.byte 10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69,32,112,112,10,35
.byte 100,101,102,105,110,101,32,82,66,84,82,69,69,95,80,65,82,69,78,84,95,82,79,84,65,84,69,32,112,114,10,35
.byte 105,110,99,108,117,100,101,32,34,114,98,116,114,101,101,95,114,111,116,97,116,101,46,99,34,10,9,9,9,9,98,114
.byte 101,97,107,59,10,9,9,9,125,10,9,9,125,10,9,125,10,9,40,42,114,111,111,116,41,45,62,82,66,84,82,69
.byte 69,95,67,79,76,79,82,61,82,66,84,82,69,69,95,66,76,65,67,75,59,10,125,10,35,117,110,100,101,102,32,82
.byte 66,84,82,69,69,95,73,78,83,69,82,84,10,35,101,110,100,105,102,10,10,35,105,102,100,101,102,32,82,66,84,82
.byte 69,69,95,68,69,76,69,84,69,10,82,66,84,82,69,69,95,84,89,80,69,32,42,82,66,84,82,69,69,95,68,69
.byte 76,69,84,69,40,82,66,84,82,69,69,95,84,89,80,69,32,42,42,114,111,111,116,44,82,66,84,82,69,69,95,84
.byte 89,80,69,32,42,110,111,100,101,41,10,123,10,9,82,66,84,82,69,69,95,84,89,80,69,32,42,110,44,42,112,44
.byte 42,112,49,44,42,112,50,44,42,110,49,59,10,9,105,110,116,32,105,102,95,108,101,102,116,44,99,111,108,111,114,59
.byte 10,9,110,61,42,114,111,111,116,59,10,9,119,104,105,108,101,40,49,41,10,9,123,10,9,9,105,102,40,110,61,61
.byte 48,41,10,9,9,123,10,9,9,9,114,101,116,117,114,110,32,48,59,10,9,9,125,10,9,9,105,102,40,82,66,84
.byte 82,69,69,95,67,77,80,40,110,111,100,101,44,110,41,41,10,9,9,123,10,9,9,9,110,61,110,45,62,82,66,84
.byte 82,69,69,95,82,73,71,72,84,59,10,9,9,125,10,9,9,101,108,115,101,32,105,102,40,82,66,84,82,69,69,95
.byte 67,77,80,40,110,44,110,111,100,101,41,41,10,9,9,123,10,9,9,9,110,61,110,45,62,82,66,84,82,69,69,95
.byte 76,69,70,84,59,10,9,9,125,10,9,9,101,108,115,101,10,9,9,123,10,9,9,9,98,114,101,97,107,59,10,9
.byte 9,125,10,9,125,10,9,110,49,61,110,59,10,9,105,102,40,110,45,62,82,66,84,82,69,69,95,76,69,70,84,61
.byte 61,48,41,10,9,123,10,9,9,105,102,40,110,45,62,82,66,84,82,69,69,95,82,73,71,72,84,61,61,48,41,10
.byte 9,9,123,10,9,9,9,112,61,110,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,59,10,9,9,9,105,102
.byte 40,112,41,10,9,9,9,123,10,9,9,9,9,105,102,40,112,45,62,82,66,84,82,69,69,95,76,69,70,84,61,61
.byte 110,41,10,9,9,9,9,123,10,9,9,9,9,9,112,45,62,82,66,84,82,69,69,95,76,69,70,84,61,48,59,10
.byte 9,9,9,9,9,105,102,95,108,101,102,116,61,49,59,10,9,9,9,9,125,10,9,9,9,9,101,108,115,101,10,9
.byte 9,9,9,123,10,9,9,9,9,9,112,45,62,82,66,84,82,69,69,95,82,73,71,72,84,61,48,59,10,9,9,9
.byte 9,9,105,102,95,108,101,102,116,61,48,59,10,9,9,9,9,125,10,9,9,9,125,10,9,9,9,101,108,115,101,10
.byte 9,9,9,123,10,9,9,9,9,42,114,111,111,116,61,48,59,10,9,9,9,9,114,101,116,117,114,110,32,110,49,59
.byte 10,9,9,9,125,10,9,9,125,10,9,9,101,108,115,101,10,9,9,123,10,9,9,9,112,61,110,45,62,82,66,84
.byte 82,69,69,95,80,65,82,69,78,84,59,10,9,9,9,105,102,40,112,41,10,9,9,9,123,10,9,9,9,9,105,102
.byte 40,112,45,62,82,66,84,82,69,69,95,76,69,70,84,61,61,110,41,10,9,9,9,9,123,10,9,9,9,9,9,112
.byte 45,62,82,66,84,82,69,69,95,76,69,70,84,61,110,45,62,82,66,84,82,69,69,95,82,73,71,72,84,59,10,9
.byte 9,9,9,9,105,102,95,108,101,102,116,61,49,59,10,9,9,9,9,125,10,9,9,9,9,101,108,115,101,10,9,9
.byte 9,9,123,10,9,9,9,9,9,112,45,62,82,66,84,82,69,69,95,82,73,71,72,84,61,110,45,62,82,66,84,82
.byte 69,69,95,82,73,71,72,84,59,10,9,9,9,9,9,105,102,95,108,101,102,116,61,48,59,10,9,9,9,9,125,10
.byte 9,9,9,9,110,45,62,82,66,84,82,69,69,95,82,73,71,72,84,45,62,82,66,84,82,69,69,95,80,65,82,69
.byte 78,84,61,112,59,10,9,9,9,125,10,9,9,9,101,108,115,101,10,9,9,9,123,10,9,9,9,9,42,114,111,111
.byte 116,61,110,45,62,82,66,84,82,69,69,95,82,73,71,72,84,59,10,9,9,9,9,110,45,62,82,66,84,82,69,69
.byte 95,82,73,71,72,84,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,61,48,59,10,9,9,9,9,40,42,114
.byte 111,111,116,41,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66,84,82,69,69,95,66,76,65,67,75,59
.byte 10,9,9,9,9,114,101,116,117,114,110,32,110,49,59,10,9,9,9,125,10,9,9,125,10,9,9,99,111,108,111,114
.byte 61,110,45,62,82,66,84,82,69,69,95,67,79,76,79,82,59,10,9,125,10,9,101,108,115,101,32,105,102,40,110,45
.byte 62,82,66,84,82,69,69,95,82,73,71,72,84,61,61,48,41,10,9,123,10,9,9,112,61,110,45,62,82,66,84,82
.byte 69,69,95,80,65,82,69,78,84,59,10,9,9,105,102,40,112,41,10,9,9,123,10,9,9,9,105,102,40,112,45,62
.byte 82,66,84,82,69,69,95,76,69,70,84,61,61,110,41,10,9,9,9,123,10,9,9,9,9,112,45,62,82,66,84,82
.byte 69,69,95,76,69,70,84,61,110,45,62,82,66,84,82,69,69,95,76,69,70,84,59,10,9,9,9,9,105,102,95,108
.byte 101,102,116,61,49,59,10,9,9,9,125,10,9,9,9,101,108,115,101,10,9,9,9,123,10,9,9,9,9,112,45,62
.byte 82,66,84,82,69,69,95,82,73,71,72,84,61,110,45,62,82,66,84,82,69,69,95,76,69,70,84,59,10,9,9,9
.byte 9,105,102,95,108,101,102,116,61,48,59,10,9,9,9,125,10,9,9,9,110,45,62,82,66,84,82,69,69,95,76,69
.byte 70,84,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,61,112,59,10,9,9,125,10,9,9,101,108,115,101,10
.byte 9,9,123,10,9,9,9,42,114,111,111,116,61,110,45,62,82,66,84,82,69,69,95,76,69,70,84,59,10,9,9,9
.byte 110,45,62,82,66,84,82,69,69,95,76,69,70,84,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,61,48,59
.byte 10,9,9,9,40,42,114,111,111,116,41,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66,84,82,69,69
.byte 95,66,76,65,67,75,59,10,9,9,9,114,101,116,117,114,110,32,110,49,59,10,9,9,125,10,9,9,99,111,108,111
.byte 114,61,110,45,62,82,66,84,82,69,69,95,67,79,76,79,82,59,10,9,125,10,9,101,108,115,101,10,9,123,10,9
.byte 9,112,49,61,110,45,62,82,66,84,82,69,69,95,82,73,71,72,84,59,10,9,9,119,104,105,108,101,40,112,49,45
.byte 62,82,66,84,82,69,69,95,76,69,70,84,41,10,9,9,123,10,9,9,9,112,49,61,112,49,45,62,82,66,84,82
.byte 69,69,95,76,69,70,84,59,10,9,9,125,10,9,9,105,102,40,112,49,61,61,110,45,62,82,66,84,82,69,69,95
.byte 82,73,71,72,84,41,10,9,9,123,10,9,9,9,112,61,110,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84
.byte 59,10,9,9,9,105,102,40,112,41,10,9,9,9,123,10,9,9,9,9,105,102,40,112,45,62,82,66,84,82,69,69
.byte 95,76,69,70,84,61,61,110,41,10,9,9,9,9,123,10,9,9,9,9,9,112,45,62,82,66,84,82,69,69,95,76
.byte 69,70,84,61,112,49,59,10,9,9,9,9,125,10,9,9,9,9,101,108,115,101,10,9,9,9,9,123,10,9,9,9
.byte 9,9,112,45,62,82,66,84,82,69,69,95,82,73,71,72,84,61,112,49,59,10,9,9,9,9,125,10,9,9,9,125
.byte 10,9,9,9,101,108,115,101,10,9,9,9,123,10,9,9,9,9,42,114,111,111,116,61,112,49,59,10,9,9,9,125
.byte 10,9,9,9,112,49,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,61,112,59,10,9,9,9,112,49,45,62
.byte 82,66,84,82,69,69,95,76,69,70,84,61,110,45,62,82,66,84,82,69,69,95,76,69,70,84,59,10,9,9,9,110
.byte 45,62,82,66,84,82,69,69,95,76,69,70,84,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,61,112,49,59
.byte 10,9,9,9,99,111,108,111,114,61,112,49,45,62,82,66,84,82,69,69,95,67,79,76,79,82,59,10,9,9,9,112
.byte 49,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,110,45,62,82,66,84,82,69,69,95,67,79,76,79,82,59
.byte 10,9,9,9,112,61,112,49,59,10,9,9,9,105,102,95,108,101,102,116,61,48,59,10,9,9,125,10,9,9,101,108
.byte 115,101,10,9,9,123,10,9,9,9,112,61,112,49,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,59,10,9
.byte 9,9,105,102,40,112,45,62,82,66,84,82,69,69,95,76,69,70,84,61,61,112,49,41,10,9,9,9,123,10,9,9
.byte 9,9,112,45,62,82,66,84,82,69,69,95,76,69,70,84,61,112,49,45,62,82,66,84,82,69,69,95,82,73,71,72
.byte 84,59,10,9,9,9,125,10,9,9,9,101,108,115,101,10,9,9,9,123,10,9,9,9,9,112,45,62,82,66,84,82
.byte 69,69,95,82,73,71,72,84,61,112,49,45,62,82,66,84,82,69,69,95,82,73,71,72,84,59,10,9,9,9,125,10
.byte 9,9,9,105,102,40,112,49,45,62,82,66,84,82,69,69,95,82,73,71,72,84,41,10,9,9,9,123,10,9,9,9
.byte 9,112,49,45,62,82,66,84,82,69,69,95,82,73,71,72,84,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84
.byte 61,112,59,10,9,9,9,125,10,9,9,9,112,49,45,62,82,66,84,82,69,69,95,76,69,70,84,61,110,45,62,82
.byte 66,84,82,69,69,95,76,69,70,84,59,10,9,9,9,112,49,45,62,82,66,84,82,69,69,95,82,73,71,72,84,61
.byte 110,45,62,82,66,84,82,69,69,95,82,73,71,72,84,59,10,9,9,9,112,49,45,62,82,66,84,82,69,69,95,80
.byte 65,82,69,78,84,61,110,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,59,10,9,9,9,99,111,108,111,114
.byte 61,112,49,45,62,82,66,84,82,69,69,95,67,79,76,79,82,59,10,9,9,9,112,49,45,62,82,66,84,82,69,69
.byte 95,67,79,76,79,82,61,110,45,62,82,66,84,82,69,69,95,67,79,76,79,82,59,10,9,9,9,112,50,61,110,45
.byte 62,82,66,84,82,69,69,95,80,65,82,69,78,84,59,10,9,9,9,105,102,40,112,50,41,10,9,9,9,123,10,9
.byte 9,9,9,105,102,40,112,50,45,62,82,66,84,82,69,69,95,76,69,70,84,61,61,110,41,10,9,9,9,9,123,10
.byte 9,9,9,9,9,112,50,45,62,82,66,84,82,69,69,95,76,69,70,84,61,112,49,59,10,9,9,9,9,125,10,9
.byte 9,9,9,101,108,115,101,10,9,9,9,9,123,10,9,9,9,9,9,112,50,45,62,82,66,84,82,69,69,95,82,73
.byte 71,72,84,61,112,49,59,10,9,9,9,9,125,10,9,9,9,125,10,9,9,9,101,108,115,101,10,9,9,9,123,10
.byte 9,9,9,9,42,114,111,111,116,61,112,49,59,10,9,9,9,125,10,9,9,9,105,102,40,110,45,62,82,66,84,82
.byte 69,69,95,76,69,70,84,41,10,9,9,9,123,10,9,9,9,9,110,45,62,82,66,84,82,69,69,95,76,69,70,84
.byte 45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,61,112,49,59,10,9,9,9,125,10,9,9,9,105,102,40,110
.byte 45,62,82,66,84,82,69,69,95,82,73,71,72,84,41,10,9,9,9,123,10,9,9,9,9,110,45,62,82,66,84,82
.byte 69,69,95,82,73,71,72,84,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,61,112,49,59,10,9,9,9,125
.byte 10,9,9,9,105,102,95,108,101,102,116,61,49,59,10,9,9,125,10,9,125,10,9,105,102,40,99,111,108,111,114,61
.byte 61,82,66,84,82,69,69,95,82,69,68,41,10,9,123,10,9,9,114,101,116,117,114,110,32,110,49,59,10,9,125,10
.byte 9,110,61,112,59,10,9,119,104,105,108,101,40,49,41,10,9,123,10,9,9,105,102,40,105,102,95,108,101,102,116,41
.byte 10,9,9,123,10,9,9,9,105,102,40,110,45,62,82,66,84,82,69,69,95,76,69,70,84,38,38,110,45,62,82,66
.byte 84,82,69,69,95,76,69,70,84,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,61,82,66,84,82,69,69,95
.byte 82,69,68,41,10,9,9,9,123,10,9,9,9,9,110,45,62,82,66,84,82,69,69,95,76,69,70,84,45,62,82,66
.byte 84,82,69,69,95,67,79,76,79,82,61,82,66,84,82,69,69,95,66,76,65,67,75,59,10,9,9,9,9,98,114,101
.byte 97,107,59,10,9,9,9,125,10,9,9,9,112,61,110,45,62,82,66,84,82,69,69,95,82,73,71,72,84,59,10,9
.byte 9,125,10,9,9,101,108,115,101,10,9,9,123,10,9,9,9,105,102,40,110,45,62,82,66,84,82,69,69,95,82,73
.byte 71,72,84,38,38,110,45,62,82,66,84,82,69,69,95,82,73,71,72,84,45,62,82,66,84,82,69,69,95,67,79,76
.byte 79,82,61,61,82,66,84,82,69,69,95,82,69,68,41,10,9,9,9,123,10,9,9,9,9,110,45,62,82,66,84,82
.byte 69,69,95,82,73,71,72,84,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66,84,82,69,69,95,66,76
.byte 65,67,75,59,10,9,9,9,9,98,114,101,97,107,59,10,9,9,9,125,10,9,9,9,112,61,110,45,62,82,66,84
.byte 82,69,69,95,76,69,70,84,59,10,9,9,125,10,9,9,105,102,40,105,102,95,108,101,102,116,41,10,9,9,123,10
.byte 9,9,9,105,102,40,112,38,38,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,61,82,66,84,82,69,69
.byte 95,82,69,68,41,10,9,9,9,123,10,9,9,9,9,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82
.byte 66,84,82,69,69,95,66,76,65,67,75,59,10,9,9,9,9,110,45,62,82,66,84,82,69,69,95,67,79,76,79,82
.byte 61,82,66,84,82,69,69,95,82,69,68,59,10,9,9,9,9,112,49,61,110,45,62,82,66,84,82,69,69,95,80,65
.byte 82,69,78,84,59,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,82,79,84,65,84,69,95,76,69,70,84
.byte 10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69,32,110,10,35,100
.byte 101,102,105,110,101,32,82,66,84,82,69,69,95,80,65,82,69,78,84,95,82,79,84,65,84,69,32,112,49,10,35,105
.byte 110,99,108,117,100,101,32,34,114,98,116,114,101,101,95,114,111,116,97,116,101,46,99,34,10,9,9,9,125,10,9,9
.byte 9,101,108,115,101,10,9,9,9,123,10,9,9,9,9,105,102,40,112,38,38,112,45,62,82,66,84,82,69,69,95,82
.byte 73,71,72,84,38,38,112,45,62,82,66,84,82,69,69,95,82,73,71,72,84,45,62,82,66,84,82,69,69,95,67,79
.byte 76,79,82,61,61,82,66,84,82,69,69,95,82,69,68,41,10,9,9,9,9,123,10,9,9,9,9,9,112,45,62,82
.byte 66,84,82,69,69,95,67,79,76,79,82,61,110,45,62,82,66,84,82,69,69,95,67,79,76,79,82,59,10,9,9,9
.byte 9,9,110,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66,84,82,69,69,95,66,76,65,67,75,59,10
.byte 9,9,9,9,9,112,45,62,82,66,84,82,69,69,95,82,73,71,72,84,45,62,82,66,84,82,69,69,95,67,79,76
.byte 79,82,61,82,66,84,82,69,69,95,66,76,65,67,75,59,10,9,9,9,9,9,112,49,61,110,45,62,82,66,84,82
.byte 69,69,95,80,65,82,69,78,84,59,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,82,79,84,65,84,69
.byte 95,76,69,70,84,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69
.byte 32,110,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,80,65,82,69,78,84,95,82,79,84,65,84,69,32
.byte 112,49,10,35,105,110,99,108,117,100,101,32,34,114,98,116,114,101,101,95,114,111,116,97,116,101,46,99,34,10,9,9
.byte 9,9,9,98,114,101,97,107,59,10,9,9,9,9,125,10,9,9,9,9,101,108,115,101,32,105,102,40,112,38,38,112
.byte 45,62,82,66,84,82,69,69,95,76,69,70,84,38,38,112,45,62,82,66,84,82,69,69,95,76,69,70,84,45,62,82
.byte 66,84,82,69,69,95,67,79,76,79,82,61,61,82,66,84,82,69,69,95,82,69,68,41,10,9,9,9,9,123,10,9
.byte 9,9,9,9,112,45,62,82,66,84,82,69,69,95,76,69,70,84,45,62,82,66,84,82,69,69,95,67,79,76,79,82
.byte 61,82,66,84,82,69,69,95,66,76,65,67,75,59,10,9,9,9,9,9,112,45,62,82,66,84,82,69,69,95,67,79
.byte 76,79,82,61,82,66,84,82,69,69,95,82,69,68,59,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,78
.byte 79,68,69,95,82,79,84,65,84,69,32,112,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,80,65,82,69
.byte 78,84,95,82,79,84,65,84,69,32,110,10,35,105,110,99,108,117,100,101,32,34,114,98,116,114,101,101,95,114,111,116
.byte 97,116,101,46,99,34,10,9,9,9,9,125,10,9,9,9,9,101,108,115,101,10,9,9,9,9,123,10,9,9,9,9
.byte 9,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66,84,82,69,69,95,82,69,68,59,10,9,9,9
.byte 9,9,112,61,110,59,10,9,9,9,9,9,110,61,110,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,59,10
.byte 9,9,9,9,9,105,102,40,110,61,61,48,41,10,9,9,9,9,9,123,10,9,9,9,9,9,9,98,114,101,97,107
.byte 59,10,9,9,9,9,9,125,10,9,9,9,9,9,105,102,40,110,45,62,82,66,84,82,69,69,95,82,73,71,72,84
.byte 61,61,112,41,10,9,9,9,9,9,123,10,9,9,9,9,9,9,105,102,95,108,101,102,116,61,48,59,10,9,9,9
.byte 9,9,125,10,9,9,9,9,125,10,9,9,9,125,10,9,9,125,10,9,9,101,108,115,101,10,9,9,123,10,9,9
.byte 9,105,102,40,112,38,38,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,61,82,66,84,82,69,69,95,82
.byte 69,68,41,10,9,9,9,123,10,9,9,9,9,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66,84
.byte 82,69,69,95,66,76,65,67,75,59,10,9,9,9,9,110,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82
.byte 66,84,82,69,69,95,82,69,68,59,10,9,9,9,9,112,49,61,110,45,62,82,66,84,82,69,69,95,80,65,82,69
.byte 78,84,59,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69,32,110
.byte 10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,80,65,82,69,78,84,95,82,79,84,65,84,69,32,112,49
.byte 10,35,105,110,99,108,117,100,101,32,34,114,98,116,114,101,101,95,114,111,116,97,116,101,46,99,34,10,9,9,9,125
.byte 10,9,9,9,101,108,115,101,10,9,9,9,123,10,9,9,9,9,105,102,40,112,38,38,112,45,62,82,66,84,82,69
.byte 69,95,76,69,70,84,38,38,112,45,62,82,66,84,82,69,69,95,76,69,70,84,45,62,82,66,84,82,69,69,95,67
.byte 79,76,79,82,61,61,82,66,84,82,69,69,95,82,69,68,41,10,9,9,9,9,123,10,9,9,9,9,9,112,45,62
.byte 82,66,84,82,69,69,95,67,79,76,79,82,61,110,45,62,82,66,84,82,69,69,95,67,79,76,79,82,59,10,9,9
.byte 9,9,9,110,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66,84,82,69,69,95,66,76,65,67,75,59
.byte 10,9,9,9,9,9,112,45,62,82,66,84,82,69,69,95,76,69,70,84,45,62,82,66,84,82,69,69,95,67,79,76
.byte 79,82,61,82,66,84,82,69,69,95,66,76,65,67,75,59,10,9,9,9,9,9,112,49,61,110,45,62,82,66,84,82
.byte 69,69,95,80,65,82,69,78,84,59,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,78,79,68,69,95,82
.byte 79,84,65,84,69,32,110,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,80,65,82,69,78,84,95,82,79
.byte 84,65,84,69,32,112,49,10,35,105,110,99,108,117,100,101,32,34,114,98,116,114,101,101,95,114,111,116,97,116,101,46
.byte 99,34,10,9,9,9,9,9,98,114,101,97,107,59,10,9,9,9,9,125,10,9,9,9,9,101,108,115,101,32,105,102
.byte 40,112,38,38,112,45,62,82,66,84,82,69,69,95,82,73,71,72,84,38,38,112,45,62,82,66,84,82,69,69,95,82
.byte 73,71,72,84,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,61,82,66,84,82,69,69,95,82,69,68,41,10
.byte 9,9,9,9,123,10,9,9,9,9,9,112,45,62,82,66,84,82,69,69,95,82,73,71,72,84,45,62,82,66,84,82
.byte 69,69,95,67,79,76,79,82,61,82,66,84,82,69,69,95,66,76,65,67,75,59,10,9,9,9,9,9,112,45,62,82
.byte 66,84,82,69,69,95,67,79,76,79,82,61,82,66,84,82,69,69,95,82,69,68,59,10,35,100,101,102,105,110,101,32
.byte 82,66,84,82,69,69,95,82,79,84,65,84,69,95,76,69,70,84,10,35,100,101,102,105,110,101,32,82,66,84,82,69
.byte 69,95,78,79,68,69,95,82,79,84,65,84,69,32,112,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,80
.byte 65,82,69,78,84,95,82,79,84,65,84,69,32,110,10,35,105,110,99,108,117,100,101,32,34,114,98,116,114,101,101,95
.byte 114,111,116,97,116,101,46,99,34,10,9,9,9,9,125,10,9,9,9,9,101,108,115,101,10,9,9,9,9,123,10,9
.byte 9,9,9,9,112,45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66,84,82,69,69,95,82,69,68,59,10
.byte 9,9,9,9,9,112,61,110,59,10,9,9,9,9,9,110,61,110,45,62,82,66,84,82,69,69,95,80,65,82,69,78
.byte 84,59,10,9,9,9,9,9,105,102,40,110,61,61,48,41,10,9,9,9,9,9,123,10,9,9,9,9,9,9,98,114
.byte 101,97,107,59,10,9,9,9,9,9,125,10,9,9,9,9,9,105,102,40,110,45,62,82,66,84,82,69,69,95,76,69
.byte 70,84,61,61,112,41,10,9,9,9,9,9,123,10,9,9,9,9,9,9,105,102,95,108,101,102,116,61,49,59,10,9
.byte 9,9,9,9,125,10,9,9,9,9,125,10,9,9,9,125,10,9,9,125,10,9,125,10,9,40,42,114,111,111,116,41
.byte 45,62,82,66,84,82,69,69,95,67,79,76,79,82,61,82,66,84,82,69,69,95,66,76,65,67,75,59,10,9,114,101
.byte 116,117,114,110,32,110,49,59,10,125,10,35,117,110,100,101,102,32,82,66,84,82,69,69,95,68,69,76,69,84,69,10
.byte 35,101,110,100,105,102,10,10,35,105,102,100,101,102,32,82,66,84,82,69,69,95,70,73,78,68,10,82,66,84,82,69
.byte 69,95,84,89,80,69,32,42,82,66,84,82,69,69,95,70,73,78,68,40,82,66,84,82,69,69,95,84,89,80,69,32
.byte 42,114,111,111,116,44,82,66,84,82,69,69,95,84,89,80,69,32,42,110,111,100,101,41,10,123,10,9,82,66,84,82
.byte 69,69,95,84,89,80,69,32,42,110,59,10,9,110,61,114,111,111,116,59,10,9,119,104,105,108,101,40,49,41,10,9
.byte 123,10,9,9,105,102,40,110,61,61,48,41,10,9,9,123,10,9,9,9,114,101,116,117,114,110,32,48,59,10,9,9
.byte 125,10,9,9,105,102,40,82,66,84,82,69,69,95,67,77,80,40,110,111,100,101,44,110,41,41,10,9,9,123,10,9
.byte 9,9,110,61,110,45,62,82,66,84,82,69,69,95,82,73,71,72,84,59,10,9,9,125,10,9,9,101,108,115,101,32
.byte 105,102,40,82,66,84,82,69,69,95,67,77,80,40,110,44,110,111,100,101,41,41,10,9,9,123,10,9,9,9,110,61
.byte 110,45,62,82,66,84,82,69,69,95,76,69,70,84,59,10,9,9,125,10,9,9,101,108,115,101,10,9,9,123,10,9
.byte 9,9,114,101,116,117,114,110,32,110,59,10,9,9,125,10,9,125,10,125,10,35,117,110,100,101,102,32,82,66,84,82
.byte 69,69,95,70,73,78,68,10,35,101,110,100,105,102,10,10,35,105,102,100,101,102,32,82,66,84,82,69,69,95,78,69
.byte 88,84,10,82,66,84,82,69,69,95,84,89,80,69,32,42,82,66,84,82,69,69,95,78,69,88,84,40,82,66,84,82
.byte 69,69,95,84,89,80,69,32,42,110,111,100,101,41,10,123,10,9,82,66,84,82,69,69,95,84,89,80,69,32,42,110
.byte 59,10,9,105,102,40,110,111,100,101,45,62,82,66,84,82,69,69,95,82,73,71,72,84,41,10,9,123,10,9,9,110
.byte 61,110,111,100,101,45,62,82,66,84,82,69,69,95,82,73,71,72,84,59,10,9,9,119,104,105,108,101,40,110,45,62
.byte 82,66,84,82,69,69,95,76,69,70,84,41,10,9,9,123,10,9,9,9,110,61,110,45,62,82,66,84,82,69,69,95
.byte 76,69,70,84,59,10,9,9,125,10,9,9,114,101,116,117,114,110,32,110,59,10,9,125,10,9,101,108,115,101,10,9
.byte 123,10,9,9,110,61,110,111,100,101,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,59,10,9,9,119,104,105
.byte 108,101,40,110,38,38,110,45,62,82,66,84,82,69,69,95,82,73,71,72,84,61,61,110,111,100,101,41,10,9,9,123
.byte 10,9,9,9,110,111,100,101,61,110,59,10,9,9,9,110,61,110,45,62,82,66,84,82,69,69,95,80,65,82,69,78
.byte 84,59,10,9,9,125,10,9,9,105,102,40,33,110,41,10,9,9,123,10,9,9,9,114,101,116,117,114,110,32,40,118
.byte 111,105,100,32,42,41,48,59,10,9,9,125,10,9,9,114,101,116,117,114,110,32,110,59,10,9,125,10,125,10,35,117
.byte 110,100,101,102,32,82,66,84,82,69,69,95,78,69,88,84,10,35,101,110,100,105,102,10,10,35,105,102,100,101,102,32
.byte 82,66,84,82,69,69,95,80,82,69,86,10,82,66,84,82,69,69,95,84,89,80,69,32,42,82,66,84,82,69,69,95
.byte 80,82,69,86,40,82,66,84,82,69,69,95,84,89,80,69,32,42,110,111,100,101,41,10,123,10,9,82,66,84,82,69
.byte 69,95,84,89,80,69,32,42,110,59,10,9,105,102,40,110,111,100,101,45,62,82,66,84,82,69,69,95,76,69,70,84
.byte 41,10,9,123,10,9,9,110,61,110,111,100,101,45,62,82,66,84,82,69,69,95,76,69,70,84,59,10,9,9,119,104
.byte 105,108,101,40,110,45,62,82,66,84,82,69,69,95,82,73,71,72,84,41,10,9,9,123,10,9,9,9,110,61,110,45
.byte 62,82,66,84,82,69,69,95,82,73,71,72,84,59,10,9,9,125,10,9,9,114,101,116,117,114,110,32,110,59,10,9
.byte 125,10,9,101,108,115,101,10,9,123,10,9,9,110,61,110,111,100,101,45,62,82,66,84,82,69,69,95,80,65,82,69
.byte 78,84,59,10,9,9,119,104,105,108,101,40,110,38,38,110,45,62,82,66,84,82,69,69,95,76,69,70,84,61,61,110
.byte 111,100,101,41,10,9,9,123,10,9,9,9,110,111,100,101,61,110,59,10,9,9,9,110,61,110,45,62,82,66,84,82
.byte 69,69,95,80,65,82,69,78,84,59,10,9,9,125,10,9,9,105,102,40,33,110,41,10,9,9,123,10,9,9,9,114
.byte 101,116,117,114,110,32,40,118,111,105,100,32,42,41,48,59,10,9,9,125,10,9,9,114,101,116,117,114,110,32,110,59
.byte 10,9,125,10,125,10,35,117,110,100,101,102,32,82,66,84,82,69,69,95,80,82,69,86,10,35,101,110,100,105,102,10
.byte 10,35,117,110,100,101,102,32,82,66,84,82,69,69,95,84,89,80,69,10,35,117,110,100,101,102,32,82,66,84,82,69
.byte 69,95,67,77,80,10,35,117,110,100,101,102,32,82,66,84,82,69,69,95,67,79,76,79,82,10,35,117,110,100,101,102
.byte 32,82,66,84,82,69,69,95,76,69,70,84,10,35,117,110,100,101,102,32,82,66,84,82,69,69,95,82,73,71,72,84
.byte 10,35,117,110,100,101,102,32,82,66,84,82,69,69,95,80,65,82,69,78,84,10,35,117,110,100,101,102,32,82,66,84
.byte 82,69,69,95,82,69,68,10,35,117,110,100,101,102,32,82,66,84,82,69,69,95,66,76,65,67,75,10,48,55,48,55
.byte 48,49,48,48,48,48,48,48,48,65,48,48,48,48,56,49,65,52,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48,48,48,48,54,54,65,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 49,69,48,48,48,48,48,48,48,48,46,47,116,101,109,112,108,97,116,101,115,47,114,98,116,114,101,101,95,114,111,116
.byte 97,116,101,46,99,0,0,0,47,42,32,68,79,32,78,79,84,32,73,78,67,76,85,68,69,32,84,72,73,83,32,70
.byte 73,76,69,32,68,73,82,69,67,84,76,89,10,32,42,32,84,104,105,115,32,102,105,108,101,32,105,115,32,97,32,116
.byte 101,109,112,108,97,116,101,46,10,32,42,32,84,111,32,117,115,101,32,116,104,105,115,32,116,101,109,112,108,97,116,101
.byte 44,32,35,100,101,102,105,110,101,32,115,111,109,101,32,109,97,99,114,111,115,32,97,110,100,32,35,105,110,99,108,117
.byte 100,101,32,105,116,46,10,32,42,10,32,42,32,77,97,99,114,111,115,58,10,32,42,32,82,66,84,82,69,69,32,82
.byte 79,84,65,84,69,95,76,69,70,84,58,32,114,111,116,97,116,101,32,108,101,102,116,32,105,102,32,100,101,102,105,110
.byte 101,100,10,32,42,32,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69,58,32,110,111,100,101,32,116
.byte 111,32,114,111,116,97,116,101,10,32,42,32,82,66,84,82,69,69,95,80,65,82,69,78,84,95,82,79,84,65,84,69
.byte 58,32,112,97,114,101,110,116,32,111,102,32,110,111,100,101,32,116,111,32,114,111,116,97,116,101,44,32,111,114,32,78
.byte 85,76,76,32,105,102,32,114,111,111,116,32,110,111,100,101,32,105,115,32,116,111,32,114,111,116,97,116,101,46,10,32
.byte 42,32,42,47,10,123,10,35,105,102,100,101,102,32,82,66,84,82,69,69,95,82,79,84,65,84,69,95,76,69,70,84
.byte 10,9,82,66,84,82,69,69,95,84,89,80,69,32,42,114,111,116,97,116,101,95,114,44,42,114,111,116,97,116,101,95
.byte 114,108,59,10,9,114,111,116,97,116,101,95,114,61,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69
.byte 45,62,82,66,84,82,69,69,95,82,73,71,72,84,59,10,9,114,111,116,97,116,101,95,114,108,61,114,111,116,97,116
.byte 101,95,114,45,62,82,66,84,82,69,69,95,76,69,70,84,59,10,9,105,102,40,82,66,84,82,69,69,95,80,65,82
.byte 69,78,84,95,82,79,84,65,84,69,41,10,9,123,10,9,9,105,102,40,82,66,84,82,69,69,95,80,65,82,69,78
.byte 84,95,82,79,84,65,84,69,45,62,82,66,84,82,69,69,95,76,69,70,84,61,61,82,66,84,82,69,69,95,78,79
.byte 68,69,95,82,79,84,65,84,69,41,10,9,9,123,10,9,9,9,82,66,84,82,69,69,95,80,65,82,69,78,84,95
.byte 82,79,84,65,84,69,45,62,82,66,84,82,69,69,95,76,69,70,84,61,114,111,116,97,116,101,95,114,59,10,9,9
.byte 125,10,9,9,101,108,115,101,10,9,9,123,10,9,9,9,82,66,84,82,69,69,95,80,65,82,69,78,84,95,82,79
.byte 84,65,84,69,45,62,82,66,84,82,69,69,95,82,73,71,72,84,61,114,111,116,97,116,101,95,114,59,10,9,9,125
.byte 10,9,125,10,9,101,108,115,101,10,9,123,10,9,9,42,114,111,111,116,61,114,111,116,97,116,101,95,114,59,10,9
.byte 125,10,9,114,111,116,97,116,101,95,114,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,61,82,66,84,82,69
.byte 69,95,80,65,82,69,78,84,95,82,79,84,65,84,69,59,10,9,114,111,116,97,116,101,95,114,45,62,82,66,84,82
.byte 69,69,95,76,69,70,84,61,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69,59,10,9,82,66,84
.byte 82,69,69,95,78,79,68,69,95,82,79,84,65,84,69,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,61,114
.byte 111,116,97,116,101,95,114,59,10,9,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69,45,62,82,66
.byte 84,82,69,69,95,82,73,71,72,84,61,114,111,116,97,116,101,95,114,108,59,10,9,105,102,40,114,111,116,97,116,101
.byte 95,114,108,41,10,9,123,10,9,9,114,111,116,97,116,101,95,114,108,45,62,82,66,84,82,69,69,95,80,65,82,69
.byte 78,84,61,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69,59,10,9,125,10,35,117,110,100,101,102
.byte 32,82,66,84,82,69,69,95,82,79,84,65,84,69,95,76,69,70,84,10,35,101,108,115,101,10,9,82,66,84,82,69
.byte 69,95,84,89,80,69,32,42,114,111,116,97,116,101,95,108,44,42,114,111,116,97,116,101,95,108,114,59,10,9,114,111
.byte 116,97,116,101,95,108,61,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69,45,62,82,66,84,82,69
.byte 69,95,76,69,70,84,59,10,9,114,111,116,97,116,101,95,108,114,61,114,111,116,97,116,101,95,108,45,62,82,66,84
.byte 82,69,69,95,82,73,71,72,84,59,10,9,105,102,40,82,66,84,82,69,69,95,80,65,82,69,78,84,95,82,79,84
.byte 65,84,69,41,10,9,123,10,9,9,105,102,40,82,66,84,82,69,69,95,80,65,82,69,78,84,95,82,79,84,65,84
.byte 69,45,62,82,66,84,82,69,69,95,76,69,70,84,61,61,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65
.byte 84,69,41,10,9,9,123,10,9,9,9,82,66,84,82,69,69,95,80,65,82,69,78,84,95,82,79,84,65,84,69,45
.byte 62,82,66,84,82,69,69,95,76,69,70,84,61,114,111,116,97,116,101,95,108,59,10,9,9,125,10,9,9,101,108,115
.byte 101,10,9,9,123,10,9,9,9,82,66,84,82,69,69,95,80,65,82,69,78,84,95,82,79,84,65,84,69,45,62,82
.byte 66,84,82,69,69,95,82,73,71,72,84,61,114,111,116,97,116,101,95,108,59,10,9,9,125,10,9,125,10,9,101,108
.byte 115,101,10,9,123,10,9,9,42,114,111,111,116,61,114,111,116,97,116,101,95,108,59,10,9,125,10,9,114,111,116,97
.byte 116,101,95,108,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,61,82,66,84,82,69,69,95,80,65,82,69,78
.byte 84,95,82,79,84,65,84,69,59,10,9,114,111,116,97,116,101,95,108,45,62,82,66,84,82,69,69,95,82,73,71,72
.byte 84,61,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69,59,10,9,82,66,84,82,69,69,95,78,79
.byte 68,69,95,82,79,84,65,84,69,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,61,114,111,116,97,116,101,95
.byte 108,59,10,9,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69,45,62,82,66,84,82,69,69,95,76
.byte 69,70,84,61,114,111,116,97,116,101,95,108,114,59,10,9,105,102,40,114,111,116,97,116,101,95,108,114,41,10,9,123
.byte 10,9,9,114,111,116,97,116,101,95,108,114,45,62,82,66,84,82,69,69,95,80,65,82,69,78,84,61,82,66,84,82
.byte 69,69,95,78,79,68,69,95,82,79,84,65,84,69,59,10,9,125,10,35,101,110,100,105,102,10,125,10,35,117,110,100
.byte 101,102,32,82,66,84,82,69,69,95,78,79,68,69,95,82,79,84,65,84,69,10,35,117,110,100,101,102,32,82,66,84
.byte 82,69,69,95,80,65,82,69,78,84,95,82,79,84,65,84,69,10,0,0,48,55,48,55,48,49,48,48,48,48,48,48
.byte 48,66,48,48,48,48,56,49,65,52,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,49,48,48,48,48,48,48,48,48,48,48,48,48,50,52,68,51,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,65,48,48,48,48,48,48
.byte 48,48,46,47,109,101,109,46,99,0,0,0,35,105,102,110,100,101,102,32,95,77,69,77,95,67,95,10,35,100,101,102
.byte 105,110,101,32,95,77,69,77,95,67,95,10,97,115,109,32,34,64,95,109,101,109,109,111,118,101,95,115,116,97,114,116
.byte 34,10,118,111,105,100,32,42,109,101,109,99,112,121,40,118,111,105,100,32,42,100,115,116,44,118,111,105,100,32,42,115
.byte 114,99,44,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,115,105,122,101,41,10,123,10,9,97,115
.byte 109,32,34,112,117,115,104,32,37,114,99,120,34,10,9,97,115,109,32,34,112,117,115,104,32,37,114,100,120,34,10,9
.byte 97,115,109,32,34,112,117,115,104,32,37,114,98,120,34,10,9,97,115,109,32,34,112,117,115,104,32,37,114,115,105,34
.byte 10,9,97,115,109,32,34,112,117,115,104,32,37,114,100,105,34,10,9,97,115,109,32,34,112,117,115,104,32,37,114,56
.byte 34,10,9,97,115,109,32,34,112,117,115,104,32,37,114,57,34,10,9,97,115,109,32,34,112,117,115,104,32,37,114,49
.byte 48,34,10,9,97,115,109,32,34,112,117,115,104,32,37,114,49,49,34,10,9,97,115,109,32,34,112,117,115,104,32,37
.byte 114,49,50,34,10,9,97,115,109,32,34,109,111,118,32,49,54,40,37,114,98,112,41,44,37,114,97,120,34,10,9,97
.byte 115,109,32,34,109,111,118,32,50,52,40,37,114,98,112,41,44,37,114,100,120,34,10,9,97,115,109,32,34,109,111,118
.byte 32,51,50,40,37,114,98,112,41,44,37,114,99,120,34,10,9,97,115,109,32,34,99,109,112,32,36,56,44,37,114,99
.byte 120,34,10,9,97,115,109,32,34,106,98,32,64,95,109,101,109,99,112,121,95,88,51,51,34,10,9,97,115,109,32,34
.byte 116,101,115,116,32,36,49,44,37,100,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,99,112,121,95,88
.byte 49,49,34,10,9,97,115,109,32,34,109,111,118,32,40,37,114,100,120,41,44,37,98,108,34,10,9,97,115,109,32,34
.byte 109,111,118,32,37,98,108,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,105,110,99,32,37,114,97,120,34,10
.byte 9,97,115,109,32,34,105,110,99,32,37,114,100,120,34,10,9,97,115,109,32,34,100,101,99,32,37,114,99,120,34,10
.byte 9,97,115,109,32,34,64,95,109,101,109,99,112,121,95,88,49,49,34,10,9,97,115,109,32,34,116,101,115,116,32,36
.byte 50,44,37,100,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,99,112,121,95,88,49,50,34,10,9,97
.byte 115,109,32,34,109,111,118,32,40,37,114,100,120,41,44,37,98,120,34,10,9,97,115,109,32,34,109,111,118,32,37,98
.byte 120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,97,100,100,32,36,50,44,37,114,97,120,34,10,9,97,115
.byte 109,32,34,97,100,100,32,36,50,44,37,114,100,120,34,10,9,97,115,109,32,34,115,117,98,32,36,50,44,37,114,99
.byte 120,34,10,9,97,115,109,32,34,64,95,109,101,109,99,112,121,95,88,49,50,34,10,9,97,115,109,32,34,116,101,115
.byte 116,32,36,52,44,37,100,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,99,112,121,95,88,49,51,34
.byte 10,9,97,115,109,32,34,109,111,118,32,40,37,114,100,120,41,44,37,101,98,120,34,10,9,97,115,109,32,34,109,111
.byte 118,32,37,101,98,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,97,100,100,32,36,52,44,37,114,97,120
.byte 34,10,9,97,115,109,32,34,97,100,100,32,36,52,44,37,114,100,120,34,10,9,97,115,109,32,34,115,117,98,32,36
.byte 52,44,37,114,99,120,34,10,9,97,115,109,32,34,64,95,109,101,109,99,112,121,95,88,49,51,34,10,9,97,115,109
.byte 32,34,115,117,98,32,36,54,52,44,37,114,99,120,34,10,9,97,115,109,32,34,106,98,32,64,95,109,101,109,99,112
.byte 121,95,88,50,49,34,10,9,97,115,109,32,34,64,95,109,101,109,99,112,121,95,88,50,50,34,10,9,97,115,109,32
.byte 34,109,111,118,32,40,37,114,100,120,41,44,37,114,98,120,34,10,9,97,115,109,32,34,109,111,118,32,56,40,37,114
.byte 100,120,41,44,37,114,115,105,34,10,9,97,115,109,32,34,109,111,118,32,49,54,40,37,114,100,120,41,44,37,114,100
.byte 105,34,10,9,97,115,109,32,34,109,111,118,32,50,52,40,37,114,100,120,41,44,37,114,56,34,10,9,97,115,109,32
.byte 34,109,111,118,32,51,50,40,37,114,100,120,41,44,37,114,57,34,10,9,97,115,109,32,34,109,111,118,32,52,48,40
.byte 37,114,100,120,41,44,37,114,49,48,34,10,9,97,115,109,32,34,109,111,118,32,52,56,40,37,114,100,120,41,44,37
.byte 114,49,49,34,10,9,97,115,109,32,34,109,111,118,32,53,54,40,37,114,100,120,41,44,37,114,49,50,34,10,9,97
.byte 115,109,32,34,109,111,118,32,37,114,98,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37
.byte 114,115,105,44,56,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,100,105,44,49,54,40,37
.byte 114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,56,44,50,52,40,37,114,97,120,41,34,10,9,97
.byte 115,109,32,34,109,111,118,32,37,114,57,44,51,50,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32
.byte 37,114,49,48,44,52,48,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,49,49,44,52,56
.byte 40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,49,50,44,53,54,40,37,114,97,120,41,34
.byte 10,9,97,115,109,32,34,97,100,100,32,36,54,52,44,37,114,97,120,34,10,9,97,115,109,32,34,97,100,100,32,36
.byte 54,52,44,37,114,100,120,34,10,9,97,115,109,32,34,115,117,98,32,36,54,52,44,37,114,99,120,34,10,9,97,115
.byte 109,32,34,106,97,101,32,64,95,109,101,109,99,112,121,95,88,50,50,34,10,9,97,115,109,32,34,64,95,109,101,109
.byte 99,112,121,95,88,50,49,34,10,9,97,115,109,32,34,116,101,115,116,32,36,51,50,44,37,99,108,34,10,9,97,115
.byte 109,32,34,106,101,32,64,95,109,101,109,99,112,121,95,88,51,49,34,10,9,97,115,109,32,34,109,111,118,32,40,37
.byte 114,100,120,41,44,37,114,98,120,34,10,9,97,115,109,32,34,109,111,118,32,56,40,37,114,100,120,41,44,37,114,115
.byte 105,34,10,9,97,115,109,32,34,109,111,118,32,49,54,40,37,114,100,120,41,44,37,114,100,105,34,10,9,97,115,109
.byte 32,34,109,111,118,32,50,52,40,37,114,100,120,41,44,37,114,56,34,10,9,97,115,109,32,34,109,111,118,32,37,114
.byte 98,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,115,105,44,56,40,37,114,97,120
.byte 41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,100,105,44,49,54,40,37,114,97,120,41,34,10,9,97,115,109
.byte 32,34,109,111,118,32,37,114,56,44,50,52,40,37,114,97,120,41,34,10,9,97,115,109,32,34,97,100,100,32,36,51
.byte 50,44,37,114,97,120,34,10,9,97,115,109,32,34,97,100,100,32,36,51,50,44,37,114,100,120,34,10,9,97,115,109
.byte 32,34,64,95,109,101,109,99,112,121,95,88,51,49,34,10,9,97,115,109,32,34,116,101,115,116,32,36,49,54,44,37
.byte 99,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,99,112,121,95,88,51,50,34,10,9,97,115,109,32
.byte 34,109,111,118,32,40,37,114,100,120,41,44,37,114,98,120,34,10,9,97,115,109,32,34,109,111,118,32,56,40,37,114
.byte 100,120,41,44,37,114,115,105,34,10,9,97,115,109,32,34,109,111,118,32,37,114,98,120,44,40,37,114,97,120,41,34
.byte 10,9,97,115,109,32,34,109,111,118,32,37,114,115,105,44,56,40,37,114,97,120,41,34,10,9,97,115,109,32,34,97
.byte 100,100,32,36,49,54,44,37,114,97,120,34,10,9,97,115,109,32,34,97,100,100,32,36,49,54,44,37,114,100,120,34
.byte 10,9,97,115,109,32,34,64,95,109,101,109,99,112,121,95,88,51,50,34,10,9,97,115,109,32,34,116,101,115,116,32
.byte 36,56,44,37,99,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,99,112,121,95,88,51,51,34,10,9
.byte 97,115,109,32,34,109,111,118,32,40,37,114,100,120,41,44,37,114,98,120,34,10,9,97,115,109,32,34,109,111,118,32
.byte 37,114,98,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,97,100,100,32,36,56,44,37,114,97,120,34,10
.byte 9,97,115,109,32,34,97,100,100,32,36,56,44,37,114,100,120,34,10,9,97,115,109,32,34,64,95,109,101,109,99,112
.byte 121,95,88,51,51,34,10,9,97,115,109,32,34,116,101,115,116,32,36,52,44,37,99,108,34,10,9,97,115,109,32,34
.byte 106,101,32,64,95,109,101,109,99,112,121,95,88,51,52,34,10,9,97,115,109,32,34,109,111,118,32,40,37,114,100,120
.byte 41,44,37,101,98,120,34,10,9,97,115,109,32,34,109,111,118,32,37,101,98,120,44,40,37,114,97,120,41,34,10,9
.byte 97,115,109,32,34,97,100,100,32,36,52,44,37,114,97,120,34,10,9,97,115,109,32,34,97,100,100,32,36,52,44,37
.byte 114,100,120,34,10,9,97,115,109,32,34,64,95,109,101,109,99,112,121,95,88,51,52,34,10,9,97,115,109,32,34,116
.byte 101,115,116,32,36,50,44,37,99,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,99,112,121,95,88,51
.byte 53,34,10,9,97,115,109,32,34,109,111,118,32,40,37,114,100,120,41,44,37,98,120,34,10,9,97,115,109,32,34,109
.byte 111,118,32,37,98,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,97,100,100,32,36,50,44,37,114,97,120
.byte 34,10,9,97,115,109,32,34,97,100,100,32,36,50,44,37,114,100,120,34,10,9,97,115,109,32,34,64,95,109,101,109
.byte 99,112,121,95,88,51,53,34,10,9,97,115,109,32,34,116,101,115,116,32,36,49,44,37,99,108,34,10,9,97,115,109
.byte 32,34,106,101,32,64,95,109,101,109,99,112,121,95,88,51,54,34,10,9,97,115,109,32,34,109,111,118,32,40,37,114
.byte 100,120,41,44,37,98,108,34,10,9,97,115,109,32,34,109,111,118,32,37,98,108,44,40,37,114,97,120,41,34,10,9
.byte 97,115,109,32,34,64,95,109,101,109,99,112,121,95,88,51,54,34,10,9,97,115,109,32,34,112,111,112,32,37,114,49
.byte 50,34,10,9,97,115,109,32,34,112,111,112,32,37,114,49,49,34,10,9,97,115,109,32,34,112,111,112,32,37,114,49
.byte 48,34,10,9,97,115,109,32,34,112,111,112,32,37,114,57,34,10,9,97,115,109,32,34,112,111,112,32,37,114,56,34
.byte 10,9,97,115,109,32,34,112,111,112,32,37,114,100,105,34,10,9,97,115,109,32,34,112,111,112,32,37,114,115,105,34
.byte 10,9,97,115,109,32,34,112,111,112,32,37,114,98,120,34,10,9,97,115,109,32,34,112,111,112,32,37,114,100,120,34
.byte 10,9,97,115,109,32,34,112,111,112,32,37,114,99,120,34,10,9,97,115,109,32,34,109,111,118,32,49,54,40,37,114
.byte 98,112,41,44,37,114,97,120,34,10,125,10,118,111,105,100,32,42,109,101,109,99,112,121,95,114,40,118,111,105,100,32
.byte 42,100,115,116,44,118,111,105,100,32,42,115,114,99,44,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116
.byte 32,115,105,122,101,41,10,123,10,9,97,115,109,32,34,112,117,115,104,32,37,114,99,120,34,10,9,97,115,109,32,34
.byte 112,117,115,104,32,37,114,100,120,34,10,9,97,115,109,32,34,112,117,115,104,32,37,114,98,120,34,10,9,97,115,109
.byte 32,34,112,117,115,104,32,37,114,115,105,34,10,9,97,115,109,32,34,112,117,115,104,32,37,114,100,105,34,10,9,97
.byte 115,109,32,34,112,117,115,104,32,37,114,56,34,10,9,97,115,109,32,34,112,117,115,104,32,37,114,57,34,10,9,97
.byte 115,109,32,34,112,117,115,104,32,37,114,49,48,34,10,9,97,115,109,32,34,112,117,115,104,32,37,114,49,49,34,10
.byte 9,97,115,109,32,34,112,117,115,104,32,37,114,49,50,34,10,9,97,115,109,32,34,109,111,118,32,49,54,40,37,114
.byte 98,112,41,44,37,114,97,120,34,10,9,97,115,109,32,34,109,111,118,32,50,52,40,37,114,98,112,41,44,37,114,100
.byte 120,34,10,9,97,115,109,32,34,109,111,118,32,51,50,40,37,114,98,112,41,44,37,114,99,120,34,10,9,97,115,109
.byte 32,34,99,109,112,32,36,56,44,37,114,99,120,34,10,9,97,115,109,32,34,106,98,32,64,95,109,101,109,99,112,121
.byte 95,114,95,88,51,51,34,10,9,97,115,109,32,34,116,101,115,116,32,36,49,44,37,100,108,34,10,9,97,115,109,32
.byte 34,106,101,32,64,95,109,101,109,99,112,121,95,114,95,88,49,49,34,10,9,97,115,109,32,34,100,101,99,32,37,114
.byte 97,120,34,10,9,97,115,109,32,34,100,101,99,32,37,114,100,120,34,10,9,97,115,109,32,34,100,101,99,32,37,114
.byte 99,120,34,10,9,97,115,109,32,34,109,111,118,32,40,37,114,100,120,41,44,37,98,108,34,10,9,97,115,109,32,34
.byte 109,111,118,32,37,98,108,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,64,95,109,101,109,99,112,121,95,114
.byte 95,88,49,49,34,10,9,97,115,109,32,34,116,101,115,116,32,36,50,44,37,100,108,34,10,9,97,115,109,32,34,106
.byte 101,32,64,95,109,101,109,99,112,121,95,114,95,88,49,50,34,10,9,97,115,109,32,34,115,117,98,32,36,50,44,37
.byte 114,97,120,34,10,9,97,115,109,32,34,115,117,98,32,36,50,44,37,114,100,120,34,10,9,97,115,109,32,34,115,117
.byte 98,32,36,50,44,37,114,99,120,34,10,9,97,115,109,32,34,109,111,118,32,40,37,114,100,120,41,44,37,98,120,34
.byte 10,9,97,115,109,32,34,109,111,118,32,37,98,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,64,95,109
.byte 101,109,99,112,121,95,114,95,88,49,50,34,10,9,97,115,109,32,34,116,101,115,116,32,36,52,44,37,100,108,34,10
.byte 9,97,115,109,32,34,106,101,32,64,95,109,101,109,99,112,121,95,114,95,88,49,51,34,10,9,97,115,109,32,34,115
.byte 117,98,32,36,52,44,37,114,97,120,34,10,9,97,115,109,32,34,115,117,98,32,36,52,44,37,114,100,120,34,10,9
.byte 97,115,109,32,34,115,117,98,32,36,52,44,37,114,99,120,34,10,9,97,115,109,32,34,109,111,118,32,40,37,114,100
.byte 120,41,44,37,101,98,120,34,10,9,97,115,109,32,34,109,111,118,32,37,101,98,120,44,40,37,114,97,120,41,34,10
.byte 9,97,115,109,32,34,64,95,109,101,109,99,112,121,95,114,95,88,49,51,34,10,9,97,115,109,32,34,115,117,98,32
.byte 36,54,52,44,37,114,99,120,34,10,9,97,115,109,32,34,106,98,32,64,95,109,101,109,99,112,121,95,114,95,88,50
.byte 49,34,10,9,97,115,109,32,34,64,95,109,101,109,99,112,121,95,114,95,88,50,50,34,10,9,97,115,109,32,34,115
.byte 117,98,32,36,54,52,44,37,114,97,120,34,10,9,97,115,109,32,34,115,117,98,32,36,54,52,44,37,114,100,120,34
.byte 10,9,97,115,109,32,34,109,111,118,32,40,37,114,100,120,41,44,37,114,98,120,34,10,9,97,115,109,32,34,109,111
.byte 118,32,56,40,37,114,100,120,41,44,37,114,115,105,34,10,9,97,115,109,32,34,109,111,118,32,49,54,40,37,114,100
.byte 120,41,44,37,114,100,105,34,10,9,97,115,109,32,34,109,111,118,32,50,52,40,37,114,100,120,41,44,37,114,56,34
.byte 10,9,97,115,109,32,34,109,111,118,32,51,50,40,37,114,100,120,41,44,37,114,57,34,10,9,97,115,109,32,34,109
.byte 111,118,32,52,48,40,37,114,100,120,41,44,37,114,49,48,34,10,9,97,115,109,32,34,109,111,118,32,52,56,40,37
.byte 114,100,120,41,44,37,114,49,49,34,10,9,97,115,109,32,34,109,111,118,32,53,54,40,37,114,100,120,41,44,37,114
.byte 49,50,34,10,9,97,115,109,32,34,109,111,118,32,37,114,98,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32
.byte 34,109,111,118,32,37,114,115,105,44,56,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,100
.byte 105,44,49,54,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,56,44,50,52,40,37,114,97
.byte 120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,57,44,51,50,40,37,114,97,120,41,34,10,9,97,115,109
.byte 32,34,109,111,118,32,37,114,49,48,44,52,48,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37
.byte 114,49,49,44,52,56,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,49,50,44,53,54,40
.byte 37,114,97,120,41,34,10,9,97,115,109,32,34,115,117,98,32,36,54,52,44,37,114,99,120,34,10,9,97,115,109,32
.byte 34,106,97,101,32,64,95,109,101,109,99,112,121,95,114,95,88,50,50,34,10,9,97,115,109,32,34,64,95,109,101,109
.byte 99,112,121,95,114,95,88,50,49,34,10,9,97,115,109,32,34,116,101,115,116,32,36,51,50,44,37,99,108,34,10,9
.byte 97,115,109,32,34,106,101,32,64,95,109,101,109,99,112,121,95,114,95,88,51,49,34,10,9,97,115,109,32,34,115,117
.byte 98,32,36,51,50,44,37,114,97,120,34,10,9,97,115,109,32,34,115,117,98,32,36,51,50,44,37,114,100,120,34,10
.byte 9,97,115,109,32,34,109,111,118,32,40,37,114,100,120,41,44,37,114,98,120,34,10,9,97,115,109,32,34,109,111,118
.byte 32,56,40,37,114,100,120,41,44,37,114,115,105,34,10,9,97,115,109,32,34,109,111,118,32,49,54,40,37,114,100,120
.byte 41,44,37,114,100,105,34,10,9,97,115,109,32,34,109,111,118,32,50,52,40,37,114,100,120,41,44,37,114,56,34,10
.byte 9,97,115,109,32,34,109,111,118,32,37,114,98,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118
.byte 32,37,114,115,105,44,56,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,100,105,44,49,54
.byte 40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,56,44,50,52,40,37,114,97,120,41,34,10
.byte 9,97,115,109,32,34,64,95,109,101,109,99,112,121,95,114,95,88,51,49,34,10,9,97,115,109,32,34,116,101,115,116
.byte 32,36,49,54,44,37,99,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,99,112,121,95,114,95,88,51
.byte 50,34,10,9,97,115,109,32,34,115,117,98,32,36,49,54,44,37,114,97,120,34,10,9,97,115,109,32,34,115,117,98
.byte 32,36,49,54,44,37,114,100,120,34,10,9,97,115,109,32,34,109,111,118,32,40,37,114,100,120,41,44,37,114,98,120
.byte 34,10,9,97,115,109,32,34,109,111,118,32,56,40,37,114,100,120,41,44,37,114,115,105,34,10,9,97,115,109,32,34
.byte 109,111,118,32,37,114,98,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,115,105,44
.byte 56,40,37,114,97,120,41,34,10,9,97,115,109,32,34,64,95,109,101,109,99,112,121,95,114,95,88,51,50,34,10,9
.byte 97,115,109,32,34,116,101,115,116,32,36,56,44,37,99,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109
.byte 99,112,121,95,114,95,88,51,51,34,10,9,97,115,109,32,34,115,117,98,32,36,56,44,37,114,97,120,34,10,9,97
.byte 115,109,32,34,115,117,98,32,36,56,44,37,114,100,120,34,10,9,97,115,109,32,34,109,111,118,32,40,37,114,100,120
.byte 41,44,37,114,98,120,34,10,9,97,115,109,32,34,109,111,118,32,37,114,98,120,44,40,37,114,97,120,41,34,10,9
.byte 97,115,109,32,34,64,95,109,101,109,99,112,121,95,114,95,88,51,51,34,10,9,97,115,109,32,34,116,101,115,116,32
.byte 36,52,44,37,99,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,99,112,121,95,114,95,88,51,52,34
.byte 10,9,97,115,109,32,34,115,117,98,32,36,52,44,37,114,97,120,34,10,9,97,115,109,32,34,115,117,98,32,36,52
.byte 44,37,114,100,120,34,10,9,97,115,109,32,34,109,111,118,32,40,37,114,100,120,41,44,37,101,98,120,34,10,9,97
.byte 115,109,32,34,109,111,118,32,37,101,98,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,64,95,109,101,109
.byte 99,112,121,95,114,95,88,51,52,34,10,9,97,115,109,32,34,116,101,115,116,32,36,50,44,37,99,108,34,10,9,97
.byte 115,109,32,34,106,101,32,64,95,109,101,109,99,112,121,95,114,95,88,51,53,34,10,9,97,115,109,32,34,115,117,98
.byte 32,36,50,44,37,114,97,120,34,10,9,97,115,109,32,34,115,117,98,32,36,50,44,37,114,100,120,34,10,9,97,115
.byte 109,32,34,109,111,118,32,40,37,114,100,120,41,44,37,98,120,34,10,9,97,115,109,32,34,109,111,118,32,37,98,120
.byte 44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,64,95,109,101,109,99,112,121,95,114,95,88,51,53,34,10,9
.byte 97,115,109,32,34,116,101,115,116,32,36,49,44,37,99,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109
.byte 99,112,121,95,114,95,88,51,54,34,10,9,97,115,109,32,34,109,111,118,32,45,49,40,37,114,100,120,41,44,37,98
.byte 108,34,10,9,97,115,109,32,34,109,111,118,32,37,98,108,44,45,49,40,37,114,97,120,41,34,10,9,97,115,109,32
.byte 34,64,95,109,101,109,99,112,121,95,114,95,88,51,54,34,10,9,97,115,109,32,34,112,111,112,32,37,114,49,50,34
.byte 10,9,97,115,109,32,34,112,111,112,32,37,114,49,49,34,10,9,97,115,109,32,34,112,111,112,32,37,114,49,48,34
.byte 10,9,97,115,109,32,34,112,111,112,32,37,114,57,34,10,9,97,115,109,32,34,112,111,112,32,37,114,56,34,10,9
.byte 97,115,109,32,34,112,111,112,32,37,114,100,105,34,10,9,97,115,109,32,34,112,111,112,32,37,114,115,105,34,10,9
.byte 97,115,109,32,34,112,111,112,32,37,114,98,120,34,10,9,97,115,109,32,34,112,111,112,32,37,114,100,120,34,10,9
.byte 97,115,109,32,34,112,111,112,32,37,114,99,120,34,10,9,97,115,109,32,34,109,111,118,32,49,54,40,37,114,98,112
.byte 41,44,37,114,97,120,34,10,125,10,118,111,105,100,32,42,109,101,109,109,111,118,101,40,118,111,105,100,32,42,100,115
.byte 116,44,118,111,105,100,32,42,115,114,99,44,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,115,105
.byte 122,101,41,10,123,10,9,105,102,40,100,115,116,60,115,114,99,124,124,40,99,104,97,114,32,42,41,100,115,116,62,61
.byte 40,99,104,97,114,32,42,41,115,114,99,43,115,105,122,101,41,10,9,123,10,9,9,114,101,116,117,114,110,32,109,101
.byte 109,99,112,121,40,100,115,116,44,115,114,99,44,115,105,122,101,41,59,10,9,125,10,9,101,108,115,101,10,9,123,10
.byte 9,9,109,101,109,99,112,121,95,114,40,40,99,104,97,114,32,42,41,100,115,116,43,115,105,122,101,44,40,99,104,97
.byte 114,32,42,41,115,114,99,43,115,105,122,101,44,115,105,122,101,41,59,10,9,9,114,101,116,117,114,110,32,100,115,116
.byte 59,10,9,125,10,125,10,97,115,109,32,34,64,95,109,101,109,109,111,118,101,95,101,110,100,34,10,118,111,105,100,32
.byte 42,109,101,109,115,101,116,40,118,111,105,100,32,42,109,101,109,44,105,110,116,32,118,97,108,44,117,110,115,105,103,110
.byte 101,100,32,108,111,110,103,32,105,110,116,32,115,105,122,101,41,10,123,10,9,97,115,109,32,34,112,117,115,104,32,37
.byte 114,99,120,34,10,9,97,115,109,32,34,112,117,115,104,32,37,114,100,120,34,10,9,97,115,109,32,34,109,111,118,122
.byte 98,108,32,50,52,40,37,114,98,112,41,44,37,101,100,120,34,10,9,97,115,109,32,34,109,111,118,32,36,48,120,49
.byte 48,49,48,49,48,49,48,49,48,49,48,49,48,49,44,37,114,97,120,34,10,9,97,115,109,32,34,109,117,108,32,37
.byte 114,100,120,34,10,9,97,115,109,32,34,109,111,118,32,37,114,97,120,44,37,114,100,120,34,10,9,97,115,109,32,34
.byte 109,111,118,32,49,54,40,37,114,98,112,41,44,37,114,97,120,34,10,9,97,115,109,32,34,109,111,118,32,51,50,40
.byte 37,114,98,112,41,44,37,114,99,120,34,10,9,97,115,109,32,34,99,109,112,32,36,56,44,37,114,99,120,34,10,9
.byte 97,115,109,32,34,106,98,32,64,95,109,101,109,115,101,116,95,88,51,51,34,10,9,97,115,109,32,34,116,101,115,116
.byte 32,36,49,44,37,97,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,115,101,116,95,88,49,49,34,10
.byte 9,97,115,109,32,34,109,111,118,32,37,100,108,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,105,110,99,32
.byte 37,114,97,120,34,10,9,97,115,109,32,34,100,101,99,32,37,114,99,120,34,10,9,97,115,109,32,34,64,95,109,101
.byte 109,115,101,116,95,88,49,49,34,10,9,97,115,109,32,34,116,101,115,116,32,36,50,44,37,97,108,34,10,9,97,115
.byte 109,32,34,106,101,32,64,95,109,101,109,115,101,116,95,88,49,50,34,10,9,97,115,109,32,34,109,111,118,32,37,100
.byte 120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,97,100,100,32,36,50,44,37,114,97,120,34,10,9,97,115
.byte 109,32,34,115,117,98,32,36,50,44,37,114,99,120,34,10,9,97,115,109,32,34,64,95,109,101,109,115,101,116,95,88
.byte 49,50,34,10,9,97,115,109,32,34,116,101,115,116,32,36,52,44,37,97,108,34,10,9,97,115,109,32,34,106,101,32
.byte 64,95,109,101,109,115,101,116,95,88,49,51,34,10,9,97,115,109,32,34,109,111,118,32,37,101,100,120,44,40,37,114
.byte 97,120,41,34,10,9,97,115,109,32,34,97,100,100,32,36,52,44,37,114,97,120,34,10,9,97,115,109,32,34,115,117
.byte 98,32,36,52,44,37,114,99,120,34,10,9,97,115,109,32,34,64,95,109,101,109,115,101,116,95,88,49,51,34,10,9
.byte 97,115,109,32,34,115,117,98,32,36,54,52,44,37,114,99,120,34,10,9,97,115,109,32,34,106,98,32,64,95,109,101
.byte 109,115,101,116,95,88,50,49,34,10,9,97,115,109,32,34,64,95,109,101,109,115,101,116,95,88,50,50,34,10,9,97
.byte 115,109,32,34,109,111,118,32,37,114,100,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37
.byte 114,100,120,44,56,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,100,120,44,49,54,40,37
.byte 114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,100,120,44,50,52,40,37,114,97,120,41,34,10,9
.byte 97,115,109,32,34,109,111,118,32,37,114,100,120,44,51,50,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111
.byte 118,32,37,114,100,120,44,52,48,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,100,120,44
.byte 52,56,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,100,120,44,53,54,40,37,114,97,120
.byte 41,34,10,9,97,115,109,32,34,97,100,100,32,36,54,52,44,37,114,97,120,34,10,9,97,115,109,32,34,115,117,98
.byte 32,36,54,52,44,37,114,99,120,34,10,9,97,115,109,32,34,106,97,101,32,64,95,109,101,109,115,101,116,95,88,50
.byte 50,34,10,9,97,115,109,32,34,64,95,109,101,109,115,101,116,95,88,50,49,34,10,9,97,115,109,32,34,116,101,115
.byte 116,32,36,51,50,44,37,99,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,115,101,116,95,88,51,49
.byte 34,10,9,97,115,109,32,34,109,111,118,32,37,114,100,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109
.byte 111,118,32,37,114,100,120,44,56,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,100,120,44
.byte 49,54,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,100,120,44,50,52,40,37,114,97,120
.byte 41,34,10,9,97,115,109,32,34,97,100,100,32,36,51,50,44,37,114,97,120,34,10,9,97,115,109,32,34,64,95,109
.byte 101,109,115,101,116,95,88,51,49,34,10,9,97,115,109,32,34,116,101,115,116,32,36,49,54,44,37,99,108,34,10,9
.byte 97,115,109,32,34,106,101,32,64,95,109,101,109,115,101,116,95,88,51,50,34,10,9,97,115,109,32,34,109,111,118,32
.byte 37,114,100,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,109,111,118,32,37,114,100,120,44,56,40,37,114
.byte 97,120,41,34,10,9,97,115,109,32,34,97,100,100,32,36,49,54,44,37,114,97,120,34,10,9,97,115,109,32,34,64
.byte 95,109,101,109,115,101,116,95,88,51,50,34,10,9,97,115,109,32,34,116,101,115,116,32,36,56,44,37,99,108,34,10
.byte 9,97,115,109,32,34,106,101,32,64,95,109,101,109,115,101,116,95,88,51,51,34,10,9,97,115,109,32,34,109,111,118
.byte 32,37,114,100,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,97,100,100,32,36,56,44,37,114,97,120,34
.byte 10,9,97,115,109,32,34,64,95,109,101,109,115,101,116,95,88,51,51,34,10,9,97,115,109,32,34,116,101,115,116,32
.byte 36,52,44,37,99,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,115,101,116,95,88,51,52,34,10,9
.byte 97,115,109,32,34,109,111,118,32,37,101,100,120,44,40,37,114,97,120,41,34,10,9,97,115,109,32,34,97,100,100,32
.byte 36,52,44,37,114,97,120,34,10,9,97,115,109,32,34,64,95,109,101,109,115,101,116,95,88,51,52,34,10,9,97,115
.byte 109,32,34,116,101,115,116,32,36,50,44,37,99,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,115,101
.byte 116,95,88,51,53,34,10,9,97,115,109,32,34,109,111,118,32,37,100,120,44,40,37,114,97,120,41,34,10,9,97,115
.byte 109,32,34,97,100,100,32,36,50,44,37,114,97,120,34,10,9,97,115,109,32,34,64,95,109,101,109,115,101,116,95,88
.byte 51,53,34,10,9,97,115,109,32,34,116,101,115,116,32,36,49,44,37,99,108,34,10,9,97,115,109,32,34,106,101,32
.byte 64,95,109,101,109,115,101,116,95,88,51,54,34,10,9,97,115,109,32,34,109,111,118,32,37,100,108,44,40,37,114,97
.byte 120,41,34,10,9,97,115,109,32,34,64,95,109,101,109,115,101,116,95,88,51,54,34,10,9,97,115,109,32,34,112,111
.byte 112,32,37,114,100,120,34,10,9,97,115,109,32,34,112,111,112,32,37,114,99,120,34,10,9,97,115,109,32,34,109,111
.byte 118,32,49,54,40,37,114,98,112,41,44,37,114,97,120,34,10,125,10,105,110,116,32,109,101,109,99,109,112,40,118,111
.byte 105,100,32,42,109,101,109,49,44,118,111,105,100,32,42,109,101,109,50,44,117,110,115,105,103,110,101,100,32,108,111,110
.byte 103,32,105,110,116,32,115,105,122,101,41,10,123,10,9,97,115,109,32,34,112,117,115,104,32,37,114,115,105,34,10,9
.byte 97,115,109,32,34,112,117,115,104,32,37,114,100,105,34,10,9,97,115,109,32,34,112,117,115,104,32,37,114,99,120,34
.byte 10,9,97,115,109,32,34,109,111,118,32,49,54,40,37,114,98,112,41,44,37,114,115,105,34,10,9,97,115,109,32,34
.byte 109,111,118,32,50,52,40,37,114,98,112,41,44,37,114,100,105,34,10,9,97,115,109,32,34,109,111,118,32,51,50,40
.byte 37,114,98,112,41,44,37,114,99,120,34,10,9,97,115,109,32,34,115,117,98,32,36,56,44,37,114,99,120,34,10,9
.byte 97,115,109,32,34,106,98,32,64,95,109,101,109,99,109,112,95,88,49,34,10,9,97,115,109,32,34,64,95,109,101,109
.byte 99,109,112,95,88,50,34,10,9,97,115,109,32,34,109,111,118,32,40,37,114,115,105,41,44,37,114,97,120,34,10,9
.byte 97,115,109,32,34,115,117,98,32,40,37,114,100,105,41,44,37,114,97,120,34,10,9,97,115,109,32,34,106,110,101,32
.byte 64,95,109,101,109,99,109,112,95,69,34,10,9,97,115,109,32,34,97,100,100,32,36,56,44,37,114,115,105,34,10,9
.byte 97,115,109,32,34,97,100,100,32,36,56,44,37,114,100,105,34,10,9,97,115,109,32,34,115,117,98,32,36,56,44,37
.byte 114,99,120,34,10,9,97,115,109,32,34,106,97,101,32,64,95,109,101,109,99,109,112,95,88,50,34,10,9,97,115,109
.byte 32,34,64,95,109,101,109,99,109,112,95,88,49,34,10,9,97,115,109,32,34,116,101,115,116,32,36,52,44,37,99,108
.byte 34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,99,109,112,95,89,49,34,10,9,97,115,109,32,34,109,111
.byte 118,32,40,37,114,115,105,41,44,37,101,97,120,34,10,9,97,115,109,32,34,115,117,98,32,40,37,114,100,105,41,44
.byte 37,101,97,120,34,10,9,97,115,109,32,34,106,110,101,32,64,95,109,101,109,99,109,112,95,69,34,10,9,97,115,109
.byte 32,34,97,100,100,32,36,52,44,37,114,115,105,34,10,9,97,115,109,32,34,97,100,100,32,36,52,44,37,114,100,105
.byte 34,10,9,97,115,109,32,34,64,95,109,101,109,99,109,112,95,89,49,34,10,9,97,115,109,32,34,116,101,115,116,32
.byte 36,50,44,37,99,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,99,109,112,95,89,50,34,10,9,97
.byte 115,109,32,34,109,111,118,32,40,37,114,115,105,41,44,37,97,120,34,10,9,97,115,109,32,34,115,117,98,32,40,37
.byte 114,100,105,41,44,37,97,120,34,10,9,97,115,109,32,34,106,110,101,32,64,95,109,101,109,99,109,112,95,69,34,10
.byte 9,97,115,109,32,34,97,100,100,32,36,50,44,37,114,115,105,34,10,9,97,115,109,32,34,97,100,100,32,36,50,44
.byte 37,114,100,105,34,10,9,97,115,109,32,34,64,95,109,101,109,99,109,112,95,89,50,34,10,9,97,115,109,32,34,116
.byte 101,115,116,32,36,49,44,37,99,108,34,10,9,97,115,109,32,34,106,101,32,64,95,109,101,109,99,109,112,95,69,50
.byte 34,10,9,97,115,109,32,34,109,111,118,32,40,37,114,115,105,41,44,37,97,108,34,10,9,97,115,109,32,34,115,117
.byte 98,32,40,37,114,100,105,41,44,37,97,108,34,10,9,97,115,109,32,34,106,110,101,32,64,95,109,101,109,99,109,112
.byte 95,69,34,10,9,97,115,109,32,34,97,100,100,32,36,49,44,37,114,115,105,34,10,9,97,115,109,32,34,97,100,100
.byte 32,36,49,44,37,114,100,105,34,10,9,97,115,109,32,34,106,109,112,32,64,95,109,101,109,99,109,112,95,69,50,34
.byte 10,9,97,115,109,32,34,64,95,109,101,109,99,109,112,95,69,34,10,9,97,115,109,32,34,116,101,115,116,32,37,101
.byte 97,120,44,37,101,97,120,34,10,9,97,115,109,32,34,106,110,101,32,64,95,109,101,109,99,109,112,95,69,49,49,34
.byte 10,9,97,115,109,32,34,115,104,114,32,36,51,50,44,37,114,97,120,34,10,9,97,115,109,32,34,64,95,109,101,109
.byte 99,109,112,95,69,49,49,34,10,9,97,115,109,32,34,116,101,115,116,32,37,97,120,44,37,97,120,34,10,9,97,115
.byte 109,32,34,106,110,101,32,64,95,109,101,109,99,109,112,95,69,49,50,34,10,9,97,115,109,32,34,115,104,114,32,36
.byte 49,54,44,37,114,97,120,34,10,9,97,115,109,32,34,64,95,109,101,109,99,109,112,95,69,49,50,34,10,9,97,115
.byte 109,32,34,116,101,115,116,32,37,97,108,44,37,97,108,34,10,9,97,115,109,32,34,106,110,101,32,64,95,109,101,109
.byte 99,109,112,95,69,50,34,10,9,97,115,109,32,34,109,111,118,32,37,97,104,44,37,97,108,34,10,9,97,115,109,32
.byte 34,64,95,109,101,109,99,109,112,95,69,50,34,10,9,97,115,109,32,34,109,111,118,115,98,113,32,37,97,108,44,37
.byte 114,97,120,34,10,9,97,115,109,32,34,112,111,112,32,37,114,99,120,34,10,9,97,115,109,32,34,112,111,112,32,37
.byte 114,100,105,34,10,9,97,115,109,32,34,112,111,112,32,37,114,115,105,34,10,125,10,117,110,115,105,103,110,101,100,32
.byte 108,111,110,103,32,105,110,116,32,115,116,114,108,101,110,40,99,104,97,114,32,42,115,116,114,41,10,123,10,9,117,110
.byte 115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,108,59,10,9,108,61,48,59,10,9,119,104,105,108,101,40
.byte 42,115,116,114,41,10,9,123,10,9,9,43,43,108,59,10,9,9,43,43,115,116,114,59,10,9,125,10,9,114,101,116
.byte 117,114,110,32,108,59,10,125,10,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,115,116,114,110,108
.byte 101,110,40,99,104,97,114,32,42,115,116,114,44,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,109
.byte 97,120,41,10,123,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,108,59,10,9,105,102,40
.byte 109,97,120,61,61,48,41,10,9,123,10,9,9,114,101,116,117,114,110,32,48,59,10,9,125,10,9,45,45,109,97,120
.byte 59,10,9,108,61,48,59,10,9,119,104,105,108,101,40,42,115,116,114,38,38,108,60,109,97,120,41,10,9,123,10,9
.byte 9,43,43,108,59,10,9,9,43,43,115,116,114,59,10,9,125,10,9,114,101,116,117,114,110,32,108,59,10,125,10,105
.byte 110,116,32,115,116,114,99,109,112,40,99,104,97,114,32,42,115,116,114,49,44,99,104,97,114,32,42,115,116,114,50,41
.byte 10,123,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,108,49,44,108,50,59,10,9,108,49
.byte 61,115,116,114,108,101,110,40,115,116,114,49,41,59,10,9,108,50,61,115,116,114,108,101,110,40,115,116,114,50,41,59
.byte 10,9,105,102,40,108,49,62,108,50,41,10,9,123,10,9,9,108,49,61,108,50,59,10,9,125,10,9,114,101,116,117
.byte 114,110,32,109,101,109,99,109,112,40,115,116,114,49,44,115,116,114,50,44,108,49,43,49,41,59,10,125,10,105,110,116
.byte 32,115,116,114,110,99,109,112,40,99,104,97,114,32,42,115,116,114,49,44,99,104,97,114,32,42,115,116,114,50,44,117
.byte 110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,109,97,120,41,10,123,10,9,117,110,115,105,103,110,101
.byte 100,32,108,111,110,103,32,105,110,116,32,108,49,44,108,50,59,10,9,108,49,61,115,116,114,110,108,101,110,40,115,116
.byte 114,49,44,109,97,120,41,59,10,9,108,50,61,115,116,114,110,108,101,110,40,115,116,114,50,44,109,97,120,41,59,10
.byte 9,105,102,40,108,49,62,108,50,41,10,9,123,10,9,9,108,49,61,108,50,59,10,9,125,10,9,114,101,116,117,114
.byte 110,32,109,101,109,99,109,112,40,115,116,114,49,44,115,116,114,50,44,108,49,43,49,41,59,10,125,10,99,104,97,114
.byte 32,42,115,116,114,99,112,121,40,99,104,97,114,32,42,100,115,116,44,99,104,97,114,32,42,115,114,99,41,10,123,10
.byte 9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,108,59,10,9,108,61,115,116,114,108,101,110,40
.byte 115,114,99,41,59,10,9,109,101,109,99,112,121,40,100,115,116,44,115,114,99,44,108,43,49,41,59,10,9,114,101,116
.byte 117,114,110,32,100,115,116,59,10,125,10,99,104,97,114,32,42,115,116,114,99,97,116,40,99,104,97,114,32,42,100,115
.byte 116,44,99,104,97,114,32,42,115,114,99,41,10,123,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110
.byte 116,32,108,59,10,9,108,61,115,116,114,108,101,110,40,100,115,116,41,59,10,9,115,116,114,99,112,121,40,100,115,116
.byte 43,108,44,115,114,99,41,59,10,9,114,101,116,117,114,110,32,100,115,116,59,10,125,10,35,101,110,100,105,102,10,0
.byte 48,55,48,55,48,49,48,48,48,48,48,48,48,67,48,48,48,48,56,49,65,52,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48,48,48,48,49,66,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,69,48,48,48,48,48,48,48,48,46,47,116,101,114,109,105,111,115,46,99,0,0,0,35,105,102,110
.byte 100,101,102,32,95,73,79,67,84,76,95,95,84,69,82,77,73,79,83,95,67,95,10,35,100,101,102,105,110,101,32,95
.byte 73,79,67,84,76,95,95,84,69,82,77,73,79,83,95,67,95,10,115,116,114,117,99,116,32,116,101,114,109,105,111,115
.byte 10,123,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32,105,102,108,97,103,59,10,9,117,110,115,105,103,110,101
.byte 100,32,105,110,116,32,111,102,108,97,103,59,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32,99,102,108,97,103
.byte 59,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32,108,102,108,97,103,59,10,9,117,110,115,105,103,110,101,100
.byte 32,99,104,97,114,32,108,105,110,101,59,10,9,117,110,115,105,103,110,101,100,32,99,104,97,114,32,99,99,91,51,50
.byte 93,59,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32,105,115,112,101,101,100,59,10,9,117,110,115,105,103,110
.byte 101,100,32,105,110,116,32,111,115,112,101,101,100,59,10,125,59,10,115,116,114,117,99,116,32,119,105,110,115,105,122,101
.byte 10,123,10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,114,111,119,59,10,9,117,110,115,105,103,110,101
.byte 100,32,115,104,111,114,116,32,99,111,108,59,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32,117,110,117,115,101
.byte 100,59,10,125,59,10,35,100,101,102,105,110,101,32,84,67,71,69,84,83,32,48,120,53,52,48,49,10,35,100,101,102
.byte 105,110,101,32,84,67,83,69,84,83,32,48,120,53,52,48,50,10,35,100,101,102,105,110,101,32,84,73,79,67,83,67
.byte 84,84,89,32,48,120,53,52,48,101,10,35,100,101,102,105,110,101,32,84,73,79,67,71,87,73,78,83,90,32,48,120
.byte 53,52,49,51,10,35,101,110,100,105,102,10,48,55,48,55,48,49,48,48,48,48,48,48,48,68,48,48,48,48,56,49
.byte 65,52,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,50,65,51,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,65,48,48,48,48,48,48,48,48,46,47,115,116,97,116
.byte 46,99,0,0,35,105,102,110,100,101,102,32,95,83,84,65,84,95,67,95,10,35,100,101,102,105,110,101,32,95,83,84
.byte 65,84,95,67,95,10,115,116,114,117,99,116,32,115,116,97,116,10,123,10,9,117,110,115,105,103,110,101,100,32,108,111
.byte 110,103,32,105,110,116,32,100,101,118,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,105
.byte 110,111,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,110,108,105,110,107,59,10,9,117
.byte 110,115,105,103,110,101,100,32,105,110,116,32,109,111,100,101,59,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32
.byte 117,105,100,59,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32,103,105,100,59,10,9,117,110,115,105,103,110,101
.byte 100,32,105,110,116,32,112,97,100,49,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,114
.byte 100,101,118,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,115,105,122,101,59,10,9,117
.byte 110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,98,108,107,115,105,122,101,59,10,9,117,110,115,105,103
.byte 110,101,100,32,108,111,110,103,32,105,110,116,32,98,108,111,99,107,115,59,10,9,117,110,115,105,103,110,101,100,32,108
.byte 111,110,103,32,105,110,116,32,97,116,105,109,101,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110
.byte 116,32,97,116,105,109,101,49,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,109,116,105
.byte 109,101,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,109,116,105,109,101,49,59,10,9
.byte 117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,99,116,105,109,101,59,10,9,117,110,115,105,103,110
.byte 101,100,32,108,111,110,103,32,105,110,116,32,99,116,105,109,101,49,59,10,9,117,110,115,105,103,110,101,100,32,108,111
.byte 110,103,32,105,110,116,32,112,97,100,50,91,51,93,59,10,125,59,10,35,100,101,102,105,110,101,32,83,84,65,84,95
.byte 68,73,82,32,48,52,48,48,48,48,10,35,100,101,102,105,110,101,32,83,84,65,84,95,82,69,71,32,48,49,48,48
.byte 48,48,48,10,35,100,101,102,105,110,101,32,83,84,65,84,95,70,73,70,79,32,48,49,48,48,48,48,10,35,100,101
.byte 102,105,110,101,32,83,84,65,84,95,83,79,67,75,32,48,49,52,48,48,48,48,10,35,100,101,102,105,110,101,32,83
.byte 84,65,84,95,76,78,75,32,48,49,50,48,48,48,48,10,35,100,101,102,105,110,101,32,83,84,65,84,95,67,72,82
.byte 32,48,50,48,48,48,48,10,35,100,101,102,105,110,101,32,83,84,65,84,95,66,76,75,32,48,54,48,48,48,48,10
.byte 35,101,110,100,105,102,10,0,48,55,48,55,48,49,48,48,48,48,48,48,48,69,48,48,48,48,56,49,65,52,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,52,52,69,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,69,48,48,48,48,48,48,48,48,46,47,112,99,111,110,116,101,120,116
.byte 46,99,0,0,35,105,102,110,100,101,102,32,95,80,67,79,78,84,69,88,84,95,67,95,10,35,100,101,102,105,110,101
.byte 32,95,80,67,79,78,84,69,88,84,95,67,95,10,115,116,114,117,99,116,32,112,99,111,110,116,101,120,116,10,123,10
.byte 9,108,111,110,103,32,114,105,112,59,10,9,108,111,110,103,32,103,112,114,101,103,91,49,51,93,59,10,125,59,10,105
.byte 110,116,32,112,99,111,110,116,101,120,116,95,115,97,118,101,40,115,116,114,117,99,116,32,112,99,111,110,116,101,120,116
.byte 32,42,112,99,111,110,116,101,120,116,41,59,10,97,115,109,32,34,64,112,99,111,110,116,101,120,116,95,115,97,118,101
.byte 34,10,97,115,109,32,34,109,111,118,32,56,40,37,114,115,112,41,44,37,114,99,120,34,10,97,115,109,32,34,108,101
.byte 97,32,64,112,99,111,110,116,101,120,116,95,115,97,118,101,95,114,105,112,45,64,112,99,111,110,116,101,120,116,95,108
.byte 40,37,114,105,112,41,44,37,114,97,120,34,10,97,115,109,32,34,64,112,99,111,110,116,101,120,116,95,108,34,10,97
.byte 115,109,32,34,109,111,118,32,37,114,97,120,44,40,37,114,99,120,41,34,10,97,115,109,32,34,109,111,118,32,37,114
.byte 98,120,44,56,40,37,114,99,120,41,34,10,97,115,109,32,34,109,111,118,32,37,114,115,112,44,49,54,40,37,114,99
.byte 120,41,34,10,97,115,109,32,34,109,111,118,32,37,114,98,112,44,50,52,40,37,114,99,120,41,34,10,97,115,109,32
.byte 34,109,111,118,32,37,114,115,105,44,51,50,40,37,114,99,120,41,34,10,97,115,109,32,34,109,111,118,32,37,114,100
.byte 105,44,52,48,40,37,114,99,120,41,34,10,97,115,109,32,34,109,111,118,32,37,114,56,44,52,56,40,37,114,99,120
.byte 41,34,10,97,115,109,32,34,109,111,118,32,37,114,57,44,53,54,40,37,114,99,120,41,34,10,97,115,109,32,34,109
.byte 111,118,32,37,114,49,48,44,54,52,40,37,114,99,120,41,34,10,97,115,109,32,34,109,111,118,32,37,114,49,49,44
.byte 55,50,40,37,114,99,120,41,34,10,97,115,109,32,34,109,111,118,32,37,114,49,50,44,56,48,40,37,114,99,120,41
.byte 34,10,97,115,109,32,34,109,111,118,32,37,114,49,51,44,56,56,40,37,114,99,120,41,34,10,97,115,109,32,34,109
.byte 111,118,32,37,114,49,52,44,57,54,40,37,114,99,120,41,34,10,97,115,109,32,34,109,111,118,32,37,114,49,53,44
.byte 49,48,52,40,37,114,99,120,41,34,10,97,115,109,32,34,120,111,114,32,37,101,97,120,44,37,101,97,120,34,10,97
.byte 115,109,32,34,64,112,99,111,110,116,101,120,116,95,115,97,118,101,95,114,105,112,34,10,97,115,109,32,34,114,101,116
.byte 34,10,118,111,105,100,32,112,99,111,110,116,101,120,116,95,114,101,115,116,111,114,101,40,115,116,114,117,99,116,32,112
.byte 99,111,110,116,101,120,116,32,42,112,99,111,110,116,101,120,116,44,105,110,116,32,114,101,116,41,59,10,97,115,109,32
.byte 34,64,112,99,111,110,116,101,120,116,95,114,101,115,116,111,114,101,34,10,97,115,109,32,34,109,111,118,32,49,54,40
.byte 37,114,115,112,41,44,37,101,97,120,34,10,97,115,109,32,34,109,111,118,32,56,40,37,114,115,112,41,44,37,114,99
.byte 120,34,10,97,115,109,32,34,109,111,118,32,56,40,37,114,99,120,41,44,37,114,98,120,34,10,97,115,109,32,34,109
.byte 111,118,32,49,54,40,37,114,99,120,41,44,37,114,115,112,34,10,97,115,109,32,34,109,111,118,32,50,52,40,37,114
.byte 99,120,41,44,37,114,98,112,34,10,97,115,109,32,34,109,111,118,32,51,50,40,37,114,99,120,41,44,37,114,115,105
.byte 34,10,97,115,109,32,34,109,111,118,32,52,48,40,37,114,99,120,41,44,37,114,100,105,34,10,97,115,109,32,34,109
.byte 111,118,32,52,56,40,37,114,99,120,41,44,37,114,56,34,10,97,115,109,32,34,109,111,118,32,53,54,40,37,114,99
.byte 120,41,44,37,114,57,34,10,97,115,109,32,34,109,111,118,32,54,52,40,37,114,99,120,41,44,37,114,49,48,34,10
.byte 97,115,109,32,34,109,111,118,32,55,50,40,37,114,99,120,41,44,37,114,49,49,34,10,97,115,109,32,34,109,111,118
.byte 32,56,48,40,37,114,99,120,41,44,37,114,49,50,34,10,97,115,109,32,34,109,111,118,32,56,56,40,37,114,99,120
.byte 41,44,37,114,49,51,34,10,97,115,109,32,34,109,111,118,32,57,54,40,37,114,99,120,41,44,37,114,49,52,34,10
.byte 97,115,109,32,34,109,111,118,32,49,48,52,40,37,114,99,120,41,44,37,114,49,53,34,10,97,115,109,32,34,106,109
.byte 112,32,42,40,37,114,99,120,41,34,10,35,101,110,100,105,102,10,0,0,48,55,48,55,48,49,48,48,48,48,48,48
.byte 48,70,48,48,48,48,56,49,65,52,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,49,48,48,48,48,48,48,48,48,48,48,48,48,48,53,49,57,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,65,48,48,48,48,48,48
.byte 48,48,46,47,108,119,112,46,99,0,0,0,35,105,102,110,100,101,102,32,95,76,87,80,95,67,95,10,35,100,101,102
.byte 105,110,101,32,95,76,87,80,95,67,95,10,105,110,116,32,99,114,101,97,116,101,95,108,119,112,40,117,110,115,105,103
.byte 110,101,100,32,108,111,110,103,32,115,116,97,99,107,95,115,105,122,101,44,105,110,116,32,40,42,102,117,110,41,40,118
.byte 111,105,100,32,42,41,44,118,111,105,100,32,42,97,114,103,41,59,10,97,115,109,32,34,64,99,114,101,97,116,101,95
.byte 108,119,112,34,10,97,115,109,32,34,112,117,115,104,32,37,114,100,105,34,10,97,115,109,32,34,112,117,115,104,32,37
.byte 114,115,105,34,10,97,115,109,32,34,112,117,115,104,32,37,114,100,120,34,10,97,115,109,32,34,112,117,115,104,32,37
.byte 114,49,48,34,10,97,115,109,32,34,112,117,115,104,32,37,114,56,34,10,97,115,109,32,34,112,117,115,104,32,37,114
.byte 57,34,10,97,115,109,32,34,112,117,115,104,32,37,114,49,49,34,10,97,115,109,32,34,112,117,115,104,32,37,114,49
.byte 50,34,10,97,115,109,32,34,112,117,115,104,32,37,114,49,51,34,10,97,115,109,32,34,112,117,115,104,32,37,114,49
.byte 52,34,10,97,115,109,32,34,109,111,118,32,56,56,40,37,114,115,112,41,44,37,114,115,105,34,10,97,115,109,32,34
.byte 120,111,114,32,37,101,100,105,44,37,101,100,105,34,10,97,115,109,32,34,109,111,118,32,36,51,44,37,101,100,120,34
.byte 10,97,115,109,32,34,109,111,118,32,36,48,120,50,50,44,37,114,49,48,100,34,10,97,115,109,32,34,109,111,118,32
.byte 37,101,100,105,44,37,114,56,100,34,10,97,115,109,32,34,109,111,118,32,37,101,100,105,44,37,114,57,100,34,10,97
.byte 115,109,32,34,100,101,99,32,37,114,56,34,10,97,115,109,32,34,109,111,118,32,36,57,44,37,101,97,120,34,10,97
.byte 115,109,32,34,115,121,115,99,97,108,108,34,10,97,115,109,32,34,99,109,112,32,36,48,120,102,102,102,102,102,102,102
.byte 102,102,102,102,102,102,48,48,48,44,37,114,97,120,34,10,97,115,109,32,34,106,97,32,64,95,99,114,101,97,116,101
.byte 95,108,119,112,95,101,110,100,34,10,97,115,109,32,34,109,111,118,32,56,56,40,37,114,115,112,41,44,37,114,49,50
.byte 34,10,97,115,109,32,34,109,111,118,32,57,54,40,37,114,115,112,41,44,37,114,100,120,34,10,97,115,109,32,34,109
.byte 111,118,32,49,48,52,40,37,114,115,112,41,44,37,114,49,52,34,10,97,115,109,32,34,109,111,118,32,36,48,120,49
.byte 56,102,48,48,44,37,101,100,105,34,10,97,115,109,32,34,109,111,118,32,37,114,97,120,44,37,114,49,51,34,10,97
.byte 115,109,32,34,108,101,97,32,40,37,114,97,120,44,37,114,49,50,41,44,37,114,115,105,34,10,97,115,109,32,34,109
.byte 111,118,32,36,53,54,44,37,101,97,120,34,10,97,115,109,32,34,115,121,115,99,97,108,108,34,10,97,115,109,32,34
.byte 99,109,112,32,36,48,120,102,102,102,102,102,102,102,102,102,102,102,102,102,48,48,48,44,37,114,97,120,34,10,97,115
.byte 109,32,34,106,97,32,64,95,99,114,101,97,116,101,95,108,119,112,95,101,114,114,34,10,10,97,115,109,32,34,116,101
.byte 115,116,32,37,114,97,120,44,37,114,97,120,34,10,97,115,109,32,34,106,110,101,32,64,95,99,114,101,97,116,101,95
.byte 108,119,112,95,101,110,100,34,10,97,115,109,32,34,112,117,115,104,32,37,114,49,50,34,10,97,115,109,32,34,112,117
.byte 115,104,32,37,114,49,52,34,10,97,115,109,32,34,99,97,108,108,32,42,37,114,100,120,34,10,97,115,109,32,34,109
.byte 111,118,32,56,40,37,114,115,112,41,44,37,114,115,105,34,10,97,115,109,32,34,108,101,97,32,49,54,40,37,114,115
.byte 112,41,44,37,114,100,105,34,10,97,115,109,32,34,115,117,98,32,37,114,115,105,44,37,114,100,105,34,10,97,115,109
.byte 32,34,109,111,118,32,37,114,97,120,44,37,114,100,120,34,10,97,115,109,32,34,109,111,118,32,36,49,49,44,37,101
.byte 97,120,34,10,97,115,109,32,34,115,121,115,99,97,108,108,34,10,97,115,109,32,34,109,111,118,32,37,114,100,120,44
.byte 37,114,100,105,34,10,97,115,109,32,34,109,111,118,32,36,54,48,44,37,101,97,120,34,10,97,115,109,32,34,115,121
.byte 115,99,97,108,108,34,10,10,97,115,109,32,34,64,95,99,114,101,97,116,101,95,108,119,112,95,101,114,114,34,10,97
.byte 115,109,32,34,109,111,118,32,37,114,49,50,44,37,114,115,105,34,10,97,115,109,32,34,109,111,118,32,37,114,49,51
.byte 44,37,114,100,105,34,10,97,115,109,32,34,109,111,118,32,36,49,49,44,37,101,97,120,34,10,97,115,109,32,34,115
.byte 121,115,99,97,108,108,34,10,10,97,115,109,32,34,64,95,99,114,101,97,116,101,95,108,119,112,95,101,110,100,34,10
.byte 97,115,109,32,34,112,111,112,32,37,114,49,52,34,10,97,115,109,32,34,112,111,112,32,37,114,49,51,34,10,97,115
.byte 109,32,34,112,111,112,32,37,114,49,50,34,10,97,115,109,32,34,112,111,112,32,37,114,49,49,34,10,97,115,109,32
.byte 34,112,111,112,32,37,114,57,34,10,97,115,109,32,34,112,111,112,32,37,114,56,34,10,97,115,109,32,34,112,111,112
.byte 32,37,114,49,48,34,10,97,115,109,32,34,112,111,112,32,37,114,100,120,34,10,97,115,109,32,34,112,111,112,32,37
.byte 114,115,105,34,10,97,115,109,32,34,112,111,112,32,37,114,100,105,34,10,97,115,109,32,34,114,101,116,34,10,35,101
.byte 110,100,105,102,10,0,0,0,48,55,48,55,48,49,48,48,48,48,48,48,49,48,48,48,48,48,56,49,65,52,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,67,51,69,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,69,48,48,48,48,48,48,48,48,46,47,115,111,99,107,101,116,46,99
.byte 0,0,0,0,35,105,102,110,100,101,102,32,95,83,79,67,75,69,84,95,67,95,10,35,100,101,102,105,110,101,32,95
.byte 83,79,67,75,69,84,95,67,95,10,35,100,101,102,105,110,101,32,65,70,95,85,78,73,88,32,49,10,35,100,101,102
.byte 105,110,101,32,65,70,95,73,78,69,84,32,50,10,35,100,101,102,105,110,101,32,65,70,95,73,78,69,84,54,32,49
.byte 48,10,35,100,101,102,105,110,101,32,65,70,95,78,69,84,76,73,78,75,32,49,54,10,35,100,101,102,105,110,101,32
.byte 65,70,95,80,65,67,75,69,84,32,49,55,10,35,100,101,102,105,110,101,32,65,70,95,65,76,71,32,51,56,10,10
.byte 35,100,101,102,105,110,101,32,83,79,67,75,95,83,84,82,69,65,77,32,49,10,35,100,101,102,105,110,101,32,83,79
.byte 67,75,95,68,71,82,65,77,32,50,10,35,100,101,102,105,110,101,32,83,79,67,75,95,82,65,87,32,51,10,35,100
.byte 101,102,105,110,101,32,83,79,67,75,95,83,69,81,80,65,67,75,69,84,32,53,10,35,100,101,102,105,110,101,32,83
.byte 79,67,75,95,67,76,79,69,88,69,67,32,48,50,48,48,48,48,48,48,10,35,100,101,102,105,110,101,32,83,79,67
.byte 75,95,78,79,78,66,76,79,67,75,32,48,52,48,48,48,10,10,35,100,101,102,105,110,101,32,73,80,80,82,79,84
.byte 79,95,84,67,80,32,54,10,35,100,101,102,105,110,101,32,73,80,80,82,79,84,79,95,85,68,80,32,49,55,10,35
.byte 100,101,102,105,110,101,32,69,84,72,95,80,95,65,76,76,32,48,120,48,51,48,48,10,35,100,101,102,105,110,101,32
.byte 69,84,72,95,80,95,73,80,32,48,120,48,48,48,56,10,35,100,101,102,105,110,101,32,69,84,72,95,80,95,80,65
.byte 69,32,48,120,56,56,56,101,10,10,35,100,101,102,105,110,101,32,83,79,76,95,83,79,67,75,69,84,32,49,10,35
.byte 100,101,102,105,110,101,32,83,79,76,95,65,76,71,32,50,55,57,10,10,35,100,101,102,105,110,101,32,83,79,95,83
.byte 78,68,66,85,70,32,55,10,35,100,101,102,105,110,101,32,83,79,95,82,67,86,66,85,70,32,56,10,10,35,100,101
.byte 102,105,110,101,32,78,69,84,76,73,78,75,95,82,79,85,84,69,32,48,10,35,100,101,102,105,110,101,32,78,69,84
.byte 76,73,78,75,95,71,69,78,69,82,73,67,32,49,54,10,10,115,116,114,117,99,116,32,115,111,99,107,97,100,100,114
.byte 95,117,110,10,123,10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,105,110,116,32,102,97,109,105,108,121
.byte 59,10,9,99,104,97,114,32,115,117,110,95,112,97,116,104,91,49,48,56,93,59,10,125,59,10,115,116,114,117,99,116
.byte 32,115,111,99,107,97,100,100,114,95,105,110,10,123,10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,105
.byte 110,116,32,115,105,110,95,102,97,109,105,108,121,59,10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,105
.byte 110,116,32,115,105,110,95,112,111,114,116,59,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32,115,105,110,95,97
.byte 100,100,114,59,10,9,99,104,97,114,32,112,97,100,91,56,93,59,10,125,59,10,115,116,114,117,99,116,32,115,111,99
.byte 107,97,100,100,114,95,105,110,54,10,123,10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,105,110,116,32
.byte 115,105,110,54,95,102,97,109,105,108,121,59,10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,105,110,116
.byte 32,115,105,110,54,95,112,111,114,116,59,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32,115,105,110,54,95,102
.byte 108,111,119,105,110,102,111,59,10,9,117,110,115,105,103,110,101,100,32,99,104,97,114,32,115,105,110,54,95,97,100,100
.byte 114,91,49,54,93,59,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32,115,105,110,54,95,115,99,111,112,101,95
.byte 105,100,59,10,125,59,10,115,116,114,117,99,116,32,115,111,99,107,97,100,100,114,95,110,108,10,123,10,9,117,110,115
.byte 105,103,110,101,100,32,115,104,111,114,116,32,105,110,116,32,110,108,95,102,97,109,105,108,121,59,10,9,117,110,115,105
.byte 103,110,101,100,32,115,104,111,114,116,32,105,110,116,32,112,97,100,59,10,9,117,110,115,105,103,110,101,100,32,105,110
.byte 116,32,112,105,100,59,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32,103,114,111,117,112,115,59,10,125,59,10
.byte 115,116,114,117,99,116,32,115,111,99,107,97,100,100,114,95,108,108,10,123,10,9,117,110,115,105,103,110,101,100,32,115
.byte 104,111,114,116,32,115,108,108,95,102,97,109,105,108,121,59,10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116
.byte 32,115,108,108,95,112,114,111,116,111,99,111,108,59,10,9,105,110,116,32,115,108,108,95,105,102,105,110,100,101,120,59
.byte 10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,115,108,108,95,104,97,116,121,112,101,59,10,9,117,110
.byte 115,105,103,110,101,100,32,99,104,97,114,32,115,108,108,95,112,107,116,116,121,112,101,59,10,9,117,110,115,105,103,110
.byte 101,100,32,99,104,97,114,32,115,108,108,95,104,97,108,101,110,59,10,9,117,110,115,105,103,110,101,100,32,99,104,97
.byte 114,32,115,108,108,95,97,100,100,114,91,56,93,59,10,125,59,10,115,116,114,117,99,116,32,115,111,99,107,97,100,100
.byte 114,95,97,108,103,10,123,10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,115,97,108,103,95,102,97,109
.byte 105,108,121,59,10,9,117,110,115,105,103,110,101,100,32,99,104,97,114,32,115,97,108,103,95,116,121,112,101,91,49,52
.byte 93,59,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32,115,97,108,103,95,102,101,97,116,59,10,9,117,110,115
.byte 105,103,110,101,100,32,105,110,116,32,115,97,108,103,95,109,97,115,107,59,10,9,117,110,115,105,103,110,101,100,32,99
.byte 104,97,114,32,115,97,108,103,95,110,97,109,101,91,54,52,93,59,10,125,59,10,10,35,100,101,102,105,110,101,32,83
.byte 73,79,67,65,68,68,82,84,32,48,120,56,57,48,98,10,35,100,101,102,105,110,101,32,83,73,79,67,71,73,70,67
.byte 79,78,70,32,48,120,56,57,49,50,10,35,100,101,102,105,110,101,32,83,73,79,67,71,73,70,70,76,65,71,83,32
.byte 48,120,56,57,49,51,10,35,100,101,102,105,110,101,32,83,73,79,67,83,73,70,70,76,65,71,83,32,48,120,56,57
.byte 49,52,10,35,100,101,102,105,110,101,32,83,73,79,67,71,73,70,65,68,68,82,32,48,120,56,57,49,53,10,35,100
.byte 101,102,105,110,101,32,83,73,79,67,83,73,70,65,68,68,82,32,48,120,56,57,49,54,10,35,100,101,102,105,110,101
.byte 32,83,73,79,67,83,73,70,78,69,84,77,65,83,75,32,48,120,56,57,49,99,10,35,100,101,102,105,110,101,32,83
.byte 73,79,67,71,73,70,72,87,65,68,68,82,32,48,120,56,57,50,55,10,35,100,101,102,105,110,101,32,83,73,79,67
.byte 71,73,70,73,78,68,69,88,32,48,120,56,57,51,51,10,10,115,116,114,117,99,116,32,105,110,54,95,105,102,114,101
.byte 113,10,123,10,9,117,110,115,105,103,110,101,100,32,99,104,97,114,32,105,102,114,54,95,97,100,100,114,91,49,54,93
.byte 59,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32,105,102,114,54,95,112,114,101,102,105,120,108,101,110,59,10
.byte 9,105,110,116,32,105,102,114,54,95,105,102,105,110,100,101,120,59,10,125,59,10,117,110,105,111,110,32,95,95,105,102
.byte 114,101,113,95,100,97,116,97,10,123,10,9,117,110,115,105,103,110,101,100,32,99,104,97,114,32,98,121,116,101,115,91
.byte 49,54,93,59,10,9,115,116,114,117,99,116,32,115,111,99,107,97,100,100,114,95,105,110,32,97,100,100,114,59,10,9
.byte 117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,102,108,97,103,115,59,10,9,117,110,115,105,103,110,101,100,32
.byte 105,110,116,32,105,102,105,110,100,101,120,59,10,125,59,10,115,116,114,117,99,116,32,105,102,114,101,113,10,123,10,9
.byte 99,104,97,114,32,110,97,109,101,91,49,54,93,59,10,9,117,110,105,111,110,32,95,95,105,102,114,101,113,95,100,97
.byte 116,97,32,100,97,116,97,59,10,9,99,104,97,114,32,112,97,100,91,56,93,59,10,125,59,10,115,116,114,117,99,116
.byte 32,105,102,99,111,110,102,10,123,10,9,105,110,116,32,105,102,99,95,108,101,110,59,10,9,118,111,105,100,32,42,105
.byte 102,99,117,95,114,101,113,59,10,125,59,10,115,116,114,117,99,116,32,114,116,101,110,116,114,121,10,123,10,9,117,110
.byte 115,105,103,110,101,100,32,108,111,110,103,32,112,97,100,49,59,10,9,115,116,114,117,99,116,32,115,111,99,107,97,100
.byte 100,114,95,105,110,32,100,115,116,59,10,9,115,116,114,117,99,116,32,115,111,99,107,97,100,100,114,95,105,110,32,103
.byte 97,116,101,119,97,121,59,10,9,115,116,114,117,99,116,32,115,111,99,107,97,100,100,114,95,105,110,32,103,101,110,109
.byte 97,115,107,59,10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,102,108,97,103,115,59,10,9,115,104,111
.byte 114,116,32,112,97,100,50,59,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32,95,112,97,100,59,10,9,117,110
.byte 115,105,103,110,101,100,32,108,111,110,103,32,112,97,100,51,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103
.byte 32,112,97,100,52,59,10,9,115,104,111,114,116,32,109,101,116,114,105,99,59,10,9,117,110,115,105,103,110,101,100,32
.byte 115,104,111,114,116,32,95,112,97,100,50,91,51,93,59,10,9,99,104,97,114,32,42,100,101,118,59,10,9,117,110,115
.byte 105,103,110,101,100,32,108,111,110,103,32,109,116,117,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,119
.byte 105,110,100,111,119,59,10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,105,114,116,116,59,10,9,117,110
.byte 115,105,103,110,101,100,32,115,104,111,114,116,32,95,112,97,100,51,91,51,93,59,10,125,59,10,10,35,100,101,102,105
.byte 110,101,32,104,116,111,110,119,40,110,41,32,40,40,117,110,115,105,103,110,101,100,32,115,104,111,114,116,41,40,110,41
.byte 60,60,56,124,40,117,110,115,105,103,110,101,100,32,115,104,111,114,116,41,40,110,41,62,62,56,41,10,35,100,101,102
.byte 105,110,101,32,104,116,111,110,108,40,110,41,32,40,40,117,110,115,105,103,110,101,100,32,105,110,116,41,40,110,41,60
.byte 60,50,52,124,40,117,110,115,105,103,110,101,100,32,105,110,116,41,40,110,41,62,62,50,52,124,40,117,110,115,105,103
.byte 110,101,100,32,105,110,116,41,40,110,41,60,60,56,38,48,120,102,102,48,48,48,48,124,40,117,110,115,105,103,110,101
.byte 100,32,105,110,116,41,40,110,41,62,62,56,38,48,120,102,102,48,48,41,10,10,35,100,101,102,105,110,101,32,77,83
.byte 71,95,68,79,78,84,87,65,73,84,32,48,120,52,48,10,115,116,114,117,99,116,32,109,115,103,104,100,114,10,123,10
.byte 9,118,111,105,100,32,42,110,97,109,101,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,110,97,109,101
.byte 108,101,110,59,10,9,118,111,105,100,32,42,105,111,118,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32
.byte 105,111,118,108,101,110,59,10,9,118,111,105,100,32,42,99,111,110,116,114,111,108,59,10,9,117,110,115,105,103,110,101
.byte 100,32,108,111,110,103,32,99,111,110,116,114,111,108,108,101,110,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110
.byte 103,32,117,110,117,115,101,100,59,10,125,59,10,115,116,114,117,99,116,32,99,109,115,103,104,100,114,10,123,10,9,117
.byte 110,115,105,103,110,101,100,32,108,111,110,103,32,108,101,110,59,10,9,105,110,116,32,108,101,118,101,108,59,10,9,105
.byte 110,116,32,116,121,112,101,59,10,9,117,110,115,105,103,110,101,100,32,99,104,97,114,32,100,97,116,97,91,56,93,59
.byte 10,125,59,10,115,116,114,117,99,116,32,110,108,109,115,103,104,100,114,10,123,10,9,117,110,115,105,103,110,101,100,32
.byte 105,110,116,32,108,101,110,59,10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,116,121,112,101,59,10,9
.byte 117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,102,108,97,103,115,59,10,9,117,110,115,105,103,110,101,100,32
.byte 105,110,116,32,115,101,113,59,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32,112,105,100,59,10,125,59,10,115
.byte 116,114,117,99,116,32,103,101,110,108,109,115,103,104,100,114,10,123,10,9,117,110,115,105,103,110,101,100,32,99,104,97
.byte 114,32,99,109,100,59,10,9,117,110,115,105,103,110,101,100,32,99,104,97,114,32,118,101,114,115,105,111,110,59,10,9
.byte 117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,114,101,115,101,114,118,101,100,59,10,125,59,10,115,116,114,117
.byte 99,116,32,110,108,97,116,116,114,10,123,10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,108,101,110,59
.byte 10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,116,121,112,101,59,10,125,59,10,10,35,101,110,100,105
.byte 102,10,0,0,48,55,48,55,48,49,48,48,48,48,48,48,49,49,48,48,48,48,56,49,65,52,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48,48,48,48,51
.byte 70,51,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,69,48,48,48,48,48,48,48,48,46,47,102,102,111,114,109,97,116,46,99,0,0,0
.byte 35,105,102,110,100,101,102,32,95,70,70,79,82,77,65,84,95,67,95,10,35,100,101,102,105,110,101,32,95,70,70,79
.byte 82,77,65,84,95,67,95,10,35,105,110,99,108,117,100,101,32,34,109,101,109,46,99,34,10,118,111,105,100,32,115,112
.byte 114,105,110,116,70,40,99,104,97,114,32,42,115,116,114,44,102,108,111,97,116,32,97,44,105,110,116,32,100,105,103,105
.byte 116,115,49,44,105,110,116,32,100,105,103,105,116,115,50,41,10,123,10,9,105,110,116,32,108,59,10,9,105,110,116,32
.byte 100,59,10,9,102,108,111,97,116,32,110,59,10,9,99,104,97,114,32,99,59,10,9,108,61,115,116,114,108,101,110,40
.byte 115,116,114,41,59,10,9,105,102,40,97,60,48,41,10,9,123,10,9,9,97,61,45,97,59,10,9,9,115,116,114,91
.byte 108,93,61,39,45,39,59,10,9,9,115,116,114,91,108,43,49,93,61,48,59,10,9,9,43,43,108,59,10,9,125,10
.byte 9,110,61,49,46,48,59,10,9,100,61,48,59,10,9,119,104,105,108,101,40,100,60,100,105,103,105,116,115,49,41,10
.byte 9,123,10,9,9,110,42,61,49,48,46,48,59,10,9,9,43,43,100,59,10,9,125,10,9,119,104,105,108,101,40,110
.byte 60,61,97,41,10,9,123,10,9,9,110,42,61,49,48,46,48,59,10,9,125,10,9,110,42,61,48,46,49,59,10,9
.byte 119,104,105,108,101,40,110,62,61,48,46,53,41,10,9,123,10,9,9,99,61,39,48,39,59,10,9,9,119,104,105,108
.byte 101,40,97,62,61,110,38,38,99,60,39,57,39,41,10,9,9,123,10,9,9,9,43,43,99,59,10,9,9,9,97,45
.byte 61,110,59,10,9,9,125,10,9,9,115,116,114,91,108,93,61,99,59,10,9,9,115,116,114,91,108,43,49,93,61,48
.byte 59,10,9,9,43,43,108,59,10,9,9,110,42,61,48,46,49,59,10,9,125,10,9,105,102,40,33,100,105,103,105,116
.byte 115,50,41,10,9,123,10,9,9,114,101,116,117,114,110,32,48,59,10,9,125,10,9,115,116,114,91,108,93,61,39,46
.byte 39,59,10,9,115,116,114,91,108,43,49,93,61,48,59,10,9,43,43,108,59,10,9,100,61,100,105,103,105,116,115,50
.byte 59,10,9,110,61,48,46,48,48,49,59,10,9,119,104,105,108,101,40,100,41,10,9,123,10,9,9,110,61,110,42,48
.byte 46,49,59,10,9,9,45,45,100,59,10,9,125,10,9,119,104,105,108,101,40,100,105,103,105,116,115,50,41,10,9,123
.byte 10,9,9,97,61,97,42,49,48,46,48,59,10,9,9,99,61,39,48,39,59,10,9,9,119,104,105,108,101,40,97,62
.byte 61,49,46,48,45,110,38,38,99,60,39,57,39,41,10,9,9,123,10,9,9,9,43,43,99,59,10,9,9,9,97,45
.byte 61,49,46,48,45,110,59,10,9,9,125,10,9,9,115,116,114,91,108,93,61,99,59,10,9,9,115,116,114,91,108,43
.byte 49,93,61,48,59,10,9,9,43,43,108,59,10,9,9,45,45,100,105,103,105,116,115,50,59,10,9,125,10,125,10,99
.byte 104,97,114,32,42,115,105,110,112,117,116,70,40,99,104,97,114,32,42,115,116,114,44,102,108,111,97,116,32,42,114,101
.byte 115,117,108,116,41,10,123,10,9,102,108,111,97,116,32,114,101,116,44,110,59,10,9,99,104,97,114,32,99,59,10,9
.byte 105,110,116,32,115,59,10,9,114,101,116,61,48,46,48,59,10,9,115,61,48,59,10,9,110,61,48,46,49,59,10,9
.byte 119,104,105,108,101,40,40,99,61,42,115,116,114,41,62,61,39,48,39,38,38,99,60,61,39,57,39,124,124,99,61,61
.byte 39,46,39,41,10,9,123,10,9,9,105,102,40,99,61,61,39,46,39,41,10,9,9,123,10,9,9,9,115,61,49,59
.byte 10,9,9,125,10,9,9,101,108,115,101,32,105,102,40,115,41,10,9,9,123,10,9,9,9,114,101,116,43,61,110,42
.byte 40,102,108,111,97,116,41,40,99,45,39,48,39,41,59,10,9,9,125,10,9,9,101,108,115,101,10,9,9,123,10,9
.byte 9,9,114,101,116,61,114,101,116,42,49,48,46,48,43,40,102,108,111,97,116,41,40,99,45,39,48,39,41,59,10,9
.byte 9,125,10,9,9,43,43,115,116,114,59,10,9,125,10,9,42,114,101,115,117,108,116,61,114,101,116,59,10,9,114,101
.byte 116,117,114,110,32,115,116,114,59,10,125,10,35,101,110,100,105,102,10,0,48,55,48,55,48,49,48,48,48,48,48,48
.byte 49,50,48,48,48,48,56,49,65,52,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,49,48,48,48,48,48,48,48,48,48,48,48,48,49,52,70,57,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,65,48,48,48,48,48,48
.byte 48,48,46,47,112,97,116,104,46,99,0,0,35,105,102,110,100,101,102,32,95,80,65,84,72,95,67,95,10,35,100,101
.byte 102,105,110,101,32,95,80,65,84,72,95,67,95,10,35,105,110,99,108,117,100,101,32,34,115,121,115,99,97,108,108,46
.byte 99,34,10,35,105,110,99,108,117,100,101,32,34,109,101,109,46,99,34,10,35,105,110,99,108,117,100,101,32,34,115,116
.byte 97,116,46,99,34,10,105,110,116,32,102,105,115,115,117,98,100,105,114,40,105,110,116,32,100,105,114,102,100,44,105,110
.byte 116,32,102,100,41,10,123,10,9,105,110,116,32,102,100,49,44,102,100,50,59,10,9,105,110,116,32,114,101,116,59,10
.byte 9,115,116,114,117,99,116,32,115,116,97,116,32,115,116,44,100,105,114,115,116,44,100,105,114,115,116,95,111,108,100,59
.byte 10,9,105,102,40,114,101,116,61,102,115,116,97,116,40,100,105,114,102,100,44,38,115,116,41,41,10,9,123,10,9,9
.byte 114,101,116,117,114,110,32,114,101,116,59,10,9,125,10,9,102,100,49,61,100,117,112,40,102,100,41,59,10,9,105,102
.byte 40,102,100,49,60,48,41,10,9,123,10,9,9,114,101,116,117,114,110,32,102,100,49,59,10,9,125,10,9,102,100,50
.byte 61,45,49,59,10,9,119,104,105,108,101,40,49,41,10,9,123,10,9,9,9,10,9,9,105,102,40,114,101,116,61,102
.byte 115,116,97,116,40,102,100,49,44,38,100,105,114,115,116,41,41,10,9,9,123,10,9,9,9,99,108,111,115,101,40,102
.byte 100,49,41,59,10,9,9,9,114,101,116,117,114,110,32,114,101,116,59,10,9,9,125,10,9,9,105,102,40,100,105,114
.byte 115,116,46,105,110,111,61,61,115,116,46,105,110,111,38,38,100,105,114,115,116,46,100,101,118,61,61,115,116,46,100,101
.byte 118,41,10,9,9,123,10,9,9,9,99,108,111,115,101,40,102,100,49,41,59,10,9,9,9,114,101,116,117,114,110,32
.byte 49,59,10,9,9,125,10,9,9,105,102,40,102,100,50,33,61,45,49,38,38,100,105,114,115,116,46,105,110,111,61,61
.byte 100,105,114,115,116,95,111,108,100,46,105,110,111,38,38,100,105,114,115,116,46,100,101,118,61,61,100,105,114,115,116,95
.byte 111,108,100,46,100,101,118,41,10,9,9,123,10,9,9,9,99,108,111,115,101,40,102,100,49,41,59,10,9,9,9,114
.byte 101,116,117,114,110,32,48,59,10,9,9,125,10,9,9,109,101,109,99,112,121,40,38,100,105,114,115,116,95,111,108,100
.byte 44,38,100,105,114,115,116,44,115,105,122,101,111,102,40,100,105,114,115,116,41,41,59,10,9,9,102,100,50,61,111,112
.byte 101,110,97,116,40,102,100,49,44,34,46,46,34,44,48,44,48,41,59,10,9,9,99,108,111,115,101,40,102,100,49,41
.byte 59,10,9,9,105,102,40,102,100,50,60,48,41,10,9,9,123,10,9,9,9,114,101,116,117,114,110,32,102,100,50,59
.byte 10,9,9,125,10,9,9,102,100,49,61,102,100,50,59,10,9,125,10,125,10,105,110,116,32,100,105,114,110,97,109,101
.byte 95,111,112,101,110,40,99,104,97,114,32,42,112,97,116,104,44,99,104,97,114,32,42,42,112,97,116,104,95,114,101,116
.byte 41,10,123,10,9,105,110,116,32,102,100,49,44,102,100,50,59,10,9,99,104,97,114,32,98,117,102,91,50,55,48,93
.byte 59,10,9,105,110,116,32,120,44,99,59,10,9,99,104,97,114,32,42,112,97,116,104,49,59,10,9,105,102,40,33,115
.byte 116,114,99,109,112,40,112,97,116,104,44,34,47,34,41,41,10,9,123,10,9,9,105,102,40,112,97,116,104,95,114,101
.byte 116,41,10,9,9,123,10,9,9,9,42,112,97,116,104,95,114,101,116,61,112,97,116,104,59,10,9,9,125,10,9,9
.byte 114,101,116,117,114,110,32,111,112,101,110,40,34,47,34,44,48,44,48,41,59,10,9,125,10,9,102,100,49,61,65,84
.byte 95,70,68,67,87,68,59,10,9,105,102,40,42,112,97,116,104,61,61,39,47,39,41,10,9,123,10,9,9,102,100,49
.byte 61,111,112,101,110,40,34,47,34,44,48,44,48,41,59,10,9,9,105,102,40,102,100,49,60,48,41,10,9,9,123,10
.byte 9,9,9,114,101,116,117,114,110,32,102,100,49,59,10,9,9,125,10,9,9,43,43,112,97,116,104,59,10,9,125,10
.byte 9,112,97,116,104,49,61,112,97,116,104,59,10,9,120,61,48,59,10,9,119,104,105,108,101,40,99,61,42,112,97,116
.byte 104,41,10,9,123,10,9,9,105,102,40,99,61,61,39,47,39,41,10,9,9,123,10,9,9,9,98,117,102,91,120,93
.byte 61,48,59,10,9,9,9,100,111,10,9,9,9,123,10,9,9,9,9,43,43,112,97,116,104,59,10,9,9,9,125,10
.byte 9,9,9,119,104,105,108,101,40,42,112,97,116,104,61,61,39,47,39,41,59,10,9,9,9,105,102,40,42,112,97,116
.byte 104,41,10,9,9,9,123,10,9,9,9,9,102,100,50,61,111,112,101,110,97,116,40,102,100,49,44,98,117,102,44,48
.byte 44,48,41,59,10,9,9,9,9,99,108,111,115,101,40,102,100,49,41,59,10,9,9,9,9,105,102,40,102,100,50,60
.byte 48,41,10,9,9,9,9,123,10,9,9,9,9,9,114,101,116,117,114,110,32,102,100,50,59,10,9,9,9,9,125,10
.byte 9,9,9,9,102,100,49,61,102,100,50,59,10,9,9,9,9,112,97,116,104,49,61,112,97,116,104,59,10,9,9,9
.byte 125,10,9,9,9,120,61,48,59,10,9,9,125,10,9,9,101,108,115,101,10,9,9,123,10,9,9,9,105,102,40,120
.byte 62,61,50,53,54,41,10,9,9,9,123,10,9,9,9,9,114,101,116,117,114,110,32,45,69,78,65,77,69,84,79,79
.byte 76,79,78,71,59,10,9,9,9,125,10,9,9,9,98,117,102,91,120,93,61,99,59,10,9,9,9,43,43,112,97,116
.byte 104,59,10,9,9,9,43,43,120,59,10,9,9,125,10,9,125,10,9,105,102,40,112,97,116,104,95,114,101,116,41,10
.byte 9,123,10,9,9,42,112,97,116,104,95,114,101,116,61,112,97,116,104,49,59,10,9,125,10,9,105,102,40,102,100,49
.byte 61,61,65,84,95,70,68,67,87,68,41,10,9,123,10,9,9,102,100,49,61,111,112,101,110,40,34,46,34,44,48,44
.byte 48,41,59,10,9,125,10,9,114,101,116,117,114,110,32,102,100,49,59,10,125,10,105,110,116,32,111,112,101,110,108,40
.byte 99,104,97,114,32,42,112,97,116,104,44,105,110,116,32,102,108,97,103,115,44,105,110,116,32,109,111,100,101,41,10,123
.byte 10,9,105,110,116,32,100,105,114,44,102,100,59,10,9,99,104,97,114,32,42,98,110,97,109,101,59,10,9,100,105,114
.byte 61,100,105,114,110,97,109,101,95,111,112,101,110,40,112,97,116,104,44,38,98,110,97,109,101,41,59,10,9,105,102,40
.byte 100,105,114,60,48,41,10,9,123,10,9,9,114,101,116,117,114,110,32,100,105,114,59,10,9,125,10,9,102,100,61,111
.byte 112,101,110,97,116,40,100,105,114,44,98,110,97,109,101,44,102,108,97,103,115,44,109,111,100,101,41,59,10,9,99,108
.byte 111,115,101,40,100,105,114,41,59,10,9,114,101,116,117,114,110,32,102,100,59,10,125,10,105,110,116,32,115,116,97,116
.byte 108,40,99,104,97,114,32,42,112,97,116,104,44,115,116,114,117,99,116,32,115,116,97,116,32,42,115,116,41,10,123,10
.byte 9,105,110,116,32,100,105,114,44,114,101,116,59,10,9,99,104,97,114,32,42,98,110,97,109,101,59,10,9,100,105,114
.byte 61,100,105,114,110,97,109,101,95,111,112,101,110,40,112,97,116,104,44,38,98,110,97,109,101,41,59,10,9,105,102,40
.byte 100,105,114,60,48,41,10,9,123,10,9,9,114,101,116,117,114,110,32,100,105,114,59,10,9,125,10,9,114,101,116,61
.byte 102,115,116,97,116,97,116,40,100,105,114,44,98,110,97,109,101,44,115,116,44,48,41,59,10,9,99,108,111,115,101,40
.byte 100,105,114,41,59,10,9,114,101,116,117,114,110,32,114,101,116,59,10,125,10,105,110,116,32,108,115,116,97,116,108,40
.byte 99,104,97,114,32,42,112,97,116,104,44,115,116,114,117,99,116,32,115,116,97,116,32,42,115,116,41,10,123,10,9,105
.byte 110,116,32,100,105,114,44,114,101,116,59,10,9,99,104,97,114,32,42,98,110,97,109,101,59,10,9,100,105,114,61,100
.byte 105,114,110,97,109,101,95,111,112,101,110,40,112,97,116,104,44,38,98,110,97,109,101,41,59,10,9,105,102,40,100,105
.byte 114,60,48,41,10,9,123,10,9,9,114,101,116,117,114,110,32,100,105,114,59,10,9,125,10,9,114,101,116,61,102,115
.byte 116,97,116,97,116,40,100,105,114,44,98,110,97,109,101,44,115,116,44,65,84,95,83,89,77,76,73,78,75,95,78,79
.byte 70,79,76,76,79,87,41,59,10,9,99,108,111,115,101,40,100,105,114,41,59,10,9,114,101,116,117,114,110,32,114,101
.byte 116,59,10,125,10,105,110,116,32,109,107,100,105,114,108,40,99,104,97,114,32,42,112,97,116,104,44,105,110,116,32,109
.byte 111,100,101,41,10,123,10,9,105,110,116,32,100,105,114,44,114,101,116,59,10,9,99,104,97,114,32,42,98,110,97,109
.byte 101,59,10,9,100,105,114,61,100,105,114,110,97,109,101,95,111,112,101,110,40,112,97,116,104,44,38,98,110,97,109,101
.byte 41,59,10,9,105,102,40,100,105,114,60,48,41,10,9,123,10,9,9,114,101,116,117,114,110,32,100,105,114,59,10,9
.byte 125,10,9,114,101,116,61,109,107,100,105,114,97,116,40,100,105,114,44,98,110,97,109,101,44,109,111,100,101,41,59,10
.byte 9,99,108,111,115,101,40,100,105,114,41,59,10,9,114,101,116,117,114,110,32,114,101,116,59,10,125,10,105,110,116,32
.byte 105,115,115,117,98,100,105,114,40,99,104,97,114,32,42,100,105,114,112,97,116,104,44,99,104,97,114,32,42,112,97,116
.byte 104,41,10,123,10,9,105,110,116,32,100,105,114,102,100,44,102,100,44,114,101,116,59,10,9,115,116,114,117,99,116,32
.byte 115,116,97,116,32,115,116,59,10,9,105,102,40,114,101,116,61,108,115,116,97,116,108,40,100,105,114,112,97,116,104,44
.byte 38,115,116,41,41,10,9,123,10,9,9,114,101,116,117,114,110,32,114,101,116,59,10,9,125,10,9,105,102,40,40,115
.byte 116,46,109,111,100,101,38,48,49,55,48,48,48,48,41,33,61,83,84,65,84,95,68,73,82,41,10,9,123,10,9,9
.byte 114,101,116,117,114,110,32,48,59,10,9,125,10,9,100,105,114,102,100,61,111,112,101,110,108,40,100,105,114,112,97,116
.byte 104,44,48,44,48,41,59,10,9,105,102,40,100,105,114,102,100,60,48,41,10,9,123,10,9,9,114,101,116,117,114,110
.byte 32,100,105,114,102,100,59,10,9,125,10,9,102,100,61,100,105,114,110,97,109,101,95,111,112,101,110,40,112,97,116,104
.byte 44,78,85,76,76,41,59,10,9,105,102,40,102,100,60,48,41,10,9,123,10,9,9,99,108,111,115,101,40,100,105,114
.byte 102,100,41,59,10,9,9,114,101,116,117,114,110,32,102,100,59,10,9,125,10,9,114,101,116,61,102,105,115,115,117,98
.byte 100,105,114,40,100,105,114,102,100,44,102,100,41,59,10,9,99,108,111,115,101,40,100,105,114,102,100,41,59,10,9,99
.byte 108,111,115,101,40,102,100,41,59,10,9,114,101,116,117,114,110,32,114,101,116,59,10,125,10,105,110,116,32,100,105,114
.byte 110,97,109,101,95,111,112,101,110,97,116,40,105,110,116,32,100,105,114,102,100,44,99,104,97,114,32,42,112,97,116,104
.byte 44,99,104,97,114,32,42,42,112,97,116,104,95,114,101,116,41,10,123,10,9,105,110,116,32,102,100,49,44,102,100,50
.byte 59,10,9,99,104,97,114,32,98,117,102,91,50,55,48,93,59,10,9,105,110,116,32,120,44,99,59,10,9,99,104,97
.byte 114,32,42,112,97,116,104,49,59,10,9,105,102,40,33,115,116,114,99,109,112,40,112,97,116,104,44,34,47,34,41,41
.byte 10,9,123,10,9,9,105,102,40,112,97,116,104,95,114,101,116,41,10,9,9,123,10,9,9,9,42,112,97,116,104,95
.byte 114,101,116,61,112,97,116,104,59,10,9,9,125,10,9,9,114,101,116,117,114,110,32,111,112,101,110,40,34,47,34,44
.byte 48,44,48,41,59,10,9,125,10,9,105,102,40,100,105,114,102,100,61,61,65,84,95,70,68,67,87,68,41,10,9,123
.byte 10,9,9,102,100,49,61,111,112,101,110,40,34,46,34,44,48,44,48,41,59,10,9,125,10,9,101,108,115,101,10,9
.byte 123,10,9,9,102,100,49,61,100,117,112,40,100,105,114,102,100,41,59,10,9,125,10,9,105,102,40,42,112,97,116,104
.byte 61,61,39,47,39,41,10,9,123,10,9,9,99,108,111,115,101,40,102,100,49,41,59,10,9,9,102,100,49,61,111,112
.byte 101,110,40,34,47,34,44,48,44,48,41,59,10,9,9,105,102,40,102,100,49,60,48,41,10,9,9,123,10,9,9,9
.byte 114,101,116,117,114,110,32,102,100,49,59,10,9,9,125,10,9,9,43,43,112,97,116,104,59,10,9,125,10,9,101,108
.byte 115,101,32,105,102,40,102,100,49,60,48,41,10,9,123,10,9,9,114,101,116,117,114,110,32,102,100,49,59,10,9,125
.byte 10,9,112,97,116,104,49,61,112,97,116,104,59,10,9,120,61,48,59,10,9,119,104,105,108,101,40,99,61,42,112,97
.byte 116,104,41,10,9,123,10,9,9,105,102,40,99,61,61,39,47,39,41,10,9,9,123,10,9,9,9,98,117,102,91,120
.byte 93,61,48,59,10,9,9,9,100,111,10,9,9,9,123,10,9,9,9,9,43,43,112,97,116,104,59,10,9,9,9,125
.byte 10,9,9,9,119,104,105,108,101,40,42,112,97,116,104,61,61,39,47,39,41,59,10,9,9,9,105,102,40,42,112,97
.byte 116,104,41,10,9,9,9,123,10,9,9,9,9,102,100,50,61,111,112,101,110,97,116,40,102,100,49,44,98,117,102,44
.byte 48,44,48,41,59,10,9,9,9,9,99,108,111,115,101,40,102,100,49,41,59,10,9,9,9,9,105,102,40,102,100,50
.byte 60,48,41,10,9,9,9,9,123,10,9,9,9,9,9,114,101,116,117,114,110,32,102,100,50,59,10,9,9,9,9,125
.byte 10,9,9,9,9,102,100,49,61,102,100,50,59,10,9,9,9,9,112,97,116,104,49,61,112,97,116,104,59,10,9,9
.byte 9,125,10,9,9,9,120,61,48,59,10,9,9,125,10,9,9,101,108,115,101,10,9,9,123,10,9,9,9,105,102,40
.byte 120,62,61,50,53,54,41,10,9,9,9,123,10,9,9,9,9,114,101,116,117,114,110,32,45,69,78,65,77,69,84,79
.byte 79,76,79,78,71,59,10,9,9,9,125,10,9,9,9,98,117,102,91,120,93,61,99,59,10,9,9,9,43,43,112,97
.byte 116,104,59,10,9,9,9,43,43,120,59,10,9,9,125,10,9,125,10,9,105,102,40,112,97,116,104,95,114,101,116,41
.byte 10,9,123,10,9,9,42,112,97,116,104,95,114,101,116,61,112,97,116,104,49,59,10,9,125,10,9,105,102,40,102,100
.byte 49,61,61,65,84,95,70,68,67,87,68,41,10,9,123,10,9,9,102,100,49,61,111,112,101,110,40,34,46,34,44,48
.byte 44,48,41,59,10,9,125,10,9,114,101,116,117,114,110,32,102,100,49,59,10,125,10,105,110,116,32,111,112,101,110,97
.byte 116,108,40,105,110,116,32,100,105,114,102,100,44,99,104,97,114,32,42,112,97,116,104,44,105,110,116,32,102,108,97,103
.byte 115,44,105,110,116,32,109,111,100,101,41,10,123,10,9,105,110,116,32,100,105,114,44,102,100,59,10,9,99,104,97,114
.byte 32,42,98,110,97,109,101,59,10,9,100,105,114,61,100,105,114,110,97,109,101,95,111,112,101,110,97,116,40,100,105,114
.byte 102,100,44,112,97,116,104,44,38,98,110,97,109,101,41,59,10,9,105,102,40,100,105,114,60,48,41,10,9,123,10,9
.byte 9,114,101,116,117,114,110,32,100,105,114,59,10,9,125,10,9,102,100,61,111,112,101,110,97,116,40,100,105,114,44,98
.byte 110,97,109,101,44,102,108,97,103,115,44,109,111,100,101,41,59,10,9,99,108,111,115,101,40,100,105,114,41,59,10,9
.byte 114,101,116,117,114,110,32,102,100,59,10,125,10,105,110,116,32,109,107,100,105,114,97,116,108,40,105,110,116,32,100,105
.byte 114,102,100,44,99,104,97,114,32,42,112,97,116,104,44,105,110,116,32,109,111,100,101,41,10,123,10,9,105,110,116,32
.byte 100,105,114,44,114,101,116,59,10,9,99,104,97,114,32,42,98,110,97,109,101,59,10,9,100,105,114,61,100,105,114,110
.byte 97,109,101,95,111,112,101,110,97,116,40,100,105,114,102,100,44,112,97,116,104,44,38,98,110,97,109,101,41,59,10,9
.byte 105,102,40,100,105,114,60,48,41,10,9,123,10,9,9,114,101,116,117,114,110,32,100,105,114,59,10,9,125,10,9,114
.byte 101,116,61,109,107,100,105,114,97,116,40,100,105,114,44,98,110,97,109,101,44,109,111,100,101,41,59,10,9,99,108,111
.byte 115,101,40,100,105,114,41,59,10,9,114,101,116,117,114,110,32,114,101,116,59,10,125,10,105,110,116,32,102,99,104,109
.byte 111,100,97,116,108,40,105,110,116,32,100,105,114,102,100,44,99,104,97,114,32,42,112,97,116,104,44,105,110,116,32,109
.byte 111,100,101,41,10,123,10,9,105,110,116,32,100,105,114,44,114,101,116,59,10,9,99,104,97,114,32,42,98,110,97,109
.byte 101,59,10,9,100,105,114,61,100,105,114,110,97,109,101,95,111,112,101,110,97,116,40,100,105,114,102,100,44,112,97,116
.byte 104,44,38,98,110,97,109,101,41,59,10,9,105,102,40,100,105,114,60,48,41,10,9,123,10,9,9,114,101,116,117,114
.byte 110,32,100,105,114,59,10,9,125,10,9,114,101,116,61,102,99,104,109,111,100,97,116,40,100,105,114,44,98,110,97,109
.byte 101,44,109,111,100,101,41,59,10,9,99,108,111,115,101,40,100,105,114,41,59,10,9,114,101,116,117,114,110,32,114,101
.byte 116,59,10,125,10,105,110,116,32,102,115,116,97,116,97,116,108,40,105,110,116,32,100,105,114,102,100,44,99,104,97,114
.byte 32,42,112,97,116,104,44,115,116,114,117,99,116,32,115,116,97,116,32,42,115,116,44,105,110,116,32,102,108,97,103,115
.byte 41,10,123,10,9,105,110,116,32,100,105,114,44,114,101,116,59,10,9,99,104,97,114,32,42,98,110,97,109,101,59,10
.byte 9,100,105,114,61,100,105,114,110,97,109,101,95,111,112,101,110,97,116,40,100,105,114,102,100,44,112,97,116,104,44,38
.byte 98,110,97,109,101,41,59,10,9,105,102,40,100,105,114,60,48,41,10,9,123,10,9,9,114,101,116,117,114,110,32,100
.byte 105,114,59,10,9,125,10,9,114,101,116,61,102,115,116,97,116,97,116,40,100,105,114,44,98,110,97,109,101,44,115,116
.byte 44,102,108,97,103,115,41,59,10,9,99,108,111,115,101,40,100,105,114,41,59,10,9,114,101,116,117,114,110,32,114,101
.byte 116,59,10,125,10,105,110,116,32,115,121,109,108,105,110,107,97,116,108,40,99,104,97,114,32,42,116,97,114,103,101,116
.byte 44,105,110,116,32,100,105,114,102,100,44,99,104,97,114,32,42,112,97,116,104,41,10,123,10,9,105,110,116,32,100,105
.byte 114,44,114,101,116,59,10,9,99,104,97,114,32,42,98,110,97,109,101,59,10,9,100,105,114,61,100,105,114,110,97,109
.byte 101,95,111,112,101,110,97,116,40,100,105,114,102,100,44,112,97,116,104,44,38,98,110,97,109,101,41,59,10,9,105,102
.byte 40,100,105,114,60,48,41,10,9,123,10,9,9,114,101,116,117,114,110,32,100,105,114,59,10,9,125,10,9,114,101,116
.byte 61,115,121,109,108,105,110,107,97,116,40,116,97,114,103,101,116,44,100,105,114,44,98,110,97,109,101,41,59,10,9,99
.byte 108,111,115,101,40,100,105,114,41,59,10,9,114,101,116,117,114,110,32,114,101,116,59,10,125,10,105,110,116,32,114,101
.byte 97,100,108,105,110,107,97,116,108,40,105,110,116,32,100,105,114,102,100,44,99,104,97,114,32,42,112,97,116,104,44,99
.byte 104,97,114,32,42,98,117,102,44,105,110,116,32,115,105,122,101,41,10,123,10,9,105,110,116,32,100,105,114,44,114,101
.byte 116,59,10,9,99,104,97,114,32,42,98,110,97,109,101,59,10,9,100,105,114,61,100,105,114,110,97,109,101,95,111,112
.byte 101,110,97,116,40,100,105,114,102,100,44,112,97,116,104,44,38,98,110,97,109,101,41,59,10,9,105,102,40,100,105,114
.byte 60,48,41,10,9,123,10,9,9,114,101,116,117,114,110,32,100,105,114,59,10,9,125,10,9,114,101,116,61,114,101,97
.byte 100,108,105,110,107,97,116,40,100,105,114,44,98,110,97,109,101,44,98,117,102,44,115,105,122,101,41,59,10,9,99,108
.byte 111,115,101,40,100,105,114,41,59,10,9,114,101,116,117,114,110,32,114,101,116,59,10,125,10,105,110,116,32,117,110,108
.byte 105,110,107,97,116,108,40,105,110,116,32,100,105,114,102,100,44,99,104,97,114,32,42,112,97,116,104,44,105,110,116,32
.byte 102,108,97,103,115,41,10,123,10,9,105,110,116,32,100,105,114,44,114,101,116,59,10,9,99,104,97,114,32,42,98,110
.byte 97,109,101,59,10,9,100,105,114,61,100,105,114,110,97,109,101,95,111,112,101,110,97,116,40,100,105,114,102,100,44,112
.byte 97,116,104,44,38,98,110,97,109,101,41,59,10,9,105,102,40,100,105,114,60,48,41,10,9,123,10,9,9,114,101,116
.byte 117,114,110,32,100,105,114,59,10,9,125,10,9,114,101,116,61,117,110,108,105,110,107,97,116,40,100,105,114,44,98,110
.byte 97,109,101,44,102,108,97,103,115,41,59,10,9,99,108,111,115,101,40,100,105,114,41,59,10,9,114,101,116,117,114,110
.byte 32,114,101,116,59,10,125,10,105,110,116,32,114,101,110,97,109,101,97,116,108,40,105,110,116,32,100,105,114,102,100,44
.byte 99,104,97,114,32,42,112,97,116,104,44,105,110,116,32,110,101,119,100,105,114,102,100,44,99,104,97,114,32,42,110,101
.byte 119,112,97,116,104,41,10,123,10,9,105,110,116,32,100,105,114,44,110,101,119,100,105,114,44,114,101,116,59,10,9,99
.byte 104,97,114,32,42,98,110,97,109,101,44,42,110,101,119,95,98,110,97,109,101,59,10,9,100,105,114,61,100,105,114,110
.byte 97,109,101,95,111,112,101,110,97,116,40,100,105,114,102,100,44,112,97,116,104,44,38,98,110,97,109,101,41,59,10,9
.byte 105,102,40,100,105,114,60,48,41,10,9,123,10,9,9,114,101,116,117,114,110,32,100,105,114,59,10,9,125,10,9,110
.byte 101,119,100,105,114,61,100,105,114,110,97,109,101,95,111,112,101,110,97,116,40,110,101,119,100,105,114,102,100,44,110,101
.byte 119,112,97,116,104,44,38,110,101,119,95,98,110,97,109,101,41,59,10,9,105,102,40,110,101,119,100,105,114,60,48,41
.byte 10,9,123,10,9,9,99,108,111,115,101,40,100,105,114,41,59,10,9,9,114,101,116,117,114,110,32,110,101,119,100,105
.byte 114,59,10,9,125,10,9,114,101,116,61,114,101,110,97,109,101,97,116,40,100,105,114,44,98,110,97,109,101,44,110,101
.byte 119,100,105,114,44,110,101,119,95,98,110,97,109,101,41,59,10,9,99,108,111,115,101,40,100,105,114,41,59,10,9,99
.byte 108,111,115,101,40,110,101,119,100,105,114,41,59,10,9,114,101,116,117,114,110,32,114,101,116,59,10,125,10,10,35,101
.byte 110,100,105,102,10,0,0,0,48,55,48,55,48,49,48,48,48,48,48,48,49,51,48,48,48,48,56,49,65,52,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48
.byte 48,48,49,65,55,67,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,69,48,48,48,48,48,48,48,48,46,47,115,121,115,99,97,108,108,46
.byte 99,0,0,0,35,105,102,110,100,101,102,32,95,83,89,83,67,65,76,76,95,67,95,10,35,100,101,102,105,110,101,32
.byte 95,83,89,83,67,65,76,76,95,67,95,10,35,105,110,99,108,117,100,101,32,34,101,114,114,111,114,46,99,34,10,35
.byte 100,101,102,105,110,101,32,78,85,76,76,32,40,40,118,111,105,100,32,42,41,48,41,10,35,100,101,102,105,110,101,32
.byte 65,84,95,70,68,67,87,68,32,40,45,49,48,48,41,10,35,100,101,102,105,110,101,32,65,84,95,83,89,77,76,73
.byte 78,75,95,78,79,70,79,76,76,79,87,32,48,120,49,48,48,10,35,100,101,102,105,110,101,32,65,84,95,82,69,77
.byte 79,86,69,68,73,82,32,48,120,50,48,48,10,35,100,101,102,105,110,101,32,70,95,71,69,84,70,68,32,49,10,35
.byte 100,101,102,105,110,101,32,70,95,83,69,84,70,68,32,50,10,35,100,101,102,105,110,101,32,70,95,71,69,84,70,76
.byte 32,51,10,35,100,101,102,105,110,101,32,70,95,83,69,84,70,76,32,52,10,97,115,109,32,34,46,101,110,116,114,121
.byte 34,10,97,115,109,32,34,108,101,97,32,56,40,37,114,115,112,41,44,37,114,97,120,34,10,97,115,109,32,34,112,117
.byte 115,104,32,37,114,97,120,34,10,97,115,109,32,34,112,117,115,104,113,32,56,40,37,114,115,112,41,34,10,97,115,109
.byte 32,34,99,97,108,108,32,64,109,97,105,110,34,10,97,115,109,32,34,109,111,118,32,37,114,97,120,44,37,114,100,105
.byte 34,10,97,115,109,32,34,109,111,118,32,36,50,51,49,44,37,101,97,120,34,10,97,115,109,32,34,115,121,115,99,97
.byte 108,108,34,10,108,111,110,103,32,95,95,115,121,115,99,97,108,108,40,108,111,110,103,32,110,117,109,44,108,111,110,103
.byte 32,97,49,44,108,111,110,103,32,97,50,44,108,111,110,103,32,97,51,44,108,111,110,103,32,97,52,44,108,111,110,103
.byte 32,97,53,44,108,111,110,103,32,97,54,41,59,10,97,115,109,32,34,64,95,95,115,121,115,99,97,108,108,34,10,97
.byte 115,109,32,34,112,117,115,104,32,37,114,100,105,34,10,97,115,109,32,34,112,117,115,104,32,37,114,115,105,34,10,97
.byte 115,109,32,34,112,117,115,104,32,37,114,100,120,34,10,97,115,109,32,34,112,117,115,104,32,37,114,49,48,34,10,97
.byte 115,109,32,34,112,117,115,104,32,37,114,49,49,34,10,97,115,109,32,34,112,117,115,104,32,37,114,56,34,10,97,115
.byte 109,32,34,112,117,115,104,32,37,114,57,34,10,97,115,109,32,34,109,111,118,32,54,52,40,37,114,115,112,41,44,37
.byte 114,97,120,34,10,97,115,109,32,34,109,111,118,32,55,50,40,37,114,115,112,41,44,37,114,100,105,34,10,97,115,109
.byte 32,34,109,111,118,32,56,48,40,37,114,115,112,41,44,37,114,115,105,34,10,97,115,109,32,34,109,111,118,32,56,56
.byte 40,37,114,115,112,41,44,37,114,100,120,34,10,97,115,109,32,34,109,111,118,32,57,54,40,37,114,115,112,41,44,37
.byte 114,49,48,34,10,97,115,109,32,34,109,111,118,32,49,48,52,40,37,114,115,112,41,44,37,114,56,34,10,97,115,109
.byte 32,34,109,111,118,32,49,49,50,40,37,114,115,112,41,44,37,114,57,34,10,97,115,109,32,34,115,121,115,99,97,108
.byte 108,34,10,97,115,109,32,34,112,111,112,32,37,114,57,34,10,97,115,109,32,34,112,111,112,32,37,114,56,34,10,97
.byte 115,109,32,34,112,111,112,32,37,114,49,49,34,10,97,115,109,32,34,112,111,112,32,37,114,49,48,34,10,97,115,109
.byte 32,34,112,111,112,32,37,114,100,120,34,10,97,115,109,32,34,112,111,112,32,37,114,115,105,34,10,97,115,109,32,34
.byte 112,111,112,32,37,114,100,105,34,10,97,115,109,32,34,114,101,116,34,10,35,100,101,102,105,110,101,32,115,121,115,99
.byte 97,108,108,40,110,117,109,44,97,49,44,97,50,44,97,51,44,97,52,44,97,53,44,97,54,41,32,95,95,115,121,115
.byte 99,97,108,108,40,40,108,111,110,103,41,40,110,117,109,41,44,40,108,111,110,103,41,40,97,49,41,44,40,108,111,110
.byte 103,41,40,97,50,41,44,40,108,111,110,103,41,40,97,51,41,44,40,108,111,110,103,41,40,97,52,41,44,40,108,111
.byte 110,103,41,40,97,53,41,44,40,108,111,110,103,41,40,97,54,41,41,10,35,100,101,102,105,110,101,32,118,97,108,105
.byte 100,40,115,41,32,40,40,117,110,115,105,103,110,101,100,32,108,111,110,103,41,40,40,108,111,110,103,41,40,115,41,41
.byte 60,61,48,120,102,102,102,102,102,102,102,102,102,102,102,102,102,48,48,48,41,10,35,100,101,102,105,110,101,32,114,101
.byte 97,100,40,102,100,44,98,117,102,44,115,105,122,101,41,32,115,121,115,99,97,108,108,40,48,44,102,100,44,98,117,102
.byte 44,115,105,122,101,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,119,114,105,116,101,40,102,100,44,98,117
.byte 102,44,115,105,122,101,41,32,115,121,115,99,97,108,108,40,49,44,102,100,44,98,117,102,44,115,105,122,101,44,48,44
.byte 48,44,48,41,10,35,100,101,102,105,110,101,32,111,112,101,110,40,110,97,109,101,44,102,108,97,103,115,44,109,111,100
.byte 101,41,32,115,121,115,99,97,108,108,40,50,44,110,97,109,101,44,102,108,97,103,115,44,109,111,100,101,44,48,44,48
.byte 44,48,41,10,35,100,101,102,105,110,101,32,99,108,111,115,101,40,102,100,41,32,115,121,115,99,97,108,108,40,51,44
.byte 102,100,44,48,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,115,116,97,116,40,112,97,116,104,44
.byte 115,116,41,32,115,121,115,99,97,108,108,40,52,44,112,97,116,104,44,115,116,44,48,44,48,44,48,44,48,41,10,35
.byte 100,101,102,105,110,101,32,102,115,116,97,116,40,102,100,44,115,116,41,32,115,121,115,99,97,108,108,40,53,44,102,100
.byte 44,115,116,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,108,115,116,97,116,40,112,97,116,104,44
.byte 115,116,41,32,115,121,115,99,97,108,108,40,54,44,112,97,116,104,44,115,116,44,48,44,48,44,48,44,48,41,10,35
.byte 100,101,102,105,110,101,32,112,111,108,108,40,112,102,100,44,110,102,100,115,44,116,105,109,101,111,117,116,41,32,115,121
.byte 115,99,97,108,108,40,55,44,112,102,100,44,110,102,100,115,44,116,105,109,101,111,117,116,44,48,44,48,44,48,41,10
.byte 35,100,101,102,105,110,101,32,108,115,101,101,107,40,102,100,44,111,102,102,44,119,104,101,110,99,101,41,32,115,121,115
.byte 99,97,108,108,40,56,44,102,100,44,111,102,102,44,119,104,101,110,99,101,44,48,44,48,44,48,41,10,35,100,101,102
.byte 105,110,101,32,109,109,97,112,40,97,100,100,114,44,115,105,122,101,44,112,114,111,116,44,102,108,97,103,115,44,102,100
.byte 44,111,102,102,41,32,40,40,118,111,105,100,32,42,41,115,121,115,99,97,108,108,40,57,44,97,100,100,114,44,115,105
.byte 122,101,44,112,114,111,116,44,102,108,97,103,115,44,102,100,44,111,102,102,41,41,10,35,100,101,102,105,110,101,32,109
.byte 117,110,109,97,112,40,97,100,100,114,44,115,105,122,101,41,32,115,121,115,99,97,108,108,40,49,49,44,97,100,100,114
.byte 44,115,105,122,101,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,98,114,107,40,97,100,100,114,41
.byte 32,40,40,118,111,105,100,32,42,41,115,121,115,99,97,108,108,40,49,50,44,97,100,100,114,44,48,44,48,44,48,44
.byte 48,44,48,41,41,10,35,100,101,102,105,110,101,32,115,105,103,112,114,111,99,109,97,115,107,40,104,111,119,44,115,101
.byte 116,44,111,108,100,115,101,116,41,32,115,121,115,99,97,108,108,40,49,52,44,104,111,119,44,115,101,116,44,111,108,100
.byte 115,101,116,44,56,44,48,44,48,41,10,35,100,101,102,105,110,101,32,105,111,99,116,108,40,102,100,44,99,109,100,44
.byte 97,114,103,41,32,115,121,115,99,97,108,108,40,49,54,44,102,100,44,99,109,100,44,97,114,103,44,48,44,48,44,48
.byte 41,10,35,100,101,102,105,110,101,32,97,99,99,101,115,115,40,112,97,116,104,44,109,111,100,101,41,32,115,121,115,99
.byte 97,108,108,40,50,49,44,112,97,116,104,44,109,111,100,101,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110
.byte 101,32,112,105,112,101,40,102,100,115,41,32,115,121,115,99,97,108,108,40,50,50,44,102,100,115,44,48,44,48,44,48
.byte 44,48,44,48,41,10,35,100,101,102,105,110,101,32,115,104,109,103,101,116,40,107,101,121,44,115,105,122,101,44,102,108
.byte 97,103,41,32,115,121,115,99,97,108,108,40,50,57,44,107,101,121,44,115,105,122,101,44,102,108,97,103,44,48,44,48
.byte 44,48,41,10,35,100,101,102,105,110,101,32,115,104,109,97,116,40,105,100,44,97,100,100,114,44,102,108,97,103,41,32
.byte 40,118,111,105,100,32,42,41,115,121,115,99,97,108,108,40,51,48,44,105,100,44,97,100,100,114,44,102,108,97,103,44
.byte 48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,115,104,109,99,116,108,40,105,100,44,99,109,100,44,98,117,102
.byte 41,32,115,121,115,99,97,108,108,40,51,49,44,105,100,44,99,109,100,44,98,117,102,44,48,44,48,44,48,41,10,35
.byte 100,101,102,105,110,101,32,100,117,112,40,102,100,41,32,115,121,115,99,97,108,108,40,51,50,44,102,100,44,48,44,48
.byte 44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,100,117,112,50,40,102,100,44,110,101,119,102,100,41,32,115
.byte 121,115,99,97,108,108,40,51,51,44,102,100,44,110,101,119,102,100,44,48,44,48,44,48,44,48,41,10,35,100,101,102
.byte 105,110,101,32,112,97,117,115,101,40,41,32,115,121,115,99,97,108,108,40,51,52,44,48,44,48,44,48,44,48,44,48
.byte 44,48,41,10,35,100,101,102,105,110,101,32,110,97,110,111,115,108,101,101,112,40,114,101,113,44,114,101,109,41,32,115
.byte 121,115,99,97,108,108,40,51,53,44,114,101,113,44,114,101,109,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105
.byte 110,101,32,97,108,97,114,109,40,115,101,99,41,32,115,121,115,99,97,108,108,40,51,55,44,115,101,99,44,48,44,48
.byte 44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,103,101,116,112,105,100,40,41,32,115,121,115,99,97,108,108
.byte 40,51,57,44,48,44,48,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,115,111,99,107,101,116,40
.byte 102,97,109,105,108,121,44,116,121,112,101,44,112,114,111,116,41,32,115,121,115,99,97,108,108,40,52,49,44,102,97,109
.byte 105,108,121,44,116,121,112,101,44,112,114,111,116,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,99,111,110
.byte 110,101,99,116,40,102,100,44,97,100,100,114,44,115,105,122,101,41,32,115,121,115,99,97,108,108,40,52,50,44,102,100
.byte 44,97,100,100,114,44,115,105,122,101,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,97,99,99,101,112,116
.byte 40,102,100,44,97,100,100,114,44,115,105,122,101,41,32,115,121,115,99,97,108,108,40,52,51,44,102,100,44,97,100,100
.byte 114,44,115,105,122,101,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,115,101,110,100,116,111,40,102,100,44
.byte 98,117,102,44,108,101,110,44,102,108,97,103,115,44,97,100,100,114,44,115,105,122,101,41,32,115,121,115,99,97,108,108
.byte 40,52,52,44,102,100,44,98,117,102,44,108,101,110,44,102,108,97,103,115,44,97,100,100,114,44,115,105,122,101,41,10
.byte 35,100,101,102,105,110,101,32,114,101,99,118,102,114,111,109,40,102,100,44,98,117,102,44,108,101,110,44,102,108,97,103
.byte 115,44,97,100,100,114,44,115,105,122,101,41,32,115,121,115,99,97,108,108,40,52,53,44,102,100,44,98,117,102,44,108
.byte 101,110,44,102,108,97,103,115,44,97,100,100,114,44,115,105,122,101,41,10,35,100,101,102,105,110,101,32,115,101,110,100
.byte 109,115,103,40,102,100,44,109,115,103,44,102,108,97,103,115,41,32,115,121,115,99,97,108,108,40,52,54,44,102,100,44
.byte 109,115,103,44,102,108,97,103,115,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,114,101,99,118,109,115,103
.byte 40,102,100,44,109,115,103,44,102,108,97,103,115,41,32,115,121,115,99,97,108,108,40,52,55,44,102,100,44,109,115,103
.byte 44,102,108,97,103,115,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,98,105,110,100,40,102,100,44,97,100
.byte 100,114,44,115,105,122,101,41,32,115,121,115,99,97,108,108,40,52,57,44,102,100,44,97,100,100,114,44,115,105,122,101
.byte 44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,108,105,115,116,101,110,40,102,100,44,99,111,110,110,41,32
.byte 115,121,115,99,97,108,108,40,53,48,44,102,100,44,99,111,110,110,44,48,44,48,44,48,44,48,41,10,35,100,101,102
.byte 105,110,101,32,115,111,99,107,101,116,112,97,105,114,40,102,97,109,105,108,121,44,116,121,112,101,44,112,114,111,116,44
.byte 102,100,115,41,32,115,121,115,99,97,108,108,40,53,51,44,102,97,109,105,108,121,44,116,121,112,101,44,112,114,111,116
.byte 44,102,100,115,44,48,44,48,41,10,35,100,101,102,105,110,101,32,115,101,116,115,111,99,107,111,112,116,40,102,100,44
.byte 108,101,118,101,108,44,110,97,109,101,44,118,97,108,44,115,105,122,101,41,32,115,121,115,99,97,108,108,40,53,52,44
.byte 102,100,44,108,101,118,101,108,44,110,97,109,101,44,118,97,108,44,115,105,122,101,44,48,41,10,35,100,101,102,105,110
.byte 101,32,102,111,114,107,40,41,32,115,121,115,99,97,108,108,40,53,55,44,48,44,48,44,48,44,48,44,48,44,48,41
.byte 10,35,100,101,102,105,110,101,32,107,105,108,108,40,112,105,100,44,115,105,103,41,32,115,121,115,99,97,108,108,40,54
.byte 50,44,112,105,100,44,115,105,103,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,102,99,110,116,108
.byte 40,102,100,44,111,112,44,97,114,103,41,32,115,121,115,99,97,108,108,40,55,50,44,102,100,44,111,112,44,97,114,103
.byte 44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,102,108,111,99,107,40,102,100,44,111,112,41,32,115,121,115
.byte 99,97,108,108,40,55,51,44,102,100,44,111,112,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,102
.byte 115,121,110,99,40,102,100,41,32,115,121,115,99,97,108,108,40,55,52,44,102,100,44,48,44,48,44,48,44,48,44,48
.byte 41,10,35,100,101,102,105,110,101,32,116,114,117,110,99,97,116,101,40,112,97,116,104,44,108,101,110,41,32,115,121,115
.byte 99,97,108,108,40,55,54,44,112,97,116,104,44,108,101,110,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110
.byte 101,32,99,104,100,105,114,40,100,105,114,41,32,115,121,115,99,97,108,108,40,56,48,44,100,105,114,44,48,44,48,44
.byte 48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,102,99,104,100,105,114,40,102,100,41,32,115,121,115,99,97,108
.byte 108,40,56,49,44,102,100,44,48,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,114,101,110,97,109
.byte 101,40,110,97,109,101,44,110,101,119,110,97,109,101,41,32,115,121,115,99,97,108,108,40,56,50,44,110,97,109,101,44
.byte 110,101,119,110,97,109,101,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,109,107,100,105,114,40,112
.byte 97,116,104,44,109,111,100,101,41,32,115,121,115,99,97,108,108,40,56,51,44,112,97,116,104,44,109,111,100,101,44,48
.byte 44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,114,109,100,105,114,40,112,97,116,104,41,32,115,121,115,99
.byte 97,108,108,40,56,52,44,112,97,116,104,44,48,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,108
.byte 105,110,107,40,110,97,109,101,44,110,101,119,110,97,109,101,41,32,115,121,115,99,97,108,108,40,56,54,44,110,97,109
.byte 101,44,110,101,119,110,97,109,101,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,115,121,109,108,105
.byte 110,107,40,116,97,114,103,101,116,44,112,97,116,104,41,32,115,121,115,99,97,108,108,40,56,56,44,116,97,114,103,101
.byte 116,44,112,97,116,104,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,99,104,111,119,110,40,110,97
.byte 109,101,44,117,105,100,44,103,105,100,41,32,115,121,115,99,97,108,108,40,57,50,44,110,97,109,101,44,117,105,100,44
.byte 103,105,100,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,103,101,116,116,105,109,101,111,102,100,97,121,40
.byte 116,118,44,116,122,41,32,115,121,115,99,97,108,108,40,57,54,44,116,118,44,116,122,44,48,44,48,44,48,44,48,41
.byte 10,35,100,101,102,105,110,101,32,103,101,116,117,105,100,40,41,32,115,121,115,99,97,108,108,40,49,48,50,44,48,44
.byte 48,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,115,101,116,117,105,100,40,117,105,100,41,32,115
.byte 121,115,99,97,108,108,40,49,48,53,44,117,105,100,44,48,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110
.byte 101,32,115,101,116,103,105,100,40,103,105,100,41,32,115,121,115,99,97,108,108,40,49,48,54,44,103,105,100,44,48,44
.byte 48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,115,101,116,112,103,105,100,40,112,105,100,44,112,103,105
.byte 100,41,32,115,121,115,99,97,108,108,40,49,48,57,44,112,105,100,44,112,103,105,100,44,48,44,48,44,48,44,48,41
.byte 10,35,100,101,102,105,110,101,32,103,101,116,112,112,105,100,40,41,32,115,121,115,99,97,108,108,40,49,49,48,44,48
.byte 44,48,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,115,101,116,115,105,100,40,41,32,115,121,115
.byte 99,97,108,108,40,49,49,50,44,48,44,48,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,109,107
.byte 110,111,100,40,110,97,109,101,44,109,111,100,101,44,100,101,118,41,32,115,121,115,99,97,108,108,40,49,51,51,44,110
.byte 97,109,101,44,109,111,100,101,44,100,101,118,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,115,101,116,112
.byte 114,105,111,114,105,116,121,40,119,104,105,99,104,44,119,104,111,44,112,114,105,111,41,32,115,121,115,99,97,108,108,40
.byte 49,52,49,44,119,104,105,99,104,44,119,104,111,44,112,114,105,111,44,48,44,48,44,48,41,10,35,100,101,102,105,110
.byte 101,32,115,99,104,101,100,95,115,101,116,115,99,104,101,100,117,108,101,114,40,112,105,100,44,112,111,108,105,99,121,44
.byte 112,97,114,97,109,41,32,115,121,115,99,97,108,108,40,49,52,52,44,112,105,100,44,112,111,108,105,99,121,44,112,97
.byte 114,97,109,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,115,101,116,114,108,105,109,105,116,40,114,101,115
.byte 44,108,105,109,41,32,115,121,115,99,97,108,108,40,49,54,48,44,114,101,115,44,108,105,109,44,48,44,48,44,48,44
.byte 48,41,10,35,100,101,102,105,110,101,32,99,104,114,111,111,116,40,100,105,114,41,32,115,121,115,99,97,108,108,40,49
.byte 54,49,44,100,105,114,44,48,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,115,121,110,99,40,41
.byte 32,115,121,115,99,97,108,108,40,49,54,50,44,48,44,48,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110
.byte 101,32,109,111,117,110,116,40,100,101,118,44,109,112,44,116,121,112,101,44,102,108,97,103,115,44,111,112,116,41,32,115
.byte 121,115,99,97,108,108,40,49,54,53,44,100,101,118,44,109,112,44,116,121,112,101,44,102,108,97,103,115,44,111,112,116
.byte 44,48,41,10,35,100,101,102,105,110,101,32,117,109,111,117,110,116,50,40,109,112,44,102,108,97,103,115,41,32,115,121
.byte 115,99,97,108,108,40,49,54,54,44,109,112,44,102,108,97,103,115,44,48,44,48,44,48,44,48,41,10,35,100,101,102
.byte 105,110,101,32,114,101,98,111,111,116,40,109,44,109,50,44,99,109,100,44,97,114,103,41,32,115,121,115,99,97,108,108
.byte 40,49,54,57,44,109,44,109,50,44,99,109,100,44,97,114,103,44,48,44,48,41,10,35,100,101,102,105,110,101,32,100
.byte 101,108,101,116,101,95,109,111,100,117,108,101,40,110,97,109,101,44,102,108,97,103,115,41,32,115,121,115,99,97,108,108
.byte 40,49,55,54,44,110,97,109,101,44,102,108,97,103,115,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101
.byte 32,103,101,116,116,105,100,40,41,32,115,121,115,99,97,108,108,40,49,56,54,44,48,44,48,44,48,44,48,44,48,44
.byte 48,41,10,35,100,101,102,105,110,101,32,103,101,116,100,101,110,116,115,54,52,40,102,100,44,98,117,102,44,115,105,122
.byte 101,41,32,115,121,115,99,97,108,108,40,50,49,55,44,102,100,44,98,117,102,44,115,105,122,101,44,48,44,48,44,48
.byte 41,10,35,100,101,102,105,110,101,32,101,120,105,116,40,99,111,100,101,41,32,115,121,115,99,97,108,108,40,50,51,49
.byte 44,99,111,100,101,44,48,44,48,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,116,103,107,105,108,108,40
.byte 112,105,100,44,116,105,100,44,115,105,103,41,32,115,121,115,99,97,108,108,40,50,51,52,44,112,105,100,44,116,105,100
.byte 44,115,105,103,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,111,112,101,110,97,116,40,100,105,114,102,100
.byte 44,112,97,116,104,44,102,108,97,103,115,44,109,111,100,101,41,32,115,121,115,99,97,108,108,40,50,53,55,44,100,105
.byte 114,102,100,44,112,97,116,104,44,102,108,97,103,115,44,109,111,100,101,44,48,44,48,41,10,35,100,101,102,105,110,101
.byte 32,109,107,100,105,114,97,116,40,100,105,114,102,100,44,112,97,116,104,44,109,111,100,101,41,32,115,121,115,99,97,108
.byte 108,40,50,53,56,44,100,105,114,102,100,44,112,97,116,104,44,109,111,100,101,44,48,44,48,44,48,41,10,35,100,101
.byte 102,105,110,101,32,109,107,110,111,100,97,116,40,100,105,114,102,100,44,112,97,116,104,44,109,111,100,101,44,100,101,118
.byte 41,32,115,121,115,99,97,108,108,40,50,53,57,44,100,105,114,102,100,44,112,97,116,104,44,109,111,100,101,44,100,101
.byte 118,44,48,44,48,41,10,35,100,101,102,105,110,101,32,102,115,116,97,116,97,116,40,100,105,114,102,100,44,112,97,116
.byte 104,44,115,116,44,102,108,97,103,115,41,32,115,121,115,99,97,108,108,40,50,54,50,44,100,105,114,102,100,44,112,97
.byte 116,104,44,115,116,44,102,108,97,103,115,44,48,44,48,41,10,35,100,101,102,105,110,101,32,117,110,108,105,110,107,97
.byte 116,40,100,105,114,102,100,44,112,97,116,104,44,102,108,97,103,115,41,32,115,121,115,99,97,108,108,40,50,54,51,44
.byte 100,105,114,102,100,44,112,97,116,104,44,102,108,97,103,115,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32
.byte 114,101,110,97,109,101,97,116,40,100,105,114,102,100,44,112,97,116,104,44,110,101,119,100,105,114,102,100,44,110,101,119
.byte 112,97,116,104,41,32,115,121,115,99,97,108,108,40,50,54,52,44,100,105,114,102,100,44,112,97,116,104,44,110,101,119
.byte 100,105,114,102,100,44,110,101,119,112,97,116,104,44,48,44,48,41,10,35,100,101,102,105,110,101,32,115,121,109,108,105
.byte 110,107,97,116,40,116,97,114,103,101,116,44,100,105,114,102,100,44,112,97,116,104,41,32,115,121,115,99,97,108,108,40
.byte 50,54,54,44,116,97,114,103,101,116,44,100,105,114,102,100,44,112,97,116,104,44,48,44,48,44,48,41,10,35,100,101
.byte 102,105,110,101,32,114,101,97,100,108,105,110,107,97,116,40,100,105,114,102,100,44,112,97,116,104,44,98,117,102,44,115
.byte 105,122,101,41,32,115,121,115,99,97,108,108,40,50,54,55,44,100,105,114,102,100,44,112,97,116,104,44,98,117,102,44
.byte 115,105,122,101,44,48,44,48,41,10,35,100,101,102,105,110,101,32,102,99,104,109,111,100,97,116,40,100,105,114,102,100
.byte 44,112,97,116,104,44,109,111,100,101,41,32,115,121,115,99,97,108,108,40,50,54,56,44,100,105,114,102,100,44,112,97
.byte 116,104,44,109,111,100,101,44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,102,97,99,99,101,115,115,97,116
.byte 40,100,105,114,102,100,44,112,97,116,104,44,109,111,100,101,44,102,108,97,103,115,41,32,115,121,115,99,97,108,108,40
.byte 50,54,57,44,100,105,114,102,100,44,112,97,116,104,44,109,111,100,101,44,102,108,97,103,115,44,48,44,48,41,10,35
.byte 100,101,102,105,110,101,32,102,105,110,105,116,95,109,111,100,117,108,101,40,102,100,44,112,97,114,97,109,115,44,102,108
.byte 97,103,115,41,32,115,121,115,99,97,108,108,40,51,49,51,44,102,100,44,112,97,114,97,109,115,44,102,108,97,103,115
.byte 44,48,44,48,44,48,41,10,35,100,101,102,105,110,101,32,103,101,116,114,97,110,100,111,109,40,98,117,102,44,115,105
.byte 122,101,44,102,108,97,103,115,41,32,115,121,115,99,97,108,108,40,51,49,56,44,98,117,102,44,115,105,122,101,44,102
.byte 108,97,103,115,44,48,44,48,44,48,41,10,108,111,110,103,32,105,110,116,32,118,102,111,114,107,40,118,111,105,100,41
.byte 59,10,97,115,109,32,34,64,118,102,111,114,107,34,10,97,115,109,32,34,112,111,112,32,37,114,100,120,34,10,97,115
.byte 109,32,34,109,111,118,32,36,53,56,44,37,101,97,120,34,10,97,115,109,32,34,115,121,115,99,97,108,108,34,10,97
.byte 115,109,32,34,106,109,112,32,42,37,114,100,120,34,10,108,111,110,103,32,105,110,116,32,101,120,101,99,118,40,99,104
.byte 97,114,32,42,112,97,116,104,44,99,104,97,114,32,42,42,97,114,103,118,41,10,123,10,9,99,104,97,114,32,42,101
.byte 110,118,91,49,93,59,10,9,101,110,118,91,48,93,61,48,59,10,9,114,101,116,117,114,110,32,115,121,115,99,97,108
.byte 108,40,53,57,44,112,97,116,104,44,97,114,103,118,44,101,110,118,44,48,44,48,44,48,41,59,10,125,10,108,111,110
.byte 103,32,105,110,116,32,119,97,105,116,40,105,110,116,32,42,115,116,97,116,117,115,41,10,123,10,9,114,101,116,117,114
.byte 110,32,115,121,115,99,97,108,108,40,54,49,44,45,49,44,115,116,97,116,117,115,44,48,44,48,44,48,44,48,41,59
.byte 10,125,10,108,111,110,103,32,105,110,116,32,119,97,105,116,112,105,100,40,105,110,116,32,112,105,100,44,105,110,116,32
.byte 42,115,116,97,116,117,115,44,105,110,116,32,111,112,116,105,111,110,115,41,10,123,10,9,114,101,116,117,114,110,32,115
.byte 121,115,99,97,108,108,40,54,49,44,112,105,100,44,115,116,97,116,117,115,44,111,112,116,105,111,110,115,44,48,44,48
.byte 44,48,41,59,10,125,10,35,100,101,102,105,110,101,32,117,109,111,117,110,116,40,109,112,116,41,32,117,109,111,117,110
.byte 116,50,40,109,112,116,44,48,41,10,35,100,101,102,105,110,101,32,114,101,97,100,108,105,110,107,40,110,97,109,101,44
.byte 98,117,102,44,115,105,122,101,41,32,114,101,97,100,108,105,110,107,97,116,40,65,84,95,70,68,67,87,68,44,110,97
.byte 109,101,44,98,117,102,44,115,105,122,101,41,10,35,100,101,102,105,110,101,32,99,104,109,111,100,40,110,97,109,101,44
.byte 109,111,100,101,41,32,102,99,104,109,111,100,97,116,40,65,84,95,70,68,67,87,68,44,110,97,109,101,44,109,111,100
.byte 101,41,10,35,100,101,102,105,110,101,32,117,110,108,105,110,107,40,110,97,109,101,41,32,117,110,108,105,110,107,97,116
.byte 40,65,84,95,70,68,67,87,68,44,110,97,109,101,44,48,41,10,35,100,101,102,105,110,101,32,110,105,99,101,40,112
.byte 114,105,111,41,32,115,101,116,112,114,105,111,114,105,116,121,40,48,44,103,101,116,116,105,100,40,41,44,112,114,105,111
.byte 41,10,115,116,114,117,99,116,32,116,105,109,101,115,112,101,99,10,123,10,9,117,110,115,105,103,110,101,100,32,108,111
.byte 110,103,32,115,101,99,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,110,115,101,99,59,10,125,59,10
.byte 118,111,105,100,32,115,108,101,101,112,40,117,110,115,105,103,110,101,100,32,105,110,116,32,115,101,99,44,117,110,115,105
.byte 103,110,101,100,32,105,110,116,32,117,115,101,99,41,10,123,10,9,115,116,114,117,99,116,32,116,105,109,101,115,112,101
.byte 99,32,116,59,10,9,116,46,115,101,99,61,115,101,99,59,10,9,116,46,110,115,101,99,61,117,115,101,99,42,49,48
.byte 48,48,59,10,9,110,97,110,111,115,108,101,101,112,40,38,116,44,48,41,59,10,125,10,10,35,101,110,100,105,102,10
.byte 48,55,48,55,48,49,48,48,48,48,48,48,49,52,48,48,48,48,56,49,65,52,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48,48,48,48,52,51,54,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,65,48,48,48,48,48,48,48,48,46,47,108,111,99,107,46,99,0,0,35,105,102,110,100,101,102,32
.byte 95,76,79,67,75,95,67,95,10,35,100,101,102,105,110,101,32,95,76,79,67,75,95,67,95,10,35,105,110,99,108,117
.byte 100,101,32,34,115,121,115,99,97,108,108,46,99,34,10,117,110,115,105,103,110,101,100,32,105,110,116,32,108,111,99,107
.byte 95,115,101,116,51,50,40,117,110,115,105,103,110,101,100,32,105,110,116,32,42,112,116,114,44,117,110,115,105,103,110,101
.byte 100,32,105,110,116,32,118,97,108,117,101,41,10,123,10,9,97,115,109,32,34,109,111,118,32,49,54,40,37,114,98,112
.byte 41,44,37,114,99,120,34,10,9,97,115,109,32,34,109,111,118,32,50,52,40,37,114,98,112,41,44,37,101,97,120,34
.byte 10,9,97,115,109,32,34,120,99,104,103,32,37,101,97,120,44,40,37,114,99,120,41,34,10,125,10,118,111,105,100,32
.byte 115,112,105,110,95,108,111,99,107,40,117,110,115,105,103,110,101,100,32,105,110,116,32,42,112,116,114,41,10,123,10,9
.byte 119,104,105,108,101,40,108,111,99,107,95,115,101,116,51,50,40,112,116,114,44,49,41,41,10,9,123,10,9,9,119,104
.byte 105,108,101,40,42,112,116,114,41,10,9,9,123,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32,48,120,57,48
.byte 102,51,34,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32,48,120,57,48,102,51,34,10,9,9,9,97,115,109
.byte 32,34,46,119,111,114,100,32,48,120,57,48,102,51,34,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32,48,120
.byte 57,48,102,51,34,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32,48,120,57,48,102,51,34,10,9,9,9,97
.byte 115,109,32,34,46,119,111,114,100,32,48,120,57,48,102,51,34,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32
.byte 48,120,57,48,102,51,34,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32,48,120,57,48,102,51,34,10,9,9
.byte 9,97,115,109,32,34,46,119,111,114,100,32,48,120,57,48,102,51,34,10,9,9,9,97,115,109,32,34,46,119,111,114
.byte 100,32,48,120,57,48,102,51,34,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32,48,120,57,48,102,51,34,10
.byte 9,9,9,97,115,109,32,34,46,119,111,114,100,32,48,120,57,48,102,51,34,10,9,9,9,97,115,109,32,34,46,119
.byte 111,114,100,32,48,120,57,48,102,51,34,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32,48,120,57,48,102,51
.byte 34,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32,48,120,57,48,102,51,34,10,9,9,9,97,115,109,32,34
.byte 46,119,111,114,100,32,48,120,57,48,102,51,34,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32,48,120,57,48
.byte 102,51,34,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32,48,120,57,48,102,51,34,10,9,9,9,97,115,109
.byte 32,34,46,119,111,114,100,32,48,120,57,48,102,51,34,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32,48,120
.byte 57,48,102,51,34,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32,48,120,57,48,102,51,34,10,9,9,9,97
.byte 115,109,32,34,46,119,111,114,100,32,48,120,57,48,102,51,34,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32
.byte 48,120,57,48,102,51,34,10,9,9,9,97,115,109,32,34,46,119,111,114,100,32,48,120,57,48,102,51,34,10,9,9
.byte 125,10,9,125,10,125,10,118,111,105,100,32,115,112,105,110,95,117,110,108,111,99,107,40,117,110,115,105,103,110,101,100
.byte 32,105,110,116,32,42,112,116,114,41,10,123,10,9,42,112,116,114,61,48,59,10,125,10,117,110,115,105,103,110,101,100
.byte 32,105,110,116,32,109,117,116,101,120,95,119,97,105,116,59,10,118,111,105,100,32,109,117,116,101,120,95,108,111,99,107
.byte 40,117,110,115,105,103,110,101,100,32,105,110,116,32,42,112,116,114,41,10,123,10,9,119,104,105,108,101,40,108,111,99
.byte 107,95,115,101,116,51,50,40,112,116,114,44,49,41,41,10,9,123,10,9,9,115,121,115,99,97,108,108,40,50,48,50
.byte 44,112,116,114,44,48,44,49,44,48,44,48,44,48,41,59,10,9,125,10,125,10,118,111,105,100,32,109,117,116,101,120
.byte 95,117,110,108,111,99,107,40,117,110,115,105,103,110,101,100,32,105,110,116,32,42,112,116,114,41,10,123,10,9,42,112
.byte 116,114,61,48,59,10,9,115,121,115,99,97,108,108,40,50,48,50,44,112,116,114,44,49,44,49,44,48,44,48,44,48
.byte 41,59,10,125,10,10,10,35,101,110,100,105,102,10,0,0,48,55,48,55,48,49,48,48,48,48,48,48,49,53,48,48
.byte 48,48,56,49,65,52,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48
.byte 48,48,48,48,48,48,48,48,48,48,49,66,66,55,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,69,48,48,48,48,48,48,48,48,46,47
.byte 109,97,108,108,111,99,46,99,0,0,0,0,35,105,102,110,100,101,102,32,95,77,65,76,76,79,67,95,67,95,10,35
.byte 100,101,102,105,110,101,32,95,77,65,76,76,79,67,95,67,95,10,35,105,110,99,108,117,100,101,32,34,115,121,115,99
.byte 97,108,108,46,99,34,10,35,105,110,99,108,117,100,101,32,34,108,111,99,107,46,99,34,10,35,100,101,102,105,110,101
.byte 32,77,65,76,76,79,67,95,77,65,71,73,67,32,48,120,97,99,102,51,49,101,53,51,10,35,100,101,102,105,110,101
.byte 32,77,65,76,76,79,67,95,84,65,66,76,69,78,32,54,53,53,51,55,10,117,110,115,105,103,110,101,100,32,108,111
.byte 110,103,32,105,110,116,32,95,95,109,97,108,108,111,99,95,99,111,117,110,116,95,100,101,108,59,10,115,116,114,117,99
.byte 116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,10,123,10,9,117,110,115,105,103,110,101,100,32,105,110,116,32
.byte 109,97,103,105,99,59,10,9,117,110,115,105,103,110,101,100,32,99,104,97,114,32,115,116,97,114,116,95,99,111,108,111
.byte 114,59,10,9,117,110,115,105,103,110,101,100,32,99,104,97,114,32,101,110,100,95,99,111,108,111,114,59,10,9,117,110
.byte 115,105,103,110,101,100,32,99,104,97,114,32,99,111,108,111,114,59,10,9,117,110,115,105,103,110,101,100,32,99,104,97
.byte 114,32,117,115,101,100,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,42,98,108,111,99
.byte 107,95,108,105,110,107,115,59,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,115,105,122,101
.byte 59,10,9,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,32,42,115,116,97,114,116,95,108
.byte 101,102,116,59,10,9,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,32,42,115,116,97,114
.byte 116,95,114,105,103,104,116,59,10,9,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,32,42
.byte 115,116,97,114,116,95,112,97,114,101,110,116,59,10,9,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122
.byte 111,110,101,32,42,101,110,100,95,108,101,102,116,59,10,9,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95
.byte 122,111,110,101,32,42,101,110,100,95,114,105,103,104,116,59,10,9,115,116,114,117,99,116,32,95,95,109,97,108,108,111
.byte 99,95,122,111,110,101,32,42,101,110,100,95,112,97,114,101,110,116,59,10,9,115,116,114,117,99,116,32,95,95,109,97
.byte 108,108,111,99,95,122,111,110,101,32,42,108,101,102,116,59,10,9,115,116,114,117,99,116,32,95,95,109,97,108,108,111
.byte 99,95,122,111,110,101,32,42,114,105,103,104,116,59,10,9,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95
.byte 122,111,110,101,32,42,112,97,114,101,110,116,59,10,125,59,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95
.byte 84,89,80,69,32,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,10,35,100,101,102,105,110
.byte 101,32,82,66,84,82,69,69,95,67,77,80,40,110,49,44,110,50,41,32,40,40,110,49,41,45,62,115,105,122,101,62
.byte 40,110,50,41,45,62,115,105,122,101,124,124,40,110,49,41,45,62,115,105,122,101,61,61,40,110,50,41,45,62,115,105
.byte 122,101,38,38,40,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,41,40,110,49,41,62,40,117,110,115
.byte 105,103,110,101,100,32,108,111,110,103,32,105,110,116,41,40,110,50,41,41,10,35,100,101,102,105,110,101,32,82,66,84
.byte 82,69,69,95,76,69,70,84,32,108,101,102,116,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,82,73,71
.byte 72,84,32,114,105,103,104,116,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,80,65,82,69,78,84,32,112
.byte 97,114,101,110,116,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,67,79,76,79,82,32,99,111,108,111,114
.byte 10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,73,78,83,69,82,84,32,95,95,109,97,108,108,111,99,95
.byte 122,111,110,101,95,115,105,122,101,95,97,100,100,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,68,69,76
.byte 69,84,69,32,95,95,109,97,108,108,111,99,95,122,111,110,101,95,115,105,122,101,95,100,101,108,10,35,105,110,99,108
.byte 117,100,101,32,34,116,101,109,112,108,97,116,101,115,47,114,98,116,114,101,101,46,99,34,10,35,100,101,102,105,110,101
.byte 32,82,66,84,82,69,69,95,84,89,80,69,32,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122,111,110
.byte 101,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,67,77,80,40,110,49,44,110,50,41,32,40,40,117,110
.byte 115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,41,40,110,49,41,62,40,117,110,115,105,103,110,101,100,32,108
.byte 111,110,103,32,105,110,116,41,40,110,50,41,41,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,76,69,70
.byte 84,32,115,116,97,114,116,95,108,101,102,116,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,82,73,71,72
.byte 84,32,115,116,97,114,116,95,114,105,103,104,116,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,80,65,82
.byte 69,78,84,32,115,116,97,114,116,95,112,97,114,101,110,116,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95
.byte 67,79,76,79,82,32,115,116,97,114,116,95,99,111,108,111,114,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69
.byte 95,73,78,83,69,82,84,32,95,95,109,97,108,108,111,99,95,122,111,110,101,95,115,116,97,114,116,95,97,100,100,10
.byte 35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,68,69,76,69,84,69,32,95,95,109,97,108,108,111,99,95,122
.byte 111,110,101,95,115,116,97,114,116,95,100,101,108,10,35,105,110,99,108,117,100,101,32,34,116,101,109,112,108,97,116,101
.byte 115,47,114,98,116,114,101,101,46,99,34,10,35,100,101,102,105,110,101,32,82,66,84,82,69,69,95,84,89,80,69,32
.byte 115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,10,35,100,101,102,105,110,101,32,82,66,84
.byte 82,69,69,95,67,77,80,40,110,49,44,110,50,41,32,40,40,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105
.byte 110,116,41,40,110,49,41,43,40,110,49,41,45,62,115,105,122,101,62,40,117,110,115,105,103,110,101,100,32,108,111,110
.byte 103,32,105,110,116,41,40,110,50,41,43,40,110,50,41,45,62,115,105,122,101,41,10,35,100,101,102,105,110,101,32,82
.byte 66,84,82,69,69,95,76,69,70,84,32,101,110,100,95,108,101,102,116,10,35,100,101,102,105,110,101,32,82,66,84,82
.byte 69,69,95,82,73,71,72,84,32,101,110,100,95,114,105,103,104,116,10,35,100,101,102,105,110,101,32,82,66,84,82,69
.byte 69,95,80,65,82,69,78,84,32,101,110,100,95,112,97,114,101,110,116,10,35,100,101,102,105,110,101,32,82,66,84,82
.byte 69,69,95,67,79,76,79,82,32,101,110,100,95,99,111,108,111,114,10,35,100,101,102,105,110,101,32,82,66,84,82,69
.byte 69,95,73,78,83,69,82,84,32,95,95,109,97,108,108,111,99,95,122,111,110,101,95,101,110,100,95,97,100,100,10,35
.byte 100,101,102,105,110,101,32,82,66,84,82,69,69,95,68,69,76,69,84,69,32,95,95,109,97,108,108,111,99,95,122,111
.byte 110,101,95,101,110,100,95,100,101,108,10,35,105,110,99,108,117,100,101,32,34,116,101,109,112,108,97,116,101,115,47,114
.byte 98,116,114,101,101,46,99,34,10,99,104,97,114,32,42,95,95,99,117,114,114,101,110,116,95,98,114,107,59,10,117,110
.byte 115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,95,95,104,101,97,112,95,115,105,122,101,59,10,118,111,105
.byte 100,32,42,95,95,115,101,116,95,104,101,97,112,95,115,105,122,101,40,117,110,115,105,103,110,101,100,32,108,111,110,103
.byte 32,105,110,116,32,115,105,122,101,41,10,123,10,9,99,104,97,114,32,42,110,101,119,95,98,114,107,44,42,111,108,100
.byte 95,98,114,107,59,10,9,105,102,40,95,95,99,117,114,114,101,110,116,95,98,114,107,61,61,48,41,10,9,123,10,9
.byte 9,95,95,99,117,114,114,101,110,116,95,98,114,107,61,98,114,107,40,48,41,59,10,9,125,10,9,111,108,100,95,98
.byte 114,107,61,95,95,99,117,114,114,101,110,116,95,98,114,107,43,95,95,104,101,97,112,95,115,105,122,101,59,10,9,110
.byte 101,119,95,98,114,107,61,98,114,107,40,95,95,99,117,114,114,101,110,116,95,98,114,107,43,115,105,122,101,41,59,10
.byte 9,105,102,40,110,101,119,95,98,114,107,61,61,111,108,100,95,98,114,107,38,38,115,105,122,101,33,61,95,95,104,101
.byte 97,112,95,115,105,122,101,41,10,9,123,10,9,9,114,101,116,117,114,110,32,48,59,10,9,125,10,9,95,95,104,101
.byte 97,112,95,115,105,122,101,61,115,105,122,101,59,10,9,114,101,116,117,114,110,32,111,108,100,95,98,114,107,59,10,125
.byte 10,10,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,32,42,95,95,109,97,108,108,111,99
.byte 95,115,116,97,114,116,95,116,97,98,91,77,65,76,76,79,67,95,84,65,66,76,69,78,93,44,42,95,95,109,97,108
.byte 108,111,99,95,101,110,100,95,116,97,98,91,77,65,76,76,79,67,95,84,65,66,76,69,78,93,44,42,95,95,109,97
.byte 108,108,111,99,95,122,111,110,101,95,114,111,111,116,59,10,118,111,105,100,32,95,95,109,97,108,108,111,99,95,122,111
.byte 110,101,95,115,116,97,114,116,95,116,97,98,95,97,100,100,40,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99
.byte 95,122,111,110,101,32,42,110,111,100,101,41,10,123,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111
.byte 110,103,32,105,110,116,32,97,100,100,114,59,10,9,105,110,116,32,104,97,115,104,59,10,9,97,100,100,114,61,40,117
.byte 110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,32,105,110,116,41,110,111,100,101,59,10,9,104,97,115
.byte 104,61,40,97,100,100,114,62,62,49,54,124,97,100,100,114,60,60,52,56,41,37,77,65,76,76,79,67,95,84,65,66
.byte 76,69,78,59,10,9,95,95,109,97,108,108,111,99,95,122,111,110,101,95,115,116,97,114,116,95,97,100,100,40,95,95
.byte 109,97,108,108,111,99,95,115,116,97,114,116,95,116,97,98,43,104,97,115,104,44,110,111,100,101,41,59,10,125,10,118
.byte 111,105,100,32,95,95,109,97,108,108,111,99,95,122,111,110,101,95,101,110,100,95,116,97,98,95,97,100,100,40,115,116
.byte 114,117,99,116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,32,42,110,111,100,101,41,10,123,10,9,117,110,115
.byte 105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,32,105,110,116,32,97,100,100,114,59,10,9,105,110,116,32,104
.byte 97,115,104,59,10,9,97,100,100,114,61,40,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,32,105
.byte 110,116,41,110,111,100,101,43,110,111,100,101,45,62,115,105,122,101,59,10,9,104,97,115,104,61,40,97,100,100,114,62
.byte 62,49,54,124,97,100,100,114,60,60,52,56,41,37,77,65,76,76,79,67,95,84,65,66,76,69,78,59,10,9,95,95
.byte 109,97,108,108,111,99,95,122,111,110,101,95,101,110,100,95,97,100,100,40,95,95,109,97,108,108,111,99,95,101,110,100
.byte 95,116,97,98,43,104,97,115,104,44,110,111,100,101,41,59,10,125,10,118,111,105,100,32,95,95,109,97,108,108,111,99
.byte 95,122,111,110,101,95,115,116,97,114,116,95,116,97,98,95,100,101,108,40,115,116,114,117,99,116,32,95,95,109,97,108
.byte 108,111,99,95,122,111,110,101,32,42,112,116,114,41,10,123,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32
.byte 108,111,110,103,32,105,110,116,32,97,100,100,114,59,10,9,105,110,116,32,104,97,115,104,59,10,9,97,100,100,114,61
.byte 40,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,32,105,110,116,41,112,116,114,59,10,9,104,97
.byte 115,104,61,40,97,100,100,114,62,62,49,54,124,97,100,100,114,60,60,52,56,41,37,77,65,76,76,79,67,95,84,65
.byte 66,76,69,78,59,10,9,95,95,109,97,108,108,111,99,95,122,111,110,101,95,115,116,97,114,116,95,100,101,108,40,95
.byte 95,109,97,108,108,111,99,95,115,116,97,114,116,95,116,97,98,43,104,97,115,104,44,112,116,114,41,59,10,125,10,118
.byte 111,105,100,32,95,95,109,97,108,108,111,99,95,122,111,110,101,95,101,110,100,95,116,97,98,95,100,101,108,40,115,116
.byte 114,117,99,116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,32,42,112,116,114,41,10,123,10,9,117,110,115,105
.byte 103,110,101,100,32,108,111,110,103,32,108,111,110,103,32,105,110,116,32,97,100,100,114,59,10,9,105,110,116,32,104,97
.byte 115,104,59,10,9,97,100,100,114,61,40,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,32,105,110
.byte 116,41,112,116,114,43,112,116,114,45,62,115,105,122,101,59,10,9,104,97,115,104,61,40,97,100,100,114,62,62,49,54
.byte 124,97,100,100,114,60,60,52,56,41,37,77,65,76,76,79,67,95,84,65,66,76,69,78,59,10,9,95,95,109,97,108
.byte 108,111,99,95,122,111,110,101,95,101,110,100,95,100,101,108,40,95,95,109,97,108,108,111,99,95,101,110,100,95,116,97
.byte 98,43,104,97,115,104,44,112,116,114,41,59,10,125,10,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122
.byte 111,110,101,32,42,95,95,109,97,108,108,111,99,95,122,111,110,101,95,115,116,97,114,116,95,116,97,98,95,102,105,110
.byte 100,40,118,111,105,100,32,42,112,116,114,41,10,123,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111
.byte 110,103,32,105,110,116,32,97,100,100,114,59,10,9,105,110,116,32,104,97,115,104,59,10,9,115,116,114,117,99,116,32
.byte 95,95,109,97,108,108,111,99,95,122,111,110,101,32,42,110,111,100,101,59,10,9,97,100,100,114,61,40,117,110,115,105
.byte 103,110,101,100,32,108,111,110,103,32,108,111,110,103,32,105,110,116,41,112,116,114,59,10,9,104,97,115,104,61,40,97
.byte 100,100,114,62,62,49,54,124,97,100,100,114,60,60,52,56,41,37,77,65,76,76,79,67,95,84,65,66,76,69,78,59
.byte 10,9,110,111,100,101,61,95,95,109,97,108,108,111,99,95,115,116,97,114,116,95,116,97,98,91,104,97,115,104,93,59
.byte 10,9,119,104,105,108,101,40,110,111,100,101,38,38,40,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110
.byte 103,32,105,110,116,41,110,111,100,101,33,61,97,100,100,114,41,10,9,123,10,9,9,105,102,40,40,117,110,115,105,103
.byte 110,101,100,32,108,111,110,103,32,108,111,110,103,32,105,110,116,41,110,111,100,101,62,97,100,100,114,41,10,9,9,123
.byte 10,9,9,9,110,111,100,101,61,110,111,100,101,45,62,115,116,97,114,116,95,108,101,102,116,59,10,9,9,125,10,9
.byte 9,101,108,115,101,10,9,9,123,10,9,9,9,110,111,100,101,61,110,111,100,101,45,62,115,116,97,114,116,95,114,105
.byte 103,104,116,59,10,9,9,125,10,9,125,10,9,114,101,116,117,114,110,32,110,111,100,101,59,10,125,10,115,116,114,117
.byte 99,116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,32,42,95,95,109,97,108,108,111,99,95,122,111,110,101,95
.byte 101,110,100,95,116,97,98,95,102,105,110,100,40,118,111,105,100,32,42,112,116,114,41,10,123,10,9,117,110,115,105,103
.byte 110,101,100,32,108,111,110,103,32,108,111,110,103,32,105,110,116,32,97,100,100,114,59,10,9,105,110,116,32,104,97,115
.byte 104,59,10,9,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,32,42,110,111,100,101,59,10
.byte 9,97,100,100,114,61,40,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,32,105,110,116,41,112,116
.byte 114,59,10,9,104,97,115,104,61,40,97,100,100,114,62,62,49,54,124,97,100,100,114,60,60,52,56,41,37,77,65,76
.byte 76,79,67,95,84,65,66,76,69,78,59,10,9,110,111,100,101,61,95,95,109,97,108,108,111,99,95,101,110,100,95,116
.byte 97,98,91,104,97,115,104,93,59,10,9,119,104,105,108,101,40,110,111,100,101,38,38,40,117,110,115,105,103,110,101,100
.byte 32,108,111,110,103,32,108,111,110,103,32,105,110,116,41,110,111,100,101,43,110,111,100,101,45,62,115,105,122,101,33,61
.byte 97,100,100,114,41,10,9,123,10,9,9,105,102,40,40,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110
.byte 103,32,105,110,116,41,110,111,100,101,43,110,111,100,101,45,62,115,105,122,101,62,97,100,100,114,41,10,9,9,123,10
.byte 9,9,9,110,111,100,101,61,110,111,100,101,45,62,101,110,100,95,108,101,102,116,59,10,9,9,125,10,9,9,101,108
.byte 115,101,10,9,9,123,10,9,9,9,110,111,100,101,61,110,111,100,101,45,62,101,110,100,95,114,105,103,104,116,59,10
.byte 9,9,125,10,9,125,10,9,114,101,116,117,114,110,32,110,111,100,101,59,10,125,10,115,116,114,117,99,116,32,95,95
.byte 109,97,108,108,111,99,95,122,111,110,101,32,42,95,95,109,97,108,108,111,99,95,122,111,110,101,95,115,105,122,101,95
.byte 102,105,110,100,40,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,32,105,110,116,32,115,105,122,101
.byte 41,10,123,10,9,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,32,42,110,111,100,101,44
.byte 42,112,59,10,9,110,111,100,101,61,95,95,109,97,108,108,111,99,95,122,111,110,101,95,114,111,111,116,59,10,9,112
.byte 61,48,59,10,9,119,104,105,108,101,40,110,111,100,101,41,10,9,123,10,9,9,105,102,40,110,111,100,101,45,62,115
.byte 105,122,101,62,61,115,105,122,101,41,10,9,9,123,10,9,9,9,112,61,110,111,100,101,59,10,9,9,9,110,111,100
.byte 101,61,110,111,100,101,45,62,108,101,102,116,59,10,9,9,125,10,9,9,101,108,115,101,10,9,9,123,10,9,9,9
.byte 110,111,100,101,61,110,111,100,101,45,62,114,105,103,104,116,59,10,9,9,125,10,9,125,10,9,114,101,116,117,114,110
.byte 32,112,59,10,125,10,118,111,105,100,32,95,95,109,97,108,108,111,99,95,101,114,114,111,114,40,118,111,105,100,41,10
.byte 123,10,9,119,114,105,116,101,40,50,44,34,105,110,118,97,108,105,100,32,112,111,105,110,116,101,114,32,111,114,32,99
.byte 111,114,114,117,112,116,105,111,110,32,100,101,116,101,99,116,101,100,46,92,110,34,44,52,48,41,59,10,9,119,104,105
.byte 108,101,40,49,41,10,9,123,10,9,9,97,115,109,32,34,105,110,116,51,34,10,9,125,10,125,10,118,111,105,100,32
.byte 95,95,109,97,108,108,111,99,95,122,111,110,101,95,97,100,100,40,115,116,114,117,99,116,32,95,95,109,97,108,108,111
.byte 99,95,122,111,110,101,32,42,110,111,100,101,41,10,123,10,9,105,102,40,110,111,100,101,45,62,109,97,103,105,99,33
.byte 61,77,65,76,76,79,67,95,77,65,71,73,67,41,10,9,123,10,9,9,95,95,109,97,108,108,111,99,95,101,114,114
.byte 111,114,40,41,59,10,9,125,10,9,110,111,100,101,45,62,117,115,101,100,61,48,59,10,9,95,95,109,97,108,108,111
.byte 99,95,122,111,110,101,95,115,105,122,101,95,97,100,100,40,38,95,95,109,97,108,108,111,99,95,122,111,110,101,95,114
.byte 111,111,116,44,110,111,100,101,41,59,10,9,95,95,109,97,108,108,111,99,95,122,111,110,101,95,115,116,97,114,116,95
.byte 116,97,98,95,97,100,100,40,110,111,100,101,41,59,10,9,95,95,109,97,108,108,111,99,95,122,111,110,101,95,101,110
.byte 100,95,116,97,98,95,97,100,100,40,110,111,100,101,41,59,10,125,10,118,111,105,100,32,95,95,109,97,108,108,111,99
.byte 95,122,111,110,101,95,100,101,108,40,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,32,42
.byte 110,111,100,101,41,10,123,10,9,105,102,40,110,111,100,101,45,62,109,97,103,105,99,33,61,77,65,76,76,79,67,95
.byte 77,65,71,73,67,41,10,9,123,10,9,9,95,95,109,97,108,108,111,99,95,101,114,114,111,114,40,41,59,10,9,125
.byte 10,9,110,111,100,101,45,62,117,115,101,100,61,48,59,10,9,95,95,109,97,108,108,111,99,95,122,111,110,101,95,115
.byte 105,122,101,95,100,101,108,40,38,95,95,109,97,108,108,111,99,95,122,111,110,101,95,114,111,111,116,44,110,111,100,101
.byte 41,59,10,9,95,95,109,97,108,108,111,99,95,122,111,110,101,95,115,116,97,114,116,95,116,97,98,95,100,101,108,40
.byte 110,111,100,101,41,59,10,9,95,95,109,97,108,108,111,99,95,122,111,110,101,95,101,110,100,95,116,97,98,95,100,101
.byte 108,40,110,111,100,101,41,59,10,125,10,118,111,105,100,32,42,109,97,108,108,111,99,95,110,111,108,111,99,107,40,117
.byte 110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,32,105,110,116,32,115,105,122,101,41,10,123,10,9,117
.byte 110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,32,105,110,116,32,115,105,122,101,49,44,115,105,122,101
.byte 50,59,10,9,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,32,42,122,111,110,101,44,42
.byte 110,101,119,95,122,111,110,101,59,10,9,105,110,116,32,104,97,115,104,59,10,9,118,111,105,100,32,42,114,101,116,59
.byte 10,9,105,102,40,115,105,122,101,61,61,48,41,10,9,123,10,9,9,114,101,116,117,114,110,32,48,59,10,9,125,10
.byte 9,115,105,122,101,49,61,40,40,115,105,122,101,45,49,62,62,52,41,43,49,60,60,52,41,43,49,50,56,59,10,10
.byte 9,122,111,110,101,61,95,95,109,97,108,108,111,99,95,122,111,110,101,95,115,105,122,101,95,102,105,110,100,40,115,105
.byte 122,101,49,41,59,10,9,105,102,40,122,111,110,101,61,61,48,41,10,9,123,10,9,9,105,102,40,115,105,122,101,49
.byte 60,48,120,56,48,48,48,41,10,9,9,123,10,9,9,9,115,105,122,101,50,61,48,120,50,48,48,48,48,48,59,10
.byte 9,9,125,10,9,9,101,108,115,101,32,105,102,40,115,105,122,101,49,60,48,120,52,48,48,48,48,41,10,9,9,123
.byte 10,9,9,9,115,105,122,101,50,61,48,120,49,48,48,48,48,48,48,59,10,9,9,125,10,9,9,101,108,115,101,10
.byte 9,9,123,10,9,9,9,115,105,122,101,50,61,115,105,122,101,49,42,56,59,10,9,9,125,10,9,9,115,105,122,101
.byte 50,61,40,115,105,122,101,50,45,49,62,62,49,50,41,43,49,60,60,49,50,59,10,9,9,105,102,40,33,40,122,111
.byte 110,101,61,95,95,115,101,116,95,104,101,97,112,95,115,105,122,101,40,95,95,104,101,97,112,95,115,105,122,101,43,115
.byte 105,122,101,50,41,41,41,10,9,9,123,10,9,9,9,115,105,122,101,50,61,115,105,122,101,49,59,10,9,9,9,115
.byte 105,122,101,50,61,40,115,105,122,101,50,45,49,62,62,49,50,41,43,49,60,60,49,50,59,10,9,9,9,105,102,40
.byte 33,40,122,111,110,101,61,95,95,115,101,116,95,104,101,97,112,95,115,105,122,101,40,95,95,104,101,97,112,95,115,105
.byte 122,101,43,115,105,122,101,50,41,41,41,10,9,9,9,123,10,9,9,9,9,114,101,116,117,114,110,32,48,59,10,9
.byte 9,9,125,10,9,9,125,10,9,9,122,111,110,101,45,62,115,105,122,101,61,115,105,122,101,50,59,10,9,9,122,111
.byte 110,101,45,62,109,97,103,105,99,61,77,65,76,76,79,67,95,77,65,71,73,67,59,10,9,125,10,9,101,108,115,101
.byte 10,9,123,10,9,9,95,95,109,97,108,108,111,99,95,122,111,110,101,95,100,101,108,40,122,111,110,101,41,59,10,9
.byte 125,10,9,114,101,116,61,40,99,104,97,114,32,42,41,122,111,110,101,43,51,50,59,10,9,105,102,40,115,105,122,101
.byte 49,62,122,111,110,101,45,62,115,105,122,101,41,10,9,123,10,9,9,95,95,109,97,108,108,111,99,95,101,114,114,111
.byte 114,40,41,59,10,9,125,10,9,105,102,40,115,105,122,101,49,43,51,56,52,60,122,111,110,101,45,62,115,105,122,101
.byte 41,10,9,123,10,9,9,110,101,119,95,122,111,110,101,61,40,118,111,105,100,32,42,41,40,40,99,104,97,114,32,42
.byte 41,122,111,110,101,43,115,105,122,101,49,41,59,10,9,9,110,101,119,95,122,111,110,101,45,62,109,97,103,105,99,61
.byte 77,65,76,76,79,67,95,77,65,71,73,67,59,10,9,9,110,101,119,95,122,111,110,101,45,62,115,105,122,101,61,122
.byte 111,110,101,45,62,115,105,122,101,45,115,105,122,101,49,59,10,9,9,95,95,109,97,108,108,111,99,95,122,111,110,101
.byte 95,97,100,100,40,110,101,119,95,122,111,110,101,41,59,10,9,9,122,111,110,101,45,62,115,105,122,101,61,115,105,122
.byte 101,49,59,10,9,125,10,9,122,111,110,101,45,62,117,115,101,100,61,49,59,10,9,114,101,116,117,114,110,32,114,101
.byte 116,59,10,125,10,118,111,105,100,32,95,102,114,101,101,40,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95
.byte 122,111,110,101,32,42,122,111,110,101,41,10,123,10,9,115,116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122
.byte 111,110,101,32,42,115,116,97,114,116,44,42,101,110,100,59,10,9,95,95,109,97,108,108,111,99,95,122,111,110,101,95
.byte 97,100,100,40,122,111,110,101,41,59,10,9,105,102,40,115,116,97,114,116,61,95,95,109,97,108,108,111,99,95,122,111
.byte 110,101,95,101,110,100,95,116,97,98,95,102,105,110,100,40,122,111,110,101,41,41,10,9,123,10,9,9,95,95,109,97
.byte 108,108,111,99,95,122,111,110,101,95,100,101,108,40,122,111,110,101,41,59,10,9,9,95,95,109,97,108,108,111,99,95
.byte 122,111,110,101,95,100,101,108,40,115,116,97,114,116,41,59,10,9,9,115,116,97,114,116,45,62,115,105,122,101,43,61
.byte 122,111,110,101,45,62,115,105,122,101,59,10,9,9,95,95,109,97,108,108,111,99,95,122,111,110,101,95,97,100,100,40
.byte 115,116,97,114,116,41,59,10,9,9,122,111,110,101,61,115,116,97,114,116,59,10,9,125,10,9,105,102,40,101,110,100
.byte 61,95,95,109,97,108,108,111,99,95,122,111,110,101,95,115,116,97,114,116,95,116,97,98,95,102,105,110,100,40,40,99
.byte 104,97,114,32,42,41,122,111,110,101,43,122,111,110,101,45,62,115,105,122,101,41,41,10,9,123,10,9,9,95,95,109
.byte 97,108,108,111,99,95,122,111,110,101,95,100,101,108,40,122,111,110,101,41,59,10,9,9,95,95,109,97,108,108,111,99
.byte 95,122,111,110,101,95,100,101,108,40,101,110,100,41,59,10,9,9,122,111,110,101,45,62,115,105,122,101,43,61,101,110
.byte 100,45,62,115,105,122,101,59,10,9,9,95,95,109,97,108,108,111,99,95,122,111,110,101,95,97,100,100,40,122,111,110
.byte 101,41,59,10,9,125,10,9,105,102,40,40,99,104,97,114,32,42,41,122,111,110,101,43,122,111,110,101,45,62,115,105
.byte 122,101,61,61,95,95,99,117,114,114,101,110,116,95,98,114,107,43,95,95,104,101,97,112,95,115,105,122,101,38,38,122
.byte 111,110,101,45,62,115,105,122,101,62,61,49,54,51,56,52,41,10,9,123,10,9,9,95,95,109,97,108,108,111,99,95
.byte 122,111,110,101,95,100,101,108,40,122,111,110,101,41,59,10,9,9,95,95,115,101,116,95,104,101,97,112,95,115,105,122
.byte 101,40,95,95,104,101,97,112,95,115,105,122,101,45,122,111,110,101,45,62,115,105,122,101,41,59,10,9,125,10,125,10
.byte 118,111,105,100,32,102,114,101,101,95,110,111,108,111,99,107,40,118,111,105,100,32,42,112,116,114,41,10,123,10,9,115
.byte 116,114,117,99,116,32,95,95,109,97,108,108,111,99,95,122,111,110,101,32,42,122,111,110,101,59,10,9,105,102,40,33
.byte 112,116,114,41,10,9,123,10,9,9,114,101,116,117,114,110,59,10,9,125,10,9,122,111,110,101,61,40,118,111,105,100
.byte 32,42,41,40,40,99,104,97,114,32,42,41,112,116,114,45,51,50,41,59,10,9,105,102,40,122,111,110,101,45,62,117
.byte 115,101,100,33,61,49,41,10,9,123,10,9,9,95,95,109,97,108,108,111,99,95,101,114,114,111,114,40,41,59,10,9
.byte 125,10,9,95,102,114,101,101,40,122,111,110,101,41,59,10,125,10,117,110,115,105,103,110,101,100,32,105,110,116,32,95
.byte 95,109,97,108,108,111,99,95,109,117,116,101,120,59,10,118,111,105,100,32,42,109,97,108,108,111,99,40,117,110,115,105
.byte 103,110,101,100,32,108,111,110,103,32,105,110,116,32,115,105,122,101,41,10,123,10,9,118,111,105,100,32,42,112,116,114
.byte 59,10,9,109,117,116,101,120,95,108,111,99,107,40,38,95,95,109,97,108,108,111,99,95,109,117,116,101,120,41,59,10
.byte 9,112,116,114,61,109,97,108,108,111,99,95,110,111,108,111,99,107,40,115,105,122,101,41,59,10,9,109,117,116,101,120
.byte 95,117,110,108,111,99,107,40,38,95,95,109,97,108,108,111,99,95,109,117,116,101,120,41,59,10,9,114,101,116,117,114
.byte 110,32,112,116,114,59,10,125,10,118,111,105,100,32,102,114,101,101,40,118,111,105,100,32,42,112,116,114,41,10,123,10
.byte 9,109,117,116,101,120,95,108,111,99,107,40,38,95,95,109,97,108,108,111,99,95,109,117,116,101,120,41,59,10,9,102
.byte 114,101,101,95,110,111,108,111,99,107,40,112,116,114,41,59,10,9,109,117,116,101,120,95,117,110,108,111,99,107,40,38
.byte 95,95,109,97,108,108,111,99,95,109,117,116,101,120,41,59,10,125,10,35,117,110,100,101,102,32,77,65,76,76,79,67
.byte 95,84,65,66,76,69,78,10,35,117,110,100,101,102,32,77,65,76,76,79,67,95,77,65,71,73,67,10,35,101,110,100
.byte 105,102,10,0,48,55,48,55,48,49,48,48,48,48,48,48,49,54,48,48,48,48,56,49,65,52,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48,48,48,48,50
.byte 50,68,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,69,48,48,48,48,48,48,48,48,46,47,105,102,111,114,109,97,116,46,99,0,0,0
.byte 35,105,102,110,100,101,102,32,95,73,70,79,82,77,65,84,95,67,95,10,35,100,101,102,105,110,101,32,95,73,70,79
.byte 82,77,65,84,95,67,95,10,35,105,110,99,108,117,100,101,32,34,109,101,109,46,99,34,10,118,111,105,100,32,115,112
.byte 114,105,110,116,105,40,99,104,97,114,32,42,115,116,114,44,117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110
.byte 116,32,97,44,105,110,116,32,100,105,103,105,116,115,41,10,123,10,9,117,110,115,105,103,110,101,100,32,108,111,110,103
.byte 32,105,110,116,32,110,59,10,9,105,110,116,32,100,44,108,44,115,108,59,10,9,99,104,97,114,32,98,117,102,91,50
.byte 48,93,59,10,9,110,61,49,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,59,10,9,100,61
.byte 50,48,59,10,9,119,104,105,108,101,40,110,62,97,38,38,100,62,100,105,103,105,116,115,41,10,9,123,10,9,9,110
.byte 47,61,49,48,59,10,9,9,45,45,100,59,10,9,125,10,9,108,61,48,59,10,9,119,104,105,108,101,40,110,41,10
.byte 9,123,10,9,9,98,117,102,91,108,93,61,97,47,110,43,39,48,39,59,10,9,9,97,37,61,110,59,10,9,9,110
.byte 47,61,49,48,59,10,9,9,43,43,108,59,10,9,125,10,9,115,108,61,115,116,114,108,101,110,40,115,116,114,41,59
.byte 10,9,109,101,109,99,112,121,40,115,116,114,43,115,108,44,98,117,102,44,108,41,59,10,9,115,116,114,91,115,108,43
.byte 108,93,61,48,59,10,125,10,99,104,97,114,32,42,115,105,110,112,117,116,105,40,99,104,97,114,32,42,115,116,114,44
.byte 117,110,115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,42,114,101,115,117,108,116,41,10,123,10,9,117,110
.byte 115,105,103,110,101,100,32,108,111,110,103,32,105,110,116,32,114,101,116,59,10,9,99,104,97,114,32,99,59,10,9,114
.byte 101,116,61,48,59,10,9,119,104,105,108,101,40,40,99,61,42,115,116,114,41,62,61,39,48,39,38,38,99,60,61,39
.byte 57,39,41,10,9,123,10,9,9,114,101,116,61,114,101,116,42,49,48,43,40,99,45,39,48,39,41,59,10,9,9,43
.byte 43,115,116,114,59,10,9,125,10,9,42,114,101,115,117,108,116,61,114,101,116,59,10,9,114,101,116,117,114,110,32,115
.byte 116,114,59,10,125,10,35,101,110,100,105,102,10,0,0,0,48,55,48,55,48,49,48,48,48,48,48,48,49,55,48,48
.byte 48,48,56,49,65,52,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,49,66,65,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,65,48,48,48,48,48,48,48,48,46,47
.byte 112,111,108,108,46,99,0,0,35,105,102,110,100,101,102,32,95,80,79,76,76,95,67,95,10,35,100,101,102,105,110,101
.byte 32,95,80,79,76,76,95,67,95,10,115,116,114,117,99,116,32,112,111,108,108,102,100,10,123,10,9,105,110,116,32,102
.byte 100,59,10,9,117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,105,110,116,32,101,118,101,110,116,115,59,10,9
.byte 117,110,115,105,103,110,101,100,32,115,104,111,114,116,32,105,110,116,32,114,101,118,101,110,116,115,59,10,125,59,10,35
.byte 100,101,102,105,110,101,32,80,79,76,76,73,78,32,48,120,48,48,48,49,10,35,100,101,102,105,110,101,32,80,79,76
.byte 76,80,82,73,32,48,120,48,48,48,50,10,35,100,101,102,105,110,101,32,80,79,76,76,79,85,84,32,48,120,48,48
.byte 48,52,10,35,100,101,102,105,110,101,32,80,79,76,76,69,82,82,32,48,120,48,48,48,56,10,35,100,101,102,105,110
.byte 101,32,80,79,76,76,72,85,80,32,48,120,48,48,49,48,10,35,100,101,102,105,110,101,32,80,79,76,76,78,86,65
.byte 76,32,48,120,48,48,50,48,10,35,100,101,102,105,110,101,32,80,79,76,76,82,68,78,79,82,77,32,48,120,48,48
.byte 52,48,10,35,100,101,102,105,110,101,32,80,79,76,76,82,68,66,65,78,68,32,48,120,48,48,56,48,10,35,100,101
.byte 102,105,110,101,32,80,79,76,76,87,82,78,79,82,77,32,48,120,48,49,48,48,10,35,100,101,102,105,110,101,32,80
.byte 79,76,76,87,82,66,65,78,68,32,48,120,48,50,48,48,10,35,100,101,102,105,110,101,32,80,79,76,76,77,83,71
.byte 32,48,120,48,52,48,48,10,35,100,101,102,105,110,101,32,80,79,76,76,82,69,77,79,86,69,32,48,120,49,48,48
.byte 48,10,35,100,101,102,105,110,101,32,80,79,76,76,82,68,72,85,80,32,48,120,50,48,48,48,10,35,101,110,100,105
.byte 102,10,0,0,48,55,48,55,48,49,48,48,48,48,48,48,49,56,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
.byte 48,48,48,48,48,48,48,48,48,69,48,48,48,48,48,48,48,48,84,82,65,73,76,69,82,33,33,33,0,0,0,0
.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
@include_cpio_end
@read_hex
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 16(%rbp),%r12
mov $0,%r8d
mov $0,%r9d
mov %r8d,%eax
mov $8,%ecx
cmp %ecx,%eax
jge @_$LB1226
@_$LB1224
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB1228
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB1228
@_$LB1232
mov %r9d,%eax
mov $4,%cl
shl %cl,%eax
mov %eax,%edi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
mov %edi,%ebx
movsbl %sil,%esi
or %esi,%ebx
mov %ebx,%r9d
jmp @_$LB1229
@_$LB1228
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB1234
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $70,%cl
cmp %cl,%al
jg @_$LB1234
@_$LB1238
mov %r9d,%eax
mov $4,%cl
shl %cl,%eax
mov %eax,%edi
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $65,%bl
mov %bl,%sil
add $10,%sil
mov %edi,%ebx
movsbl %sil,%esi
or %esi,%ebx
mov %ebx,%r9d
jmp @_$LB1235
@_$LB1234
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB1240
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $102,%cl
cmp %cl,%al
jg @_$LB1240
@_$LB1244
mov %r9d,%eax
mov $4,%cl
shl %cl,%eax
mov %eax,%edi
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $97,%bl
mov %bl,%sil
add $10,%sil
mov %edi,%ebx
movsbl %sil,%esi
or %esi,%ebx
mov %ebx,%r9d
jmp @_$LB1241
@_$LB1240
mov $0,%rax
jmp @read_hex$END
@_$LB1241
@_$LB1235
@_$LB1229
add $1,%r8d
mov %r8d,%eax
mov $8,%ecx
cmp %ecx,%eax
jl @_$LB1224
@_$LB1226
mov %r9d,%r9d
mov %r9,%rax
@read_hex$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@cpio_unpack
push %rbp
mov %rsp,%rbp
sub $144,%rsp
push %rbx
push %rsi
mov 32(%rbp),%rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
mov 24(%rbp),%r15
push %r10
mov 16(%rbp),%r10
pushq $493
push %rsi
call @mkdirl
mov %eax,%ebx
add $16,%rsp
pushq $0
pushq $0
push %rsi
call @openl
mov %eax,%ebx
add $24,%rsp
mov %ebx,%r14d
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1247
mov $1,%rax
jmp @cpio_unpack$END
@_$LB1247
mov %r15,%rax
mov $110,%rcx
cmp %rcx,%rax
jle @_$LB1250
@_$LB1248
pushq $110
push %r10
lea 18446744073709551504(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
add $110,%r10
sub $110,%r15
pushq $6
mov $@_$MSG12,%rbx
push %rbx
lea 18446744073709551504(%rbp),%rax
push %rax
call @memcmp
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1253
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r14d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @cpio_unpack$END
@_$LB1253
lea 18446744073709551504(%rbp),%rbx
add $14,%rbx
push %rbx
call @read_hex
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r12d
lea 18446744073709551504(%rbp),%rbx
add $94,%rbx
push %rbx
call @read_hex
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r8d
mov %r8d,%ebx
add $4096,%ebx
mov %ebx,%r9d
mov %r9d,%ebx
and $4095,%ebx
sub %ebx,%r9d
mov $0,%rbx
push %rbx
mov $18446744073709551615,%rbx
push %rbx
mov $34,%rbx
push %rbx
mov $3,%rbx
push %rbx
mov %r9d,%ebx
mov %ebx,%ebx
push %rbx
mov $0,%rbx
push %rbx
mov $9,%rbx
push %rbx
call @__syscall
mov %rax,%rsi
add $56,%rsp
mov %rsi,%rbx
mov %rbx,%rdi
mov %rdi,%rsi
mov %rsi,%rbx
mov %rbx,%rax
mov $18446744073709547520,%rcx
cmp %rcx,%rax
jbe @_$LB1256
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r14d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @cpio_unpack$END
@_$LB1256
mov %r15,%rax
mov %r8d,%ecx
mov %ecx,%ecx
cmp %rcx,%rax
jae @_$LB1259
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r14d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @cpio_unpack$END
@_$LB1259
mov %r8d,%r8d
push %r8
push %r10
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov %r8d,%r8d
add %r8,%r10
mov %r8d,%r8d
sub %r8,%r15
mov $@_$MSG13,%rbx
push %rbx
push %rdi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1262
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r14d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rax
jmp @cpio_unpack$END
@_$LB1262
mov %rdi,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB1265
@_$LB1263
add $1,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
je @_$LB1263
@_$LB1265
mov %r12d,%ebx
and $61440,%ebx
mov %ebx,%eax
mov $16384,%ecx
cmp %ecx,%eax
jne @_$LB1267
mov %r12d,%ebx
and $4095,%ebx
mov %ebx,%ebx
push %rbx
push %rsi
movslq %r14d,%r14
push %r14
call @mkdiratl
mov %eax,%ebx
add $24,%rsp
mov %r12d,%ebx
and $4095,%ebx
mov %ebx,%ebx
push %rbx
push %rsi
movslq %r14d,%r14
push %r14
call @fchmodatl
mov %eax,%ebx
add $24,%rsp
jmp @_$LB1268
@_$LB1267
mov %r12d,%ebx
and $61440,%ebx
mov %ebx,%eax
mov $32768,%ecx
cmp %ecx,%eax
jne @_$LB1271
lea 18446744073709551504(%rbp),%rbx
add $54,%rbx
push %rbx
call @read_hex
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r8d
mov %r12d,%ebx
and $4095,%ebx
mov %ebx,%ebx
push %rbx
pushq $578
push %rsi
movslq %r14d,%r14
push %r14
call @openatl
mov %eax,%ebx
add $32,%rsp
mov %ebx,%r13d
mov %r13d,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1274
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r14d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @cpio_unpack$END
@_$LB1274
mov %r8d,%eax
mov %eax,%eax
mov %r15,%rcx
cmp %rcx,%rax
jbe @_$LB1277
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r14d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r13d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @cpio_unpack$END
@_$LB1277
@_$LB1278
mov %r8d,%eax
mov $4096,%ecx
cmp %ecx,%eax
jbe @_$LB1282
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $4096,%rbx
push %rbx
mov %r10,%rbx
push %rbx
mov %r13d,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
sub $4096,%r8d
add $4096,%r10
sub $4096,%r15
jmp @_$LB1283
@_$LB1282
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
mov %ebx,%ebx
push %rbx
mov %r10,%rbx
push %rbx
mov %r13d,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %r8d,%r8d
add %r8,%r10
mov %r8d,%r8d
sub %r8,%r15
jmp @_$LB1280
@_$LB1283
jmp @_$LB1278
@_$LB1280
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r13d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
and $3,%r8d
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1286
mov $4,%rax
mov %r8d,%ecx
mov %ecx,%ecx
sub %rcx,%rax
mov %rax,%rbx
add %rbx,%r10
mov $4,%rax
mov %r8d,%ecx
mov %ecx,%ecx
sub %rcx,%rax
mov %rax,%rbx
sub %rbx,%r15
@_$LB1286
mov %r12d,%ebx
and $4095,%ebx
mov %ebx,%ebx
push %rbx
push %rsi
movslq %r14d,%r14
push %r14
call @fchmodatl
mov %eax,%ebx
add $24,%rsp
@_$LB1271
@_$LB1268
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r9d,%ebx
mov %ebx,%ebx
push %rbx
mov %rdi,%rbx
push %rbx
mov $11,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %r15,%rax
mov $110,%rcx
cmp %rcx,%rax
jg @_$LB1248
@_$LB1250
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r14d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
@cpio_unpack$END
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@cpio_unpack_to_dir
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 32(%rbp),%rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $493,%rbx
push %rbx
mov %rsi,%rbx
push %rbx
mov $83,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
push %rsi
push %rdi
push %r8
call @cpio_unpack
mov %eax,%ebx
add $24,%rsp
movslq %ebx,%rbx
mov %rbx,%rax
@cpio_unpack_to_dir$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@init_project
push %rbp
mov %rsp,%rbp
sub $208,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea 18446744073709551472(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov %r9,%rbx
push %rbx
mov $4,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov %esi,%eax
mov $4294967294,%ecx
cmp %ecx,%eax
jne @_$LB1288
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $493,%rbx
push %rbx
mov %r9,%rbx
push %rbx
mov $83,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r9,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov %eax,@_$DATA+1053008
mov @_$DATA+1053008,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1292
mov $1,%rax
jmp @init_project$END
@_$LB1292
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $420,%rbx
push %rbx
mov $578,%rbx
push %rbx
mov $@_$MSG14,%rsi
mov %rsi,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $257,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rdi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1295
mov $1,%rax
jmp @init_project$END
@_$LB1295
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $34,%rbx
push %rbx
mov $@_$MSG15,%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $21,%rbx
push %rbx
mov $@_$MSG16,%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $68,%rbx
push %rbx
mov $@_$MSG17,%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $30,%rbx
push %rbx
mov $@_$MSG18,%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $40,%rbx
push %rbx
mov $@_$MSG19,%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $37,%rbx
push %rbx
mov $@_$MSG20,%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
push %r9
call @strlen
mov %rax,%rsi
add $8,%rsp
mov %rsi,%rbx
add $30,%rbx
push %rbx
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov $0,%rbx
mov %r8,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB1298
mov $1,%rax
jmp @init_project$END
@_$LB1298
push %r9
push %r8
call @strcpy
mov %rax,%rbx
add $16,%rsp
mov $@_$MSG21,%rbx
push %rbx
push %r8
call @strcat
mov %rax,%rbx
add $16,%rsp
push %r8
mov $@include_cpio_end,%rdi
mov $@include_cpio_start,%rsi
mov %rdi,%rbx
sub %rsi,%rbx
push %rbx
mov $@include_cpio_start,%rbx
push %rbx
call @cpio_unpack_to_dir
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1301
push %r8
call @free
add $8,%rsp
mov $1,%rax
jmp @init_project$END
@_$LB1301
push %r8
call @free
add $8,%rsp
jmp @_$LB1289
@_$LB1288
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1303
mov 18446744073709551496(%rbp),%esi
mov %esi,%ebx
and $61440,%ebx
mov %ebx,%eax
mov $16384,%ecx
cmp %ecx,%eax
jne @_$LB1303
@_$LB1307
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r9,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov %eax,@_$DATA+1053008
mov @_$DATA+1053008,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1310
mov $1,%rax
jmp @init_project$END
@_$LB1310
jmp @_$LB1304
@_$LB1303
mov $1,%rax
jmp @init_project$END
@_$LB1304
@_$LB1289
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $6,%rbx
push %rbx
mov $@_$MSG22,%rsi
mov %rsi,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $269,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1313
mov $1,%rax
jmp @init_project$END
@_$LB1313
mov $@_$MSG23,%rbx
push %rbx
lea @_$DATA+1053024,%rax
push %rax
call @strcpy
mov %rax,%rbx
add $16,%rsp
mov $0,%rax
@init_project$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@project_files_load
push %rbp
mov %rsp,%rbp
sub $1232,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov @_$DATA+1057152,%r9
mov @_$DATA+1057152,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1316
@_$LB1314
mov 264(%r9),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+1057152
push %r9
call @free
add $8,%rsp
mov @_$DATA+1057152,%r9
mov @_$DATA+1057152,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1314
@_$LB1316
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1053024,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $257,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rdi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1319
jmp @project_files_load$END
@_$LB1319
lea 18446744073709550592(%rbp),%rbx
push %rbx
movslq %edi,%rdi
push %rdi
call @dir_init
add $16,%rsp
lea 18446744073709550592(%rbp),%rbx
push %rbx
call @readdir
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1322
@_$LB1320
mov $@_$MSG24,%rbx
push %rbx
mov %r8,%rbx
add $19,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1325
mov $@_$MSG25,%rbx
push %rbx
mov %r8,%rbx
add $19,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1325
@_$LB1328
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $256,%rbx
push %rbx
lea 18446744073709550448(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov %r8,%rsi
add $19,%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $262,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1331
mov 18446744073709550472(%rbp),%esi
mov %esi,%ebx
and $61440,%ebx
mov %ebx,%eax
mov $32768,%ecx
cmp %ecx,%eax
je @_$LB1337
mov 18446744073709550472(%rbp),%esi
mov %esi,%ebx
and $61440,%ebx
mov %ebx,%eax
mov $16384,%ecx
cmp %ecx,%eax
jne @_$LB1331
@_$LB1337
@_$LB1334
pushq $272
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov $0,%rbx
mov %r9,%rax
mov %rbx,%rcx
cmp %rcx,%rax
je @_$LB1340
mov %r8,%rbx
add $19,%rbx
push %rbx
push %r9
call @strcpy
mov %rax,%rbx
add $16,%rsp
mov 18446744073709550472(%rbp),%esi
mov %esi,%ebx
and $61440,%ebx
mov %ebx,%eax
mov $16384,%ecx
cmp %ecx,%eax
jne @_$LB1342
movq $1,256(%r9)
jmp @_$LB1343
@_$LB1342
movq $0,256(%r9)
@_$LB1343
mov $0,%rbx
mov %rbx,%rsi
mov @_$DATA+1057152,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1346
@_$LB1344
push %r9
push %r8
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jle @_$LB1349
jmp @_$LB1346
@_$LB1349
mov %r8,%rsi
mov 264(%r8),%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1344
@_$LB1346
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1351
mov %r9,264(%rsi)
jmp @_$LB1352
@_$LB1351
mov %r9,%rax
mov %rax,@_$DATA+1057152
@_$LB1352
mov %r8,264(%r9)
@_$LB1340
@_$LB1331
@_$LB1325
lea 18446744073709550592(%rbp),%rbx
push %rbx
call @readdir
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1320
@_$LB1322
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@project_files_load$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@project_files_display
push %rbp
mov %rsp,%rbp
sub $160,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov $0,%eax
mov %eax,@_$DATA+1052960
mov $0,%eax
mov %eax,@_$DATA+1052976
pushq $0
pushq $1
pushq $1
pushq $18446744073709551615
mov $@_$MSG26,%rbx
push %rbx
call @page_puts
add $40,%rsp
pushq $1
pushq $1
pushq $1
pushq $18446744073709551615
mov $@_$MSG27,%rbx
push %rbx
call @page_puts
add $40,%rsp
pushq $2
pushq $1
pushq $1
pushq $18446744073709551615
mov $@_$MSG28,%rbx
push %rbx
call @page_puts
add $40,%rsp
pushq $4
pushq $1
pushq $1
pushq $18446744073709551615
mov $@_$MSG29,%rbx
push %rbx
call @page_puts
add $40,%rsp
pushq $6
pushq $1
pushq $0
pushq $18446744073709551615
lea @_$DATA+1053024,%rbx
add $1,%rbx
push %rbx
call @page_puts
add $40,%rsp
@_$LB1353
mov $0,%r8d
mov @_$DATA+1057152,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1358
mov %r8d,%eax
mov @_$DATA+1057136,%ecx
cmp %ecx,%eax
jge @_$LB1358
@_$LB1361
@_$LB1356
add $1,%r8d
mov 264(%rdi),%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1364
mov %r8d,%eax
mov @_$DATA+1057136,%ecx
cmp %ecx,%eax
jl @_$LB1356
@_$LB1364
@_$LB1358
mov $0,%rbx
mov %rdi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB1366
mov @_$DATA+1057136,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1370
jmp @project_files_display$END
@_$LB1370
subl $1,@_$DATA+1057136
jmp @_$LB1367
@_$LB1366
jmp @_$LB1355
@_$LB1367
jmp @_$LB1353
@_$LB1355
mov $0,%r8d
mov @_$DATA+1057152,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1373
mov @_$DATA+1052800,%bx
mov %bx,%si
movzwl %si,%esi
mov %esi,%eax
mov $2,%ecx
mov %eax,%edx
shr $31,%edx
neg %edx
idiv %ecx
mov %eax,%ebx
mov @_$DATA+1057136,%esi
sub %ebx,%esi
mov %esi,%ebx
sub $4,%ebx
mov %r8d,%eax
mov %ebx,%ecx
cmp %ecx,%eax
jge @_$LB1373
@_$LB1376
@_$LB1371
add $1,%r8d
mov 264(%rdi),%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1379
mov @_$DATA+1052800,%bx
mov %bx,%si
movzwl %si,%esi
mov %esi,%eax
mov $2,%ecx
mov %eax,%edx
shr $31,%edx
neg %edx
idiv %ecx
mov %eax,%ebx
mov @_$DATA+1057136,%esi
sub %ebx,%esi
mov %esi,%ebx
sub $4,%ebx
mov %r8d,%eax
mov %ebx,%ecx
cmp %ecx,%eax
jl @_$LB1371
@_$LB1379
@_$LB1373
mov $7,%esi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1382
mov @_$DATA+1052800,%bx
mov %esi,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jae @_$LB1382
@_$LB1385
@_$LB1380
mov 256(%rdi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1387
movslq %esi,%rsi
push %rsi
pushq $1
mov $0,%rbx
mov %r8d,%eax
mov @_$DATA+1057136,%ecx
cmp %ecx,%eax
jne @_$LB1390
mov $1,%rbx
@_$LB1390
push %rbx
pushq $18446744073709551615
mov $@_$MSG30,%rbx
push %rbx
call @page_puts
add $40,%rsp
jmp @_$LB1388
@_$LB1387
movslq %esi,%rsi
push %rsi
pushq $1
mov $0,%rbx
mov %r8d,%eax
mov @_$DATA+1057136,%ecx
cmp %ecx,%eax
jne @_$LB1393
mov $1,%rbx
@_$LB1393
push %rbx
pushq $18446744073709551615
mov $@_$MSG31,%rbx
push %rbx
call @page_puts
add $40,%rsp
@_$LB1388
movslq %esi,%rsi
push %rsi
pushq $9
mov $0,%rbx
mov %r8d,%eax
mov @_$DATA+1057136,%ecx
cmp %ecx,%eax
jne @_$LB1396
mov $1,%rbx
@_$LB1396
push %rbx
pushq $18446744073709551615
push %rdi
call @page_puts
add $40,%rsp
mov %r8d,%eax
mov @_$DATA+1057136,%ecx
cmp %ecx,%eax
jne @_$LB1400
mov %esi,%eax
mov %eax,@_$DATA+1052976
@_$LB1400
add $1,%esi
add $1,%r8d
mov 264(%rdi),%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1403
mov @_$DATA+1052800,%bx
mov %esi,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jb @_$LB1380
@_$LB1403
@_$LB1382
mov $2,%eax
mov %eax,@_$DATA+1052960
@project_files_display$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@project_file_current
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
@_$LB1404
mov $0,%r8d
mov @_$DATA+1057152,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1409
mov %r8d,%eax
mov @_$DATA+1057136,%ecx
cmp %ecx,%eax
jge @_$LB1409
@_$LB1412
@_$LB1407
add $1,%r8d
mov 264(%rdi),%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1415
mov %r8d,%eax
mov @_$DATA+1057136,%ecx
cmp %ecx,%eax
jl @_$LB1407
@_$LB1415
@_$LB1409
mov $0,%rbx
mov %rdi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB1417
mov @_$DATA+1057136,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1421
mov $0,%rbx
mov %rbx,%rax
jmp @project_file_current$END
@_$LB1421
subl $1,@_$DATA+1057136
jmp @_$LB1418
@_$LB1417
jmp @_$LB1406
@_$LB1418
jmp @_$LB1404
@_$LB1406
mov $0,%r8d
mov @_$DATA+1057152,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1424
mov @_$DATA+1052800,%bx
mov %bx,%si
movzwl %si,%esi
mov %esi,%eax
mov $2,%ecx
mov %eax,%edx
shr $31,%edx
neg %edx
idiv %ecx
mov %eax,%ebx
mov @_$DATA+1057136,%esi
sub %ebx,%esi
mov %esi,%ebx
sub $4,%ebx
mov %r8d,%eax
mov %ebx,%ecx
cmp %ecx,%eax
jge @_$LB1424
@_$LB1427
@_$LB1422
add $1,%r8d
mov 264(%rdi),%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1430
mov @_$DATA+1052800,%bx
mov %bx,%si
movzwl %si,%esi
mov %esi,%eax
mov $2,%ecx
mov %eax,%edx
shr $31,%edx
neg %edx
idiv %ecx
mov %eax,%ebx
mov @_$DATA+1057136,%esi
sub %ebx,%esi
mov %esi,%ebx
sub $4,%ebx
mov %r8d,%eax
mov %ebx,%ecx
cmp %ecx,%eax
jl @_$LB1422
@_$LB1430
@_$LB1424
mov $5,%esi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1433
mov @_$DATA+1052800,%bx
mov %esi,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jae @_$LB1433
@_$LB1436
@_$LB1431
mov %r8d,%eax
mov @_$DATA+1057136,%ecx
cmp %ecx,%eax
jne @_$LB1439
mov %rdi,%rax
jmp @project_file_current$END
@_$LB1439
add $1,%r8d
add $1,%esi
mov 264(%rdi),%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1442
mov @_$DATA+1052800,%bx
mov %esi,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jb @_$LB1431
@_$LB1442
@_$LB1433
mov $0,%rbx
mov %rbx,%rax
@project_file_current$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@project_open_file
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov $0,%esi
mov @_$DATA+1057152,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1445
mov %esi,%eax
mov @_$DATA+1057136,%ecx
cmp %ecx,%eax
jge @_$LB1445
@_$LB1448
@_$LB1443
add $1,%esi
mov 264(%r8),%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1451
mov %esi,%eax
mov @_$DATA+1057136,%ecx
cmp %ecx,%eax
jl @_$LB1443
@_$LB1451
@_$LB1445
mov $0,%rbx
mov %r8,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB1454
mov $0,%rbx
mov %rbx,%rax
jmp @project_open_file$END
@_$LB1454
lea @_$DATA+1053024,%rax
push %rax
call @strlen
mov %rax,%rdi
add $8,%rsp
push %r8
call @strlen
mov %rax,%rsi
add $8,%rsp
lea (%rdi,%rsi),%rbx
mov %rbx,%rax
mov $4000,%rcx
cmp %rcx,%rax
jbe @_$LB1457
mov $0,%rbx
mov %rbx,%rax
jmp @project_open_file$END
@_$LB1457
mov 256(%r8),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1459
push %r8
lea @_$DATA+1053024,%rax
push %rax
call @strcat
mov %rax,%rbx
add $16,%rsp
mov $@_$MSG32,%rbx
push %rbx
lea @_$DATA+1053024,%rax
push %rax
call @strcat
mov %rax,%rbx
add $16,%rsp
mov $0,%eax
mov %eax,@_$DATA+1057136
call @project_files_load
mov $0,%rbx
mov %rbx,%rax
jmp @project_open_file$END
jmp @_$LB1460
@_$LB1459
mov %r8,%rax
@_$LB1460
@project_open_file$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@project_go_to_parent
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
lea @_$DATA+1053024,%rax
push %rax
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB1463
jmp @project_go_to_parent$END
@_$LB1463
sub $1,%edi
mov %edi,%ebx
sub $1,%ebx
lea @_$DATA+1053024,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
je @_$LB1466
@_$LB1464
sub $1,%edi
mov %edi,%ebx
sub $1,%ebx
lea @_$DATA+1053024,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB1464
@_$LB1466
lea @_$DATA+1053024,%rbx
movslq %edi,%rdi
add %rdi,%rbx
movb $0,(%rbx)
mov $0,%eax
mov %eax,@_$DATA+1057136
call @project_files_load
@project_go_to_parent$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@get_edit_cursor_pos
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $@_$MSG33,%rsi
mov %rsi,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $257,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rdi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1469
mov $0,%rax
jmp @get_edit_cursor_pos$END
@_$LB1469
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $24,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $24,%rcx
cmp %rcx,%rax
jne @_$LB1472
@_$LB1470
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jne @_$LB1475
mov 18446744073709551592(%rbp),%rbx
mov %rbx,%rax
mov %r9,%rcx
cmp %rcx,%rax
jne @_$LB1475
@_$LB1478
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov 18446744073709551600(%rbp),%rbx
mov %rbx,%rax
jmp @get_edit_cursor_pos$END
@_$LB1475
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $24,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $24,%rcx
cmp %rcx,%rax
je @_$LB1470
@_$LB1472
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rax
@get_edit_cursor_pos$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@set_edit_cursor_pos
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
mov 32(%rbp),%rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jge @_$LB1481
jmp @set_edit_cursor_pos$END
@_$LB1481
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $420,%rbx
push %rbx
mov $66,%rbx
push %rbx
mov $@_$MSG34,%rsi
mov %rsi,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $257,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1484
jmp @set_edit_cursor_pos$END
@_$LB1484
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $24,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
mov %esi,%ebx
movslq %ebx,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $24,%rcx
cmp %rcx,%rax
jne @_$LB1487
@_$LB1485
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jne @_$LB1490
mov 18446744073709551592(%rbp),%rbx
mov %rbx,%rax
mov %r9,%rcx
cmp %rcx,%rax
jne @_$LB1490
@_$LB1493
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $18446744073709551592,%rbx
push %rbx
mov %esi,%ebx
movslq %ebx,%rbx
push %rbx
mov $8,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rdi,18446744073709551600(%rbp)
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $24,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
mov %esi,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %esi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @set_edit_cursor_pos$END
@_$LB1490
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $24,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
mov %esi,%ebx
movslq %ebx,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $24,%rcx
cmp %rcx,%rax
je @_$LB1485
@_$LB1487
mov %r8,18446744073709551584(%rbp)
mov %r9,18446744073709551592(%rbp)
mov %rdi,18446744073709551600(%rbp)
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $24,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
mov %esi,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %esi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@set_edit_cursor_pos$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@do_remove
push %rbp
mov %rsp,%rbp
sub $1232,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
pushq $256
lea 18446744073709551472(%rbp),%rbx
push %rbx
push %r8
movslq %r9d,%r9
push %r9
call @fstatatl
mov %eax,%ebx
add $32,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1496
jmp @do_remove$END
@_$LB1496
mov 18446744073709551496(%rbp),%esi
mov %esi,%ebx
and $61440,%ebx
mov %ebx,%eax
mov $16384,%ecx
cmp %ecx,%eax
jne @_$LB1498
pushq $0
pushq $0
push %r8
movslq %r9d,%r9
push %r9
call @openatl
mov %eax,%ebx
add $32,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jl @_$LB1502
lea 18446744073709550448(%rbp),%rbx
push %rbx
movslq %edi,%rdi
push %rdi
call @dir_init
add $16,%rsp
lea 18446744073709550448(%rbp),%rbx
push %rbx
call @readdir
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1505
@_$LB1503
mov $@_$MSG35,%rbx
push %rbx
mov %rsi,%rbx
add $19,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1508
mov $@_$MSG36,%rbx
push %rbx
mov %rsi,%rbx
add $19,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1508
@_$LB1511
mov %rsi,%rbx
add $19,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
call @do_remove
add $16,%rsp
@_$LB1508
lea 18446744073709550448(%rbp),%rbx
push %rbx
call @readdir
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1503
@_$LB1505
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
pushq $512
push %r8
movslq %r9d,%r9
push %r9
call @unlinkatl
mov %eax,%ebx
add $24,%rsp
@_$LB1502
jmp @_$LB1499
@_$LB1498
pushq $0
push %r8
movslq %r9d,%r9
push %r9
call @unlinkatl
mov %eax,%ebx
add $24,%rsp
@_$LB1499
@do_remove$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@remove_file
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB1514
@_$LB1512
add $1,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
je @_$LB1512
@_$LB1514
mov $@_$MSG37,%rbx
push %rbx
push %rsi
call @issubdir
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1517
jmp @remove_file$END
@_$LB1517
push %rsi
pushq $18446744073709551516
call @do_remove
add $16,%rsp
@remove_file$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@remove_project_file
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB1520
@_$LB1518
add $1,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
je @_$LB1518
@_$LB1520
push %rsi
mov @_$DATA+1053008,%eax
movslq %eax,%rax
push %rax
call @do_remove
add $16,%rsp
@remove_project_file$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@term_init
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21505,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1523
mov $1,%rax
jmp @term_init$END
@_$LB1523
pushq $57
lea @_$DATA+1052816,%rbx
push %rbx
lea @_$DATA+1052880,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov @_$DATA+1052828,%ebx
and $4294967285,%ebx
mov %ebx,@_$DATA+1052828
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1526
mov $1,%rax
jmp @term_init$END
@_$LB1526
mov $0,%rax
@term_init$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@block_sigwinch
push %rbp
mov %rsp,%rbp
sub $160,%rsp
push %rbx
push %rsi
pushq $128
pushq $0
lea 18446744073709551488(%rbp),%rax
push %rax
call @memset
mov %rax,%rbx
add $24,%rsp
mov $134217728,%rax
mov %rax,18446744073709551488(%rbp)
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $8,%rbx
push %rbx
mov $0,%rsi
mov %rsi,%rbx
push %rbx
lea 18446744073709551488(%rbp),%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $14,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@block_sigwinch$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@unblock_sigwinch
push %rbp
mov %rsp,%rbp
sub $160,%rsp
push %rbx
push %rsi
pushq $128
pushq $0
lea 18446744073709551488(%rbp),%rax
push %rax
call @memset
mov %rax,%rbx
add $24,%rsp
mov $134217728,%rax
mov %rax,18446744073709551488(%rbp)
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $8,%rbx
push %rbx
mov $0,%rsi
mov %rsi,%rbx
push %rbx
lea 18446744073709551488(%rbp),%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $14,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@unblock_sigwinch$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@SH_winch
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052800,%rsi
mov %rsi,%rbx
push %rbx
mov $21523,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov @_$DATA+1052802,%bx
mov %bx,%ax
mov $80,%cx
cmp %cx,%ax
jae @_$LB1529
mov $80,%ax
mov %ax,@_$DATA+1052802
@_$LB1529
mov @_$DATA+1052800,%bx
mov %bx,%ax
mov $25,%cx
cmp %cx,%ax
jae @_$LB1532
mov $25,%ax
mov %ax,@_$DATA+1052800
@_$LB1532
mov @_$DATA+1052802,%bx
mov %bx,%ax
mov $2000,%cx
cmp %cx,%ax
jbe @_$LB1535
mov $2000,%ax
mov %ax,@_$DATA+1052802
@_$LB1535
mov @_$DATA+1052800,%bx
mov %bx,%ax
mov $2000,%cx
cmp %cx,%ax
jbe @_$LB1538
mov $2000,%ax
mov %ax,@_$DATA+1052800
@_$LB1538
mov $1,%eax
mov %eax,@_$DATA+1052992
@SH_winch$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@getc
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
mov $0,%eax
mov %eax,18446744073709551600(%rbp)
call @unblock_sigwinch
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $2,%rbx
push %rbx
lea 18446744073709551600(%rbp),%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
call @block_sigwinch
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jg @_$LB1541
mov $0,%rax
jmp @getc$END
@_$LB1541
mov 18446744073709551600(%rbp),%esi
mov %esi,%ebx
and $255,%ebx
mov %ebx,%eax
mov $27,%ecx
cmp %ecx,%eax
je @_$LB1544
mov 18446744073709551600(%rbp),%esi
mov %esi,%ebx
and $255,%ebx
movslq %ebx,%rbx
mov %rbx,%rax
jmp @getc$END
@_$LB1544
mov 18446744073709551600(%rbp),%esi
mov %esi,%ebx
and $65535,%ebx
mov %ebx,%eax
mov $27,%ecx
cmp %ecx,%eax
jne @_$LB1547
mov $27,%rax
jmp @getc$END
@_$LB1547
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
lea 18446744073709551600(%rbp),%rbx
mov %rbx,%rsi
add $2,%rsi
mov %rsi,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov 18446744073709551600(%rbp),%esi
mov %esi,%ebx
and $16777215,%ebx
movslq %ebx,%rbx
mov %rbx,%rax
@getc$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@page_putc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 40(%rbp),%rdi
push %r8
mov 32(%rbp),%r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jl @_$LB1553
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jl @_$LB1553
@_$LB1559
mov @_$DATA+1052802,%bx
mov %r8d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jae @_$LB1553
@_$LB1556
mov @_$DATA+1052800,%bx
mov %edi,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jb @_$LB1550
@_$LB1553
jmp @page_putc$END
@_$LB1550
mov @_$DATA+1052802,%si
mov %si,%bx
movzwl %bx,%ebx
mov %edi,%eax
mov %ebx,%ecx
imul %ecx
mov %eax,%esi
lea (%rsi,%r8),%ebx
mov @_$DATA+1052802,%bx
mov %bx,%si
movzwl %si,%esi
mov %edi,%eax
mov %esi,%ecx
imul %ecx
mov %eax,%ebx
lea (%rbx,%r8),%esi
mov %esi,%ebx
shl $1,%ebx
mov @_$DATA+1052944,%r8
movslq %ebx,%rbx
add %rbx,%r8
mov %r12b,%dil
movsbl %dil,%edi
mov %r9d,%eax
mov $8,%cl
shl %cl,%eax
mov %eax,%esi
mov %edi,%ebx
or %esi,%ebx
mov %bx,(%r8)
@page_putc$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@page_puts
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 48(%rbp),%rsi
push %rdi
mov 40(%rbp),%rdi
push %r8
mov 32(%rbp),%r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov (%r12),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB1562
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1562
@_$LB1565
@_$LB1560
movslq %esi,%rsi
push %rsi
movslq %edi,%rdi
push %rdi
movslq %r8d,%r8
push %r8
mov (%r12),%bl
movsbq %bl,%rbx
push %rbx
call @page_putc
add $32,%rsp
add $1,%edi
add $1,%r12
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jle @_$LB1568
sub $1,%r9d
@_$LB1568
mov (%r12),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB1571
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1560
@_$LB1571
@_$LB1562
@page_puts$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@display_pbuf
push %rbp
mov %rsp,%rbp
sub $4160,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
push %r10
mov @_$DATA+1052944,%r8
mov @_$DATA+1052960,%r12d
mov @_$DATA+1052976,%r9d
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $17,%rbx
push %rbx
mov $@_$MSG38,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%r15d
mov $0,%r13d
mov $0,%edi
mov @_$DATA+1052800,%bx
mov %r15d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jae @_$LB1574
@_$LB1572
mov $0,%r10d
mov @_$DATA+1052802,%bx
mov %r10d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jae @_$LB1577
@_$LB1575
mov (%r8),%si
mov %si,%bx
and $255,%bx
mov %bx,%r14w
movzwl %r14w,%r14d
mov (%r8),%bx
mov %bx,%ax
mov $8,%cl
shr %cl,%ax
mov %ax,%si
mov %si,%bx
and $255,%bx
mov %bx,%si
movzwl %si,%esi
mov %edi,%eax
mov $4000,%ecx
cmp %ecx,%eax
jl @_$LB1580
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709547520(%rbp),%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%edi
@_$LB1580
mov %esi,%eax
mov %r13d,%ecx
cmp %ecx,%eax
je @_$LB1583
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1585
pushq $4
mov $@_$MSG39,%rbx
push %rbx
lea 18446744073709547520(%rbp),%rbx
movslq %edi,%rdi
add %rdi,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
add $4,%edi
jmp @_$LB1586
@_$LB1585
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB1589
pushq $14
mov $@_$MSG40,%rbx
push %rbx
lea 18446744073709547520(%rbp),%rbx
movslq %edi,%rdi
add %rdi,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
add $14,%edi
@_$LB1589
@_$LB1586
@_$LB1583
mov %r14d,%eax
mov $32,%ecx
cmp %ecx,%eax
jl @_$LB1595
mov %r14d,%eax
mov $126,%ecx
cmp %ecx,%eax
jle @_$LB1592
@_$LB1595
mov $32,%r14d
@_$LB1592
lea 18446744073709547520(%rbp),%rbx
movslq %edi,%rdi
add %rdi,%rbx
mov %r14b,(%rbx)
mov %esi,%r13d
add $1,%edi
add $2,%r8
add $1,%r10d
mov @_$DATA+1052802,%bx
mov %r10d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jb @_$LB1575
@_$LB1577
add $1,%r15d
mov @_$DATA+1052800,%bx
mov %r15d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jb @_$LB1572
@_$LB1574
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709547520(%rbp),%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $4,%rbx
push %rbx
mov $@_$MSG41,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $@_$MSG42,%rbx
push %rbx
lea 18446744073709547520(%rbp),%rax
push %rax
call @strcpy
mov %rax,%rbx
add $16,%rsp
pushq $1
mov %r9d,%ebx
add $1,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709547520(%rbp),%rax
push %rax
call @sprinti
add $24,%rsp
mov $@_$MSG43,%rbx
push %rbx
lea 18446744073709547520(%rbp),%rax
push %rax
call @strcat
mov %rax,%rbx
add $16,%rsp
pushq $1
mov %r12d,%ebx
add $1,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709547520(%rbp),%rax
push %rax
call @sprinti
add $24,%rsp
mov $@_$MSG44,%rbx
push %rbx
lea 18446744073709547520(%rbp),%rax
push %rax
call @strcat
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea 18446744073709547520(%rbp),%rax
push %rax
call @strlen
mov %rax,%rsi
add $8,%rsp
mov %rsi,%rbx
push %rbx
lea 18446744073709547520(%rbp),%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $6,%rbx
push %rbx
mov $@_$MSG45,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@display_pbuf$END
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__file_block_insert
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
mov %rdi,8(%rsi)
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1597
mov (%rdi),%rbx
mov %rbx,(%rsi)
mov (%rdi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1601
mov (%rdi),%rbx
mov %rsi,8(%rbx)
@_$LB1601
mov %rsi,(%rdi)
jmp @_$LB1598
@_$LB1597
mov @_$DATA+1057200,%rax
mov %rax,(%rsi)
mov @_$DATA+1057200,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1604
mov @_$DATA+1057200,%rcx
mov %rsi,8(%rcx)
@_$LB1604
mov %rsi,%rax
mov %rax,@_$DATA+1057200
@_$LB1598
mov %rdi,%rax
mov @_$DATA+1057216,%rcx
cmp %rcx,%rax
jne @_$LB1607
mov %rsi,%rax
mov %rax,@_$DATA+1057216
@_$LB1607
@edit__file_block_insert$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__file_block_delete
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov 8(%rdi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1609
mov 8(%rdi),%rsi
mov (%rdi),%rbx
mov %rbx,(%rsi)
jmp @_$LB1610
@_$LB1609
mov (%rdi),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+1057200
@_$LB1610
mov (%rdi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1612
mov (%rdi),%rsi
mov 8(%rdi),%rbx
mov %rbx,8(%rsi)
jmp @_$LB1613
@_$LB1612
mov 8(%rdi),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+1057216
@_$LB1613
mov 16(%rdi),%rbx
push %rbx
call @free
add $8,%rsp
push %rdi
call @free
add $8,%rsp
@edit__file_block_delete$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__file_load
push %rbp
mov %rsp,%rbp
sub $1072,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+1057168,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $257,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%r9
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB1616
mov $1,%rax
jmp @edit__file_load$END
@_$LB1616
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1024,%rbx
push %rbx
lea 18446744073709550592(%rbp),%rbx
push %rbx
mov %r9d,%ebx
movslq %ebx,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%r8
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1619
@_$LB1617
pushq $32
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov $0,%rbx
mov %rdi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB1622
mov $1,%rax
jmp @edit__file_load$END
@_$LB1622
movslq %r8d,%r8
push %r8
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,16(%rdi)
mov $0,%rsi
mov 16(%rdi),%rbx
mov %rbx,%rax
mov %rsi,%rcx
cmp %rcx,%rax
jne @_$LB1625
mov $1,%rax
jmp @edit__file_load$END
@_$LB1625
movslq %r8d,%r8
push %r8
lea 18446744073709550592(%rbp),%rax
push %rax
mov 16(%rdi),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
movslq %r8d,%r8
mov %r8,24(%rdi)
push %rdi
mov @_$DATA+1057216,%rax
push %rax
call @edit__file_block_insert
add $16,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1024,%rbx
push %rbx
lea 18446744073709550592(%rbp),%rbx
push %rbx
mov %r9d,%ebx
movslq %ebx,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%r8
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1617
@_$LB1619
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r9d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov @_$DATA+1057200,%rax
mov %rax,@_$DATA+1057232
mov @_$DATA+1057200,%rax
mov %rax,@_$DATA+1057264
mov $0,%rbx
mov @_$DATA+1057200,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB1628
mov $1,%eax
mov %eax,@_$DATA+1057328
@_$LB1628
mov $0,%rax
@edit__file_load$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__file_pos_move_left
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov (%rdi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1631
mov $0,%rax
jmp @edit__file_pos_move_left$END
@_$LB1631
mov 8(%rdi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1633
mov 8(%rdi),%rbx
sub $1,%rbx
mov %rbx,8(%rdi)
mov 16(%rdi),%rbx
sub $1,%rbx
mov %rbx,16(%rdi)
mov $1,%rax
jmp @edit__file_pos_move_left$END
jmp @_$LB1634
@_$LB1633
mov (%rdi),%rsi
mov 8(%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1637
mov (%rdi),%rsi
mov 8(%rsi),%rbx
mov %rbx,(%rdi)
mov (%rdi),%rbx
mov 24(%rbx),%rsi
mov %rsi,%rbx
sub $1,%rbx
mov %rbx,8(%rdi)
mov 16(%rdi),%rbx
sub $1,%rbx
mov %rbx,16(%rdi)
mov $1,%rax
jmp @edit__file_pos_move_left$END
@_$LB1637
@_$LB1634
mov $0,%rax
@edit__file_pos_move_left$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__file_pos_move_right
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov (%r8),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1640
mov $0,%rax
jmp @edit__file_pos_move_right$END
@_$LB1640
mov 8(%r8),%rbx
add $1,%rbx
mov %rbx,8(%r8)
mov (%r8),%rdi
mov 8(%r8),%rsi
mov 24(%rdi),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB1643
mov (%r8),%rsi
mov (%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1645
mov (%r8),%rsi
mov (%rsi),%rbx
mov %rbx,(%r8)
movq $0,8(%r8)
mov 16(%r8),%rbx
add $1,%rbx
mov %rbx,16(%r8)
mov $1,%rax
jmp @edit__file_pos_move_right$END
jmp @_$LB1646
@_$LB1645
mov 8(%r8),%rbx
sub $1,%rbx
mov %rbx,8(%r8)
mov $0,%rax
jmp @edit__file_pos_move_right$END
@_$LB1646
@_$LB1643
mov 16(%r8),%rbx
add $1,%rbx
mov %rbx,16(%r8)
mov $1,%rax
@edit__file_pos_move_right$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__file_getc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
mov (%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1649
mov $18446744073709551615,%rax
jmp @edit__file_getc$END
@_$LB1649
mov (%rsi),%rbx
mov 8(%rsi),%rbx
mov (%rsi),%rbx
mov 16(%rbx),%rdi
mov 8(%rsi),%rbx
lea (%rdi,%rbx),%rsi
mov (%rsi),%bl
mov %bl,%sil
movzbl %sil,%esi
mov %esi,%esi
mov %rsi,%rax
@edit__file_getc$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__move_next_line
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov (%rdi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1652
mov $0,%rax
jmp @edit__move_next_line$END
@_$LB1652
pushq $24
push %rdi
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
push %rdi
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
je @_$LB1655
@_$LB1653
push %rdi
call @edit__file_pos_move_right
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1658
mov $4294967295,%esi
jmp @_$LB1655
@_$LB1658
push %rdi
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB1653
@_$LB1655
mov %esi,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB1661
pushq $24
lea 18446744073709551584(%rbp),%rbx
push %rbx
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov $0,%rax
jmp @edit__move_next_line$END
@_$LB1661
push %rdi
call @edit__file_pos_move_right
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1664
pushq $24
lea 18446744073709551584(%rbp),%rbx
push %rbx
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov $0,%rax
jmp @edit__move_next_line$END
@_$LB1664
mov $1,%rax
@edit__move_next_line$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__move_prev_line
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov (%rdi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1667
mov $0,%rax
jmp @edit__move_prev_line$END
@_$LB1667
pushq $24
push %rdi
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
push %rdi
call @edit__file_pos_move_left
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1670
pushq $24
lea 18446744073709551584(%rbp),%rbx
push %rbx
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov $0,%rax
jmp @edit__move_prev_line$END
@_$LB1670
@_$LB1671
push %rdi
call @edit__file_pos_move_left
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1676
mov $4294967295,%esi
jmp @_$LB1673
@_$LB1676
push %rdi
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB1671
@_$LB1673
mov %esi,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB1679
mov $1,%rax
jmp @edit__move_prev_line$END
@_$LB1679
push %rdi
call @edit__file_pos_move_right
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1682
pushq $24
lea 18446744073709551584(%rbp),%rbx
push %rbx
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov $0,%rax
jmp @edit__move_prev_line$END
@_$LB1682
mov $1,%rax
@edit__move_prev_line$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__lines_rel
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
mov $0,%rdi
pushq $24
lea @_$DATA+1057232,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov 18446744073709551600(%rbp),%rsi
mov @_$DATA+1057280,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jb @_$LB1685
@_$LB1683
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB1688
add $1,%rdi
@_$LB1688
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_pos_move_left
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1691
jmp @_$LB1685
@_$LB1691
mov 18446744073709551600(%rbp),%rsi
mov @_$DATA+1057280,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jae @_$LB1683
@_$LB1685
mov %rdi,%rax
@edit__lines_rel$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__lines_remain
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $1,%edi
pushq $24
lea @_$DATA+1057264,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1694
mov $0,%rax
jmp @edit__lines_remain$END
@_$LB1694
mov %edi,%eax
mov %r8d,%ecx
cmp %ecx,%eax
jge @_$LB1697
@_$LB1695
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %esi,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB1700
add $1,%edi
@_$LB1700
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_pos_move_right
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1703
jmp @_$LB1697
@_$LB1703
mov %edi,%eax
mov %r8d,%ecx
cmp %ecx,%eax
jl @_$LB1695
@_$LB1697
movslq %edi,%rdi
mov %rdi,%rax
@edit__lines_remain$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__lines_off
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $1,%edi
pushq $24
lea @_$DATA+1057264,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1706
mov $0,%rax
jmp @edit__lines_off$END
@_$LB1706
mov %edi,%eax
mov %r8d,%ecx
cmp %ecx,%eax
jge @_$LB1709
@_$LB1707
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %esi,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB1712
add $1,%edi
@_$LB1712
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_pos_move_left
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1715
jmp @_$LB1709
@_$LB1715
mov %edi,%eax
mov %r8d,%ecx
cmp %ecx,%eax
jl @_$LB1707
@_$LB1709
movslq %edi,%rdi
mov %rdi,%rax
@edit__lines_off$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__cursor_right
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov @_$DATA+1057328,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB1718
mov $0,%rax
jmp @edit__cursor_right$END
@_$LB1718
mov %esi,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB1721
mov $0,%rax
jmp @edit__cursor_right$END
@_$LB1721
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__file_pos_move_right
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1724
mov $1,%eax
mov %eax,@_$DATA+1057328
mov $1,%rax
jmp @edit__cursor_right$END
@_$LB1724
mov %esi,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB1727
call @edit__lines_rel
mov %rax,%rdi
mov @_$DATA+1052800,%si
mov %si,%ax
mov $2,%cx
xor %dx,%dx
div %cx
mov %ax,%bx
mov %rdi,%rax
mov %bx,%cx
movzwq %cx,%rcx
cmp %rcx,%rax
jbe @_$LB1730
mov @_$DATA+1052800,%bx
movzwq %bx,%rbx
push %rbx
call @edit__lines_remain
mov %eax,%esi
add $8,%rsp
mov @_$DATA+1052800,%bx
mov %esi,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jne @_$LB1730
@_$LB1733
lea @_$DATA+1057264,%rbx
push %rbx
call @edit__move_next_line
mov %eax,%ebx
add $8,%rsp
@_$LB1730
@_$LB1727
mov $1,%rax
@edit__cursor_right$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__cursor_left
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov @_$DATA+1057328,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB1736
mov %esi,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB1739
mov $0,%rax
jmp @edit__cursor_left$END
@_$LB1739
mov $0,%eax
mov %eax,@_$DATA+1057328
mov $1,%rax
jmp @edit__cursor_left$END
@_$LB1736
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__file_pos_move_left
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1742
mov $0,%rax
jmp @edit__cursor_left$END
@_$LB1742
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB1745
call @edit__lines_rel
mov %rax,%rdi
mov @_$DATA+1052800,%si
mov %si,%ax
mov $2,%cx
xor %dx,%dx
div %cx
mov %ax,%bx
mov %rdi,%rax
mov %bx,%cx
movzwq %cx,%rcx
cmp %rcx,%rax
jae @_$LB1748
pushq $1
call @edit__lines_off
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB1748
@_$LB1751
lea @_$DATA+1057264,%rbx
push %rbx
call @edit__move_prev_line
mov %eax,%ebx
add $8,%rsp
@_$LB1748
@_$LB1745
mov $1,%rax
@edit__cursor_left$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__line_off
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rdi
mov $1,%rdi
pushq $24
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_pos_move_left
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1754
mov $0,%rax
jmp @edit__line_off$END
@_$LB1754
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
je @_$LB1757
@_$LB1755
add $1,%rdi
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_pos_move_left
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1760
jmp @_$LB1757
@_$LB1760
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB1755
@_$LB1757
sub $1,%rdi
mov %rdi,%rax
@edit__line_off$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__line_len
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
pushq $24
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
je @_$LB1763
@_$LB1761
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_pos_move_right
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1766
jmp @_$LB1763
@_$LB1766
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB1761
@_$LB1763
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__line_off
mov %rax,%rsi
add $8,%rsp
mov %rsi,%rbx
add $1,%rbx
mov %rbx,%rax
@edit__line_len$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__current_x_refine
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__line_off
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r8,%rax
mov @_$DATA+1057184,%ecx
movslq %ecx,%rcx
cmp %rcx,%rax
jge @_$LB1769
mov %r8,%rax
mov %eax,@_$DATA+1057184
@_$LB1769
mov %r8,%rax
mov @_$DATA+1057184,%rcx
movslq %ecx,%rcx
sub %rcx,%rax
mov %rax,%rdi
mov @_$DATA+1052802,%si
mov %si,%bx
sub $8,%bx
mov %rdi,%rax
mov %bx,%cx
movzwq %cx,%rcx
cmp %rcx,%rax
jbe @_$LB1772
mov @_$DATA+1052802,%bx
mov %r8,%rsi
movzwq %bx,%rbx
sub %rbx,%rsi
mov %rsi,%rbx
add $8,%rbx
mov %rbx,%rax
mov %eax,@_$DATA+1057184
@_$LB1772
@edit__current_x_refine$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__cursor_down
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__line_len
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov @_$DATA+1057328,%esi
mov $0,%edi
pushq $24
lea @_$DATA+1057232,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1775
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r8d
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB1775
@_$LB1778
@_$LB1773
mov %r8d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB1781
add $1,%edi
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB1784
jmp @_$LB1775
@_$LB1784
@_$LB1781
call @edit__cursor_right
mov %eax,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1787
mov %esi,%eax
mov %eax,@_$DATA+1057328
pushq $24
lea 18446744073709551584(%rbp),%rbx
push %rbx
lea @_$DATA+1057232,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov $0,%rax
jmp @edit__cursor_down$END
@_$LB1787
sub $1,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1790
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r8d
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB1773
@_$LB1790
@_$LB1775
mov $1,%rax
@edit__cursor_down$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__cursor_up
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__line_off
mov %rax,%rsi
add $8,%rsp
mov %rsi,%rbx
add $1,%rbx
mov %rbx,%r8
mov %r8,%rdi
mov @_$DATA+1057328,%esi
pushq $24
lea @_$DATA+1057232,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov @_$DATA+1057232,%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1793
mov $0,%rax
jmp @edit__cursor_up$END
@_$LB1793
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1796
@_$LB1794
call @edit__cursor_left
mov %eax,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1799
mov %esi,%eax
mov %eax,@_$DATA+1057328
pushq $24
lea 18446744073709551584(%rbp),%rbx
push %rbx
lea @_$DATA+1057232,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov $0,%rax
jmp @edit__cursor_up$END
@_$LB1799
sub $1,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1794
@_$LB1796
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__line_off
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rdi,%rbx
sub $1,%rbx
sub %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jg @_$LB1802
mov $1,%rax
jmp @edit__cursor_up$END
@_$LB1802
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1805
@_$LB1803
call @edit__cursor_left
mov %eax,%ebx
sub $1,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1803
@_$LB1805
mov $1,%rax
@edit__cursor_up$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__addc_end
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov @_$DATA+1057216,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1811
mov @_$DATA+1057216,%rax
mov 24(%rax),%rbx
mov %rbx,%rax
mov $1024,%rcx
cmp %rcx,%rax
jne @_$LB1807
@_$LB1811
pushq $32
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1814
pushq $1
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,16(%rsi)
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1816
mov 16(%rsi),%rbx
mov %r8b,(%rbx)
movq $1,24(%rsi)
push %rsi
mov @_$DATA+1057216,%rax
push %rax
call @edit__file_block_insert
add $16,%rsp
jmp @_$LB1817
@_$LB1816
push %rsi
call @free
add $8,%rsp
@_$LB1817
@_$LB1814
jmp @_$LB1808
@_$LB1807
mov @_$DATA+1057216,%rax
mov 24(%rax),%rsi
mov %rsi,%rbx
add $1,%rbx
push %rbx
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1820
mov @_$DATA+1057216,%rax
mov 24(%rax),%rbx
push %rbx
mov @_$DATA+1057216,%rax
mov 16(%rax),%rbx
push %rbx
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov @_$DATA+1057216,%rax
mov 16(%rax),%rbx
push %rbx
call @free
add $8,%rsp
mov @_$DATA+1057216,%rcx
mov %rdi,16(%rcx)
mov @_$DATA+1057216,%rax
mov 24(%rax),%rbx
mov @_$DATA+1057216,%rax
mov 24(%rax),%rsi
lea (%rdi,%rsi),%rbx
mov %r8b,(%rbx)
mov @_$DATA+1057216,%rax
mov 24(%rax),%rbx
add $1,%rbx
mov @_$DATA+1057216,%rcx
mov %rbx,24(%rcx)
@_$LB1820
@_$LB1808
mov @_$DATA+1057264,%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1823
mov @_$DATA+1057200,%rax
mov %rax,@_$DATA+1057264
mov $0,%rax
mov %rax,@_$DATA+1057280
mov $0,%rax
mov %rax,@_$DATA+1057272
mov @_$DATA+1057200,%rax
mov %rax,@_$DATA+1057232
mov $0,%rax
mov %rax,@_$DATA+1057248
mov $0,%rax
mov %rax,@_$DATA+1057240
@_$LB1823
@edit__addc_end$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__delc_end
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
mov @_$DATA+1057216,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1826
jmp @edit__delc_end$END
@_$LB1826
mov @_$DATA+1057216,%rax
mov 24(%rax),%rbx
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB1828
mov @_$DATA+1057216,%rax
push %rax
call @edit__file_block_delete
add $8,%rsp
jmp @_$LB1829
@_$LB1828
mov @_$DATA+1057216,%rax
mov 24(%rax),%rbx
sub $1,%rbx
mov @_$DATA+1057216,%rcx
mov %rbx,24(%rcx)
@_$LB1829
mov @_$DATA+1057200,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1832
mov $0,%rax
mov %rax,@_$DATA+1057264
mov $0,%rax
mov %rax,@_$DATA+1057272
mov $0,%rax
mov %rax,@_$DATA+1057280
@_$LB1832
@edit__delc_end$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__split_block
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
pushq $32
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1835
mov $0,%rbx
mov %rbx,%rax
jmp @edit__split_block$END
@_$LB1835
mov 24(%r12),%rsi
mov %rsi,%rbx
sub %r9,%rbx
push %rbx
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1838
push %r8
call @free
add $8,%rsp
mov $0,%rbx
mov %rbx,%rax
jmp @edit__split_block$END
@_$LB1838
mov 24(%r12),%rsi
mov %rsi,%rbx
sub %r9,%rbx
push %rbx
mov 16(%r12),%rsi
lea (%rsi,%r9),%rbx
push %rbx
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov %rdi,16(%r8)
mov 24(%r12),%rsi
mov %rsi,%rbx
sub %r9,%rbx
mov %rbx,24(%r8)
mov %r9,24(%r12)
push %r8
push %r12
call @edit__file_block_insert
add $16,%rsp
mov %r12,%rax
@edit__split_block$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__addc
push %rbp
mov %rsp,%rbp
sub $112,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 16(%rbp),%r12
mov @_$DATA+1057232,%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1841
jmp @edit__addc$END
@_$LB1841
mov @_$DATA+1057232,%rsi
mov 24(%rsi),%rbx
mov %rbx,%rax
mov $1024,%rcx
cmp %rcx,%rax
je @_$LB1843
mov @_$DATA+1057232,%rbx
mov %rbx,%r9
mov 24(%r9),%rsi
mov %rsi,%rbx
add $1,%rbx
push %rbx
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1846
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
push %r8
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov 16(%r9),%rbx
push %rbx
call @free
add $8,%rsp
mov %r8,16(%r9)
mov 24(%r9),%rdi
mov @_$DATA+1057240,%rsi
mov %rdi,%rbx
sub %rsi,%rbx
push %rbx
mov 16(%r9),%rdi
mov @_$DATA+1057240,%rsi
lea (%rdi,%rsi),%rbx
push %rbx
mov 16(%r9),%rdi
mov @_$DATA+1057240,%rbx
lea (%rdi,%rbx),%rsi
mov %rsi,%rbx
add $1,%rbx
push %rbx
call @memmove
mov %rax,%rbx
add $24,%rsp
mov @_$DATA+1057240,%rbx
mov @_$DATA+1057240,%rsi
lea (%r8,%rsi),%rbx
mov %r12b,(%rbx)
mov 24(%r9),%rbx
add $1,%rbx
mov %rbx,24(%r9)
mov @_$DATA+1057240,%rbx
add $1,%rbx
mov %rbx,@_$DATA+1057240
mov @_$DATA+1057248,%rbx
add $1,%rbx
mov %rbx,@_$DATA+1057248
jmp @_$LB1847
@_$LB1846
jmp @edit__addc$END
@_$LB1847
jmp @_$LB1844
@_$LB1843
mov @_$DATA+1057240,%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1849
mov @_$DATA+1057232,%rsi
mov 8(%rsi),%rbx
mov %rbx,%r9
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1852
mov 24(%r9),%rbx
mov %rbx,%rax
mov $1024,%rcx
cmp %rcx,%rax
je @_$LB1852
@_$LB1856
mov 24(%r9),%rsi
mov %rsi,%rbx
add $1,%rbx
push %rbx
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1858
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
push %r8
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov 16(%r9),%rbx
push %rbx
call @free
add $8,%rsp
mov %r8,16(%r9)
mov 24(%r9),%rbx
mov 24(%r9),%rsi
lea (%r8,%rsi),%rbx
mov %r12b,(%rbx)
mov 24(%r9),%rbx
add $1,%rbx
mov %rbx,24(%r9)
mov @_$DATA+1057248,%rbx
add $1,%rbx
mov %rbx,@_$DATA+1057248
jmp @_$LB1859
@_$LB1858
jmp @edit__addc$END
@_$LB1859
jmp @_$LB1853
@_$LB1852
pushq $32
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1861
pushq $1
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1864
mov %r12b,(%r8)
mov %r8,16(%rdi)
movq $1,24(%rdi)
push %rdi
push %r9
call @edit__file_block_insert
add $16,%rsp
mov @_$DATA+1057264,%rsi
mov @_$DATA+1057232,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB1868
mov %rdi,@_$DATA+1057264
mov $0,%rax
mov %rax,@_$DATA+1057272
@_$LB1868
mov @_$DATA+1057248,%rbx
add $1,%rbx
mov %rbx,@_$DATA+1057248
jmp @_$LB1865
@_$LB1864
push %rdi
call @free
add $8,%rsp
jmp @edit__addc$END
@_$LB1865
jmp @_$LB1862
@_$LB1861
jmp @edit__addc$END
@_$LB1862
@_$LB1853
jmp @_$LB1850
@_$LB1849
mov @_$DATA+1057240,%rbx
push %rbx
mov @_$DATA+1057232,%rbx
push %rbx
call @edit__split_block
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
mov (%r9),%rbx
mov %rbx,%r9
mov 24(%r9),%rsi
mov %rsi,%rbx
add $1,%rbx
push %rbx
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1870
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
push %r8
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov 16(%r9),%rbx
push %rbx
call @free
add $8,%rsp
mov %r8,16(%r9)
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
mov 16(%r9),%rsi
mov %rsi,%rbx
add $1,%rbx
push %rbx
call @memmove
mov %rax,%rbx
add $24,%rsp
mov %r12b,(%r8)
mov 24(%r9),%rbx
add $1,%rbx
mov %rbx,24(%r9)
mov %r9,@_$DATA+1057232
mov $1,%rax
mov %rax,@_$DATA+1057240
mov @_$DATA+1057248,%rbx
add $1,%rbx
mov %rbx,@_$DATA+1057248
jmp @_$LB1871
@_$LB1870
jmp @edit__addc$END
@_$LB1871
@_$LB1850
@_$LB1844
mov %r12d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB1874
call @edit__lines_rel
mov %rax,%rdi
mov @_$DATA+1052800,%si
mov %si,%ax
mov $2,%cx
xor %dx,%dx
div %cx
mov %ax,%bx
mov %rdi,%rax
mov %bx,%cx
movzwq %cx,%rcx
cmp %rcx,%rax
jbe @_$LB1877
mov @_$DATA+1052800,%bx
movzwq %bx,%rbx
push %rbx
call @edit__lines_remain
mov %eax,%esi
add $8,%rsp
mov @_$DATA+1052800,%bx
mov %esi,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jne @_$LB1877
@_$LB1880
lea @_$DATA+1057264,%rbx
push %rbx
call @edit__move_next_line
mov %eax,%ebx
add $8,%rsp
@_$LB1877
@_$LB1874
@edit__addc$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__delc
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
push %r8
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r8d
mov %r8d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB1883
jmp @edit__delc$END
@_$LB1883
mov @_$DATA+1057232,%rbx
mov %rbx,%rdi
mov 8(%rdi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1886
mov @_$DATA+1057240,%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1886
@_$LB1889
jmp @edit__delc$END
@_$LB1886
mov @_$DATA+1057240,%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1891
mov @_$DATA+1057240,%rbx
push %rbx
push %rdi
call @edit__split_block
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%rdi
jmp @_$LB1892
@_$LB1891
mov 8(%rdi),%rbx
mov %rbx,%rsi
@_$LB1892
mov 24(%rsi),%rbx
sub $1,%rbx
mov %rbx,24(%rsi)
mov %rdi,@_$DATA+1057232
mov $0,%rax
mov %rax,@_$DATA+1057240
mov @_$DATA+1057248,%rbx
sub $1,%rbx
mov %rbx,@_$DATA+1057248
mov 24(%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1895
mov @_$DATA+1057264,%rbx
mov %rbx,%rax
mov %rsi,%rcx
cmp %rcx,%rax
jne @_$LB1898
mov %rdi,@_$DATA+1057264
mov $0,%rax
mov %rax,@_$DATA+1057272
@_$LB1898
push %rsi
call @edit__file_block_delete
add $8,%rsp
@_$LB1895
mov %r8d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB1901
call @edit__lines_rel
mov %rax,%rdi
mov @_$DATA+1052800,%si
mov %si,%ax
mov $2,%cx
xor %dx,%dx
div %cx
mov %ax,%bx
mov %rdi,%rax
mov %bx,%cx
movzwq %cx,%rcx
cmp %rcx,%rax
jae @_$LB1904
pushq $1
call @edit__lines_off
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB1904
@_$LB1907
lea @_$DATA+1057264,%rbx
push %rbx
call @edit__move_prev_line
mov %eax,%ebx
add $8,%rsp
@_$LB1904
@_$LB1901
@edit__delc$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__save_file
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov @_$DATA+1057200,%r8
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $514,%rbx
push %rbx
mov @_$DATA+1057168,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $257,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jge @_$LB1910
jmp @edit__save_file$END
@_$LB1910
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1913
@_$LB1911
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov 24(%r8),%rsi
mov %rsi,%rbx
push %rbx
mov 16(%r8),%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov (%r8),%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1911
@_$LB1913
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@edit__save_file$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__release_file
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov @_$DATA+1057200,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1916
@_$LB1914
mov %rdi,%rsi
mov (%rdi),%rbx
mov %rbx,%rdi
push %rsi
call @free
add $8,%rsp
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1914
@_$LB1916
mov $0,%rbx
mov %rbx,%rax
mov %rax,@_$DATA+1057216
mov $0,%rbx
mov %rbx,%rax
mov %rax,@_$DATA+1057200
pushq $24
pushq $0
lea @_$DATA+1057232,%rbx
push %rbx
call @memset
mov %rax,%rbx
add $24,%rsp
pushq $24
pushq $0
lea @_$DATA+1057264,%rbx
push %rbx
call @memset
mov %rax,%rbx
add $24,%rsp
pushq $24
pushq $0
lea @_$DATA+1057296,%rbx
push %rbx
call @memset
mov %rax,%rbx
add $24,%rsp
@edit__release_file$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__if_str_match
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
pushq $24
lea @_$DATA+1057232,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov (%r8),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB1919
@_$LB1917
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB1922
mov $0,%rax
jmp @edit__if_str_match$END
@_$LB1922
mov %r8,%rsi
mov (%rsi),%bl
mov %edi,%eax
mov %bl,%cl
movzbl %cl,%ecx
cmp %ecx,%eax
je @_$LB1925
mov $0,%rax
jmp @edit__if_str_match$END
@_$LB1925
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_pos_move_right
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1928
mov $0,%rax
jmp @edit__if_str_match$END
@_$LB1928
add $1,%r8
mov (%r8),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB1917
@_$LB1919
mov $1,%rax
@edit__if_str_match$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__search_forward
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov (%rdi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB1931
jmp @edit__search_forward$END
@_$LB1931
pushq $24
lea @_$DATA+1057232,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
pushq $24
lea @_$DATA+1057264,%rbx
push %rbx
lea 18446744073709551552(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov @_$DATA+1057328,%esi
call @edit__cursor_right
mov %eax,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1934
@_$LB1932
push %rdi
call @edit__if_str_match
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1937
jmp @edit__search_forward$END
@_$LB1937
call @edit__cursor_right
mov %eax,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1932
@_$LB1934
pushq $24
lea 18446744073709551584(%rbp),%rbx
push %rbx
lea @_$DATA+1057232,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
pushq $24
lea 18446744073709551552(%rbp),%rbx
push %rbx
lea @_$DATA+1057264,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov %esi,%eax
mov %eax,@_$DATA+1057328
@edit__search_forward$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__search_backward
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov (%rdi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB1940
jmp @edit__search_backward$END
@_$LB1940
pushq $24
lea @_$DATA+1057232,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
pushq $24
lea @_$DATA+1057264,%rbx
push %rbx
lea 18446744073709551552(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov @_$DATA+1057328,%esi
call @edit__cursor_left
mov %eax,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1943
@_$LB1941
push %rdi
call @edit__if_str_match
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1946
jmp @edit__search_backward$END
@_$LB1946
call @edit__cursor_left
mov %eax,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1941
@_$LB1943
pushq $24
lea 18446744073709551584(%rbp),%rbx
push %rbx
lea @_$DATA+1057232,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
pushq $24
lea 18446744073709551552(%rbp),%rbx
push %rbx
lea @_$DATA+1057264,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov %esi,%eax
mov %eax,@_$DATA+1057328
@edit__search_backward$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__issue_cmd
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
mov $0,%rax
mov %rax,18446744073709551600(%rbp)
lea @_$DATA+1057392,%rax
mov @_$DATA+1057456,%rcx
movslq %ecx,%rcx
add %rcx,%rax
mov %rax,%rbx
movb $0,(%rbx)
mov @_$DATA+1057392,%bl
mov %bl,%al
mov $103,%cl
cmp %cl,%al
jne @_$LB1948
mov @_$DATA+1057393,%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB1951
mov @_$DATA+1057393,%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB1951
@_$LB1955
lea 18446744073709551600(%rbp),%rbx
push %rbx
lea @_$DATA+1057392,%rbx
add $1,%rbx
push %rbx
call @sinputi
mov %rax,%rbx
add $16,%rsp
mov @_$DATA+1057200,%rax
mov %rax,@_$DATA+1057264
mov $0,%rax
mov %rax,@_$DATA+1057280
mov $0,%rax
mov %rax,@_$DATA+1057272
mov @_$DATA+1057200,%rax
mov %rax,@_$DATA+1057232
mov $0,%rax
mov %rax,@_$DATA+1057248
mov $0,%rax
mov %rax,@_$DATA+1057240
mov $0,%eax
mov %eax,@_$DATA+1057184
mov $0,%eax
mov %eax,@_$DATA+1057328
mov 18446744073709551600(%rbp),%rax
mov $1,%rcx
cmp %rcx,%rax
jle @_$LB1958
@_$LB1956
call @edit__cursor_down
mov %eax,%ebx
subq $1,18446744073709551600(%rbp)
mov 18446744073709551600(%rbp),%rax
mov $1,%rcx
cmp %rcx,%rax
jg @_$LB1956
@_$LB1958
jmp @_$LB1952
@_$LB1951
mov @_$DATA+1057393,%bl
mov %bl,%al
mov $101,%cl
cmp %cl,%al
jne @_$LB1961
mov $0,%eax
mov %eax,@_$DATA+1057184
mov $0,%eax
mov %eax,@_$DATA+1057328
call @edit__cursor_down
mov %eax,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1964
@_$LB1962
call @edit__cursor_down
mov %eax,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB1962
@_$LB1964
@_$LB1961
@_$LB1952
jmp @_$LB1949
@_$LB1948
mov @_$DATA+1057392,%bl
mov %bl,%al
mov $102,%cl
cmp %cl,%al
jne @_$LB1966
mov @_$DATA+1057393,%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB1970
lea @_$DATA+1057392,%rbx
add $1,%rbx
push %rbx
lea @_$DATA+1057472,%rax
push %rax
call @strcpy
mov %rax,%rbx
add $16,%rsp
lea @_$DATA+1057472,%rax
push %rax
call @edit__search_forward
add $8,%rsp
@_$LB1970
jmp @_$LB1967
@_$LB1966
mov @_$DATA+1057392,%bl
mov %bl,%al
mov $70,%cl
cmp %cl,%al
jne @_$LB1973
mov @_$DATA+1057393,%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB1976
lea @_$DATA+1057392,%rbx
add $1,%rbx
push %rbx
lea @_$DATA+1057472,%rax
push %rax
call @strcpy
mov %rax,%rbx
add $16,%rsp
lea @_$DATA+1057472,%rax
push %rax
call @edit__search_backward
add $8,%rsp
@_$LB1976
@_$LB1973
@_$LB1967
@_$LB1949
call @edit__current_x_refine
@edit__issue_cmd$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__op_push
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov @_$DATA+11543360,%eax
mov %eax,@_$DATA+11543328
mov @_$DATA+11543344,%eax
mov @_$DATA+11543328,%ecx
add %ecx,%eax
mov %eax,%ebx
mov %ebx,%edi
mov %edi,%eax
mov $1048576,%ecx
cmp %ecx,%eax
jl @_$LB1979
sub $1048576,%edi
@_$LB1979
mov %edi,%esi
shl $1,%esi
lea @_$DATA+1057568,%rbx
movslq %esi,%rsi
add %rsi,%rbx
mov %r9w,(%rbx)
mov %edi,%esi
shl $3,%esi
lea @_$DATA+3154720,%rbx
movslq %esi,%rsi
add %rsi,%rbx
mov %r8,(%rbx)
mov @_$DATA+11543328,%eax
mov $1048576,%ecx
cmp %ecx,%eax
jge @_$LB1981
addl $1,@_$DATA+11543328
addl $1,@_$DATA+11543360
jmp @_$LB1982
@_$LB1981
addl $1,@_$DATA+11543344
@_$LB1982
@edit__op_push$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__gotooff
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov @_$DATA+1057248,%rsi
mov %rdi,%rbx
sub %rsi,%rbx
mov %rbx,%rsi
mov @_$DATA+1057328,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1985
sub $1,%rsi
@_$LB1985
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jge @_$LB1987
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1991
@_$LB1989
call @edit__cursor_left
mov %eax,%ebx
call @edit__current_x_refine
add $1,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1989
@_$LB1991
jmp @_$LB1988
@_$LB1987
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB1994
@_$LB1992
call @edit__cursor_right
mov %eax,%ebx
call @edit__current_x_refine
sub $1,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB1992
@_$LB1994
@_$LB1988
@edit__gotooff$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__addc_off
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
mov 24(%rbp),%rbx
push %rsi
mov 16(%rbp),%rsi
push %rsi
call @edit__gotooff
add $8,%rsp
mov @_$DATA+1057328,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1996
movsbq %bl,%rbx
push %rbx
call @edit__addc_end
add $8,%rsp
mov $0,%eax
mov %eax,@_$DATA+1057328
call @edit__cursor_right
mov %eax,%ebx
mov $1,%eax
mov %eax,@_$DATA+1057328
jmp @_$LB1997
@_$LB1996
movsbq %bl,%rbx
push %rbx
call @edit__addc
add $8,%rsp
@_$LB1997
call @edit__current_x_refine
@edit__addc_off$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__delc_off
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov %rsi,%rbx
add $1,%rbx
push %rbx
call @edit__gotooff
add $8,%rsp
mov @_$DATA+1057328,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB1999
mov $0,%eax
mov %eax,@_$DATA+1057328
call @edit__cursor_left
mov %eax,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2003
mov $0,%rbx
mov %rbx,@_$DATA+1057232
mov $0,%rax
mov %rax,@_$DATA+1057240
mov $0,%rax
mov %rax,@_$DATA+1057248
@_$LB2003
call @edit__delc_end
mov $1,%eax
mov %eax,@_$DATA+1057328
jmp @_$LB2000
@_$LB1999
call @edit__delc
@_$LB2000
call @edit__current_x_refine
@edit__delc_off$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__undo
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov @_$DATA+11543360,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2006
jmp @edit__undo$END
@_$LB2006
mov @_$DATA+11543344,%eax
mov @_$DATA+11543360,%ecx
add %ecx,%eax
mov %eax,%esi
mov %esi,%ebx
sub $1,%ebx
mov %ebx,%edi
mov %edi,%eax
mov $1048576,%ecx
cmp %ecx,%eax
jl @_$LB2009
sub $1048576,%edi
@_$LB2009
mov %edi,%ebx
shl $1,%ebx
lea @_$DATA+1057568,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%bx
mov %bx,%r8w
mov %edi,%ebx
shl $3,%ebx
lea @_$DATA+3154720,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%rsi
mov %r8w,%ax
mov $8,%cl
sar %cl,%ax
mov %ax,%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB2011
movswq %r8w,%r8
push %r8
push %rsi
call @edit__addc_off
add $16,%rsp
jmp @_$LB2012
@_$LB2011
push %rsi
call @edit__delc_off
add $8,%rsp
@_$LB2012
subl $1,@_$DATA+11543360
@edit__undo$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__redo
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov @_$DATA+11543360,%eax
mov @_$DATA+11543328,%ecx
cmp %ecx,%eax
jne @_$LB2015
jmp @edit__redo$END
@_$LB2015
mov @_$DATA+11543344,%eax
mov @_$DATA+11543360,%ecx
add %ecx,%eax
mov %eax,%ebx
mov %ebx,%edi
mov %edi,%eax
mov $1048576,%ecx
cmp %ecx,%eax
jl @_$LB2018
sub $1048576,%edi
@_$LB2018
mov %edi,%ebx
shl $1,%ebx
lea @_$DATA+1057568,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%bx
mov %bx,%r8w
mov %edi,%ebx
shl $3,%ebx
lea @_$DATA+3154720,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%rsi
mov %r8w,%ax
mov $8,%cl
sar %cl,%ax
mov %ax,%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB2020
push %rsi
call @edit__delc_off
add $8,%rsp
jmp @_$LB2021
@_$LB2020
movswq %r8w,%r8
push %r8
push %rsi
call @edit__addc_off
add $16,%rsp
@_$LB2021
addl $1,@_$DATA+11543360
@edit__redo$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__if_selected
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
mov @_$DATA+1057344,%eax
mov $2,%ecx
cmp %ecx,%eax
je @_$LB2024
mov $0,%rax
jmp @edit__if_selected$END
@_$LB2024
mov 16(%r8),%rsi
mov @_$DATA+1057312,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jae @_$LB2026
mov 16(%rdi),%rsi
mov 16(%r8),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jb @_$LB2030
mov 16(%rdi),%rsi
mov @_$DATA+1057312,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
ja @_$LB2030
@_$LB2033
mov $1,%rax
jmp @edit__if_selected$END
@_$LB2030
jmp @_$LB2027
@_$LB2026
mov 16(%rdi),%rsi
mov 16(%r8),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
ja @_$LB2036
mov 16(%rdi),%rsi
mov @_$DATA+1057312,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jb @_$LB2036
@_$LB2039
mov $1,%rax
jmp @edit__if_selected$END
@_$LB2036
@_$LB2027
mov $0,%rax
@edit__if_selected$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__copy_selected_str
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
push %rdi
mov @_$DATA+1057312,%rsi
mov @_$DATA+1057248,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jae @_$LB2041
mov @_$DATA+1057248,%rbx
mov %rbx,%rdi
pushq $24
lea @_$DATA+1057296,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
jmp @_$LB2042
@_$LB2041
mov @_$DATA+1057312,%rbx
mov %rbx,%rdi
pushq $24
lea @_$DATA+1057232,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
@_$LB2042
mov @_$DATA+1057360,%rax
push %rax
call @free
add $8,%rsp
mov $0,%rax
mov %rax,@_$DATA+1057376
mov 18446744073709551600(%rbp),%rsi
mov %rdi,%rbx
sub %rsi,%rbx
push %rbx
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,@_$DATA+1057360
mov $0,%rbx
mov @_$DATA+1057360,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB2045
jmp @edit__copy_selected_str$END
@_$LB2045
mov 18446744073709551600(%rbp),%rbx
mov %rbx,%rax
mov %rdi,%rcx
cmp %rcx,%rax
ja @_$LB2048
@_$LB2046
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %esi,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB2051
jmp @_$LB2048
@_$LB2051
mov @_$DATA+1057360,%rax
mov @_$DATA+1057376,%rcx
add %rcx,%rax
mov %rax,%rbx
mov %sil,(%rbx)
addq $1,@_$DATA+1057376
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_pos_move_right
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2054
jmp @_$LB2048
@_$LB2054
mov 18446744073709551600(%rbp),%rbx
mov %rbx,%rax
mov %rdi,%rcx
cmp %rcx,%rax
jbe @_$LB2046
@_$LB2048
@edit__copy_selected_str$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__del_selected_str
push %rbp
mov %rsp,%rbp
sub $144,%rsp
push %rbx
push %rsi
push %rdi
mov @_$DATA+1057312,%rsi
mov @_$DATA+1057248,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jae @_$LB2056
mov @_$DATA+1057248,%rdi
mov @_$DATA+1057312,%rbx
mov %rdi,%rsi
sub %rbx,%rsi
mov %rsi,%rbx
add $1,%rbx
mov %rbx,%rdi
call @edit__cursor_right
mov %eax,%ebx
call @edit__current_x_refine
jmp @_$LB2057
@_$LB2056
mov @_$DATA+1057312,%rdi
mov @_$DATA+1057248,%rbx
mov %rdi,%rsi
sub %rbx,%rsi
mov %rsi,%rbx
add $1,%rbx
mov %rbx,%rdi
mov %rdi,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2060
@_$LB2058
call @edit__cursor_right
mov %eax,%ebx
call @edit__current_x_refine
sub $1,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2058
@_$LB2060
@_$LB2057
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2063
@_$LB2061
pushq $24
lea @_$DATA+1057232,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_pos_move_left
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2066
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov %esi,%ebx
or $256,%ebx
movslq %ebx,%rbx
push %rbx
call @edit__op_push
add $16,%rsp
@_$LB2066
call @edit__delc
call @edit__current_x_refine
sub $1,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2061
@_$LB2063
@edit__del_selected_str$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__display_file
push %rbp
mov %rsp,%rbp
sub $4224,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
push %r10
mov @_$DATA+1052992,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2069
mov @_$DATA+1057248,%rbx
mov %rbx,%rsi
mov $0,%eax
mov %eax,@_$DATA+1052992
mov @_$DATA+1057200,%rax
mov %rax,@_$DATA+1057264
mov $0,%rax
mov %rax,@_$DATA+1057280
mov $0,%rax
mov %rax,@_$DATA+1057272
mov @_$DATA+1057200,%rax
mov %rax,@_$DATA+1057232
mov $0,%rax
mov %rax,@_$DATA+1057248
mov $0,%rax
mov %rax,@_$DATA+1057240
mov $0,%eax
mov %eax,@_$DATA+1057184
mov $0,%eax
mov %eax,@_$DATA+1057328
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2072
@_$LB2070
call @edit__cursor_right
mov %eax,%ebx
call @edit__current_x_refine
sub $1,%esi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2070
@_$LB2072
@_$LB2069
mov $0,%r15d
mov $4294967295,%r14d
mov $0,%r13d
mov $0,%r9d
mov $0,%r8d
pushq $24
lea @_$DATA+1057264,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $17,%rbx
push %rbx
mov $@_$MSG46,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $32,%eax
mov %eax,18446744073709547424(%rbp)
mov @_$DATA+1052800,%si
mov %si,%bx
sub $1,%bx
mov %r15d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jae @_$LB2075
@_$LB2073
mov @_$DATA+1057184,%r10d
mov $0,%esi
mov %r10d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2078
@_$LB2076
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r12d
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB2084
mov %r12d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB2081
@_$LB2084
mov $1,%esi
jmp @_$LB2078
@_$LB2081
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_pos_move_right
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2087
mov $1,%esi
jmp @_$LB2078
@_$LB2087
sub $1,%r10d
mov %r10d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2076
@_$LB2078
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2089
mov @_$DATA+1052802,%bx
mov %r10d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jae @_$LB2093
@_$LB2091
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r12d
mov 18446744073709551600(%rbp),%rsi
mov @_$DATA+1057248,%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB2096
mov %r10d,%r14d
mov %r15d,%r13d
mov %r12d,%eax
mov $32,%ecx
cmp %ecx,%eax
jle @_$LB2099
mov %r12d,%eax
mov $126,%ecx
cmp %ecx,%eax
jg @_$LB2099
@_$LB2102
mov %r12d,%eax
mov %eax,18446744073709547424(%rbp)
@_$LB2099
@_$LB2096
mov %r12d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB2105
jmp @_$LB2093
@_$LB2105
mov %r12d,%eax
mov $32,%ecx
cmp %ecx,%eax
jl @_$LB2107
mov %r12d,%eax
mov $127,%ecx
cmp %ecx,%eax
jge @_$LB2107
@_$LB2111
lea 18446744073709551584(%rbp),%rbx
push %rbx
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__if_selected
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2114
mov %r8d,%eax
mov $4000,%ecx
cmp %ecx,%eax
jle @_$LB2117
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%r8d
@_$LB2117
pushq $10
mov $@_$MSG47,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
movslq %r8d,%r8
add %r8,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
add $10,%r8d
@_$LB2114
mov %r8d,%eax
mov $4095,%ecx
cmp %ecx,%eax
jne @_$LB2120
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%r8d
@_$LB2120
lea 18446744073709547488(%rbp),%rbx
movslq %r8d,%r8
add %r8,%rbx
mov %r12b,(%rbx)
add $1,%r8d
lea 18446744073709551584(%rbp),%rbx
push %rbx
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__if_selected
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2123
mov %r8d,%eax
mov $4000,%ecx
cmp %ecx,%eax
jle @_$LB2126
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%r8d
@_$LB2126
pushq $4
mov $@_$MSG48,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
movslq %r8d,%r8
add %r8,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
add $4,%r8d
@_$LB2123
jmp @_$LB2108
@_$LB2107
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB2128
jmp @_$LB2093
jmp @_$LB2129
@_$LB2128
mov %r12d,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB2131
mov %r8d,%eax
mov $4000,%ecx
cmp %ecx,%eax
jle @_$LB2135
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%r8d
@_$LB2135
lea 18446744073709551584(%rbp),%rbx
push %rbx
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__if_selected
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2137
pushq $10
mov $@_$MSG49,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
movslq %r8d,%r8
add %r8,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
jmp @_$LB2138
@_$LB2137
pushq $10
mov $@_$MSG50,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
movslq %r8d,%r8
add %r8,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
@_$LB2138
add $10,%r8d
jmp @_$LB2132
@_$LB2131
mov %r8d,%eax
mov $4000,%ecx
cmp %ecx,%eax
jle @_$LB2141
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%r8d
@_$LB2141
lea 18446744073709551584(%rbp),%rbx
push %rbx
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__if_selected
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2143
pushq $10
mov $@_$MSG51,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
movslq %r8d,%r8
add %r8,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
jmp @_$LB2144
@_$LB2143
pushq $10
mov $@_$MSG52,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
movslq %r8d,%r8
add %r8,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
@_$LB2144
add $10,%r8d
@_$LB2132
@_$LB2129
@_$LB2108
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__file_pos_move_right
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2147
mov $1,%r9d
jmp @_$LB2093
@_$LB2147
add $1,%r10d
mov @_$DATA+1052802,%bx
mov %r10d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jb @_$LB2091
@_$LB2093
jmp @_$LB2090
@_$LB2089
mov $0,%r10d
@_$LB2090
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @edit__move_next_line
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2150
mov $1,%r9d
@_$LB2150
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2153
mov %r14d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB2159
mov @_$DATA+1057328,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2156
@_$LB2159
mov %r10d,%r14d
mov %r15d,%r13d
@_$LB2156
@_$LB2153
mov @_$DATA+1052802,%bx
mov %r10d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jae @_$LB2162
@_$LB2160
mov %r8d,%eax
mov $4095,%ecx
cmp %ecx,%eax
jne @_$LB2165
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%r8d
@_$LB2165
lea 18446744073709547488(%rbp),%rbx
movslq %r8d,%r8
add %r8,%rbx
movb $32,(%rbx)
add $1,%r8d
add $1,%r10d
mov @_$DATA+1052802,%bx
mov %r10d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jb @_$LB2160
@_$LB2162
add $1,%r15d
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2168
jmp @_$LB2075
@_$LB2168
mov @_$DATA+1052800,%si
mov %si,%bx
sub $1,%bx
mov %r15d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jb @_$LB2073
@_$LB2075
mov @_$DATA+1052800,%si
mov %si,%bx
sub $1,%bx
mov %r15d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jae @_$LB2171
@_$LB2169
mov $0,%r10d
mov @_$DATA+1052802,%bx
mov %r10d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jae @_$LB2174
@_$LB2172
mov %r8d,%eax
mov $4095,%ecx
cmp %ecx,%eax
jne @_$LB2177
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%r8d
@_$LB2177
lea 18446744073709547488(%rbp),%rbx
movslq %r8d,%r8
add %r8,%rbx
movb $32,(%rbx)
add $1,%r8d
add $1,%r10d
mov @_$DATA+1052802,%bx
mov %r10d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jb @_$LB2172
@_$LB2174
add $1,%r15d
mov @_$DATA+1052800,%si
mov %si,%bx
sub $1,%bx
mov %r15d,%eax
mov %bx,%cx
movzwl %cx,%ecx
cmp %ecx,%eax
jb @_$LB2169
@_$LB2171
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $21,%rbx
push %rbx
mov $@_$MSG53,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov @_$DATA+1057344,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB2179
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $6,%rbx
push %rbx
mov $@_$MSG54,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB2180
@_$LB2179
mov @_$DATA+1057344,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB2182
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $6,%rbx
push %rbx
mov $@_$MSG55,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB2183
@_$LB2182
mov @_$DATA+1057344,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB2186
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $@_$MSG56,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%r10d
mov %r10d,%eax
mov @_$DATA+1057456,%ecx
cmp %ecx,%eax
jge @_$LB2189
@_$LB2187
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
lea @_$DATA+1057392,%rsi
movslq %r10d,%r10
add %r10,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
add $1,%r10d
mov %r10d,%eax
mov @_$DATA+1057456,%ecx
cmp %ecx,%eax
jl @_$LB2187
@_$LB2189
mov %r10d,%eax
mov $64,%ecx
cmp %ecx,%eax
jge @_$LB2192
@_$LB2190
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $@_$MSG57,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
add $1,%r10d
mov %r10d,%eax
mov $64,%ecx
cmp %ecx,%eax
jl @_$LB2190
@_$LB2192
@_$LB2186
@_$LB2183
@_$LB2180
mov $@_$MSG58,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rax
push %rax
call @strcpy
mov %rax,%rbx
add $16,%rsp
pushq $1
mov %r13d,%ebx
add $1,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rax
push %rax
call @sprinti
add $24,%rsp
mov $@_$MSG59,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rax
push %rax
call @strcat
mov %rax,%rbx
add $16,%rsp
pushq $1
mov %r14d,%ebx
add $1,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rax
push %rax
call @sprinti
add $24,%rsp
mov $@_$MSG60,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rax
push %rax
call @strcat
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rax
push %rax
call @strlen
mov %rax,%rsi
add $8,%rsp
mov %rsi,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $10,%rbx
push %rbx
mov $@_$MSG61,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
lea 18446744073709547424(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $4,%rbx
push %rbx
mov $@_$MSG62,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rax
push %rax
call @strlen
mov %rax,%rsi
add $8,%rsp
mov %rsi,%rbx
push %rbx
lea 18446744073709547488(%rbp),%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $6,%rbx
push %rbx
mov $@_$MSG63,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@edit__display_file$END
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__keypress_handler
push %rbp
mov %rsp,%rbp
sub $512,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov %edi,%eax
mov $27,%ecx
cmp %ecx,%eax
jne @_$LB2195
mov @_$DATA+1057344,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB2201
mov @_$DATA+1057344,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB2198
@_$LB2201
mov $0,%eax
mov %eax,@_$DATA+1057344
@_$LB2198
jmp @edit__keypress_handler$END
@_$LB2195
mov %edi,%eax
mov $4283163,%ecx
cmp %ecx,%eax
jne @_$LB2204
call @edit__cursor_up
mov %eax,%ebx
call @edit__current_x_refine
jmp @edit__keypress_handler$END
@_$LB2204
mov %edi,%eax
mov $4348699,%ecx
cmp %ecx,%eax
jne @_$LB2207
call @edit__cursor_down
mov %eax,%ebx
call @edit__current_x_refine
jmp @edit__keypress_handler$END
@_$LB2207
mov %edi,%eax
mov $4479771,%ecx
cmp %ecx,%eax
jne @_$LB2210
call @edit__cursor_left
mov %eax,%ebx
call @edit__current_x_refine
jmp @edit__keypress_handler$END
@_$LB2210
mov %edi,%eax
mov $4414235,%ecx
cmp %ecx,%eax
jne @_$LB2213
call @edit__cursor_right
mov %eax,%ebx
call @edit__current_x_refine
jmp @edit__keypress_handler$END
@_$LB2213
mov @_$DATA+1057344,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2215
mov %edi,%eax
mov $73,%ecx
cmp %ecx,%eax
jne @_$LB2218
mov $1,%eax
mov %eax,@_$DATA+1057344
jmp @_$LB2219
@_$LB2218
mov %edi,%eax
mov $87,%ecx
cmp %ecx,%eax
jne @_$LB2221
call @edit__save_file
jmp @_$LB2222
@_$LB2221
mov %edi,%eax
mov $83,%ecx
cmp %ecx,%eax
jne @_$LB2224
mov $2,%eax
mov %eax,@_$DATA+1057344
pushq $24
lea @_$DATA+1057232,%rbx
push %rbx
lea @_$DATA+1057296,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
jmp @_$LB2225
@_$LB2224
mov %edi,%eax
mov $80,%ecx
cmp %ecx,%eax
jne @_$LB2227
mov $0,%edi
mov %edi,%eax
movslq %eax,%rax
mov @_$DATA+1057376,%rcx
cmp %rcx,%rax
jae @_$LB2231
@_$LB2229
mov @_$DATA+1057328,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2233
mov @_$DATA+1057248,%rsi
mov %rsi,%rbx
add $1,%rbx
push %rbx
mov @_$DATA+1057360,%rsi
movslq %edi,%rdi
add %rdi,%rsi
mov (%rsi),%bl
movsbq %bl,%rbx
push %rbx
call @edit__op_push
add $16,%rsp
mov @_$DATA+1057360,%rsi
movslq %edi,%rdi
add %rdi,%rsi
mov (%rsi),%bl
movsbq %bl,%rbx
push %rbx
call @edit__addc_end
add $8,%rsp
mov $0,%eax
mov %eax,@_$DATA+1057328
call @edit__cursor_right
mov %eax,%ebx
mov $1,%eax
mov %eax,@_$DATA+1057328
jmp @_$LB2234
@_$LB2233
mov @_$DATA+1057248,%rbx
push %rbx
mov @_$DATA+1057360,%rsi
movslq %edi,%rdi
add %rdi,%rsi
mov (%rsi),%bl
movsbq %bl,%rbx
push %rbx
call @edit__op_push
add $16,%rsp
mov @_$DATA+1057360,%rsi
movslq %edi,%rdi
add %rdi,%rsi
mov (%rsi),%bl
movsbq %bl,%rbx
push %rbx
call @edit__addc
add $8,%rsp
@_$LB2234
call @edit__current_x_refine
add $1,%edi
mov %edi,%eax
movslq %eax,%rax
mov @_$DATA+1057376,%rcx
cmp %rcx,%rax
jb @_$LB2229
@_$LB2231
jmp @_$LB2228
@_$LB2227
mov %edi,%eax
mov $62,%ecx
cmp %ecx,%eax
jne @_$LB2236
mov $3,%eax
mov %eax,@_$DATA+1057344
mov $0,%eax
mov %eax,@_$DATA+1057456
jmp @_$LB2237
@_$LB2236
mov %edi,%eax
mov $85,%ecx
cmp %ecx,%eax
jne @_$LB2239
call @edit__undo
jmp @_$LB2240
@_$LB2239
mov %edi,%eax
mov $82,%ecx
cmp %ecx,%eax
jne @_$LB2242
call @edit__redo
jmp @_$LB2243
@_$LB2242
mov %edi,%eax
mov $70,%ecx
cmp %ecx,%eax
jne @_$LB2245
mov @_$DATA+1057472,%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB2249
lea @_$DATA+1057472,%rax
push %rax
call @edit__search_backward
add $8,%rsp
@_$LB2249
jmp @_$LB2246
@_$LB2245
mov %edi,%eax
mov $102,%ecx
cmp %ecx,%eax
jne @_$LB2252
mov @_$DATA+1057472,%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB2255
lea @_$DATA+1057472,%rax
push %rax
call @edit__search_forward
add $8,%rsp
@_$LB2255
@_$LB2252
@_$LB2246
@_$LB2243
@_$LB2240
@_$LB2237
@_$LB2228
@_$LB2225
@_$LB2222
@_$LB2219
jmp @_$LB2216
@_$LB2215
mov @_$DATA+1057344,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB2257
mov %edi,%eax
mov $10,%ecx
cmp %ecx,%eax
je @_$LB2264
mov %edi,%eax
mov $9,%ecx
cmp %ecx,%eax
je @_$LB2264
@_$LB2267
mov %edi,%eax
mov $32,%ecx
cmp %ecx,%eax
jl @_$LB2260
mov %edi,%eax
mov $127,%ecx
cmp %ecx,%eax
jge @_$LB2260
@_$LB2270
@_$LB2264
mov @_$DATA+1057328,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2272
mov @_$DATA+1057248,%rsi
mov %rsi,%rbx
add $1,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
call @edit__op_push
add $16,%rsp
movslq %edi,%rdi
push %rdi
call @edit__addc_end
add $8,%rsp
mov $0,%eax
mov %eax,@_$DATA+1057328
call @edit__cursor_right
mov %eax,%ebx
mov $1,%eax
mov %eax,@_$DATA+1057328
jmp @_$LB2273
@_$LB2272
mov @_$DATA+1057248,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
call @edit__op_push
add $16,%rsp
movslq %edi,%rdi
push %rdi
call @edit__addc
add $8,%rsp
@_$LB2273
call @edit__current_x_refine
jmp @_$LB2261
@_$LB2260
mov %edi,%eax
mov $127,%ecx
cmp %ecx,%eax
jne @_$LB2276
mov @_$DATA+1057328,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2278
mov $0,%eax
mov %eax,@_$DATA+1057328
lea @_$DATA+1057232,%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %esi,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB2282
mov @_$DATA+1057248,%rbx
push %rbx
mov %esi,%ebx
or $256,%ebx
movslq %ebx,%rbx
push %rbx
call @edit__op_push
add $16,%rsp
@_$LB2282
call @edit__cursor_left
mov %eax,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2285
mov $0,%rbx
mov %rbx,@_$DATA+1057232
mov $0,%rax
mov %rax,@_$DATA+1057240
mov $0,%rax
mov %rax,@_$DATA+1057248
@_$LB2285
call @edit__delc_end
mov $1,%eax
mov %eax,@_$DATA+1057328
jmp @_$LB2279
@_$LB2278
pushq $24
lea @_$DATA+1057232,%rbx
push %rbx
lea 18446744073709551280(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea 18446744073709551280(%rbp),%rbx
push %rbx
call @edit__file_pos_move_left
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2288
lea 18446744073709551280(%rbp),%rbx
push %rbx
call @edit__file_getc
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov 18446744073709551296(%rbp),%rbx
push %rbx
mov %esi,%ebx
or $256,%ebx
movslq %ebx,%rbx
push %rbx
call @edit__op_push
add $16,%rsp
@_$LB2288
call @edit__delc
@_$LB2279
call @edit__current_x_refine
@_$LB2276
@_$LB2261
jmp @_$LB2258
@_$LB2257
mov @_$DATA+1057344,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB2290
mov %edi,%eax
mov $67,%ecx
cmp %ecx,%eax
jne @_$LB2293
call @edit__copy_selected_str
mov $0,%eax
mov %eax,@_$DATA+1057344
jmp @_$LB2294
@_$LB2293
mov %edi,%eax
mov $68,%ecx
cmp %ecx,%eax
jne @_$LB2297
call @edit__copy_selected_str
call @edit__del_selected_str
mov $0,%eax
mov %eax,@_$DATA+1057344
@_$LB2297
@_$LB2294
jmp @_$LB2291
@_$LB2290
mov @_$DATA+1057344,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB2300
mov %edi,%eax
mov $32,%ecx
cmp %ecx,%eax
jl @_$LB2302
mov %edi,%eax
mov $127,%ecx
cmp %ecx,%eax
jge @_$LB2302
@_$LB2306
mov @_$DATA+1057456,%eax
mov $64,%ecx
cmp %ecx,%eax
je @_$LB2309
lea @_$DATA+1057392,%rax
mov @_$DATA+1057456,%rcx
movslq %ecx,%rcx
add %rcx,%rax
mov %rax,%rbx
mov %dil,(%rbx)
addl $1,@_$DATA+1057456
@_$LB2309
jmp @_$LB2303
@_$LB2302
mov %edi,%eax
mov $127,%ecx
cmp %ecx,%eax
jne @_$LB2311
mov @_$DATA+1057456,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2315
subl $1,@_$DATA+1057456
@_$LB2315
jmp @_$LB2312
@_$LB2311
mov %edi,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB2318
call @edit__issue_cmd
mov $0,%eax
mov %eax,@_$DATA+1057344
@_$LB2318
@_$LB2312
@_$LB2303
@_$LB2300
@_$LB2291
@_$LB2258
@_$LB2216
@edit__keypress_handler$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@edit__edit_file
push %rbp
mov %rsp,%rbp
sub $304,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $256,%rbx
push %rbx
lea 18446744073709551472(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov %r8,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $262,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2321
mov $18446744073709551615,%rax
jmp @edit__edit_file$END
@_$LB2321
mov 18446744073709551496(%rbp),%esi
mov %esi,%ebx
and $61440,%ebx
mov %ebx,%eax
mov $32768,%ecx
cmp %ecx,%eax
je @_$LB2324
mov $18446744073709551615,%rax
jmp @edit__edit_file$END
@_$LB2324
mov %r8,%rax
mov %rax,@_$DATA+1057168
call @edit__file_load
mov %eax,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2327
mov $18446744073709551615,%rax
jmp @edit__edit_file$END
@_$LB2327
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2330
@_$LB2328
call @edit__cursor_right
mov %eax,%ebx
call @edit__current_x_refine
sub $1,%edi
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2328
@_$LB2330
@_$LB2331
@_$LB2334
call @edit__display_file
call @unblock_sigwinch
call @block_sigwinch
mov @_$DATA+1052992,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2334
@_$LB2336
call @getc
mov %eax,%ebx
mov %ebx,%esi
mov @_$DATA+1057344,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2339
mov %esi,%eax
mov $81,%ecx
cmp %ecx,%eax
jne @_$LB2339
@_$LB2342
jmp @_$LB2333
@_$LB2339
movslq %esi,%rsi
push %rsi
call @edit__keypress_handler
add $8,%rsp
call @edit__cursor_left
mov %eax,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2345
call @edit__current_x_refine
call @edit__cursor_right
mov %eax,%ebx
call @edit__current_x_refine
@_$LB2345
jmp @_$LB2331
@_$LB2333
mov @_$DATA+1057248,%rbx
mov %rbx,%rsi
call @edit__release_file
mov $0,%eax
mov %eax,@_$DATA+1057456
mov $0,%eax
mov %eax,@_$DATA+1057344
mov $0,%eax
mov %eax,@_$DATA+11543328
mov $0,%eax
mov %eax,@_$DATA+11543360
mov $0,%eax
mov %eax,@_$DATA+11543344
pushq $2097152
pushq $0
lea @_$DATA+1057568,%rax
push %rax
call @memset
mov %rax,%rbx
add $24,%rsp
pushq $8388608
pushq $0
lea @_$DATA+3154720,%rax
push %rax
call @memset
mov %rax,%rbx
add $24,%rsp
movslq %esi,%rsi
mov %rsi,%rax
@edit__edit_file$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__xmalloc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
mov %rsi,%rbx
add $16,%rbx
push %rbx
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2348
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $31,%rbx
push %rbx
mov $@_$MSG64,%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB2348
mov %rdi,%rax
@scpp__xmalloc$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp____str_size
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $128,%rdi
mov %rdi,%rax
mov %r8,%rcx
cmp %rcx,%rax
jge @_$LB2351
@_$LB2349
mov %rdi,%rsi
mov %rdi,%rax
mov $3,%rcx
imul %rcx
mov %rax,%rsi
mov %rsi,%rax
mov $1,%cl
sar %cl,%rax
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov %r8,%rcx
cmp %rcx,%rax
jl @_$LB2349
@_$LB2351
mov %rdi,%rax
@scpp____str_size$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__xstrdup
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rdi,%rbx
add $1,%rbx
push %rbx
call @scpp____str_size
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scpp__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
push %r8
push %rsi
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea (%rsi,%rdi),%rbx
movb $0,(%rbx)
mov %rsi,%rax
@scpp__xstrdup$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__str_c_app
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2353
pushq $128
call @scpp__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r9b,(%rdi)
movb $0,1(%rdi)
jmp @_$LB2354
@_$LB2353
push %r12
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r8,%rbx
add $1,%rbx
push %rbx
call @scpp____str_size
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r8,%rbx
add $2,%rbx
push %rbx
call @scpp____str_size
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rdi,%rax
mov %rsi,%rcx
cmp %rcx,%rax
jne @_$LB2356
mov %r12,%rdi
lea (%rdi,%r8),%rbx
mov %r9b,(%rbx)
mov %r8,%rbx
add $1,%rbx
mov %r8,%rsi
add $1,%rsi
lea (%rdi,%rsi),%rbx
movb $0,(%rbx)
jmp @_$LB2357
@_$LB2356
push %rsi
call @scpp__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r8
push %r12
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea (%rdi,%r8),%rbx
mov %r9b,(%rbx)
mov %r8,%rbx
add $1,%rbx
mov %r8,%rsi
add $1,%rsi
lea (%rdi,%rsi),%rbx
movb $0,(%rbx)
push %r12
call @free
add $8,%rsp
@_$LB2357
@_$LB2354
mov %rdi,%rax
@scpp__str_c_app$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__str_c_app2
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
push %r9
mov 32(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2359
pushq $128
call @scpp__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r9b,(%rdi)
movb $0,1(%rdi)
jmp @_$LB2360
@_$LB2359
lea (%r12,%rdi),%rbx
push %rbx
call @strlen
mov %rax,%rsi
add $8,%rsp
lea (%rsi,%rdi),%rbx
mov %rbx,%r8
mov %r8,%rbx
add $1,%rbx
push %rbx
call @scpp____str_size
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r8,%rbx
add $2,%rbx
push %rbx
call @scpp____str_size
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rdi,%rax
mov %rsi,%rcx
cmp %rcx,%rax
jne @_$LB2362
mov %r12,%rdi
lea (%rdi,%r8),%rbx
mov %r9b,(%rbx)
mov %r8,%rbx
add $1,%rbx
mov %r8,%rsi
add $1,%rsi
lea (%rdi,%rsi),%rbx
movb $0,(%rbx)
jmp @_$LB2363
@_$LB2362
push %rsi
call @scpp__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r8
push %r12
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea (%rdi,%r8),%rbx
mov %r9b,(%rbx)
mov %r8,%rbx
add $1,%rbx
mov %r8,%rsi
add $1,%rsi
lea (%rdi,%rsi),%rbx
movb $0,(%rbx)
push %r12
call @free
add $8,%rsp
@_$LB2363
@_$LB2360
mov %rdi,%rax
@scpp__str_c_app2$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__str_s_app
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB2366
@_$LB2364
mov (%rsi),%bl
movsbq %bl,%rbx
push %rbx
push %rdi
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rsi,%rbx
add $1,%rbx
mov %rbx,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2364
@_$LB2366
mov %rdi,%rax
@scpp__str_s_app$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__str_i_app
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov $10000000000000000000,%rdi
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2369
pushq $48
push %r9
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
jmp @scpp__str_i_app$END
@_$LB2369
mov %rdi,%rax
mov %r8,%rcx
cmp %rcx,%rax
jbe @_$LB2372
@_$LB2370
mov %rdi,%rax
mov $10,%rcx
xor %rdx,%rdx
div %rcx
mov %rax,%rdi
mov %rdi,%rax
mov %r8,%rcx
cmp %rcx,%rax
ja @_$LB2370
@_$LB2372
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2375
@_$LB2373
mov %r8,%rax
mov %rdi,%rcx
xor %rdx,%rdx
div %rcx
mov %rax,%rbx
mov %rbx,%rsi
mov %r8,%rax
mov %rdi,%rcx
xor %rdx,%rdx
div %rcx
mov %rdx,%rax
mov %rax,%r8
mov %rdi,%rax
mov $10,%rcx
xor %rdx,%rdx
div %rcx
mov %rax,%rdi
mov %esi,%ebx
add $48,%ebx
movslq %ebx,%rbx
push %rbx
push %r9
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2373
@_$LB2375
mov %r9,%rax
@scpp__str_i_app$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__error
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 32(%rbp),%rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov $@_$MSG65,%rbx
push %rbx
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r9
push %rdi
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov $@_$MSG66,%rbx
push %rbx
push %rdi
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
movslq %r8d,%r8
push %r8
push %rdi
call @scpp__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov $@_$MSG67,%rbx
push %rbx
push %rdi
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %rsi
push %rdi
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
pushq $10
push %rdi
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
push %rdi
call @strlen
mov %rax,%rsi
add $8,%rsp
mov %rsi,%rbx
push %rbx
mov %rdi,%rbx
push %rbx
mov $2,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $2,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@scpp__error$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__name_hash
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $0,%edi
mov (%r8),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB2378
@_$LB2376
mov %edi,%eax
mov $11,%cl
shl %cl,%eax
mov %eax,%esi
mov %edi,%eax
mov $21,%cl
shr %cl,%eax
mov %eax,%ebx
mov %esi,%edi
or %ebx,%edi
mov (%r8),%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %ebx,%edi
add $1,%r8
mov (%r8),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2376
@_$LB2378
mov %edi,%eax
mov $1021,%ecx
xor %edx,%edx
div %ecx
mov %edx,%eax
mov %eax,%ebx
mov %ebx,%ebx
mov %rbx,%rax
@scpp__name_hash$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__outc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov @_$DATA+11609056,%eax
mov $65536,%ecx
cmp %ecx,%eax
jne @_$LB2381
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+11609056,%ebx
movslq %ebx,%rbx
push %rbx
lea @_$DATA+11543520,%rbx
push %rbx
mov @_$DATA+11543408,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%eax
mov %eax,@_$DATA+11609056
@_$LB2381
lea @_$DATA+11543520,%rax
mov @_$DATA+11609056,%rcx
movslq %ecx,%rcx
add %rcx,%rax
mov %rax,%rbx
mov %sil,(%rbx)
addl $1,@_$DATA+11609056
@scpp__outc$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__out_flush
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov @_$DATA+11609056,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2384
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+11609056,%ebx
movslq %ebx,%rbx
push %rbx
lea @_$DATA+11543520,%rbx
push %rbx
mov @_$DATA+11543408,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB2384
@scpp__out_flush$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__c_write
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2387
@_$LB2385
mov (%rdi),%bl
movsbq %bl,%rbx
push %rbx
call @scpp__outc
add $8,%rsp
add $1,%rdi
sub $1,%esi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2385
@_$LB2387
@scpp__c_write$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__read_line
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
mov $0,%r9
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
lea 18446744073709551600(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB2390
@_$LB2388
mov 18446744073709551600(%rbp),%al
mov $92,%cl
cmp %cl,%al
jne @_$LB2392
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
lea 18446744073709551600(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB2395
mov 18446744073709551600(%rbp),%al
mov $13,%cl
cmp %cl,%al
jne @_$LB2398
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
lea 18446744073709551600(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
addq $1,@_$DATA+11543376
jmp @_$LB2399
@_$LB2398
mov 18446744073709551600(%rbp),%al
mov $10,%cl
cmp %cl,%al
jne @_$LB2401
addq $1,@_$DATA+11543376
jmp @_$LB2402
@_$LB2401
pushq $92
push %r9
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
mov 18446744073709551600(%rbp),%al
movsbq %al,%rax
push %rax
push %r9
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
@_$LB2402
@_$LB2399
jmp @_$LB2396
@_$LB2395
jmp @_$LB2390
@_$LB2396
jmp @_$LB2393
@_$LB2392
mov 18446744073709551600(%rbp),%al
mov $10,%cl
cmp %cl,%al
jne @_$LB2404
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2408
mov $@_$MSG68,%rbx
push %rbx
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
@_$LB2408
jmp @_$LB2390
jmp @_$LB2405
@_$LB2404
mov 18446744073709551600(%rbp),%al
movsbq %al,%rax
push %rax
push %r9
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
@_$LB2405
@_$LB2393
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
lea 18446744073709551600(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov %edi,%ebx
movslq %ebx,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
je @_$LB2388
@_$LB2390
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2411
mov $0,%rax
jmp @scpp__read_line$END
@_$LB2411
mov $0,%rdi
lea (%r9,%rdi),%rsi
mov (%rsi),%bl
mov %bl,%al
mov %al,18446744073709551600(%rbp)
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB2414
@_$LB2412
mov @_$DATA+11543440,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2416
lea (%r9,%rdi),%rbx
movb $32,(%rbx)
mov 18446744073709551600(%rbp),%al
mov $42,%cl
cmp %cl,%al
jne @_$LB2420
mov %rdi,%rbx
add $1,%rbx
mov %rdi,%rbx
add $1,%rbx
lea (%r9,%rbx),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB2420
@_$LB2423
mov %rdi,%rbx
add $1,%rbx
mov %rdi,%rsi
add $1,%rsi
lea (%r9,%rsi),%rbx
movb $32,(%rbx)
mov $0,%eax
mov %eax,@_$DATA+11543440
add $1,%rdi
@_$LB2420
jmp @_$LB2417
@_$LB2416
mov 18446744073709551600(%rbp),%al
mov $47,%cl
cmp %cl,%al
jne @_$LB2425
mov %rdi,%rbx
add $1,%rbx
mov %rdi,%rbx
add $1,%rbx
lea (%r9,%rbx),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB2428
lea (%r9,%rdi),%rbx
movb $0,(%rbx)
jmp @_$LB2414
jmp @_$LB2429
@_$LB2428
mov %rdi,%rbx
add $1,%rbx
mov %rdi,%rbx
add $1,%rbx
lea (%r9,%rbx),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $42,%cl
cmp %cl,%al
jne @_$LB2432
lea (%r9,%rdi),%rbx
movb $32,(%rbx)
mov %rdi,%rbx
add $1,%rbx
mov %rdi,%rsi
add $1,%rsi
lea (%r9,%rsi),%rbx
movb $32,(%rbx)
add $1,%rdi
mov $1,%eax
mov %eax,@_$DATA+11543440
@_$LB2432
@_$LB2429
jmp @_$LB2426
@_$LB2425
mov 18446744073709551600(%rbp),%al
mov $39,%cl
cmp %cl,%al
jne @_$LB2434
@_$LB2436
add $1,%rdi
lea (%r9,%rdi),%rsi
mov (%rsi),%bl
mov %bl,%al
mov %al,18446744073709551600(%rbp)
mov 18446744073709551600(%rbp),%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2440
jmp @_$LB2438
jmp @_$LB2441
@_$LB2440
mov 18446744073709551600(%rbp),%al
mov $92,%cl
cmp %cl,%al
jne @_$LB2444
add $1,%rdi
lea (%r9,%rdi),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2447
jmp @_$LB2438
@_$LB2447
@_$LB2444
@_$LB2441
mov 18446744073709551600(%rbp),%al
mov $39,%cl
cmp %cl,%al
jne @_$LB2436
@_$LB2438
jmp @_$LB2435
@_$LB2434
mov 18446744073709551600(%rbp),%al
mov $34,%cl
cmp %cl,%al
jne @_$LB2450
@_$LB2451
add $1,%rdi
lea (%r9,%rdi),%rsi
mov (%rsi),%bl
mov %bl,%al
mov %al,18446744073709551600(%rbp)
mov 18446744073709551600(%rbp),%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2455
jmp @_$LB2453
jmp @_$LB2456
@_$LB2455
mov 18446744073709551600(%rbp),%al
mov $92,%cl
cmp %cl,%al
jne @_$LB2459
add $1,%rdi
lea (%r9,%rdi),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2462
jmp @_$LB2453
@_$LB2462
@_$LB2459
@_$LB2456
mov 18446744073709551600(%rbp),%al
mov $34,%cl
cmp %cl,%al
jne @_$LB2451
@_$LB2453
@_$LB2450
@_$LB2435
@_$LB2426
@_$LB2417
add $1,%rdi
lea (%r9,%rdi),%rsi
mov (%rsi),%bl
mov %bl,%al
mov %al,18446744073709551600(%rbp)
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2412
@_$LB2414
addq $1,@_$DATA+11543376
mov %r9,%rax
@scpp__read_line$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__read_str
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov $0,%rdi
movsbq %r8b,%r8
push %r8
push %rdi
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov (%r9),%rbx
add $1,%rbx
mov %rbx,(%r9)
mov (%r9),%rsi
mov (%rsi),%bl
mov %bl,%sil
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB2465
@_$LB2463
movsbq %sil,%rsi
push %rsi
push %rdi
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %sil,%al
mov %r8b,%cl
cmp %cl,%al
jne @_$LB2468
jmp @_$LB2465
@_$LB2468
mov %sil,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB2471
mov (%r9),%rbx
add $1,%rbx
mov %rbx,(%r9)
mov (%r9),%rsi
mov (%rsi),%bl
mov %bl,%sil
mov %sil,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2474
jmp @_$LB2465
@_$LB2474
movsbq %sil,%rsi
push %rsi
push %rdi
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
@_$LB2471
mov (%r9),%rbx
add $1,%rbx
mov %rbx,(%r9)
mov (%r9),%rsi
mov (%rsi),%bl
mov %bl,%sil
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2463
@_$LB2465
mov %sil,%al
mov $0,%cl
cmp %cl,%al
je @_$LB2477
mov (%r9),%rbx
add $1,%rbx
mov %rbx,(%r9)
@_$LB2477
mov %rdi,%rax
@scpp__read_str$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__skip_spaces
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $32,%cl
cmp %cl,%al
je @_$LB2483
mov (%rsi),%bl
mov %bl,%al
mov $13,%cl
cmp %cl,%al
je @_$LB2483
@_$LB2489
mov (%rsi),%bl
mov %bl,%al
mov $9,%cl
cmp %cl,%al
je @_$LB2483
@_$LB2486
mov (%rsi),%bl
mov %bl,%al
mov $11,%cl
cmp %cl,%al
jne @_$LB2480
@_$LB2483
@_$LB2478
add $1,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $32,%cl
cmp %cl,%al
je @_$LB2478
mov (%rsi),%bl
mov %bl,%al
mov $13,%cl
cmp %cl,%al
je @_$LB2478
@_$LB2498
mov (%rsi),%bl
mov %bl,%al
mov $9,%cl
cmp %cl,%al
je @_$LB2478
@_$LB2495
mov (%rsi),%bl
mov %bl,%al
mov $11,%cl
cmp %cl,%al
je @_$LB2478
@_$LB2492
@_$LB2480
mov %rsi,%rax
@scpp__skip_spaces$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__is_id
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 16(%rbp),%rbx
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB2513
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jle @_$LB2504
@_$LB2513
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB2516
mov %bl,%al
mov $90,%cl
cmp %cl,%al
jle @_$LB2504
@_$LB2516
@_$LB2510
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB2519
mov %bl,%al
mov $122,%cl
cmp %cl,%al
jle @_$LB2504
@_$LB2519
@_$LB2507
mov %bl,%al
mov $95,%cl
cmp %cl,%al
jne @_$LB2501
@_$LB2504
mov $1,%rax
jmp @scpp__is_id$END
@_$LB2501
mov $0,%rax
@scpp__is_id$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__read_word
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov (%r8),%rbx
push %rbx
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov (%r8),%rbx
mov %rdi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
je @_$LB2522
mov %rdi,(%r8)
mov $@_$MSG69,%rbx
push %rbx
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
jmp @scpp__read_word$END
@_$LB2522
mov (%rdi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2525
mov $0,%rax
jmp @scpp__read_word$END
@_$LB2525
mov $0,%rsi
mov (%rdi),%bl
movsbq %bl,%rbx
push %rbx
call @scpp__is_id
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2527
mov (%rdi),%bl
movsbq %bl,%rbx
push %rbx
call @scpp__is_id
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2531
@_$LB2529
mov (%rdi),%bl
movsbq %bl,%rbx
push %rbx
push %rsi
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
add $1,%rdi
mov (%rdi),%bl
movsbq %bl,%rbx
push %rbx
call @scpp__is_id
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2529
@_$LB2531
mov %rdi,(%r8)
mov %rsi,%rax
jmp @scpp__read_word$END
jmp @_$LB2528
@_$LB2527
mov (%rdi),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
jne @_$LB2533
mov %rdi,(%r8)
pushq $39
push %r8
call @scpp__read_str
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
jmp @scpp__read_word$END
jmp @_$LB2534
@_$LB2533
mov (%rdi),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB2537
mov %rdi,(%r8)
pushq $34
push %r8
call @scpp__read_str
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
jmp @scpp__read_word$END
@_$LB2537
@_$LB2534
@_$LB2528
mov (%rdi),%bl
movsbq %bl,%rbx
push %rbx
push %rsi
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov (%r8),%rbx
add $1,%rbx
mov %rbx,(%r8)
mov %rsi,%rax
@scpp__read_word$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__macro_tab2_add
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
push %r8
push %rsi
call @scpp__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r8d
pushq $16
call @scpp__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %rsi
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%rdi)
mov %r8d,%ebx
shl $3,%ebx
lea @_$DATA+11609136,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,8(%rdi)
mov %r8d,%esi
shl $3,%esi
lea @_$DATA+11609136,%rbx
movslq %esi,%rsi
add %rsi,%rbx
mov %rdi,(%rbx)
@scpp__macro_tab2_add$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__macro_tab2_del
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
push %r9
call @scpp__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r8d
mov %r8d,%ebx
shl $3,%ebx
lea @_$DATA+11609136,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%rdi
mov $0,%rsi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2540
mov (%rdi),%rbx
push %rbx
push %r9
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2540
@_$LB2543
@_$LB2538
mov %rdi,%rsi
mov 8(%rdi),%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2546
mov (%rdi),%rbx
push %rbx
push %r9
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2538
@_$LB2546
@_$LB2540
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2548
mov 8(%rdi),%rbx
mov %rbx,8(%rsi)
jmp @_$LB2549
@_$LB2548
mov %r8d,%ebx
shl $3,%ebx
lea @_$DATA+11609136,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov 8(%rdi),%rbx
mov %rbx,(%rsi)
@_$LB2549
mov (%rdi),%rbx
push %rbx
call @free
add $8,%rsp
push %rdi
call @free
add $8,%rsp
@scpp__macro_tab2_del$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__macro_tab2_find
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %rdi
call @scpp__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %esi,%ebx
shl $3,%ebx
lea @_$DATA+11609136,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2552
mov (%rsi),%rbx
push %rbx
push %rdi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2552
@_$LB2555
@_$LB2550
mov 8(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2558
mov (%rsi),%rbx
push %rbx
push %rdi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2550
@_$LB2558
@_$LB2552
mov %rsi,%rax
@scpp__macro_tab2_find$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__get_ppcmd
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rsi
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov (%rsi),%bl
mov %bl,%al
mov $35,%cl
cmp %cl,%al
je @_$LB2561
mov $0,%rax
jmp @scpp__get_ppcmd$END
@_$LB2561
add $1,%rsi
push %rsi
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rsi,%rax
@scpp__get_ppcmd$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__sgetc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov (%r12),%bl
mov %bl,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB2563
mov 1(%r12),%bl
mov %bl,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB2566
movb $92,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scpp__sgetc$END
jmp @_$LB2567
@_$LB2566
mov 1(%r12),%bl
mov %bl,%al
mov $110,%cl
cmp %cl,%al
jne @_$LB2569
movb $10,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scpp__sgetc$END
jmp @_$LB2570
@_$LB2569
mov 1(%r12),%bl
mov %bl,%al
mov $116,%cl
cmp %cl,%al
jne @_$LB2572
movb $9,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scpp__sgetc$END
jmp @_$LB2573
@_$LB2572
mov 1(%r12),%bl
mov %bl,%al
mov $118,%cl
cmp %cl,%al
jne @_$LB2575
movb $11,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scpp__sgetc$END
jmp @_$LB2576
@_$LB2575
mov 1(%r12),%bl
mov %bl,%al
mov $114,%cl
cmp %cl,%al
jne @_$LB2578
movb $13,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scpp__sgetc$END
jmp @_$LB2579
@_$LB2578
mov 1(%r12),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
jne @_$LB2581
movb $39,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scpp__sgetc$END
jmp @_$LB2582
@_$LB2581
mov 1(%r12),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB2584
movb $34,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scpp__sgetc$END
jmp @_$LB2585
@_$LB2584
mov 1(%r12),%bl
mov %bl,%al
mov $63,%cl
cmp %cl,%al
jne @_$LB2587
movb $63,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scpp__sgetc$END
jmp @_$LB2588
@_$LB2587
mov 1(%r12),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB2590
mov 1(%r12),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB2590
@_$LB2594
mov $1,%r8d
movb $0,(%r9)
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB2597
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB2597
@_$LB2600
@_$LB2595
mov (%r9),%bl
mov %bl,%al
mov $3,%cl
shl %cl,%al
mov %al,%dil
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %dil,%edi
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %bl,(%r9)
add $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB2603
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jle @_$LB2595
@_$LB2603
@_$LB2597
lea (%r12,%r8),%rbx
mov %rbx,%rax
jmp @scpp__sgetc$END
jmp @_$LB2591
@_$LB2590
mov 1(%r12),%bl
mov %bl,%al
mov $120,%cl
cmp %cl,%al
jne @_$LB2605
mov $2,%r8d
movb $0,(%r9)
@_$LB2607
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB2611
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB2611
@_$LB2615
mov (%r9),%bl
mov %bl,%dil
shl $4,%dil
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %dil,%edi
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %bl,(%r9)
jmp @_$LB2612
@_$LB2611
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB2617
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $70,%cl
cmp %cl,%al
jg @_$LB2617
@_$LB2621
mov (%r9),%bl
mov %bl,%dil
shl $4,%dil
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $65,%bl
mov %bl,%sil
add $10,%sil
movsbl %dil,%edi
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %bl,(%r9)
jmp @_$LB2618
@_$LB2617
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB2623
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $102,%cl
cmp %cl,%al
jg @_$LB2623
@_$LB2627
mov (%r9),%bl
mov %bl,%dil
shl $4,%dil
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $97,%bl
mov %bl,%sil
add $10,%sil
movsbl %dil,%edi
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %bl,(%r9)
jmp @_$LB2624
@_$LB2623
jmp @_$LB2609
@_$LB2624
@_$LB2618
@_$LB2612
add $1,%r8d
jmp @_$LB2607
@_$LB2609
lea (%r12,%r8),%rbx
mov %rbx,%rax
jmp @scpp__sgetc$END
jmp @_$LB2606
@_$LB2605
movb $92,(%r9)
mov %r12,%rbx
add $1,%rbx
mov %rbx,%rax
jmp @scpp__sgetc$END
@_$LB2606
@_$LB2591
@_$LB2588
@_$LB2585
@_$LB2582
@_$LB2579
@_$LB2576
@_$LB2573
@_$LB2570
@_$LB2567
jmp @_$LB2564
@_$LB2563
mov (%r12),%bl
mov %bl,(%r9)
mov %r12,%rbx
add $1,%rbx
mov %rbx,%rax
@_$LB2564
@scpp__sgetc$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__dir_name
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
push %r8
push %r9
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2630
mov $@_$MSG70,%rbx
push %rbx
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
jmp @scpp__dir_name$END
@_$LB2630
push %rsi
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2633
mov %r9,%rbx
sub $1,%rbx
mov %r9,%rbx
sub $1,%rbx
lea (%rdi,%rbx),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB2633
@_$LB2636
@_$LB2631
mov %r9,%rbx
sub $1,%rbx
mov %r9,%rsi
sub $1,%rsi
lea (%rdi,%rsi),%rbx
movb $0,(%rbx)
sub $1,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2639
mov %r9,%rbx
sub $1,%rbx
mov %r9,%rbx
sub $1,%rbx
lea (%rdi,%rbx),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
je @_$LB2631
@_$LB2639
@_$LB2633
mov $0,%r9
mov (%rdi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB2642
mov $1,%r9
@_$LB2642
mov %r9,%r8
lea (%rdi,%r9),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB2645
@_$LB2643
lea (%rdi,%r9),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB2647
mov %r9,%r8
lea (%rdi,%r9),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB2651
@_$LB2649
add $1,%r9
lea (%rdi,%r9),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
je @_$LB2649
@_$LB2651
jmp @_$LB2648
@_$LB2647
add $1,%r9
@_$LB2648
lea (%rdi,%r9),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2643
@_$LB2645
lea (%rdi,%r8),%rbx
movb $0,(%rbx)
mov (%rdi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2654
movb $46,(%rdi)
movb $0,1(%rdi)
@_$LB2654
mov %rdi,%rax
@scpp__dir_name$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__do_include
push %rbp
mov %rsp,%rbp
sub $176,%rsp
push %rbx
push %rsi
push %rdi
mov 40(%rbp),%rdi
push %r8
push %r9
push %r12
mov 32(%rbp),%r12
push %r13
mov 24(%rbp),%r13
push %r14
mov 16(%rbp),%r14
mov $0,%r9
push %rdi
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov (%rdi),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB2656
mov @_$DATA+11543424,%eax
mov $128,%ecx
cmp %ecx,%eax
jne @_$LB2660
mov $@_$MSG71,%rbx
push %rbx
push %r12
push %r13
call @scpp__error
add $24,%rsp
@_$LB2660
addl $1,@_$DATA+11543424
add $1,%rdi
mov (%rdi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB2663
mov (%rdi),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
je @_$LB2663
@_$LB2666
@_$LB2661
lea 18446744073709551584(%rbp),%rbx
push %rbx
push %rdi
call @scpp__sgetc
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov 18446744073709551584(%rbp),%al
movsbq %al,%rax
push %rax
push %r9
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
mov (%rdi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB2669
mov (%rdi),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB2661
@_$LB2669
@_$LB2663
push %r13
call @scpp__dir_name
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
push %r14
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
pushq $47
push %rdi
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %r8
push %rdi
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %r8
call @free
add $8,%rsp
push %rdi
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
pushq $47
push %r8
call @scpp__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r8
push %r9
push %r8
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r8
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB2672
mov $@_$MSG72,%rbx
push %rbx
push %r12
push %r13
call @scpp__error
add $24,%rsp
@_$LB2672
pushq $0
movslq %esi,%rsi
push %rsi
push %r9
push %rdi
call @scpp__load_file
add $32,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %esi,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
push %rdi
call @free
add $8,%rsp
push %r9
call @free
add $8,%rsp
push %r8
call @free
add $8,%rsp
subl $1,@_$DATA+11543424
jmp @_$LB2657
@_$LB2656
mov $@_$MSG73,%rbx
push %rbx
push %r12
push %r13
call @scpp__error
add $24,%rsp
@_$LB2657
@scpp__do_include$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__load_file
push %rbp
mov %rsp,%rbp
sub $272,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 40(%rbp),%r12
push %r13
mov 32(%rbp),%r13
push %r14
mov 24(%rbp),%r14
push %r15
mov 16(%rbp),%r15
mov @_$DATA+11543376,%r9
movslq %r13d,%r13
push %r13
call @scpp__read_line
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2675
@_$LB2673
push %rdi
call @scpp__get_ppcmd
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,18446744073709551568(%rbp)
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2678
pushq $7
mov $@_$MSG74,%rbx
push %rbx
mov 18446744073709551568(%rbp),%rax
push %rax
call @strncmp
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2680
mov @_$DATA+11609072,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2684
mov @_$DATA+11543376,%r8
mov 18446744073709551568(%rbp),%rbx
add $7,%rbx
push %rbx
mov @_$DATA+11543376,%rbx
sub %r9,%rbx
push %rbx
push %r14
push %r15
call @scpp__do_include
add $32,%rsp
mov @_$DATA+11543376,%rbx
sub %r8,%rbx
add %rbx,%r9
@_$LB2684
jmp @_$LB2681
@_$LB2680
pushq $5
mov $@_$MSG75,%rbx
push %rbx
mov 18446744073709551568(%rbp),%rax
push %rax
call @strncmp
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2686
mov @_$DATA+11609072,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2690
mov 18446744073709551568(%rbp),%rbx
add $6,%rbx
push %rbx
mov @_$DATA+11543376,%rbx
sub %r9,%rbx
push %rbx
push %r14
call @scpp__error
add $24,%rsp
@_$LB2690
jmp @_$LB2687
@_$LB2686
pushq $6
mov $@_$MSG76,%rbx
push %rbx
mov 18446744073709551568(%rbp),%rax
push %rax
call @strncmp
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2692
mov @_$DATA+11609072,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2696
mov 18446744073709551568(%rbp),%rbx
add $7,%rbx
push %rbx
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,18446744073709551568(%rbp)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rsi
call @scpp__macro_tab2_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2699
mov $@_$MSG77,%rbx
push %rbx
mov @_$DATA+11543376,%rbx
sub %r9,%rbx
push %rbx
push %r14
call @scpp__error
add $24,%rsp
@_$LB2699
push %rsi
call @scpp__macro_tab2_add
add $8,%rsp
push %rsi
call @free
add $8,%rsp
@_$LB2696
jmp @_$LB2693
@_$LB2692
pushq $5
mov $@_$MSG78,%rbx
push %rbx
mov 18446744073709551568(%rbp),%rax
push %rax
call @strncmp
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2701
mov @_$DATA+11609072,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2705
mov 18446744073709551568(%rbp),%rbx
add $6,%rbx
push %rbx
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,18446744073709551568(%rbp)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rsi
call @scpp__macro_tab2_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2708
mov $@_$MSG79,%rbx
push %rbx
mov @_$DATA+11543376,%rbx
sub %r9,%rbx
push %rbx
push %r14
call @scpp__error
add $24,%rsp
@_$LB2708
push %rsi
call @scpp__macro_tab2_del
add $8,%rsp
push %rsi
call @free
add $8,%rsp
@_$LB2705
jmp @_$LB2702
@_$LB2701
pushq $5
mov $@_$MSG80,%rbx
push %rbx
mov 18446744073709551568(%rbp),%rax
push %rax
call @strncmp
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2710
mov 18446744073709551568(%rbp),%rbx
add $6,%rbx
push %rbx
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,18446744073709551568(%rbp)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
addq $1,@_$DATA+11609088
mov @_$DATA+11609072,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2714
push %rsi
call @scpp__macro_tab2_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2714
@_$LB2717
mov $1,%rax
mov %rax,@_$DATA+11609072
mov @_$DATA+11609088,%rax
mov %rax,@_$DATA+11609104
@_$LB2714
push %rsi
call @free
add $8,%rsp
jmp @_$LB2711
@_$LB2710
pushq $6
mov $@_$MSG81,%rbx
push %rbx
mov 18446744073709551568(%rbp),%rax
push %rax
call @strncmp
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2719
mov 18446744073709551568(%rbp),%rbx
add $7,%rbx
push %rbx
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,18446744073709551568(%rbp)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
addq $1,@_$DATA+11609088
mov @_$DATA+11609072,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2723
push %rsi
call @scpp__macro_tab2_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2723
@_$LB2726
mov $1,%rax
mov %rax,@_$DATA+11609072
mov @_$DATA+11609088,%rax
mov %rax,@_$DATA+11609104
@_$LB2723
push %rsi
call @free
add $8,%rsp
jmp @_$LB2720
@_$LB2719
pushq $5
mov $@_$MSG82,%rbx
push %rbx
mov 18446744073709551568(%rbp),%rax
push %rax
call @strncmp
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2728
mov @_$DATA+11609088,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2732
mov $@_$MSG83,%rbx
push %rbx
mov @_$DATA+11543376,%rbx
sub %r9,%rbx
push %rbx
push %r14
call @scpp__error
add $24,%rsp
@_$LB2732
mov @_$DATA+11609104,%rax
mov @_$DATA+11609088,%rcx
cmp %rcx,%rax
jne @_$LB2735
mov $0,%rax
mov %rax,@_$DATA+11609104
mov $0,%rax
mov %rax,@_$DATA+11609072
mov $0,%rax
mov %rax,@_$DATA+11609120
@_$LB2735
subq $1,@_$DATA+11609088
jmp @_$LB2729
@_$LB2728
pushq $4
mov $@_$MSG84,%rbx
push %rbx
mov 18446744073709551568(%rbp),%rax
push %rax
call @strncmp
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2737
mov @_$DATA+11609088,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2744
mov @_$DATA+11609120,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2741
@_$LB2744
mov $@_$MSG85,%rbx
push %rbx
mov @_$DATA+11543376,%rbx
sub %r9,%rbx
push %rbx
push %r14
call @scpp__error
add $24,%rsp
@_$LB2741
mov @_$DATA+11609072,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB2746
mov @_$DATA+11609104,%rax
mov @_$DATA+11609088,%rcx
cmp %rcx,%rax
jne @_$LB2746
@_$LB2750
mov $0,%rax
mov %rax,@_$DATA+11609072
jmp @_$LB2747
@_$LB2746
mov @_$DATA+11609072,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2753
mov @_$DATA+11609088,%rax
mov %rax,@_$DATA+11609104
mov $1,%rax
mov %rax,@_$DATA+11609072
mov $1,%rax
mov %rax,@_$DATA+11609120
@_$LB2753
@_$LB2747
jmp @_$LB2738
@_$LB2737
mov @_$DATA+11609072,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2756
mov $@_$MSG86,%rbx
push %rbx
mov @_$DATA+11543376,%rbx
sub %r9,%rbx
push %rbx
push %r14
call @scpp__error
add $24,%rsp
@_$LB2756
@_$LB2738
@_$LB2729
@_$LB2720
@_$LB2711
@_$LB2702
@_$LB2693
@_$LB2687
@_$LB2681
@_$LB2678
mov @_$DATA+11609072,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2759
pushq $40
call @scpp__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov @_$DATA+11543376,%rax
mov %rax,8(%rsi)
mov @_$DATA+11543376,%rbx
sub %r9,%rbx
mov %rbx,16(%rsi)
push %r14
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%rsi)
mov %rdi,(%rsi)
movq $0,32(%rsi)
mov @_$DATA+11543488,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2761
mov @_$DATA+11543504,%rcx
mov %rsi,32(%rcx)
jmp @_$LB2762
@_$LB2761
mov %rsi,%rax
mov %rax,@_$DATA+11543488
@_$LB2762
mov %rsi,%rax
mov %rax,@_$DATA+11543504
@_$LB2759
movslq %r13d,%r13
push %r13
call @scpp__read_line
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2673
@_$LB2675
mov %r12d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2765
mov @_$DATA+11609088,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2765
@_$LB2768
mov $@_$MSG87,%rbx
push %rbx
mov @_$DATA+11543376,%rbx
sub %r9,%rbx
push %rbx
push %r14
call @scpp__error
add $24,%rsp
@_$LB2765
@scpp__load_file$END
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__macro_tab_add
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 40(%rbp),%rsi
push %rdi
push %r8
push %r9
mov 32(%rbp),%r9
push %r12
mov 24(%rbp),%r12
push %r13
mov 16(%rbp),%r13
push %r13
call @scpp__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r8d
pushq $48
call @scpp__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r13
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%rdi)
mov %r12,8(%rdi)
push %r9
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,16(%rdi)
movslq %esi,%rsi
mov %rsi,24(%rdi)
movq $0,32(%rdi)
mov %r8d,%ebx
shl $3,%ebx
lea @_$DATA+11617312,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,40(%rdi)
mov %r8d,%esi
shl $3,%esi
lea @_$DATA+11617312,%rbx
movslq %esi,%rsi
add %rsi,%rbx
mov %rdi,(%rbx)
@scpp__macro_tab_add$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__macro_tab_del
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
push %r9
call @scpp__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r8d
mov %r8d,%ebx
shl $3,%ebx
lea @_$DATA+11617312,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%rdi
mov $0,%rsi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2771
mov (%rdi),%rbx
push %rbx
push %r9
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2771
@_$LB2774
@_$LB2769
mov %rdi,%rsi
mov 40(%rdi),%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2777
mov (%rdi),%rbx
push %rbx
push %r9
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2769
@_$LB2777
@_$LB2771
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2779
mov 40(%rdi),%rbx
mov %rbx,40(%rsi)
jmp @_$LB2780
@_$LB2779
mov %r8d,%ebx
shl $3,%ebx
lea @_$DATA+11617312,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov 40(%rdi),%rbx
mov %rbx,(%rsi)
@_$LB2780
mov (%rdi),%rbx
push %rbx
call @free
add $8,%rsp
mov 8(%rdi),%rbx
push %rbx
call @free
add $8,%rsp
mov 16(%rdi),%rbx
push %rbx
call @free
add $8,%rsp
push %rdi
call @free
add $8,%rsp
@scpp__macro_tab_del$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__macro_tab_find
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %rdi
call @scpp__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %esi,%ebx
shl $3,%ebx
lea @_$DATA+11617312,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2783
mov (%rsi),%rbx
push %rbx
push %rdi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2783
@_$LB2786
@_$LB2781
mov 40(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2789
mov (%rsi),%rbx
push %rbx
push %rdi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2781
@_$LB2789
@_$LB2783
mov %rsi,%rax
@scpp__macro_tab_find$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__parse_arglist1
push %rbp
mov %rsp,%rbp
sub $112,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 24(%rbp),%r12
push %r13
mov 16(%rbp),%r13
mov $0,%r9d
mov $0,%r8d
mov (%r13),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $40,%cl
cmp %cl,%al
je @_$LB2792
movl $0,(%r12)
mov $0,%rax
jmp @scpp__parse_arglist1$END
@_$LB2792
mov $@_$MSG88,%rbx
push %rbx
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov (%r13),%rsi
mov %rsi,%rbx
add $1,%rbx
push %rbx
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%r13)
push %r13
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2795
@_$LB2793
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2797
mov (%rsi),%bl
movsbq %bl,%rbx
push %rbx
call @scpp__is_id
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2801
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2803
mov (%rsi),%bl
mov %bl,%al
mov $41,%cl
cmp %cl,%al
jne @_$LB2803
@_$LB2807
jmp @_$LB2795
jmp @_$LB2804
@_$LB2803
mov $@_$MSG89,%rbx
push %rbx
mov @_$DATA+11543376,%rax
push %rax
mov @_$DATA+11543456,%rax
push %rax
call @scpp__error
add $24,%rsp
@_$LB2804
@_$LB2801
add $1,%r9d
jmp @_$LB2798
@_$LB2797
mov (%rsi),%bl
mov %bl,%al
mov $41,%cl
cmp %cl,%al
jne @_$LB2809
jmp @_$LB2795
jmp @_$LB2810
@_$LB2809
mov (%rsi),%bl
mov %bl,%al
mov $44,%cl
cmp %cl,%al
je @_$LB2813
mov $@_$MSG90,%rbx
push %rbx
mov @_$DATA+11543376,%rax
push %rax
mov @_$DATA+11543456,%rax
push %rax
call @scpp__error
add $24,%rsp
@_$LB2813
@_$LB2810
@_$LB2798
push %rsi
push %rdi
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %rsi
call @free
add $8,%rsp
xor $1,%r8d
mov (%r13),%rbx
push %rbx
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%r13)
push %r13
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2793
@_$LB2795
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2816
mov $@_$MSG91,%rbx
push %rbx
mov @_$DATA+11543376,%rax
push %rax
mov @_$DATA+11543456,%rax
push %rax
call @scpp__error
add $24,%rsp
@_$LB2816
push %rsi
push %rdi
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %rsi
call @free
add $8,%rsp
mov %r9d,(%r12)
mov %rdi,%rax
@scpp__parse_arglist1$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__parse_arglist2
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
push %r10
mov 24(%rbp),%r10
push %r11
mov 16(%rbp),%r11
mov $0,%r15d
mov $0,%r13d
mov $1,%r14d
mov $0,%rdi
mov $0,%r9
mov (%r11),%rbx
add $1,%rbx
mov %rbx,(%r11)
push %r11
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2819
@_$LB2817
mov (%r12),%bl
mov %bl,%al
mov $44,%cl
cmp %cl,%al
jne @_$LB2821
mov %r14d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB2824
mov %r15d,%esi
add $1,%esi
mov %esi,%ebx
shl $3,%ebx
movslq %ebx,%rbx
push %rbx
call @scpp__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r15d,%ebx
shl $3,%ebx
movslq %ebx,%rbx
push %rbx
push %r9
push %r8
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov %r15d,%esi
shl $3,%esi
lea (%r8,%rsi),%rbx
mov %rdi,(%rbx)
push %r9
call @free
add $8,%rsp
mov %r8,%r9
mov $0,%rdi
add $1,%r15d
jmp @_$LB2825
@_$LB2824
push %r12
push %rdi
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
@_$LB2825
jmp @_$LB2822
@_$LB2821
mov (%r12),%bl
mov %bl,%al
mov $40,%cl
cmp %cl,%al
jne @_$LB2827
add $1,%r14d
push %r12
push %rdi
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB2828
@_$LB2827
mov (%r12),%bl
mov %bl,%al
mov $41,%cl
cmp %cl,%al
jne @_$LB2830
sub $1,%r14d
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2833
mov %r15d,%esi
add $1,%esi
mov %esi,%ebx
shl $3,%ebx
movslq %ebx,%rbx
push %rbx
call @scpp__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r15d,%ebx
shl $3,%ebx
movslq %ebx,%rbx
push %rbx
push %r9
push %r8
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov %r15d,%esi
shl $3,%esi
lea (%r8,%rsi),%rbx
mov %rdi,(%rbx)
push %r9
call @free
add $8,%rsp
mov %r8,%r9
mov %r13d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB2837
add $1,%r15d
@_$LB2837
push %r12
call @free
add $8,%rsp
jmp @_$LB2819
jmp @_$LB2834
@_$LB2833
push %r12
push %rdi
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
@_$LB2834
jmp @_$LB2831
@_$LB2830
mov (%r12),%bl
movsbq %bl,%rbx
push %rbx
call @scpp__is_id
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2843
mov (%r12),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB2840
@_$LB2843
mov $1,%r13d
@_$LB2840
push %r12
push %rdi
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
@_$LB2831
@_$LB2828
@_$LB2822
push %r12
call @free
add $8,%rsp
push %r11
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2817
@_$LB2819
mov %r15d,(%r10)
mov %r9,%rax
@scpp__parse_arglist2$END
pop %r11
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__arglist_find
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov $0,%edi
addq $1,16(%rbp)
mov 16(%rbp),%rax
push %rax
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,16(%rbp)
mov 16(%rbp),%rax
mov (%rax),%bl
mov %bl,%al
mov $41,%cl
cmp %cl,%al
jne @_$LB2846
mov $18446744073709551615,%rax
jmp @scpp__arglist_find$END
@_$LB2846
lea 16(%rbp),%rbx
push %rbx
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2849
@_$LB2847
push %r8
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2852
push %rsi
call @free
add $8,%rsp
movslq %edi,%rdi
mov %rdi,%rax
jmp @scpp__arglist_find$END
@_$LB2852
mov 16(%rbp),%rax
push %rax
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,16(%rbp)
mov 16(%rbp),%rax
mov (%rax),%bl
mov %bl,%al
mov $41,%cl
cmp %cl,%al
jne @_$LB2855
push %rsi
call @free
add $8,%rsp
jmp @_$LB2849
@_$LB2855
mov 16(%rbp),%rbx
add $1,%rbx
push %rbx
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,16(%rbp)
add $1,%edi
push %rsi
call @free
add $8,%rsp
lea 16(%rbp),%rbx
push %rbx
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2847
@_$LB2849
mov $18446744073709551615,%rax
@scpp__arglist_find$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__add_macro
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
push %r9
mov 16(%rbp),%r9
mov 24(%rbp),%rax
push %rax
call @scpp__skip_spaces
mov %rax,%rdi
add $8,%rsp
push %r9
call @strlen
mov %rax,%rsi
add $8,%rsp
lea (%rdi,%rsi),%rbx
mov %rbx,%rax
mov %rax,24(%rbp)
lea 18446744073709551600(%rbp),%rbx
push %rbx
lea 24(%rbp),%rbx
push %rbx
call @scpp__parse_arglist1
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov 24(%rbp),%rax
push %rax
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,24(%rbp)
mov 18446744073709551600(%rbp),%eax
movslq %eax,%rax
push %rax
mov 24(%rbp),%rax
push %rax
push %rsi
push %r9
call @scpp__macro_tab_add
add $32,%rsp
@scpp__add_macro$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__word_list_push
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
pushq $16
call @scpp__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%rsi)
movq $0,8(%rsi)
mov @_$DATA+11625488,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2857
mov @_$DATA+11625504,%rcx
mov %rsi,8(%rcx)
jmp @_$LB2858
@_$LB2857
mov %rsi,%rax
mov %rax,@_$DATA+11625488
@_$LB2858
mov %rsi,%rax
mov %rax,@_$DATA+11625504
@scpp__word_list_push$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__word_list_release
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
mov $0,%rsi
mov @_$DATA+11625488,%rdi
mov @_$DATA+11625488,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2861
@_$LB2859
mov 8(%rdi),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11625488
mov (%rdi),%rbx
push %rbx
push %rsi
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov (%rdi),%rbx
push %rbx
call @free
add $8,%rsp
push %rdi
call @free
add $8,%rsp
mov @_$DATA+11625488,%rdi
mov @_$DATA+11625488,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2859
@_$LB2861
mov $0,%rax
mov %rax,@_$DATA+11625504
mov %rsi,%rax
@scpp__word_list_release$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__do_macro_replace
push %rbp
mov %rsp,%rbp
sub $224,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
push %r10
push %r11
mov 16(%rbp),%r11
mov $0,%r10
mov $0,%r13
mov %r11,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2864
push %r11
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r10
@_$LB2864
push %rdi
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r14
push %r14
call @scpp__macro_tab_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r15
mov %r15,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2870
mov 32(%r15),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2866
@_$LB2870
push %r14
push %r10
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r10
push %r14
call @free
add $8,%rsp
push %r11
call @free
add $8,%rsp
mov %r10,%rax
jmp @scpp__do_macro_replace$END
jmp @_$LB2867
@_$LB2866
movq $1,32(%r15)
mov 8(%r15),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2872
mov (%rdi),%rbx
push %rbx
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%rdi)
mov (%rdi),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $40,%cl
cmp %cl,%al
je @_$LB2875
push %r14
push %r13
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
push %r14
call @free
add $8,%rsp
jmp @_$LB2876
@_$LB2875
mov $0,%eax
mov %eax,18446744073709551552(%rbp)
lea 18446744073709551552(%rbp),%rbx
push %rbx
push %rdi
call @scpp__parse_arglist2
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
mov 24(%r15),%rbx
mov 18446744073709551552(%rbp),%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
je @_$LB2879
mov $@_$MSG92,%rbx
push %rbx
mov @_$DATA+11543376,%rax
push %rax
mov @_$DATA+11543456,%rax
push %rax
call @scpp__error
add $24,%rsp
@_$LB2879
push %r14
call @free
add $8,%rsp
mov 16(%r15),%rbx
mov %rbx,%rax
mov %rax,18446744073709551504(%rbp)
lea 18446744073709551504(%rbp),%rbx
push %rbx
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r14
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2882
@_$LB2880
push %r14
mov 8(%r15),%rbx
push %rbx
call @scpp__arglist_find
mov %eax,%ebx
add $16,%rsp
mov %ebx,%edi
mov %edi,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB2884
mov %edi,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
push %r13
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB2885
@_$LB2884
push %r14
push %r13
call @scpp__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
@_$LB2885
push %r14
call @free
add $8,%rsp
lea 18446744073709551504(%rbp),%rbx
push %rbx
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r14
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2880
@_$LB2882
mov $0,%edi
mov %edi,%eax
mov 18446744073709551552(%rbp),%ecx
cmp %ecx,%eax
jge @_$LB2888
@_$LB2886
mov %edi,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @free
add $8,%rsp
add $1,%edi
mov %edi,%eax
mov 18446744073709551552(%rbp),%ecx
cmp %ecx,%eax
jl @_$LB2886
@_$LB2888
push %r9
call @free
add $8,%rsp
@_$LB2876
jmp @_$LB2873
@_$LB2872
mov 16(%r15),%rbx
push %rbx
call @scpp__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r13
push %r14
call @free
add $8,%rsp
@_$LB2873
mov %r13,%rax
mov %rax,18446744073709551504(%rbp)
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2891
mov 18446744073709551504(%rbp),%rax
mov (%rax),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB2894
@_$LB2892
lea 18446744073709551504(%rbp),%rbx
push %rbx
push %r10
call @scpp__do_macro_replace
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r10
mov 18446744073709551504(%rbp),%rax
mov (%rax),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2892
@_$LB2894
@_$LB2891
push %r11
call @free
add $8,%rsp
movq $0,32(%r15)
mov %r10,%rax
@_$LB2867
@scpp__do_macro_replace$END
pop %r11
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__macro_replace
push %rbp
mov %rsp,%rbp
sub $112,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
call @scpp__word_list_release
mov %rax,%rbx
mov %rbx,%r9
mov $0,%esi
@_$LB2895
mov %r9,%rax
mov %rax,18446744073709551600(%rbp)
mov $0,%r8
mov 18446744073709551600(%rbp),%rax
mov (%rax),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB2900
@_$LB2898
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %r8
call @scpp__do_macro_replace
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r8
mov 18446744073709551600(%rbp),%rax
mov (%rax),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2898
@_$LB2900
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2902
add $1,%esi
mov %esi,%eax
mov $64,%ecx
cmp %ecx,%eax
jg @_$LB2909
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov $2048,%rcx
cmp %rcx,%rax
jbe @_$LB2906
@_$LB2909
mov $@_$MSG93,%rbx
push %rbx
mov @_$DATA+11543376,%rax
push %rax
mov @_$DATA+11543456,%rax
push %rax
call @scpp__error
add $24,%rsp
@_$LB2906
push %r9
push %r8
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%edi
jmp @_$LB2903
@_$LB2902
mov $0,%edi
@_$LB2903
push %r9
call @free
add $8,%rsp
mov %r8,%r9
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2895
@_$LB2897
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2912
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scpp__c_write
add $16,%rsp
push %r8
call @free
add $8,%rsp
@_$LB2912
@scpp__macro_replace$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scpp__main
push %rbp
mov %rsp,%rbp
sub $368,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
push %r9
push %r12
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
jge @_$LB2915
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $29,%rbx
push %rbx
mov $@_$MSG94,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @scpp__main$END
@_$LB2915
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov 8(%rdi),%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov %eax,@_$DATA+11543392
mov @_$DATA+11543392,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB2918
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $23,%rbx
push %rbx
mov $@_$MSG95,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @scpp__main$END
@_$LB2918
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $420,%rbx
push %rbx
mov $578,%rbx
push %rbx
mov 16(%rdi),%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov %eax,@_$DATA+11543408
mov @_$DATA+11543408,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB2921
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $24,%rbx
push %rbx
mov $@_$MSG96,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @scpp__main$END
@_$LB2921
pushq $1
mov @_$DATA+11543392,%eax
movslq %eax,%rax
push %rax
mov 8(%rdi),%rbx
push %rbx
mov $@_$MSG97,%rbx
push %rbx
call @scpp__load_file
add $32,%rsp
mov @_$DATA+11543488,%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2924
@_$LB2922
mov (%r12),%rbx
mov %rbx,%rax
mov %rax,18446744073709551472(%rbp)
mov 16(%r12),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11543376
mov 24(%r12),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11543456
mov 18446744073709551472(%rbp),%rax
push %rax
call @scpp__get_ppcmd
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2926
pushq $6
mov $@_$MSG98,%rbx
push %rbx
push %rdi
call @strncmp
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2929
mov %rdi,%rbx
add $7,%rbx
push %rbx
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,18446744073709551584(%rbp)
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2936
mov (%r8),%bl
movsbq %bl,%rbx
push %rbx
call @scpp__is_id
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2933
@_$LB2936
mov $@_$MSG99,%rbx
push %rbx
mov 16(%r12),%rbx
push %rbx
mov 24(%r12),%rbx
push %rbx
call @scpp__error
add $24,%rsp
@_$LB2933
mov %rdi,%rbx
add $7,%rbx
push %rbx
push %r8
call @scpp__add_macro
add $16,%rsp
push %r8
call @free
add $8,%rsp
jmp @_$LB2930
@_$LB2929
pushq $5
mov $@_$MSG100,%rbx
push %rbx
push %rdi
call @strncmp
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2939
mov %rdi,%rbx
add $6,%rbx
push %rbx
call @scpp__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,18446744073709551584(%rbp)
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2945
mov (%r8),%bl
movsbq %bl,%rbx
push %rbx
call @scpp__is_id
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB2942
@_$LB2945
mov $@_$MSG101,%rbx
push %rbx
mov 16(%r12),%rbx
push %rbx
mov 24(%r12),%rbx
push %rbx
call @scpp__error
add $24,%rsp
@_$LB2942
push %r8
call @scpp__macro_tab_del
add $8,%rsp
push %r8
call @free
add $8,%rsp
@_$LB2939
@_$LB2930
jmp @_$LB2927
@_$LB2926
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2948
@_$LB2946
mov @_$DATA+11543472,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2950
mov @_$DATA+11543472,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB2953
mov (%r8),%bl
mov %bl,%al
mov $40,%cl
cmp %cl,%al
jne @_$LB2956
push %r8
call @scpp__word_list_push
add $8,%rsp
mov $2,%rax
mov %rax,@_$DATA+11543472
jmp @_$LB2957
@_$LB2956
call @scpp__word_list_release
mov %rax,%rbx
mov %rbx,%rax
mov %rax,18446744073709551584(%rbp)
mov 18446744073709551584(%rbp),%rax
push %rax
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
mov 18446744073709551584(%rbp),%rax
push %rax
call @scpp__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scpp__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rax
push %rax
call @free
add $8,%rsp
mov $0,%rax
mov %rax,@_$DATA+11543472
@_$LB2957
jmp @_$LB2954
@_$LB2953
push %r8
call @scpp__word_list_push
add $8,%rsp
mov (%r8),%bl
mov %bl,%al
mov $40,%cl
cmp %cl,%al
jne @_$LB2959
addq $1,@_$DATA+11543472
jmp @_$LB2960
@_$LB2959
mov (%r8),%bl
mov %bl,%al
mov $41,%cl
cmp %cl,%al
jne @_$LB2963
subq $1,@_$DATA+11543472
mov @_$DATA+11543472,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB2966
mov $0,%rax
mov %rax,@_$DATA+11543472
call @scpp__macro_replace
@_$LB2966
@_$LB2963
@_$LB2960
@_$LB2954
jmp @_$LB2951
@_$LB2950
push %r8
call @scpp__macro_tab_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2968
push %r8
call @scpp__word_list_push
add $8,%rsp
mov 8(%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB2971
mov $1,%rax
mov %rax,@_$DATA+11543472
jmp @_$LB2972
@_$LB2971
call @scpp__macro_replace
@_$LB2972
jmp @_$LB2969
@_$LB2968
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scpp__c_write
add $16,%rsp
@_$LB2969
@_$LB2951
push %r8
call @free
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scpp__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2946
@_$LB2948
pushq $1
mov $@_$MSG102,%rbx
push %rbx
call @scpp__c_write
add $16,%rsp
@_$LB2927
mov 32(%r12),%rbx
mov %rbx,%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2922
@_$LB2924
call @scpp__out_flush
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+11543392,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+11543408,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rax
@scpp__main$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc__xmalloc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
mov %rsi,%rbx
add $16,%rbx
push %rbx
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2975
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $31,%rbx
push %rbx
mov $@_$MSG103,%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB2975
mov %rdi,%rax
@scc__xmalloc$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc____str_size
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $128,%rdi
mov %rdi,%rax
mov %r8,%rcx
cmp %rcx,%rax
jge @_$LB2978
@_$LB2976
mov %rdi,%rsi
mov %rdi,%rax
mov $3,%rcx
imul %rcx
mov %rax,%rsi
mov %rsi,%rax
mov $1,%cl
sar %cl,%rax
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov %r8,%rcx
cmp %rcx,%rax
jl @_$LB2976
@_$LB2978
mov %rdi,%rax
@scc____str_size$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc__xstrdup
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rdi,%rbx
add $1,%rbx
push %rbx
call @scc____str_size
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
push %r8
push %rsi
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea (%rsi,%rdi),%rbx
movb $0,(%rbx)
mov %rsi,%rax
@scc__xstrdup$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc__str_c_app
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2980
pushq $128
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r9b,(%rdi)
movb $0,1(%rdi)
jmp @_$LB2981
@_$LB2980
push %r12
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r8,%rbx
add $1,%rbx
push %rbx
call @scc____str_size
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r8,%rbx
add $2,%rbx
push %rbx
call @scc____str_size
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rdi,%rax
mov %rsi,%rcx
cmp %rcx,%rax
jne @_$LB2983
mov %r12,%rdi
lea (%rdi,%r8),%rbx
mov %r9b,(%rbx)
mov %r8,%rbx
add $1,%rbx
mov %r8,%rsi
add $1,%rsi
lea (%rdi,%rsi),%rbx
movb $0,(%rbx)
jmp @_$LB2984
@_$LB2983
push %rsi
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r8
push %r12
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea (%rdi,%r8),%rbx
mov %r9b,(%rbx)
mov %r8,%rbx
add $1,%rbx
mov %r8,%rsi
add $1,%rsi
lea (%rdi,%rsi),%rbx
movb $0,(%rbx)
push %r12
call @free
add $8,%rsp
@_$LB2984
@_$LB2981
mov %rdi,%rax
@scc__str_c_app$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc__str_c_app2
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
push %r9
mov 32(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2986
pushq $128
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r9b,(%rdi)
movb $0,1(%rdi)
jmp @_$LB2987
@_$LB2986
lea (%r12,%rdi),%rbx
push %rbx
call @strlen
mov %rax,%rsi
add $8,%rsp
lea (%rsi,%rdi),%rbx
mov %rbx,%r8
mov %r8,%rbx
add $1,%rbx
push %rbx
call @scc____str_size
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r8,%rbx
add $2,%rbx
push %rbx
call @scc____str_size
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rdi,%rax
mov %rsi,%rcx
cmp %rcx,%rax
jne @_$LB2989
mov %r12,%rdi
lea (%rdi,%r8),%rbx
mov %r9b,(%rbx)
mov %r8,%rbx
add $1,%rbx
mov %r8,%rsi
add $1,%rsi
lea (%rdi,%rsi),%rbx
movb $0,(%rbx)
jmp @_$LB2990
@_$LB2989
push %rsi
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r8
push %r12
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea (%rdi,%r8),%rbx
mov %r9b,(%rbx)
mov %r8,%rbx
add $1,%rbx
mov %r8,%rsi
add $1,%rsi
lea (%rdi,%rsi),%rbx
movb $0,(%rbx)
push %r12
call @free
add $8,%rsp
@_$LB2990
@_$LB2987
mov %rdi,%rax
@scc__str_c_app2$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc__str_s_app
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB2993
@_$LB2991
mov (%rsi),%bl
movsbq %bl,%rbx
push %rbx
push %rdi
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rsi,%rbx
add $1,%rbx
mov %rbx,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB2991
@_$LB2993
mov %rdi,%rax
@scc__str_s_app$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc__str_i_app
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov $10000000000000000000,%rdi
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB2996
pushq $48
push %r9
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
jmp @scc__str_i_app$END
@_$LB2996
mov %rdi,%rax
mov %r8,%rcx
cmp %rcx,%rax
jbe @_$LB2999
@_$LB2997
mov %rdi,%rax
mov $10,%rcx
xor %rdx,%rdx
div %rcx
mov %rax,%rdi
mov %rdi,%rax
mov %r8,%rcx
cmp %rcx,%rax
ja @_$LB2997
@_$LB2999
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3002
@_$LB3000
mov %r8,%rax
mov %rdi,%rcx
xor %rdx,%rdx
div %rcx
mov %rax,%rbx
mov %rbx,%rsi
mov %r8,%rax
mov %rdi,%rcx
xor %rdx,%rdx
div %rcx
mov %rdx,%rax
mov %rax,%r8
mov %rdi,%rax
mov $10,%rcx
xor %rdx,%rdx
div %rcx
mov %rax,%rdi
mov %esi,%ebx
add $48,%ebx
movslq %ebx,%rbx
push %rbx
push %r9
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3000
@_$LB3002
mov %r9,%rax
@scc__str_i_app$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc__stream_putc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov @_$DATA+11625568,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3005
mov @_$DATA+11625568,%rax
mov 4084(%rax),%ebx
mov %ebx,%eax
mov $4084,%ecx
cmp %ecx,%eax
jge @_$LB3005
@_$LB3008
mov @_$DATA+11625568,%rax
mov 4084(%rax),%esi
mov @_$DATA+11625568,%rbx
movslq %esi,%rsi
add %rsi,%rbx
mov %dil,(%rbx)
mov @_$DATA+11625568,%rax
mov 4084(%rax),%ebx
add $1,%ebx
mov @_$DATA+11625568,%rcx
mov %ebx,4084(%rcx)
jmp @scc__stream_putc$END
@_$LB3005
pushq $4096
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %dil,(%rsi)
movl $1,4084(%rsi)
movq $0,4088(%rsi)
mov @_$DATA+11625568,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3010
mov @_$DATA+11625568,%rcx
mov %rsi,4088(%rcx)
jmp @_$LB3011
@_$LB3010
mov %rsi,%rax
mov %rax,@_$DATA+11625552
@_$LB3011
mov %rsi,%rax
mov %rax,@_$DATA+11625568
@scc__stream_putc$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc__stream_getc
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov @_$DATA+11625552,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3014
mov $18446744073709551615,%rax
jmp @scc__stream_getc$END
@_$LB3014
mov @_$DATA+11625552,%rax
mov @_$DATA+11625584,%rcx
movslq %ecx,%rcx
add %rcx,%rax
mov %rax,%rbx
mov (%rbx),%sil
mov %sil,%bl
movzbl %bl,%ebx
mov %ebx,%edi
addl $1,@_$DATA+11625584
mov @_$DATA+11625552,%rax
mov 4084(%rax),%ebx
mov @_$DATA+11625584,%eax
mov %ebx,%ecx
cmp %ecx,%eax
jl @_$LB3017
mov $0,%eax
mov %eax,@_$DATA+11625584
mov @_$DATA+11625552,%rsi
mov @_$DATA+11625552,%rax
mov 4088(%rax),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11625552
push %rsi
call @free
add $8,%rsp
@_$LB3017
movslq %edi,%rdi
mov %rdi,%rax
@scc__stream_getc$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__error
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 32(%rbp),%rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov $@_$MSG104,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
movslq %r9d,%r9
push %r9
push %rdi
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov $@_$MSG105,%rbx
push %rbx
push %rdi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
movslq %r8d,%r8
push %r8
push %rdi
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov $@_$MSG106,%rbx
push %rbx
push %rdi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %rsi
push %rdi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
pushq $10
push %rdi
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
push %rdi
call @strlen
mov %rax,%rsi
add $8,%rsp
mov %rsi,%rbx
push %rbx
mov %rdi,%rbx
push %rbx
mov $2,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $2,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@scc_front__error$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__name_hash
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $0,%edi
mov (%r8),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB3020
@_$LB3018
mov %edi,%eax
mov $11,%cl
shl %cl,%eax
mov %eax,%esi
mov %edi,%eax
mov $21,%cl
shr %cl,%eax
mov %eax,%ebx
mov %esi,%edi
or %ebx,%edi
mov (%r8),%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %ebx,%edi
add $1,%r8
mov (%r8),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB3018
@_$LB3020
mov %edi,%eax
mov $1021,%ecx
xor %edx,%edx
div %ecx
mov %edx,%eax
mov %eax,%ebx
mov %ebx,%ebx
mov %rbx,%rax
@scc_front__name_hash$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__l_readc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov @_$DATA+11691216,%eax
mov @_$DATA+11691232,%ecx
cmp %ecx,%eax
jne @_$LB3023
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $65536,%rbx
push %rbx
lea @_$DATA+11625680,%rbx
push %rbx
mov @_$DATA+11625520,%ebx
movslq %ebx,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jg @_$LB3026
mov $18446744073709551615,%rax
jmp @scc_front__l_readc$END
@_$LB3026
mov %esi,%eax
mov %eax,@_$DATA+11691232
mov $0,%eax
mov %eax,@_$DATA+11691216
@_$LB3023
lea @_$DATA+11625680,%rax
mov @_$DATA+11691216,%rcx
movslq %ecx,%rcx
add %rcx,%rax
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%sil
movzbl %sil,%esi
addl $1,@_$DATA+11691216
movslq %esi,%rsi
mov %rsi,%rax
@scc_front__l_readc$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__l_getc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov $0,%esi
mov @_$DATA+11625600,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3029
mov @_$DATA+11625600,%esi
mov $4294967295,%eax
mov %eax,@_$DATA+11625600
mov @_$DATA+11625616,%eax
mov %eax,@_$DATA+11625648
mov @_$DATA+11625632,%eax
mov %eax,@_$DATA+11625664
mov %esi,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB3031
addl $1,@_$DATA+11625616
mov $1,%eax
mov %eax,@_$DATA+11625632
jmp @_$LB3032
@_$LB3031
addl $1,@_$DATA+11625632
@_$LB3032
movslq %esi,%rsi
mov %rsi,%rax
jmp @scc_front__l_getc$END
@_$LB3029
call @scc_front__l_readc
mov %eax,%ebx
mov %ebx,%esi
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3034
mov @_$DATA+11625616,%eax
mov %eax,@_$DATA+11625648
mov @_$DATA+11625632,%eax
mov %eax,@_$DATA+11625664
mov %esi,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB3037
addl $1,@_$DATA+11625616
mov $1,%eax
mov %eax,@_$DATA+11625632
jmp @_$LB3038
@_$LB3037
addl $1,@_$DATA+11625632
@_$LB3038
movslq %esi,%rsi
mov %rsi,%rax
jmp @scc_front__l_getc$END
jmp @_$LB3035
@_$LB3034
mov $18446744073709551615,%rax
@_$LB3035
@scc_front__l_getc$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__l_ungetc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov %esi,%ebx
and $255,%ebx
mov %ebx,%eax
mov %eax,@_$DATA+11625600
mov @_$DATA+11625648,%eax
mov %eax,@_$DATA+11625616
mov @_$DATA+11625664,%eax
mov %eax,@_$DATA+11625632
@scc_front__l_ungetc$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__read_str
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov 16(%rbp),%r13
mov $0,%r12
mov $0,%esi
mov @_$DATA+11625616,%r8d
mov @_$DATA+11625632,%edi
movsbq %r13b,%r13
push %r13
push %r12
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r12
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r9d
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3041
@_$LB3039
movsbq %r9b,%r9
push %r9
movslq %esi,%rsi
push %rsi
push %r12
call @scc__str_c_app2
mov %rax,%rbx
add $24,%rsp
mov %rbx,%r12
mov %r9b,%al
mov %r13b,%cl
cmp %cl,%al
jne @_$LB3044
jmp @_$LB3041
@_$LB3044
mov %r9b,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB3046
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r9d
mov %r9b,%al
mov $255,%cl
cmp %cl,%al
jne @_$LB3050
jmp @_$LB3041
@_$LB3050
movsbq %r9b,%r9
push %r9
movslq %esi,%rsi
push %rsi
push %r12
call @scc__str_c_app2
mov %rax,%rbx
add $24,%rsp
mov %rbx,%r12
add $1,%esi
jmp @_$LB3047
@_$LB3046
mov %r9b,%al
mov $10,%cl
cmp %cl,%al
je @_$LB3056
mov %r9b,%al
mov $13,%cl
cmp %cl,%al
jne @_$LB3053
@_$LB3056
mov $@_$MSG107,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
movslq %r8d,%r8
push %r8
call @scc_front__error
add $24,%rsp
@_$LB3053
@_$LB3047
add $1,%esi
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r9d
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB3039
@_$LB3041
mov %r9b,%al
mov $255,%cl
cmp %cl,%al
jne @_$LB3059
mov $@_$MSG108,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
movslq %r8d,%r8
push %r8
call @scc_front__error
add $24,%rsp
@_$LB3059
mov %r12,%rax
@scc_front__read_str$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__l_read_word
push %rbp
mov %rsp,%rbp
sub $240,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov $0,%r13
mov $0,%r9d
mov @_$DATA+11625616,%r8d
mov @_$DATA+11625632,%edi
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3062
@_$LB3060
mov %r12d,%eax
mov $32,%ecx
cmp %ecx,%eax
je @_$LB3065
mov %r12d,%eax
mov $10,%ecx
cmp %ecx,%eax
je @_$LB3065
@_$LB3077
mov %r12d,%eax
mov $9,%ecx
cmp %ecx,%eax
je @_$LB3065
@_$LB3074
mov %r12d,%eax
mov $11,%ecx
cmp %ecx,%eax
je @_$LB3065
@_$LB3071
mov %r12d,%eax
mov $13,%ecx
cmp %ecx,%eax
je @_$LB3065
@_$LB3068
jmp @_$LB3062
@_$LB3065
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB3060
@_$LB3062
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB3080
mov $0,%rax
jmp @scc_front__l_read_word$END
@_$LB3080
mov %r12d,%eax
mov $65,%ecx
cmp %ecx,%eax
jl @_$LB3095
mov %r12d,%eax
mov $90,%ecx
cmp %ecx,%eax
jle @_$LB3086
@_$LB3095
mov %r12d,%eax
mov $97,%ecx
cmp %ecx,%eax
jl @_$LB3098
mov %r12d,%eax
mov $122,%ecx
cmp %ecx,%eax
jle @_$LB3086
@_$LB3098
@_$LB3092
mov %r12d,%eax
mov $48,%ecx
cmp %ecx,%eax
jl @_$LB3101
mov %r12d,%eax
mov $57,%ecx
cmp %ecx,%eax
jle @_$LB3086
@_$LB3101
@_$LB3089
mov %r12d,%eax
mov $95,%ecx
cmp %ecx,%eax
jne @_$LB3083
@_$LB3086
mov $0,%esi
mov %r12d,%eax
mov $48,%ecx
cmp %ecx,%eax
jl @_$LB3107
mov %r12d,%eax
mov $57,%ecx
cmp %ecx,%eax
jle @_$LB3104
@_$LB3107
mov $2,%esi
@_$LB3104
movslq %r12d,%r12
push %r12
movslq %r9d,%r9
push %r9
push %r13
call @scc__str_c_app2
mov %rax,%rbx
add $24,%rsp
mov %rbx,%r13
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %r12d,%eax
mov $65,%ecx
cmp %ecx,%eax
jl @_$LB3125
mov %r12d,%eax
mov $90,%ecx
cmp %ecx,%eax
jle @_$LB3113
@_$LB3125
mov %r12d,%eax
mov $97,%ecx
cmp %ecx,%eax
jl @_$LB3128
mov %r12d,%eax
mov $122,%ecx
cmp %ecx,%eax
jle @_$LB3113
@_$LB3128
@_$LB3122
mov %r12d,%eax
mov $48,%ecx
cmp %ecx,%eax
jl @_$LB3131
mov %r12d,%eax
mov $57,%ecx
cmp %ecx,%eax
jle @_$LB3113
@_$LB3131
@_$LB3119
mov %r12d,%eax
mov $95,%ecx
cmp %ecx,%eax
je @_$LB3113
@_$LB3116
mov %r12d,%eax
mov $46,%ecx
cmp %ecx,%eax
jne @_$LB3110
@_$LB3113
@_$LB3108
mov %r12d,%eax
mov $46,%ecx
cmp %ecx,%eax
jne @_$LB3134
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3136
movslq %r12d,%r12
push %r12
movslq %r9d,%r9
push %r9
push %r13
call @scc__str_c_app2
mov %rax,%rbx
add $24,%rsp
mov %rbx,%r13
add $1,%r9d
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov $1,%esi
jmp @_$LB3137
@_$LB3136
jmp @_$LB3110
@_$LB3137
@_$LB3134
movslq %r12d,%r12
push %r12
movslq %r9d,%r9
push %r9
push %r13
call @scc__str_c_app2
mov %rax,%rbx
add $24,%rsp
mov %rbx,%r13
add $1,%r9d
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %r12d,%eax
mov $65,%ecx
cmp %ecx,%eax
jl @_$LB3152
mov %r12d,%eax
mov $90,%ecx
cmp %ecx,%eax
jle @_$LB3108
@_$LB3152
mov %r12d,%eax
mov $97,%ecx
cmp %ecx,%eax
jl @_$LB3155
mov %r12d,%eax
mov $122,%ecx
cmp %ecx,%eax
jle @_$LB3108
@_$LB3155
@_$LB3149
mov %r12d,%eax
mov $48,%ecx
cmp %ecx,%eax
jl @_$LB3158
mov %r12d,%eax
mov $57,%ecx
cmp %ecx,%eax
jle @_$LB3108
@_$LB3158
@_$LB3146
mov %r12d,%eax
mov $95,%ecx
cmp %ecx,%eax
je @_$LB3108
@_$LB3143
mov %r12d,%eax
mov $46,%ecx
cmp %ecx,%eax
je @_$LB3108
@_$LB3140
@_$LB3110
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3161
movslq %r12d,%r12
push %r12
call @scc_front__l_ungetc
add $8,%rsp
@_$LB3161
mov %r13,%rax
jmp @scc_front__l_read_word$END
@_$LB3083
mov %r12d,%eax
mov $39,%ecx
cmp %ecx,%eax
jne @_$LB3164
pushq $39
call @scc_front__read_str
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
jmp @scc_front__l_read_word$END
@_$LB3164
mov %r12d,%eax
mov $34,%ecx
cmp %ecx,%eax
jne @_$LB3167
pushq $34
call @scc_front__read_str
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
jmp @scc_front__l_read_word$END
@_$LB3167
movslq %r12d,%r12
push %r12
push %r13
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
mov %r12d,%eax
mov $45,%ecx
cmp %ecx,%eax
jne @_$LB3169
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %r12d,%eax
mov $62,%ecx
cmp %ecx,%eax
je @_$LB3176
mov %r12d,%eax
mov $61,%ecx
cmp %ecx,%eax
je @_$LB3176
@_$LB3179
mov %r12d,%eax
mov $45,%ecx
cmp %ecx,%eax
jne @_$LB3172
@_$LB3176
movslq %r12d,%r12
push %r12
push %r13
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB3173
@_$LB3172
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3182
movslq %r12d,%r12
push %r12
call @scc_front__l_ungetc
add $8,%rsp
@_$LB3182
@_$LB3173
jmp @_$LB3170
@_$LB3169
mov %r12d,%eax
mov $43,%ecx
cmp %ecx,%eax
jne @_$LB3184
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %r12d,%eax
mov $43,%ecx
cmp %ecx,%eax
je @_$LB3191
mov %r12d,%eax
mov $61,%ecx
cmp %ecx,%eax
jne @_$LB3187
@_$LB3191
movslq %r12d,%r12
push %r12
push %r13
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB3188
@_$LB3187
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3194
movslq %r12d,%r12
push %r12
call @scc_front__l_ungetc
add $8,%rsp
@_$LB3194
@_$LB3188
jmp @_$LB3185
@_$LB3184
mov %r12d,%eax
mov $60,%ecx
cmp %ecx,%eax
jne @_$LB3196
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %r12d,%eax
mov $61,%ecx
cmp %ecx,%eax
jne @_$LB3199
movslq %r12d,%r12
push %r12
push %r13
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB3200
@_$LB3199
mov %r12d,%eax
mov $60,%ecx
cmp %ecx,%eax
jne @_$LB3202
movslq %r12d,%r12
push %r12
push %r13
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %r12d,%eax
mov $61,%ecx
cmp %ecx,%eax
jne @_$LB3205
movslq %r12d,%r12
push %r12
push %r13
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB3206
@_$LB3205
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3209
movslq %r12d,%r12
push %r12
call @scc_front__l_ungetc
add $8,%rsp
@_$LB3209
@_$LB3206
jmp @_$LB3203
@_$LB3202
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3212
movslq %r12d,%r12
push %r12
call @scc_front__l_ungetc
add $8,%rsp
@_$LB3212
@_$LB3203
@_$LB3200
jmp @_$LB3197
@_$LB3196
mov %r12d,%eax
mov $62,%ecx
cmp %ecx,%eax
jne @_$LB3214
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %r12d,%eax
mov $61,%ecx
cmp %ecx,%eax
jne @_$LB3217
movslq %r12d,%r12
push %r12
push %r13
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB3218
@_$LB3217
mov %r12d,%eax
mov $62,%ecx
cmp %ecx,%eax
jne @_$LB3220
movslq %r12d,%r12
push %r12
push %r13
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %r12d,%eax
mov $61,%ecx
cmp %ecx,%eax
jne @_$LB3223
movslq %r12d,%r12
push %r12
push %r13
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB3224
@_$LB3223
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3227
movslq %r12d,%r12
push %r12
call @scc_front__l_ungetc
add $8,%rsp
@_$LB3227
@_$LB3224
jmp @_$LB3221
@_$LB3220
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3230
movslq %r12d,%r12
push %r12
call @scc_front__l_ungetc
add $8,%rsp
@_$LB3230
@_$LB3221
@_$LB3218
jmp @_$LB3215
@_$LB3214
mov %r12d,%eax
mov $61,%ecx
cmp %ecx,%eax
jne @_$LB3232
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %r12d,%eax
mov $61,%ecx
cmp %ecx,%eax
jne @_$LB3235
movslq %r12d,%r12
push %r12
push %r13
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB3236
@_$LB3235
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3239
movslq %r12d,%r12
push %r12
call @scc_front__l_ungetc
add $8,%rsp
@_$LB3239
@_$LB3236
jmp @_$LB3233
@_$LB3232
mov %r12d,%eax
mov $33,%ecx
cmp %ecx,%eax
jne @_$LB3241
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %r12d,%eax
mov $61,%ecx
cmp %ecx,%eax
jne @_$LB3244
movslq %r12d,%r12
push %r12
push %r13
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB3245
@_$LB3244
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3248
movslq %r12d,%r12
push %r12
call @scc_front__l_ungetc
add $8,%rsp
@_$LB3248
@_$LB3245
jmp @_$LB3242
@_$LB3241
mov %r12d,%eax
mov $38,%ecx
cmp %ecx,%eax
jne @_$LB3250
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %r12d,%eax
mov $38,%ecx
cmp %ecx,%eax
je @_$LB3257
mov %r12d,%eax
mov $61,%ecx
cmp %ecx,%eax
jne @_$LB3253
@_$LB3257
movslq %r12d,%r12
push %r12
push %r13
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB3254
@_$LB3253
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3260
movslq %r12d,%r12
push %r12
call @scc_front__l_ungetc
add $8,%rsp
@_$LB3260
@_$LB3254
jmp @_$LB3251
@_$LB3250
mov %r12d,%eax
mov $124,%ecx
cmp %ecx,%eax
jne @_$LB3262
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %r12d,%eax
mov $124,%ecx
cmp %ecx,%eax
je @_$LB3269
mov %r12d,%eax
mov $61,%ecx
cmp %ecx,%eax
jne @_$LB3265
@_$LB3269
movslq %r12d,%r12
push %r12
push %r13
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB3266
@_$LB3265
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3272
movslq %r12d,%r12
push %r12
call @scc_front__l_ungetc
add $8,%rsp
@_$LB3272
@_$LB3266
jmp @_$LB3263
@_$LB3262
mov %r12d,%eax
mov $47,%ecx
cmp %ecx,%eax
je @_$LB3278
mov %r12d,%eax
mov $42,%ecx
cmp %ecx,%eax
je @_$LB3278
@_$LB3284
mov %r12d,%eax
mov $37,%ecx
cmp %ecx,%eax
je @_$LB3278
@_$LB3281
mov %r12d,%eax
mov $94,%ecx
cmp %ecx,%eax
jne @_$LB3274
@_$LB3278
call @scc_front__l_getc
mov %eax,%ebx
mov %ebx,%r12d
mov %r12d,%eax
mov $61,%ecx
cmp %ecx,%eax
jne @_$LB3286
movslq %r12d,%r12
push %r12
push %r13
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB3287
@_$LB3286
mov %r12d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3290
movslq %r12d,%r12
push %r12
call @scc_front__l_ungetc
add $8,%rsp
@_$LB3290
@_$LB3287
jmp @_$LB3275
@_$LB3274
mov %r12d,%eax
mov $91,%ecx
cmp %ecx,%eax
je @_$LB3293
mov %r12d,%eax
mov $93,%ecx
cmp %ecx,%eax
je @_$LB3293
@_$LB3326
mov %r12d,%eax
mov $40,%ecx
cmp %ecx,%eax
je @_$LB3293
@_$LB3323
mov %r12d,%eax
mov $41,%ecx
cmp %ecx,%eax
je @_$LB3293
@_$LB3320
mov %r12d,%eax
mov $123,%ecx
cmp %ecx,%eax
je @_$LB3293
@_$LB3317
mov %r12d,%eax
mov $125,%ecx
cmp %ecx,%eax
je @_$LB3293
@_$LB3314
mov %r12d,%eax
mov $46,%ecx
cmp %ecx,%eax
je @_$LB3293
@_$LB3311
mov %r12d,%eax
mov $126,%ecx
cmp %ecx,%eax
je @_$LB3293
@_$LB3308
mov %r12d,%eax
mov $63,%ecx
cmp %ecx,%eax
je @_$LB3293
@_$LB3305
mov %r12d,%eax
mov $58,%ecx
cmp %ecx,%eax
je @_$LB3293
@_$LB3302
mov %r12d,%eax
mov $44,%ecx
cmp %ecx,%eax
je @_$LB3293
@_$LB3299
mov %r12d,%eax
mov $59,%ecx
cmp %ecx,%eax
je @_$LB3293
@_$LB3296
mov $@_$MSG109,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
movslq %r12d,%r12
push %r12
push %rsi
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
pushq $39
push %rsi
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
movslq %edi,%rdi
push %rdi
movslq %r8d,%r8
push %r8
call @scc_front__error
add $24,%rsp
@_$LB3293
@_$LB3275
@_$LB3263
@_$LB3251
@_$LB3242
@_$LB3233
@_$LB3215
@_$LB3197
@_$LB3185
@_$LB3170
mov %r13,%rax
@scc_front__l_read_word$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__load_file
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov @_$DATA+11625616,%edi
mov @_$DATA+11625632,%esi
call @scc_front__l_read_word
mov %rax,%rbx
mov %rbx,%r9
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3329
@_$LB3327
pushq $24
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r9,(%r8)
mov %edi,8(%r8)
mov %esi,12(%r8)
movq $0,16(%r8)
mov @_$DATA+11691248,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3331
mov @_$DATA+11691264,%rcx
mov %r8,16(%rcx)
jmp @_$LB3332
@_$LB3331
mov %r8,%rax
mov %rax,@_$DATA+11691248
@_$LB3332
mov %r8,%rax
mov %rax,@_$DATA+11691264
mov @_$DATA+11625616,%edi
mov @_$DATA+11625632,%esi
call @scc_front__l_read_word
mov %rax,%rbx
mov %rbx,%r9
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3327
@_$LB3329
@scc_front__load_file$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__l_global_init
push %rbp
mov %rsp,%rbp
sub $32,%rsp
mov $4294967295,%eax
mov %eax,@_$DATA+11625600
mov $1,%eax
mov %eax,@_$DATA+11625616
mov $1,%eax
mov %eax,@_$DATA+11625632
mov $1,%eax
mov %eax,@_$DATA+11625648
mov $1,%eax
mov %eax,@_$DATA+11625664
@scc_front__l_global_init$END
mov %rbp,%rsp
pop %rbp
ret
@scc_front__mkst
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 40(%rbp),%rdi
push %r8
mov 32(%rbp),%r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
pushq $48
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3334
push %r9
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,8(%rsi)
jmp @_$LB3335
@_$LB3334
movq $0,8(%rsi)
@_$LB3335
mov %r12,(%rsi)
movq $0,32(%rsi)
movq $0,40(%rsi)
mov %r8,16(%rsi)
mov %rdi,24(%rsi)
mov %rsi,%rax
@scc_front__mkst$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__st_add_subtree
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov 32(%r9),%rbx
mov %rbx,%rsi
add $1,%rsi
mov %rsi,%rbx
shl $3,%rbx
push %rbx
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov 32(%r9),%rsi
mov %rsi,%rbx
shl $3,%rbx
push %rbx
mov 40(%r9),%rbx
push %rbx
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov 32(%r9),%rbx
mov 32(%r9),%rbx
mov %rbx,%rsi
shl $3,%rsi
lea (%rdi,%rsi),%rbx
mov %r8,(%rbx)
mov 32(%r9),%rbx
add $1,%rbx
mov %rbx,32(%r9)
mov 40(%r9),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,40(%r9)
@scc_front__st_add_subtree$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__syntax_tree_release
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
mov $0,%r8d
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3338
jmp @scc_front__syntax_tree_release$END
@_$LB3338
mov 32(%r9),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB3341
@_$LB3339
mov 40(%r9),%rdi
mov %r8d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__syntax_tree_release
add $8,%rsp
add $1,%r8d
mov 32(%r9),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB3339
@_$LB3341
mov 8(%r9),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r9),%rbx
push %rbx
call @free
add $8,%rsp
push %r9
call @free
add $8,%rsp
@scc_front__syntax_tree_release$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_next
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov @_$DATA+11691280,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3344
jmp @scc_front__parse_next$END
@_$LB3344
mov @_$DATA+11691280,%rax
mov 16(%rax),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11691280
mov @_$DATA+11691280,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3347
jmp @scc_front__parse_next$END
@_$LB3347
mov @_$DATA+11691280,%rax
mov 8(%rax),%ebx
mov %ebx,%eax
movslq %eax,%rax
mov %rax,@_$DATA+11691296
mov @_$DATA+11691280,%rax
mov 12(%rax),%ebx
mov %ebx,%eax
movslq %eax,%rax
mov %rax,@_$DATA+11691312
@scc_front__parse_next$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__iskeyw
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $0,%edi
mov %edi,%ebx
shl $3,%ebx
lea @_$DATA+11691328,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3350
@_$LB3348
push %r8
mov %edi,%ebx
shl $3,%ebx
lea @_$DATA+11691328,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3353
mov $1,%rax
jmp @scc_front__iskeyw$END
@_$LB3353
add $1,%edi
mov %edi,%ebx
shl $3,%ebx
lea @_$DATA+11691328,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3348
@_$LB3350
mov $0,%rax
@scc_front__iskeyw$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__str_list_match
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov $0,%edi
mov %edi,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3356
@_$LB3354
push %r8
mov %edi,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3359
mov %edi,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rax
jmp @scc_front__str_list_match$END
@_$LB3359
add $1,%edi
mov %edi,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3354
@_$LB3356
mov $0,%rax
@scc_front__str_list_match$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__str_list_match2
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov $0,%edi
mov %edi,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3362
@_$LB3360
push %r8
mov %edi,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3365
movslq %edi,%rdi
mov %rdi,%rax
jmp @scc_front__str_list_match2$END
@_$LB3365
add $1,%edi
mov %edi,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3360
@_$LB3362
mov $18446744073709551615,%rax
@scc_front__str_list_match2$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_cstr
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov @_$DATA+11691280,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3368
mov $@_$MSG110,%rbx
mov %rbx,%rax
jmp @scc_front__parse_cstr$END
@_$LB3368
mov @_$DATA+11691280,%rax
mov (%rax),%rbx
mov %rbx,%rax
@scc_front__parse_cstr$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_id
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov @_$DATA+11691280,%r8
mov $0,%rdi
mov @_$DATA+11691280,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3371
mov $0,%rax
jmp @scc_front__parse_id$END
@_$LB3371
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB3383
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $90,%cl
cmp %cl,%al
jle @_$LB3377
@_$LB3383
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB3386
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $122,%cl
cmp %cl,%al
jle @_$LB3377
@_$LB3386
@_$LB3380
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $95,%cl
cmp %cl,%al
jne @_$LB3374
@_$LB3377
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @scc_front__iskeyw
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3389
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
mov $@_$MSG111,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
@_$LB3389
@_$LB3374
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3392
mov %r8,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_id$END
@_$LB3392
mov %rdi,%rax
@scc_front__parse_id$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_num_id
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov @_$DATA+11691280,%r9
mov $0,%rdi
mov @_$DATA+11691280,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3395
mov $0,%rax
jmp @scc_front__parse_num_id$END
@_$LB3395
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB3407
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jle @_$LB3401
@_$LB3407
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
je @_$LB3401
@_$LB3404
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB3397
@_$LB3401
mov $0,%r8d
mov $0,%edi
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rbx
lea (%rbx,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB3410
@_$LB3408
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rbx
lea (%rbx,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $46,%cl
cmp %cl,%al
jne @_$LB3413
mov $1,%edi
jmp @_$LB3410
@_$LB3413
add $1,%r8d
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rbx
lea (%rbx,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB3408
@_$LB3410
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
je @_$LB3419
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB3416
@_$LB3419
mov $0,%edi
@_$LB3416
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3421
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
mov $@_$MSG112,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
jmp @_$LB3422
@_$LB3421
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
mov $@_$MSG113,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
@_$LB3422
call @scc_front__parse_next
jmp @_$LB3398
@_$LB3397
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB3434
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $90,%cl
cmp %cl,%al
jle @_$LB3428
@_$LB3434
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB3437
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $122,%cl
cmp %cl,%al
jle @_$LB3428
@_$LB3437
@_$LB3431
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $95,%cl
cmp %cl,%al
jne @_$LB3425
@_$LB3428
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @scc_front__iskeyw
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3440
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
mov $@_$MSG114,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
@_$LB3440
@_$LB3425
@_$LB3398
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3443
mov %r9,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_num_id$END
@_$LB3443
mov %rdi,%rax
@scc_front__parse_num_id$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_15
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov @_$DATA+11691280,%rsi
call @scc_front__parse_expr_14
mov %rax,%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3446
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_expr_15$END
@_$LB3446
mov $@_$MSG115,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3449
@_$LB3447
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG116,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
call @scc_front__parse_next
call @scc_front__parse_expr_14
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3452
mov $@_$MSG117,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3452
push %r8
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
push %rdi
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rsi,%r8
mov $@_$MSG118,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3447
@_$LB3449
mov %r8,%rax
@scc_front__parse_expr_15$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_14
push %rbp
mov %rsp,%rbp
sub $112,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov @_$DATA+11691280,%rsi
call @scc_front__parse_expr_13
mov %rax,%rbx
mov %rbx,%rax
mov %rax,18446744073709551600(%rbp)
mov 18446744073709551600(%rbp),%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3455
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_expr_14$END
@_$LB3455
lea 18446744073709551600(%rbp),%rbx
mov %rbx,%r12
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691552,%rax
push %rax
call @scc_front__str_list_match
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3458
@_$LB3456
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
push %rdi
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
call @scc_front__parse_next
mov (%r12),%rbx
push %rbx
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
call @scc_front__parse_expr_13
mov %rax,%rbx
mov %rbx,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3461
mov $@_$MSG119,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov $@_$MSG120,%rbx
push %rbx
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3461
push %r9
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
mov %r8,(%r12)
mov 40(%r8),%rsi
mov %rsi,%rbx
add $8,%rbx
mov %rbx,%r12
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691552,%rax
push %rax
call @scc_front__str_list_match
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3456
@_$LB3458
mov 18446744073709551600(%rbp),%rax
@scc_front__parse_expr_14$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_13
push %rbp
mov %rsp,%rbp
sub $176,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov @_$DATA+11691280,%rsi
call @scc_front__parse_expr_12
mov %rax,%rbx
mov %rbx,%rax
mov %rax,18446744073709551600(%rbp)
mov 18446744073709551600(%rbp),%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3464
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_expr_13$END
@_$LB3464
lea 18446744073709551600(%rbp),%rbx
mov %rbx,%r8
mov $@_$MSG121,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3467
@_$LB3465
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG122,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
mov (%r8),%rbx
push %rbx
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
call @scc_front__parse_expr_15
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3470
mov $@_$MSG123,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3470
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG124,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3473
mov $@_$MSG125,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3473
call @scc_front__parse_next
call @scc_front__parse_expr_12
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3476
mov $@_$MSG126,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3476
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rdi,(%r8)
mov 40(%rdi),%rsi
mov %rsi,%rbx
add $16,%rbx
mov %rbx,%r8
mov $@_$MSG127,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3465
@_$LB3467
mov 18446744073709551600(%rbp),%rax
@scc_front__parse_expr_13$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_12
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov @_$DATA+11691280,%rsi
call @scc_front__parse_expr_11
mov %rax,%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3479
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_expr_12$END
@_$LB3479
mov $@_$MSG128,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3482
@_$LB3480
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG129,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
call @scc_front__parse_next
call @scc_front__parse_expr_11
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3485
mov $@_$MSG130,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3485
push %r8
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
push %rdi
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rsi,%r8
mov $@_$MSG131,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3480
@_$LB3482
mov %r8,%rax
@scc_front__parse_expr_12$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_11
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov @_$DATA+11691280,%rsi
call @scc_front__parse_expr_10
mov %rax,%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3488
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_expr_11$END
@_$LB3488
mov $@_$MSG132,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3491
@_$LB3489
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG133,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
call @scc_front__parse_next
call @scc_front__parse_expr_10
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3494
mov $@_$MSG134,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3494
push %r8
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
push %rdi
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rsi,%r8
mov $@_$MSG135,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3489
@_$LB3491
mov %r8,%rax
@scc_front__parse_expr_11$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_10
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov @_$DATA+11691280,%rsi
call @scc_front__parse_expr_9
mov %rax,%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3497
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_expr_10$END
@_$LB3497
mov $@_$MSG136,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3500
@_$LB3498
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG137,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
call @scc_front__parse_next
call @scc_front__parse_expr_9
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3503
mov $@_$MSG138,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3503
push %r8
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
push %rdi
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rsi,%r8
mov $@_$MSG139,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3498
@_$LB3500
mov %r8,%rax
@scc_front__parse_expr_10$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_9
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov @_$DATA+11691280,%rsi
call @scc_front__parse_expr_8
mov %rax,%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3506
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_expr_9$END
@_$LB3506
mov $@_$MSG140,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3509
@_$LB3507
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG141,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
call @scc_front__parse_next
call @scc_front__parse_expr_8
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3512
mov $@_$MSG142,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3512
push %r8
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
push %rdi
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rsi,%r8
mov $@_$MSG143,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3507
@_$LB3509
mov %r8,%rax
@scc_front__parse_expr_9$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_8
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov @_$DATA+11691280,%rsi
call @scc_front__parse_expr_7
mov %rax,%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3515
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_expr_8$END
@_$LB3515
mov $@_$MSG144,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3518
@_$LB3516
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG145,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
call @scc_front__parse_next
call @scc_front__parse_expr_7
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3521
mov $@_$MSG146,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3521
push %r8
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
push %rdi
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rsi,%r8
mov $@_$MSG147,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3516
@_$LB3518
mov %r8,%rax
@scc_front__parse_expr_8$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_7
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov @_$DATA+11691280,%rsi
call @scc_front__parse_expr_6
mov %rax,%rbx
mov %rbx,%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3524
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_expr_7$END
@_$LB3524
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691648,%rax
push %rax
call @scc_front__str_list_match
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3527
@_$LB3525
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
push %rdi
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
call @scc_front__parse_next
call @scc_front__parse_expr_6
mov %rax,%rbx
mov %rbx,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3530
mov $@_$MSG148,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov $@_$MSG149,%rbx
push %rbx
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3530
push %r12
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
push %r9
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
mov %r8,%r12
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691648,%rax
push %rax
call @scc_front__str_list_match
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3525
@_$LB3527
mov %r12,%rax
@scc_front__parse_expr_7$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_6
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov @_$DATA+11691280,%rsi
call @scc_front__parse_expr_5
mov %rax,%rbx
mov %rbx,%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3533
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_expr_6$END
@_$LB3533
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691680,%rax
push %rax
call @scc_front__str_list_match
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3536
@_$LB3534
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
push %rdi
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
call @scc_front__parse_next
call @scc_front__parse_expr_5
mov %rax,%rbx
mov %rbx,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3539
mov $@_$MSG150,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov $@_$MSG151,%rbx
push %rbx
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3539
push %r12
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
push %r9
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
mov %r8,%r12
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691680,%rax
push %rax
call @scc_front__str_list_match
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3534
@_$LB3536
mov %r12,%rax
@scc_front__parse_expr_6$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_5
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov @_$DATA+11691280,%rsi
call @scc_front__parse_expr_4
mov %rax,%rbx
mov %rbx,%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3542
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_expr_5$END
@_$LB3542
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691728,%rax
push %rax
call @scc_front__str_list_match
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3545
@_$LB3543
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
push %rdi
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
call @scc_front__parse_next
call @scc_front__parse_expr_4
mov %rax,%rbx
mov %rbx,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3548
mov $@_$MSG152,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov $@_$MSG153,%rbx
push %rbx
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3548
push %r12
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
push %r9
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
mov %r8,%r12
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691728,%rax
push %rax
call @scc_front__str_list_match
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3543
@_$LB3545
mov %r12,%rax
@scc_front__parse_expr_5$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_4
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov @_$DATA+11691280,%rsi
call @scc_front__parse_expr_3
mov %rax,%rbx
mov %rbx,%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3551
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_expr_4$END
@_$LB3551
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691760,%rax
push %rax
call @scc_front__str_list_match
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3554
@_$LB3552
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
push %rdi
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
call @scc_front__parse_next
call @scc_front__parse_expr_3
mov %rax,%rbx
mov %rbx,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3557
mov $@_$MSG154,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov $@_$MSG155,%rbx
push %rbx
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3557
push %r12
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
push %r9
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
mov %r8,%r12
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691760,%rax
push %rax
call @scc_front__str_list_match
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3552
@_$LB3554
mov %r12,%rax
@scc_front__parse_expr_4$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_3
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov @_$DATA+11691280,%rsi
call @scc_front__parse_expr_2
mov %rax,%rbx
mov %rbx,%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3560
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_expr_3$END
@_$LB3560
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691792,%rax
push %rax
call @scc_front__str_list_match
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3563
@_$LB3561
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
push %rdi
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
call @scc_front__parse_next
call @scc_front__parse_expr_2
mov %rax,%rbx
mov %rbx,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3566
mov $@_$MSG156,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov $@_$MSG157,%rbx
push %rbx
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3566
push %r12
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
push %r9
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
mov %r8,%r12
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691792,%rax
push %rax
call @scc_front__str_list_match
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3561
@_$LB3563
mov %r12,%rax
@scc_front__parse_expr_3$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_sizeof_type
push %rbp
mov %rsp,%rbp
sub $144,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov @_$DATA+11691280,%r9
mov @_$DATA+11691296,%r8
mov @_$DATA+11691312,%rsi
mov $@_$MSG158,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3569
mov $0,%rax
jmp @scc_front__parse_sizeof_type$END
@_$LB3569
call @scc_front__parse_next
mov $@_$MSG159,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3572
mov %r9,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_sizeof_type$END
@_$LB3572
call @scc_front__parse_next
call @scc_front__parse_type
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3575
mov %r9,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_sizeof_type$END
@_$LB3575
push %rsi
push %r8
pushq $0
mov $@_$MSG160,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
call @scc_front__parse_decl
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3578
mov $@_$MSG161,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3578
mov $@_$MSG162,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3581
mov $@_$MSG163,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3581
call @scc_front__parse_next
push %rdi
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rsi,%rax
@scc_front__parse_sizeof_type$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_cast
push %rbp
mov %rsp,%rbp
sub $128,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov @_$DATA+11691280,%r9
mov @_$DATA+11691296,%r8
mov @_$DATA+11691312,%rsi
mov $@_$MSG164,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3584
mov %r9,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_cast$END
@_$LB3584
call @scc_front__parse_next
call @scc_front__parse_type
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3587
mov %r9,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_cast$END
@_$LB3587
push %rsi
push %r8
pushq $0
mov $@_$MSG165,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
call @scc_front__parse_decl
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3590
mov $@_$MSG166,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3590
mov $@_$MSG167,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3593
mov $@_$MSG168,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3593
call @scc_front__parse_next
push %rdi
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rsi,%rax
@scc_front__parse_cast$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_2
push %rbp
mov %rsp,%rbp
sub $112,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov @_$DATA+11691280,%rsi
call @scc_front__parse_sizeof_type
mov %rax,%rbx
mov %rbx,%r9
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3596
mov %r9,%rax
jmp @scc_front__parse_expr_2$END
@_$LB3596
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691824,%rax
push %rax
call @scc_front__str_list_match
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3598
mov $@_$MSG169,%rbx
push %rbx
push %rdi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3601
mov $@_$MSG170,%rbx
mov %rbx,%rdi
jmp @_$LB3602
@_$LB3601
mov $@_$MSG171,%rbx
push %rbx
push %rdi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3604
mov $@_$MSG172,%rbx
mov %rbx,%rdi
jmp @_$LB3605
@_$LB3604
mov $@_$MSG173,%rbx
push %rbx
push %rdi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3608
mov $@_$MSG174,%rbx
mov %rbx,%rdi
@_$LB3608
@_$LB3605
@_$LB3602
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
push %rdi
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r9
call @scc_front__parse_next
call @scc_front__parse_expr_2
mov %rax,%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3611
mov $@_$MSG175,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov $@_$MSG176,%rbx
push %rbx
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3611
push %r8
push %r9
call @scc_front__st_add_subtree
add $16,%rsp
jmp @_$LB3599
@_$LB3598
call @scc_front__parse_cast
mov %rax,%rbx
mov %rbx,%r9
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3613
call @scc_front__parse_expr_2
mov %rax,%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3617
mov $@_$MSG177,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3617
push %r8
push %r9
call @scc_front__st_add_subtree
add $16,%rsp
jmp @_$LB3614
@_$LB3613
call @scc_front__parse_expr_1
mov %rax,%rbx
mov %rbx,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3620
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_expr_2$END
@_$LB3620
@_$LB3614
@_$LB3599
mov %r9,%rax
@scc_front__parse_expr_2$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_call
push %rbp
mov %rsp,%rbp
sub $208,%rsp
push %rbx
push %rsi
push %rdi
mov $0,%rdi
mov $@_$MSG178,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3623
call @scc_front__parse_next
call @scc_front__parse_expr_14
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3625
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG179,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
mov $@_$MSG180,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3629
mov $@_$MSG181,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3629
call @scc_front__parse_next
pushq $0
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
jmp @_$LB3626
@_$LB3625
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG182,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
pushq $0
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG183,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3632
@_$LB3630
call @scc_front__parse_next
call @scc_front__parse_expr_14
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3635
mov $@_$MSG184,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3635
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG185,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3630
@_$LB3632
mov $@_$MSG186,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3638
mov $@_$MSG187,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3638
call @scc_front__parse_next
@_$LB3626
@_$LB3623
mov %rdi,%rax
@scc_front__parse_call$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_1_suffix
push %rbp
mov %rsp,%rbp
sub $256,%rsp
push %rbx
push %rsi
push %rdi
mov $0,%rdi
mov $@_$MSG188,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3640
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG189,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
call @scc_front__parse_expr_15
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3644
mov $@_$MSG190,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3644
mov $@_$MSG191,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3647
mov $@_$MSG192,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3647
call @scc_front__parse_next
pushq $0
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
jmp @_$LB3641
@_$LB3640
call @scc_front__parse_call
mov %rax,%rbx
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3649
mov %rdi,%rax
jmp @scc_front__parse_expr_1_suffix$END
jmp @_$LB3650
@_$LB3649
mov $@_$MSG193,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3652
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG194,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
call @scc_front__parse_id
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3656
mov $@_$MSG195,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3656
pushq $0
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
jmp @_$LB3653
@_$LB3652
mov $@_$MSG196,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3659
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG197,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
call @scc_front__parse_id
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3662
mov $@_$MSG198,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3662
pushq $0
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
@_$LB3659
@_$LB3653
@_$LB3650
@_$LB3641
mov %rdi,%rax
@scc_front__parse_expr_1_suffix$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr_1
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
mov $@_$MSG199,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3664
call @scc_front__parse_next
call @scc_front__parse_expr_15
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3668
mov $@_$MSG200,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3668
mov $@_$MSG201,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3671
mov $@_$MSG202,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3671
call @scc_front__parse_next
jmp @_$LB3665
@_$LB3664
call @scc_front__parse_num_id
mov %rax,%rbx
mov %rbx,%rdi
@_$LB3665
call @scc_front__parse_expr_1_suffix
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3674
@_$LB3672
mov 40(%rsi),%rbx
mov %rdi,(%rbx)
mov %rsi,%rdi
call @scc_front__parse_expr_1_suffix
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3672
@_$LB3674
mov %rdi,%rax
@scc_front__parse_expr_1$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_expr
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
push %rdi
call @scc_front__parse_expr_15
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3677
mov $@_$MSG203,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3680
mov $@_$MSG204,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3680
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG205,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rdi,%rax
jmp @scc_front__parse_expr$END
@_$LB3677
mov $0,%rax
@scc_front__parse_expr$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__expr_global_init
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov $@_$MSG206,%rbx
mov %rbx,@_$DATA+11691552
mov $@_$MSG207,%rbx
mov %rbx,@_$DATA+11691560
mov $@_$MSG208,%rbx
mov %rbx,@_$DATA+11691568
mov $@_$MSG209,%rbx
mov %rbx,@_$DATA+11691576
mov $@_$MSG210,%rbx
mov %rbx,@_$DATA+11691584
mov $@_$MSG211,%rbx
mov %rbx,@_$DATA+11691592
mov $@_$MSG212,%rbx
mov %rbx,@_$DATA+11691600
mov $@_$MSG213,%rbx
mov %rbx,@_$DATA+11691608
mov $@_$MSG214,%rbx
mov %rbx,@_$DATA+11691616
mov $@_$MSG215,%rbx
mov %rbx,@_$DATA+11691624
mov $@_$MSG216,%rbx
mov %rbx,@_$DATA+11691632
mov $@_$MSG217,%rbx
mov %rbx,@_$DATA+11691648
mov $@_$MSG218,%rbx
mov %rbx,@_$DATA+11691656
mov $@_$MSG219,%rbx
mov %rbx,@_$DATA+11691680
mov $@_$MSG220,%rbx
mov %rbx,@_$DATA+11691688
mov $@_$MSG221,%rbx
mov %rbx,@_$DATA+11691696
mov $@_$MSG222,%rbx
mov %rbx,@_$DATA+11691704
mov $@_$MSG223,%rbx
mov %rbx,@_$DATA+11691728
mov $@_$MSG224,%rbx
mov %rbx,@_$DATA+11691736
mov $@_$MSG225,%rbx
mov %rbx,@_$DATA+11691760
mov $@_$MSG226,%rbx
mov %rbx,@_$DATA+11691768
mov $@_$MSG227,%rbx
mov %rbx,@_$DATA+11691792
mov $@_$MSG228,%rbx
mov %rbx,@_$DATA+11691800
mov $@_$MSG229,%rbx
mov %rbx,@_$DATA+11691808
mov $@_$MSG230,%rbx
mov %rbx,@_$DATA+11691824
mov $@_$MSG231,%rbx
mov %rbx,@_$DATA+11691832
mov $@_$MSG232,%rbx
mov %rbx,@_$DATA+11691840
mov $@_$MSG233,%rbx
mov %rbx,@_$DATA+11691848
mov $@_$MSG234,%rbx
mov %rbx,@_$DATA+11691856
mov $@_$MSG235,%rbx
mov %rbx,@_$DATA+11691864
mov $@_$MSG236,%rbx
mov %rbx,@_$DATA+11691872
mov $@_$MSG237,%rbx
mov %rbx,@_$DATA+11691880
@scc_front__expr_global_init$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_id_null
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
call @scc_front__parse_id
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3683
mov %rsi,%rax
jmp @scc_front__parse_id_null$END
@_$LB3683
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
mov $@_$MSG238,%rbx
push %rbx
mov $@_$MSG239,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rax
@scc_front__parse_id_null$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_basic_type
push %rbp
mov %rsp,%rbp
sub $144,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov @_$DATA+11691296,%r9
mov @_$DATA+11691312,%r8
mov $0,%eax
mov %eax,18446744073709551584(%rbp)
mov $0,%eax
mov %eax,18446744073709551588(%rbp)
mov $0,%eax
mov %eax,18446744073709551592(%rbp)
mov $0,%eax
mov %eax,18446744073709551596(%rbp)
mov $0,%eax
mov %eax,18446744073709551600(%rbp)
mov $0,%eax
mov %eax,18446744073709551604(%rbp)
mov $0,%eax
mov %eax,18446744073709551608(%rbp)
mov $0,%eax
mov %eax,18446744073709551612(%rbp)
mov $@_$MSG240,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3686
call @scc_front__parse_next
push %r8
push %r9
pushq $0
mov $@_$MSG241,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rax
jmp @scc_front__parse_basic_type$END
@_$LB3686
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691904,%rax
push %rax
call @scc_front__str_list_match2
mov %eax,%ebx
add $16,%rsp
mov %ebx,%esi
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB3689
@_$LB3687
mov %esi,%ebx
shl $2,%ebx
lea 18446744073709551584(%rbp),%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%ebx
add $1,%ebx
mov %ebx,(%rsi)
call @scc_front__parse_next
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
lea @_$DATA+11691904,%rax
push %rax
call @scc_front__str_list_match2
mov %eax,%ebx
add $16,%rsp
mov %ebx,%esi
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB3687
@_$LB3689
mov 18446744073709551584(%rbp),%ebx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jg @_$LB3695
mov 18446744073709551588(%rbp),%ebx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jg @_$LB3695
@_$LB3707
mov 18446744073709551592(%rbp),%ebx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jg @_$LB3695
@_$LB3704
mov 18446744073709551596(%rbp),%ebx
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jg @_$LB3695
@_$LB3701
mov 18446744073709551600(%rbp),%ebx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jg @_$LB3695
@_$LB3698
mov 18446744073709551604(%rbp),%ebx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jle @_$LB3692
@_$LB3695
mov $@_$MSG242,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3692
mov 18446744073709551584(%rbp),%edi
mov 18446744073709551588(%rbp),%esi
lea (%rdi,%rsi),%ebx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jg @_$LB3713
mov 18446744073709551600(%rbp),%edi
mov 18446744073709551604(%rbp),%esi
lea (%rdi,%rsi),%ebx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jg @_$LB3713
@_$LB3716
mov 18446744073709551592(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3710
mov 18446744073709551596(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3710
@_$LB3719
@_$LB3713
mov $@_$MSG243,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3710
mov 18446744073709551608(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3725
mov 18446744073709551612(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3722
@_$LB3725
mov 18446744073709551608(%rbp),%edi
mov 18446744073709551612(%rbp),%esi
lea (%rdi,%rsi),%ebx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jg @_$LB3731
mov 18446744073709551584(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3731
@_$LB3746
mov 18446744073709551588(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3731
@_$LB3743
mov 18446744073709551592(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3731
@_$LB3740
mov 18446744073709551596(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3731
@_$LB3737
mov 18446744073709551600(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3731
@_$LB3734
mov 18446744073709551604(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3728
@_$LB3731
mov $@_$MSG244,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3728
mov 18446744073709551608(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3749
push %r8
push %r9
pushq $0
mov $@_$MSG245,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rax
jmp @scc_front__parse_basic_type$END
@_$LB3749
push %r8
push %r9
pushq $0
mov $@_$MSG246,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rax
jmp @scc_front__parse_basic_type$END
@_$LB3722
mov 18446744073709551584(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3751
mov 18446744073709551600(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3754
push %r8
push %r9
pushq $0
mov $@_$MSG247,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rax
jmp @scc_front__parse_basic_type$END
jmp @_$LB3755
@_$LB3754
push %r8
push %r9
pushq $0
mov $@_$MSG248,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rax
jmp @scc_front__parse_basic_type$END
@_$LB3755
jmp @_$LB3752
@_$LB3751
mov 18446744073709551584(%rbp),%edi
mov 18446744073709551588(%rbp),%ebx
lea (%rdi,%rbx),%esi
mov 18446744073709551592(%rbp),%ebx
lea (%rsi,%rbx),%edi
mov 18446744073709551596(%rbp),%ebx
lea (%rdi,%rbx),%esi
mov 18446744073709551600(%rbp),%ebx
lea (%rsi,%rbx),%edi
mov 18446744073709551604(%rbp),%esi
lea (%rdi,%rsi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3757
mov 18446744073709551592(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3760
mov 18446744073709551600(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3763
push %r8
push %r9
pushq $0
mov $@_$MSG249,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rax
jmp @scc_front__parse_basic_type$END
jmp @_$LB3764
@_$LB3763
push %r8
push %r9
pushq $0
mov $@_$MSG250,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rax
jmp @scc_front__parse_basic_type$END
@_$LB3764
jmp @_$LB3761
@_$LB3760
mov 18446744073709551596(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3766
mov 18446744073709551600(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3769
push %r8
push %r9
pushq $0
mov $@_$MSG251,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rax
jmp @scc_front__parse_basic_type$END
jmp @_$LB3770
@_$LB3769
push %r8
push %r9
pushq $0
mov $@_$MSG252,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rax
jmp @scc_front__parse_basic_type$END
@_$LB3770
jmp @_$LB3767
@_$LB3766
mov 18446744073709551600(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3772
push %r8
push %r9
pushq $0
mov $@_$MSG253,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rax
jmp @scc_front__parse_basic_type$END
jmp @_$LB3773
@_$LB3772
push %r8
push %r9
pushq $0
mov $@_$MSG254,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rax
jmp @scc_front__parse_basic_type$END
@_$LB3773
@_$LB3767
@_$LB3761
jmp @_$LB3758
@_$LB3757
mov $0,%rax
@_$LB3758
@_$LB3752
@scc_front__parse_basic_type$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_struct_union_type
push %rbp
mov %rsp,%rbp
sub $208,%rsp
push %rbx
push %rsi
push %rdi
mov @_$DATA+11691280,%rbx
mov $@_$MSG255,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3775
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG256,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
jmp @_$LB3776
@_$LB3775
mov $@_$MSG257,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3778
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG258,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
jmp @_$LB3779
@_$LB3778
mov $0,%rax
jmp @scc_front__parse_struct_union_type$END
@_$LB3779
@_$LB3776
call @scc_front__parse_id_null
mov %rax,%rbx
mov %rbx,%rsi
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG259,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3782
mov %rdi,%rax
jmp @scc_front__parse_struct_union_type$END
@_$LB3782
call @scc_front__parse_next
call @scc_front__parse_type
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3785
@_$LB3783
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
call @scc_front__parse_decl
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3788
mov $@_$MSG260,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3788
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG261,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3791
mov $@_$MSG262,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3791
call @scc_front__parse_next
call @scc_front__parse_type
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3783
@_$LB3785
mov $@_$MSG263,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3794
mov $@_$MSG264,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3794
call @scc_front__parse_next
mov %rdi,%rax
@scc_front__parse_struct_union_type$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_type
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
call @scc_front__parse_struct_union_type
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3797
mov %rsi,%rax
jmp @scc_front__parse_type$END
@_$LB3797
call @scc_front__parse_basic_type
mov %rax,%rbx
mov %rbx,%rax
@scc_front__parse_type$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_decl_array
push %rbp
mov %rsp,%rbp
sub $160,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov @_$DATA+11691296,%rdi
mov @_$DATA+11691312,%rsi
mov $@_$MSG265,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3800
mov $0,%rax
jmp @scc_front__parse_decl_array$END
@_$LB3800
call @scc_front__parse_next
mov $@_$MSG266,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3803
call @scc_front__parse_next
push %rsi
push %rdi
pushq $0
mov $@_$MSG267,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
pushq $0
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rsi,%rax
jmp @scc_front__parse_decl_array$END
@_$LB3803
call @scc_front__parse_expr_15
mov %rax,%rbx
mov %rbx,%r8
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3806
mov $@_$MSG268,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3806
mov $@_$MSG269,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3809
mov $@_$MSG270,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3809
call @scc_front__parse_next
push %rsi
push %rdi
pushq $0
mov $@_$MSG271,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
pushq $0
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
push %r8
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rsi,%rax
@scc_front__parse_decl_array$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_decl_arglist
push %rbp
mov %rsp,%rbp
sub $144,%rsp
push %rbx
push %rsi
push %rdi
mov @_$DATA+11691280,%rsi
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG272,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
pushq $0
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG273,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3811
mov %rdi,%rax
jmp @scc_front__parse_decl_arglist$END
jmp @_$LB3812
@_$LB3811
mov $@_$MSG274,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3815
call @scc_front__parse_next
mov $@_$MSG275,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3818
mov %rdi,%rax
jmp @scc_front__parse_decl_arglist$END
@_$LB3818
mov %rsi,%rax
mov %rax,@_$DATA+11691280
@_$LB3815
@_$LB3812
@_$LB3819
call @scc_front__parse_type
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3824
mov $@_$MSG276,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3824
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
call @scc_front__parse_decl
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3827
mov $@_$MSG277,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3827
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG278,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3830
jmp @_$LB3821
@_$LB3830
call @scc_front__parse_next
jmp @_$LB3819
@_$LB3821
mov %rdi,%rax
@scc_front__parse_decl_arglist$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_decl_function
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
mov $@_$MSG279,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3833
mov $0,%rax
jmp @scc_front__parse_decl_function$END
@_$LB3833
call @scc_front__parse_next
call @scc_front__parse_decl_arglist
mov %rax,%rbx
mov %rbx,%rsi
mov $@_$MSG280,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3836
mov $@_$MSG281,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3836
call @scc_front__parse_next
mov %rsi,%rax
@scc_front__parse_decl_function$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_decl_pointer
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
mov @_$DATA+11691280,%rdi
mov $@_$MSG282,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3839
mov $0,%rax
jmp @scc_front__parse_decl_pointer$END
@_$LB3839
call @scc_front__parse_next
call @scc_front__parse_decl
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3842
mov %rdi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_decl_pointer$END
@_$LB3842
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG283,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rdi,%rax
@scc_front__parse_decl_pointer$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_decl
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
push %rdi
mov @_$DATA+11691280,%rsi
call @scc_front__parse_decl_pointer
mov %rax,%rbx
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3845
mov %rdi,%rax
jmp @scc_front__parse_decl$END
@_$LB3845
mov $@_$MSG284,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3847
call @scc_front__parse_next
call @scc_front__parse_decl
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3851
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_decl$END
@_$LB3851
mov $@_$MSG285,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3854
mov $@_$MSG286,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3854
call @scc_front__parse_next
jmp @_$LB3848
@_$LB3847
call @scc_front__parse_id_null
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3857
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_decl$END
@_$LB3857
@_$LB3848
@_$LB3858
call @scc_front__parse_decl_array
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3862
mov 40(%rsi),%rbx
mov %rdi,(%rbx)
mov %rsi,%rdi
jmp @_$LB3863
@_$LB3862
call @scc_front__parse_decl_function
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3865
mov 40(%rsi),%rbx
mov %rdi,(%rbx)
mov %rsi,%rdi
jmp @_$LB3866
@_$LB3865
jmp @_$LB3860
@_$LB3866
@_$LB3863
jmp @_$LB3858
@_$LB3860
mov %rdi,%rax
@scc_front__parse_decl$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__type_global_init
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov $@_$MSG287,%rbx
mov %rbx,@_$DATA+11691904
mov $@_$MSG288,%rbx
mov %rbx,@_$DATA+11691912
mov $@_$MSG289,%rbx
mov %rbx,@_$DATA+11691920
mov $@_$MSG290,%rbx
mov %rbx,@_$DATA+11691928
mov $@_$MSG291,%rbx
mov %rbx,@_$DATA+11691936
mov $@_$MSG292,%rbx
mov %rbx,@_$DATA+11691944
mov $@_$MSG293,%rbx
mov %rbx,@_$DATA+11691952
mov $@_$MSG294,%rbx
mov %rbx,@_$DATA+11691960
@scc_front__type_global_init$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_asm
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
mov $@_$MSG295,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3869
mov $0,%rax
jmp @scc_front__parse_asm$END
@_$LB3869
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG296,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
call @scc_front__parse_cstr
mov %rax,%rbx
call @scc_front__parse_cstr
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
je @_$LB3872
mov $@_$MSG297,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3872
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
mov $@_$MSG298,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
call @scc_front__parse_next
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rdi,%rax
@scc_front__parse_asm$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_init
push %rbp
mov %rsp,%rbp
sub $128,%rsp
push %rbx
push %rsi
push %rdi
mov $@_$MSG299,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3875
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG300,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
@_$LB3876
call @scc_front__parse_init
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3881
mov $@_$MSG301,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3881
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG302,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3884
jmp @_$LB3878
@_$LB3884
call @scc_front__parse_next
jmp @_$LB3876
@_$LB3878
mov $@_$MSG303,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3887
mov $@_$MSG304,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3887
call @scc_front__parse_next
mov %rdi,%rax
jmp @scc_front__parse_init$END
@_$LB3875
call @scc_front__parse_expr_14
mov %rax,%rbx
mov %rbx,%rax
@scc_front__parse_init$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_decl_stmt
push %rbp
mov %rsp,%rbp
sub $192,%rsp
push %rbx
push %rsi
push %rdi
push %r8
call @scc_front__parse_type
mov %rax,%rbx
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3890
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG305,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
push %rdi
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
@_$LB3891
call @scc_front__parse_decl
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3896
mov $@_$MSG306,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3896
push %rdi
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG307,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3899
call @scc_front__parse_next
call @scc_front__parse_init
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3902
mov $@_$MSG308,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3902
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG309,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
push %rsi
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
@_$LB3899
mov $@_$MSG310,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3905
jmp @_$LB3893
@_$LB3905
call @scc_front__parse_next
jmp @_$LB3891
@_$LB3893
mov $@_$MSG311,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3908
mov $@_$MSG312,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3908
call @scc_front__parse_next
mov %r8,%rax
jmp @scc_front__parse_decl_stmt$END
@_$LB3890
mov $0,%rax
@scc_front__parse_decl_stmt$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_extern_decl_stmt
push %rbp
mov %rsp,%rbp
sub $192,%rsp
push %rbx
push %rsi
push %rdi
mov $@_$MSG313,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3911
mov $0,%rax
jmp @scc_front__parse_extern_decl_stmt$END
@_$LB3911
call @scc_front__parse_next
call @scc_front__parse_type
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3914
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG314,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
@_$LB3915
call @scc_front__parse_decl
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3920
mov $@_$MSG315,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3920
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG316,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3923
call @scc_front__parse_next
call @scc_front__parse_init
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3926
mov $@_$MSG317,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3926
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
@_$LB3923
mov $@_$MSG318,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3929
jmp @_$LB3917
@_$LB3929
call @scc_front__parse_next
jmp @_$LB3915
@_$LB3917
mov $@_$MSG319,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3932
mov $@_$MSG320,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3932
call @scc_front__parse_next
mov %rdi,%rax
jmp @scc_front__parse_extern_decl_stmt$END
@_$LB3914
mov $0,%rax
@scc_front__parse_extern_decl_stmt$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_static_decl_stmt
push %rbp
mov %rsp,%rbp
sub $192,%rsp
push %rbx
push %rsi
push %rdi
mov $@_$MSG321,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3935
mov $0,%rax
jmp @scc_front__parse_static_decl_stmt$END
@_$LB3935
call @scc_front__parse_next
call @scc_front__parse_type
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3938
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG322,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
@_$LB3939
call @scc_front__parse_decl
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3944
mov $@_$MSG323,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3944
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG324,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3947
call @scc_front__parse_next
call @scc_front__parse_init
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3950
mov $@_$MSG325,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3950
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
@_$LB3947
mov $@_$MSG326,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3953
jmp @_$LB3941
@_$LB3953
call @scc_front__parse_next
jmp @_$LB3939
@_$LB3941
mov $@_$MSG327,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3956
mov $@_$MSG328,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3956
call @scc_front__parse_next
mov %rdi,%rax
jmp @scc_front__parse_static_decl_stmt$END
@_$LB3938
mov $0,%rax
@scc_front__parse_static_decl_stmt$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_stmt_block
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
mov $@_$MSG329,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3959
mov $0,%rax
jmp @scc_front__parse_stmt_block$END
@_$LB3959
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG330,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
call @scc_front__parse_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB3962
@_$LB3960
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
call @scc_front__parse_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3960
@_$LB3962
mov $@_$MSG331,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3965
mov $@_$MSG332,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3965
call @scc_front__parse_next
mov %rdi,%rax
@scc_front__parse_stmt_block$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_if_stmt
push %rbp
mov %rsp,%rbp
sub $224,%rsp
push %rbx
push %rsi
push %rdi
mov $@_$MSG333,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3968
mov $0,%rax
jmp @scc_front__parse_if_stmt$END
@_$LB3968
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG334,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
mov $@_$MSG335,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3971
mov $@_$MSG336,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3971
call @scc_front__parse_next
call @scc_front__parse_expr_15
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3974
mov $@_$MSG337,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3974
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG338,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3977
mov $@_$MSG339,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3977
call @scc_front__parse_next
call @scc_front__parse_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3980
mov $@_$MSG340,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3980
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG341,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB3983
call @scc_front__parse_next
call @scc_front__parse_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3986
mov $@_$MSG342,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3986
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG343,%rbx
mov %rbx,(%rdi)
@_$LB3983
mov %rdi,%rax
@scc_front__parse_if_stmt$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_while_stmt
push %rbp
mov %rsp,%rbp
sub $176,%rsp
push %rbx
push %rsi
push %rdi
mov $@_$MSG344,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3989
mov $0,%rax
jmp @scc_front__parse_while_stmt$END
@_$LB3989
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG345,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
mov $@_$MSG346,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3992
mov $@_$MSG347,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3992
call @scc_front__parse_next
call @scc_front__parse_expr_15
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB3995
mov $@_$MSG348,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3995
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG349,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB3998
mov $@_$MSG350,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB3998
call @scc_front__parse_next
call @scc_front__parse_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4001
mov $@_$MSG351,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4001
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rdi,%rax
@scc_front__parse_while_stmt$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_dowhile_stmt
push %rbp
mov %rsp,%rbp
sub $240,%rsp
push %rbx
push %rsi
push %rdi
mov $@_$MSG352,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4004
mov $0,%rax
jmp @scc_front__parse_dowhile_stmt$END
@_$LB4004
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG353,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
call @scc_front__parse_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4007
mov $@_$MSG354,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4007
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG355,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4010
mov $@_$MSG356,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4010
call @scc_front__parse_next
mov $@_$MSG357,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4013
mov $@_$MSG358,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4013
call @scc_front__parse_next
call @scc_front__parse_expr_15
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4016
mov $@_$MSG359,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4016
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG360,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4019
mov $@_$MSG361,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4019
call @scc_front__parse_next
mov $@_$MSG362,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4022
mov $@_$MSG363,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4022
call @scc_front__parse_next
mov %rdi,%rax
@scc_front__parse_dowhile_stmt$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_return_stmt
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
mov $@_$MSG364,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4025
mov $0,%rax
jmp @scc_front__parse_return_stmt$END
@_$LB4025
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG365,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
call @scc_front__parse_expr_15
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4028
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
@_$LB4028
mov $@_$MSG366,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4031
mov $@_$MSG367,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4031
call @scc_front__parse_next
mov %rdi,%rax
@scc_front__parse_return_stmt$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_break_stmt
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
mov $@_$MSG368,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4034
mov $0,%rax
jmp @scc_front__parse_break_stmt$END
@_$LB4034
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG369,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
call @scc_front__parse_next
mov $@_$MSG370,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4037
mov $@_$MSG371,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4037
call @scc_front__parse_next
mov %rsi,%rax
@scc_front__parse_break_stmt$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_goto_stmt
push %rbp
mov %rsp,%rbp
sub $112,%rsp
push %rbx
push %rsi
push %rdi
mov $@_$MSG372,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4040
mov $0,%rax
jmp @scc_front__parse_goto_stmt$END
@_$LB4040
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG373,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
call @scc_front__parse_id
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4043
mov $@_$MSG374,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4043
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG375,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4046
mov $@_$MSG376,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4046
call @scc_front__parse_next
mov %rdi,%rax
@scc_front__parse_goto_stmt$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_label_stmt
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov @_$DATA+11691280,%rsi
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG377,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
call @scc_front__parse_id
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4049
push %r8
call @scc_front__syntax_tree_release
add $8,%rsp
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_label_stmt$END
@_$LB4049
push %rdi
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG378,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4052
push %r8
call @scc_front__syntax_tree_release
add $8,%rsp
mov %rsi,%rax
mov %rax,@_$DATA+11691280
mov $0,%rax
jmp @scc_front__parse_label_stmt$END
@_$LB4052
call @scc_front__parse_next
mov %r8,%rax
@scc_front__parse_label_stmt$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_namespace
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
mov $@_$MSG379,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4055
mov $0,%rax
jmp @scc_front__parse_namespace$END
@_$LB4055
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG380,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
call @scc_front__parse_next
call @scc_front__parse_id_null
mov %rax,%rbx
mov %rbx,%rsi
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG381,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4058
mov $@_$MSG382,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4058
call @scc_front__parse_next
mov %rdi,%rax
@scc_front__parse_namespace$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_stmt
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
call @scc_front__parse_label_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4061
mov %rsi,%rax
jmp @scc_front__parse_stmt$END
@_$LB4061
call @scc_front__parse_stmt_block
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4064
mov %rsi,%rax
jmp @scc_front__parse_stmt$END
@_$LB4064
call @scc_front__parse_static_decl_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4067
mov %rsi,%rax
jmp @scc_front__parse_stmt$END
@_$LB4067
call @scc_front__parse_extern_decl_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4070
mov %rsi,%rax
jmp @scc_front__parse_stmt$END
@_$LB4070
call @scc_front__parse_decl_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4073
mov %rsi,%rax
jmp @scc_front__parse_stmt$END
@_$LB4073
call @scc_front__parse_expr
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4076
mov %rsi,%rax
jmp @scc_front__parse_stmt$END
@_$LB4076
call @scc_front__parse_asm
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4079
mov %rsi,%rax
jmp @scc_front__parse_stmt$END
@_$LB4079
call @scc_front__parse_if_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4082
mov %rsi,%rax
jmp @scc_front__parse_stmt$END
@_$LB4082
call @scc_front__parse_while_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4085
mov %rsi,%rax
jmp @scc_front__parse_stmt$END
@_$LB4085
call @scc_front__parse_dowhile_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4088
mov %rsi,%rax
jmp @scc_front__parse_stmt$END
@_$LB4088
call @scc_front__parse_return_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4091
mov %rsi,%rax
jmp @scc_front__parse_stmt$END
@_$LB4091
call @scc_front__parse_break_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4094
mov %rsi,%rax
jmp @scc_front__parse_stmt$END
@_$LB4094
call @scc_front__parse_goto_stmt
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4097
mov %rsi,%rax
jmp @scc_front__parse_stmt$END
@_$LB4097
mov $@_$MSG383,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4100
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG384,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
call @scc_front__parse_next
mov %rsi,%rax
jmp @scc_front__parse_stmt$END
@_$LB4100
mov $0,%rax
@scc_front__parse_stmt$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_fundef
push %rbp
mov %rsp,%rbp
sub $224,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov $0,%r9d
call @scc_front__parse_type
mov %rax,%rbx
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4103
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG385,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
push %rdi
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
@_$LB4104
call @scc_front__parse_decl
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4109
mov $@_$MSG386,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4109
push %rdi
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG387,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4112
call @scc_front__parse_next
call @scc_front__parse_init
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4115
mov $@_$MSG388,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4115
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG389,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc_front__st_add_subtree
add $16,%rsp
push %rsi
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
@_$LB4112
add $1,%r9d
mov $@_$MSG390,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4118
jmp @_$LB4106
@_$LB4118
call @scc_front__parse_next
jmp @_$LB4104
@_$LB4106
mov $@_$MSG391,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4121
mov %r9d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB4124
mov $@_$MSG392,%rbx
push %rbx
call @scc_front__parse_cstr
mov %rax,%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4124
@_$LB4127
call @scc_front__parse_stmt_block
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4130
mov $@_$MSG393,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4130
push %rdi
push %r8
call @scc_front__st_add_subtree
add $16,%rsp
mov $@_$MSG394,%rbx
mov %rbx,(%r8)
mov %r8,%rax
jmp @scc_front__parse_fundef$END
@_$LB4124
mov $@_$MSG395,%rbx
push %rbx
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
call @scc_front__error
add $24,%rsp
@_$LB4121
call @scc_front__parse_next
mov %r8,%rax
jmp @scc_front__parse_fundef$END
@_$LB4103
mov $0,%rax
@scc_front__parse_fundef$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_file
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
push %rdi
mov @_$DATA+11691312,%rax
push %rax
mov @_$DATA+11691296,%rax
push %rax
pushq $0
mov $@_$MSG396,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
@_$LB4131
call @scc_front__parse_fundef
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4135
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
jmp @_$LB4136
@_$LB4135
call @scc_front__parse_namespace
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4138
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
jmp @_$LB4139
@_$LB4138
call @scc_front__parse_asm
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4141
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
jmp @_$LB4142
@_$LB4141
jmp @_$LB4133
@_$LB4142
@_$LB4139
@_$LB4136
jmp @_$LB4131
@_$LB4133
mov %rdi,%rax
@scc_front__parse_file$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__parse_global_init
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov $1,%rax
mov %rax,@_$DATA+11691296
mov $1,%rax
mov %rax,@_$DATA+11691312
mov $@_$MSG397,%rbx
mov %rbx,@_$DATA+11691328
mov $@_$MSG398,%rbx
mov %rbx,@_$DATA+11691336
mov $@_$MSG399,%rbx
mov %rbx,@_$DATA+11691344
mov $@_$MSG400,%rbx
mov %rbx,@_$DATA+11691352
mov $@_$MSG401,%rbx
mov %rbx,@_$DATA+11691360
mov $@_$MSG402,%rbx
mov %rbx,@_$DATA+11691368
mov $@_$MSG403,%rbx
mov %rbx,@_$DATA+11691376
mov $@_$MSG404,%rbx
mov %rbx,@_$DATA+11691384
mov $@_$MSG405,%rbx
mov %rbx,@_$DATA+11691392
mov $@_$MSG406,%rbx
mov %rbx,@_$DATA+11691400
mov $@_$MSG407,%rbx
mov %rbx,@_$DATA+11691408
mov $@_$MSG408,%rbx
mov %rbx,@_$DATA+11691416
mov $@_$MSG409,%rbx
mov %rbx,@_$DATA+11691424
mov $@_$MSG410,%rbx
mov %rbx,@_$DATA+11691432
mov $@_$MSG411,%rbx
mov %rbx,@_$DATA+11691440
mov $@_$MSG412,%rbx
mov %rbx,@_$DATA+11691448
mov $@_$MSG413,%rbx
mov %rbx,@_$DATA+11691456
mov $@_$MSG414,%rbx
mov %rbx,@_$DATA+11691464
mov $@_$MSG415,%rbx
mov %rbx,@_$DATA+11691472
mov $@_$MSG416,%rbx
mov %rbx,@_$DATA+11691480
mov $@_$MSG417,%rbx
mov %rbx,@_$DATA+11691488
mov $@_$MSG418,%rbx
mov %rbx,@_$DATA+11691496
@scc_front__parse_global_init$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__syntax_tree_dup
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov 16(%rbp),%r13
mov $0,%r9d
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4145
mov $0,%rax
jmp @scc_front__syntax_tree_dup$END
@_$LB4145
pushq $48
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
pushq $48
push %r13
push %r12
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov 8(%r12),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4148
mov 8(%r13),%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,8(%r12)
@_$LB4148
mov 32(%r12),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4151
mov 32(%r12),%rsi
mov %rsi,%rbx
shl $3,%rbx
push %rbx
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,40(%r12)
mov 32(%r12),%rbx
mov %r9d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4154
@_$LB4152
mov 40(%r12),%rsi
mov %r9d,%ebx
shl $3,%ebx
lea (%rsi,%rbx),%r8
mov 40(%r13),%rdi
mov %r9d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%r8)
add $1,%r9d
mov 32(%r12),%rbx
mov %r9d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4152
@_$LB4154
@_$LB4151
mov %r12,%rax
@scc_front__syntax_tree_dup$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__get_namespace
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov @_$DATA+11691984,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4160
mov $@_$MSG419,%rbx
push %rbx
mov @_$DATA+11691984,%rax
push %rax
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4157
@_$LB4160
mov $0,%rax
jmp @scc_front__get_namespace$END
@_$LB4157
mov @_$DATA+11691984,%rax
@scc_front__get_namespace$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__expr_ret_release
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
call @scc_front__syntax_tree_release
add $8,%rsp
mov 32(%rsi),%rbx
push %rbx
call @scc_front__syntax_tree_release
add $8,%rsp
@scc_front__expr_ret_release$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front___struct_tab_find
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
push %rdi
call @scc_front__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r8,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4163
@_$LB4161
push %rdi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4166
mov %rsi,%rax
jmp @scc_front___struct_tab_find$END
@_$LB4166
mov 16(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4161
@_$LB4163
mov $0,%rax
@scc_front___struct_tab_find$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__struct_tab_find
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
call @scc_front__get_namespace
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4169
push %rsi
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov $@_$MSG420,%rbx
push %rbx
push %rdi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %r8
push %rdi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %rdi
push %r9
call @scc_front___struct_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rdi
call @free
add $8,%rsp
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4172
mov %rsi,%rax
jmp @scc_front__struct_tab_find$END
@_$LB4172
@_$LB4169
push %r8
push %r9
call @scc_front___struct_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
@scc_front__struct_tab_find$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front___struct_tab_add
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 32(%rbp),%rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
push %r9
call @scc_front__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r8d
pushq $8
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r9,(%rdi)
mov %rsi,8(%rdi)
mov %r8d,%ebx
shl $3,%ebx
lea (%r12,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,16(%rdi)
mov %r8d,%esi
shl $3,%esi
lea (%r12,%rsi),%rbx
mov %rdi,(%rbx)
@scc_front___struct_tab_add$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__struct_tab_add
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
mov 32(%rbp),%rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
call @scc_front__get_namespace
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4174
push %rsi
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov $@_$MSG421,%rbx
push %rbx
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %r8
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
push %r9
call @scc_front___struct_tab_add
add $24,%rsp
jmp @_$LB4175
@_$LB4174
push %rdi
push %r8
push %r9
call @scc_front___struct_tab_add
add $24,%rsp
@_$LB4175
@scc_front__struct_tab_add$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__id_tab_find
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
push %rdi
call @scc_front__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r8,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4178
@_$LB4176
push %rdi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4181
mov %rsi,%rax
jmp @scc_front__id_tab_find$END
@_$LB4181
mov 24(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4176
@_$LB4178
mov $0,%rax
@scc_front__id_tab_find$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__id_tab_add
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 48(%rbp),%rsi
push %rdi
push %r8
push %r9
mov 40(%rbp),%r9
push %r12
mov 32(%rbp),%r12
push %r13
mov 24(%rbp),%r13
push %r14
mov 16(%rbp),%r14
push %r13
call @scc_front__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r8d
pushq $40
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r13,(%rdi)
mov %r12,8(%rdi)
mov %r9,16(%rdi)
movslq %esi,%rsi
mov %rsi,32(%rdi)
mov %r8d,%ebx
shl $3,%ebx
lea (%r14,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,24(%rdi)
mov %r8d,%esi
shl $3,%esi
lea (%r14,%rsi),%rbx
mov %rdi,(%rbx)
@scc_front__id_tab_add$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__id_find
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
mov @_$DATA+11716520,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4184
@_$LB4182
mov $@_$MSG422,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 8168(%rsi),%rbx
push %rbx
push %r8
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r8
mov $@_$MSG423,%rbx
push %rbx
push %r8
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r8
push %r9
push %r8
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r8
push %r8
push %rsi
call @scc_front__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4187
push %r8
call @free
add $8,%rsp
mov %rdi,%rax
jmp @scc_front__id_find$END
@_$LB4187
push %r8
lea @_$DATA+11692000,%rbx
add $16,%rbx
push %rbx
call @scc_front__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4190
push %r8
call @free
add $8,%rsp
mov %rdi,%rax
jmp @scc_front__id_find$END
@_$LB4190
push %r8
call @free
add $8,%rsp
mov 8176(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4182
@_$LB4184
call @scc_front__get_namespace
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4193
push %rsi
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov $@_$MSG424,%rbx
push %rbx
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %r9
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
lea @_$DATA+11692000,%rbx
add $16,%rbx
push %rbx
call @scc_front__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %rsi
call @free
add $8,%rsp
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4196
mov %rdi,%rax
jmp @scc_front__id_find$END
@_$LB4196
@_$LB4193
push %r9
lea @_$DATA+11692000,%rbx
add $16,%rbx
push %rbx
call @scc_front__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
@scc_front__id_find$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__id_find2
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
mov @_$DATA+11716520,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4199
mov $@_$MSG425,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 8168(%rsi),%rbx
push %rbx
push %r8
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r8
mov $@_$MSG426,%rbx
push %rbx
push %r8
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r8
push %r9
push %r8
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r8
push %r8
push %rsi
call @scc_front__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4202
push %r8
call @free
add $8,%rsp
mov %rdi,%rax
jmp @scc_front__id_find2$END
@_$LB4202
push %r8
lea @_$DATA+11692000,%rbx
add $16,%rbx
push %rbx
call @scc_front__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4205
push %r8
call @free
add $8,%rsp
mov %rdi,%rax
jmp @scc_front__id_find2$END
@_$LB4205
push %r8
call @free
add $8,%rsp
mov $0,%rax
jmp @scc_front__id_find2$END
@_$LB4199
call @scc_front__get_namespace
mov %rax,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4208
push %rsi
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov $@_$MSG427,%rbx
push %rbx
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %r9
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
lea @_$DATA+11692000,%rbx
add $16,%rbx
push %rbx
call @scc_front__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %rsi
call @free
add $8,%rsp
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4211
mov %rdi,%rax
jmp @scc_front__id_find2$END
@_$LB4211
@_$LB4208
push %r9
lea @_$DATA+11692000,%rbx
add $16,%rbx
push %rbx
call @scc_front__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
@scc_front__id_find2$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_stack_push
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
pushq $8184
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
pushq $8184
pushq $0
push %rsi
call @memset
mov %rax,%rbx
add $24,%rsp
mov @_$DATA+11692000,%rbx
mov %rbx,8168(%rsi)
mov @_$DATA+11692000,%rbx
add $1,%rbx
mov %rbx,@_$DATA+11692000
mov @_$DATA+11716520,%rbx
mov %rbx,8176(%rsi)
mov %rsi,@_$DATA+11716520
@scc_front__translate_stack_push$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_stack_pop
push %rbp
mov %rsp,%rbp
sub $112,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov $0,%edi
mov @_$DATA+11716520,%rbx
mov %rbx,%r9
mov %edi,%eax
mov $1021,%ecx
cmp %ecx,%eax
jge @_$LB4214
@_$LB4212
mov %edi,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4217
@_$LB4215
mov %r8,%rsi
mov 24(%rsi),%rbx
mov %rbx,%r8
mov 8(%rsi),%rbx
push %rbx
call @scc_front__syntax_tree_release
add $8,%rsp
mov 16(%rsi),%rbx
push %rbx
call @scc_front__syntax_tree_release
add $8,%rsp
mov (%rsi),%rbx
push %rbx
call @free
add $8,%rsp
push %rsi
call @free
add $8,%rsp
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4215
@_$LB4217
add $1,%edi
mov %edi,%eax
mov $1021,%ecx
cmp %ecx,%eax
jl @_$LB4212
@_$LB4214
mov 8176(%r9),%rbx
mov %rbx,@_$DATA+11716520
push %r9
call @free
add $8,%rsp
@scc_front__translate_stack_pop$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__control_label_push
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
pushq $32
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov @_$DATA+11692008,%rbx
add $3,%rbx
mov %rbx,@_$DATA+11692008
mov @_$DATA+11692008,%rbx
mov %rbx,(%rdi)
mov @_$DATA+11692008,%rsi
mov %rsi,%rbx
add $1,%rbx
mov %rbx,8(%rdi)
mov @_$DATA+11692008,%rsi
mov %rsi,%rbx
add $2,%rbx
mov %rbx,16(%rdi)
mov @_$DATA+11716544,%rbx
mov %rbx,24(%rdi)
mov %rdi,@_$DATA+11716544
@scc_front__control_label_push$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__control_label_pop
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov @_$DATA+11716544,%rbx
mov %rbx,%rsi
mov 24(%rsi),%rbx
mov %rbx,@_$DATA+11716544
push %rsi
call @free
add $8,%rsp
@scc_front__control_label_pop$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__is_global
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov @_$DATA+11716520,%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4220
mov $1,%rax
jmp @scc_front__is_global$END
@_$LB4220
mov $0,%rax
@scc_front__is_global$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__outc
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
mov 16(%rbp),%rbx
movsbq %bl,%rbx
push %rbx
call @scc__stream_putc
add $8,%rsp
@scc_front__outc$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__out_flush
push %rbp
mov %rsp,%rbp
sub $32,%rsp
@scc_front__out_flush$END
mov %rbp,%rsp
pop %rbp
ret
@scc_front__c_write
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
mov @_$DATA+11716528,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4223
jmp @scc_front__c_write$END
@_$LB4223
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4226
@_$LB4224
mov (%rdi),%bl
movsbq %bl,%rbx
push %rbx
call @scc_front__outc
add $8,%rsp
add $1,%rdi
sub $1,%esi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4224
@_$LB4226
@scc_front__c_write$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__c_write_num
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
@scc_front__c_write_num$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__get_decl_id
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov $@_$MSG428,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4229
@_$LB4227
mov 40(%rdi),%rsi
mov (%rsi),%rbx
mov %rbx,%rdi
mov $@_$MSG429,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4227
@_$LB4229
mov 8(%rdi),%rbx
mov %rbx,%rax
@scc_front__get_decl_id$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__get_decl_type
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov $@_$MSG430,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4232
mov %rdi,%rax
jmp @scc_front__get_decl_type$END
@_$LB4232
mov $@_$MSG431,%rbx
push %rbx
mov 40(%rdi),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4235
@_$LB4233
mov 40(%rdi),%rsi
mov (%rsi),%rbx
mov %rbx,%rdi
mov $@_$MSG432,%rbx
push %rbx
mov 40(%rdi),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4233
@_$LB4235
mov %rdi,%rax
@scc_front__get_decl_type$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__decl_next
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
push %r8
push %r9
push %r12
mov $0,%rdi
push %rsi
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov $@_$MSG433,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4238
mov %r12,%rax
jmp @scc_front__decl_next$END
@_$LB4238
push %rsi
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov 40(%r9),%rsi
mov (%rsi),%rbx
mov %rbx,%r9
push %r9
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r12,%r9
mov $@_$MSG434,%rbx
push %rbx
mov 40(%r9),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4241
@_$LB4239
mov %r9,%rdi
mov 40(%r9),%rsi
mov (%rsi),%rbx
mov %rbx,%r9
mov $@_$MSG435,%rbx
push %rbx
mov 40(%r9),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4239
@_$LB4241
push %r9
call @scc_front__syntax_tree_release
add $8,%rsp
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4243
mov %r8,%r12
jmp @_$LB4244
@_$LB4243
mov 40(%rdi),%rbx
mov %r8,(%rbx)
@_$LB4244
mov %r12,%rax
@scc_front__decl_next$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__struct_check
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 16(%rbp),%r12
mov $1,%r9d
mov 32(%r12),%rbx
mov %r9d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4247
@_$LB4245
mov 40(%r12),%rdi
mov %r9d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%r8
mov %r9d,%ebx
add $1,%ebx
mov %r9d,%esi
add $1,%esi
mov 40(%r12),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov $@_$MSG436,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4250
mov $@_$MSG437,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4253
mov 40(%r8),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
lea @_$DATA+11692000,%rbx
add $8184,%rbx
push %rbx
call @scc_front__struct_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4256
mov $@_$MSG438,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4256
@_$LB4253
mov $@_$MSG439,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4259
mov 40(%r8),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
lea @_$DATA+11692000,%rbx
add $16352,%rbx
push %rbx
call @scc_front__struct_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4262
mov $@_$MSG440,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4262
@_$LB4259
@_$LB4250
add $2,%r9d
mov 32(%r12),%rbx
mov %r9d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4245
@_$LB4247
@scc_front__struct_check$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__decl_check
push %rbp
mov %rsp,%rbp
sub $288,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
mov 24(%rbp),%r15
push %r10
mov 16(%rbp),%r10
mov %r15,%r14
mov $@_$MSG441,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4265
@_$LB4263
mov $@_$MSG442,%rbx
push %rbx
mov 40(%r15),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4268
mov $@_$MSG443,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4271
mov $@_$MSG444,%rbx
push %rbx
mov 24(%r15),%rbx
push %rbx
mov 16(%r15),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4271
mov $@_$MSG445,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4277
mov $@_$MSG446,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4274
@_$LB4277
mov $@_$MSG447,%rbx
push %rbx
mov 24(%r15),%rbx
push %rbx
mov 16(%r15),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4274
@_$LB4268
mov $@_$MSG448,%rbx
push %rbx
mov 40(%r15),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4283
mov $@_$MSG449,%rbx
push %rbx
mov 40(%r15),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4280
@_$LB4283
mov $@_$MSG450,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4286
mov $@_$MSG451,%rbx
push %rbx
mov 24(%r15),%rbx
push %rbx
mov 16(%r15),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4286
@_$LB4280
mov $@_$MSG452,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4289
mov $1,%r13d
mov 32(%r15),%rbx
mov %r13d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4292
@_$LB4290
mov %r13d,%ebx
add $1,%ebx
mov %r13d,%esi
add $1,%esi
mov 40(%r15),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
mov 40(%r15),%rdi
mov %r13d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__decl_check
add $16,%rsp
mov %r13d,%ebx
add $1,%ebx
mov %r13d,%esi
add $1,%esi
mov 40(%r15),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__is_pointer
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4295
mov $@_$MSG453,%rbx
push %rbx
mov 40(%r15),%rdi
mov %r13d,%esi
shl $3,%esi
lea (%rdi,%rsi),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4298
mov $@_$MSG454,%rbx
push %rbx
mov 40(%r15),%rdi
mov %r13d,%esi
shl $3,%esi
lea (%rdi,%rsi),%rbx
mov (%rbx),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 40(%r15),%rdi
mov %r13d,%esi
shl $3,%esi
lea (%rdi,%rsi),%rbx
mov (%rbx),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4298
mov $@_$MSG455,%rbx
push %rbx
mov 40(%r15),%rdi
mov %r13d,%esi
shl $3,%esi
lea (%rdi,%rsi),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4301
mov $@_$MSG456,%rbx
push %rbx
mov 40(%r15),%rdi
mov %r13d,%esi
shl $3,%esi
lea (%rdi,%rsi),%rbx
mov (%rbx),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 40(%r15),%rdi
mov %r13d,%esi
shl $3,%esi
lea (%rdi,%rsi),%rbx
mov (%rbx),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4301
@_$LB4295
add $2,%r13d
mov 32(%r15),%rbx
mov %r13d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4290
@_$LB4292
@_$LB4289
mov 40(%r15),%rsi
mov (%rsi),%rbx
mov %rbx,%r15
mov $@_$MSG457,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4263
@_$LB4265
mov %r14,%r15
mov $@_$MSG458,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4304
mov $@_$MSG459,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4307
mov $@_$MSG460,%rbx
push %rbx
mov 24(%r10),%rbx
push %rbx
mov 16(%r10),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4307
@_$LB4304
mov $@_$MSG461,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4310
mov $@_$MSG462,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4313
mov $@_$MSG463,%rbx
push %rbx
mov 24(%r10),%rbx
push %rbx
mov 16(%r10),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4313
mov $@_$MSG464,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4316
mov $@_$MSG465,%rbx
push %rbx
mov 24(%r10),%rbx
push %rbx
mov 16(%r10),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4316
@_$LB4310
mov $@_$MSG466,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4322
mov $@_$MSG467,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4319
@_$LB4322
mov $@_$MSG468,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4325
mov $@_$MSG469,%rbx
push %rbx
mov 24(%r10),%rbx
push %rbx
mov 16(%r10),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4325
@_$LB4319
mov $@_$MSG470,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4331
mov $@_$MSG471,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4328
@_$LB4331
mov $1,%r13d
mov 32(%r10),%rbx
mov %r13d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4334
@_$LB4332
mov %r13d,%ebx
add $1,%ebx
mov %r13d,%esi
add $1,%esi
mov 40(%r10),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
mov 40(%r10),%rdi
mov %r13d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__decl_check
add $16,%rsp
mov %r13d,%ebx
add $1,%ebx
mov %r13d,%esi
add $1,%esi
mov 40(%r10),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r14
mov $@_$MSG472,%rbx
push %rbx
mov (%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4337
mov $@_$MSG473,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4337
mov %r13d,%ebx
add $1,%ebx
mov %r13d,%esi
add $1,%esi
mov 40(%r10),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov %r13d,%ebx
add $2,%ebx
mov %ebx,%r12d
mov 32(%r10),%rbx
mov %r12d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4340
@_$LB4338
mov %r12d,%ebx
add $1,%ebx
mov %r12d,%esi
add $1,%esi
mov 40(%r10),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r12d,%ebx
add $1,%ebx
mov %r12d,%esi
add $1,%esi
mov 40(%r10),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%r14
push %r8
push %r9
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4343
mov $@_$MSG474,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4343
add $2,%r12d
mov 32(%r10),%rbx
mov %r12d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4338
@_$LB4340
add $2,%r13d
mov 32(%r10),%rbx
mov %r13d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4332
@_$LB4334
mov $@_$MSG475,%rbx
push %rbx
mov 40(%r10),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4345
mov 32(%r10),%rbx
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB4349
mov $@_$MSG476,%rbx
push %rbx
mov 24(%r10),%rbx
push %rbx
mov 16(%r10),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4349
jmp @_$LB4346
@_$LB4345
mov 32(%r10),%rbx
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB4352
push %r15
call @scc_front__is_pointer
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4352
@_$LB4358
pushq $0
push %r10
call @scc_front__get_struct_member_list
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4352
@_$LB4355
mov $@_$MSG477,%rbx
push %rbx
mov 24(%r10),%rbx
push %rbx
mov 16(%r10),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4352
@_$LB4346
push %r10
call @scc_front__struct_check
add $8,%rsp
@_$LB4328
@scc_front__decl_check$END
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__get_struct_member_list
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $@_$MSG478,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4360
mov $0,%edi
jmp @_$LB4361
@_$LB4360
mov $@_$MSG479,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4363
mov $1,%edi
jmp @_$LB4364
@_$LB4363
mov $0,%rax
jmp @scc_front__get_struct_member_list$END
@_$LB4364
@_$LB4361
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4367
mov 32(%r8),%rbx
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
je @_$LB4367
@_$LB4370
mov $@_$MSG480,%rbx
push %rbx
mov 40(%r8),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4373
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4375
mov 40(%r8),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
lea @_$DATA+11692000,%rbx
add $16352,%rbx
push %rbx
call @scc_front__struct_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4379
mov $@_$MSG481,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4379
push %r8
mov 40(%r8),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
lea @_$DATA+11692000,%rbx
add $16352,%rbx
push %rbx
call @scc_front__struct_tab_add
add $24,%rsp
jmp @_$LB4376
@_$LB4375
mov 40(%r8),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
lea @_$DATA+11692000,%rbx
add $8184,%rbx
push %rbx
call @scc_front__struct_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4382
mov $@_$MSG482,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4382
push %r8
mov 40(%r8),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
lea @_$DATA+11692000,%rbx
add $8184,%rbx
push %rbx
call @scc_front__struct_tab_add
add $24,%rsp
@_$LB4376
@_$LB4373
mov %r8,%rax
jmp @scc_front__get_struct_member_list$END
@_$LB4367
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4384
mov 40(%r8),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
lea @_$DATA+11692000,%rbx
add $16352,%rbx
push %rbx
call @scc_front__struct_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
jmp @_$LB4385
@_$LB4384
mov 40(%r8),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
lea @_$DATA+11692000,%rbx
add $8184,%rbx
push %rbx
call @scc_front__struct_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
@_$LB4385
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4388
mov $0,%rax
jmp @scc_front__get_struct_member_list$END
@_$LB4388
mov 8(%rsi),%rbx
mov %rbx,%rax
@scc_front__get_struct_member_list$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__type_cmp
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 32(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
mov 40(%rbp),%r9
push %r12
mov 24(%rbp),%r12
mov (%rsi),%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4391
mov $1,%rax
jmp @scc_front__type_cmp$END
@_$LB4391
mov $@_$MSG483,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4397
mov $@_$MSG484,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4394
@_$LB4397
mov 40(%rsi),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
mov 40(%rdi),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4400
mov $1,%rax
jmp @scc_front__type_cmp$END
@_$LB4400
@_$LB4394
mov (%r9),%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4403
@_$LB4401
mov $@_$MSG485,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4406
mov $0,%rax
jmp @scc_front__type_cmp$END
@_$LB4406
mov $@_$MSG486,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4409
mov $1,%r8d
mov 32(%r12),%rsi
mov 32(%r9),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
je @_$LB4412
mov $1,%rax
jmp @scc_front__type_cmp$END
@_$LB4412
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4415
@_$LB4413
mov %r8d,%ebx
add $1,%ebx
mov %r8d,%esi
add $1,%esi
mov 40(%r9),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
mov 40(%r9),%rdi
mov %r8d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
mov %r8d,%ebx
add $1,%ebx
mov %r8d,%esi
add $1,%esi
mov 40(%r12),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
mov 40(%r12),%rdi
mov %r8d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__type_cmp
mov %eax,%ebx
add $32,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4418
mov $1,%rax
jmp @scc_front__type_cmp$END
@_$LB4418
add $2,%r8d
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4413
@_$LB4415
@_$LB4409
mov 40(%r12),%rsi
mov (%rsi),%rbx
mov %rbx,%r12
mov 40(%r9),%rsi
mov (%rsi),%rbx
mov %rbx,%r9
mov (%r9),%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4401
@_$LB4403
mov $1,%rax
@scc_front__type_cmp$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__check_decl1
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 32(%rbp),%rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4421
push %rdi
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
@_$LB4421
mov $@_$MSG487,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4424
jmp @scc_front__check_decl1$END
@_$LB4424
push %rsi
call @scc_front__id_find2
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4427
mov 16(%rsi),%rbx
push %rbx
mov 8(%rsi),%rbx
push %rbx
push %rdi
push %r8
call @scc_front__type_cmp
mov %eax,%ebx
add $32,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4430
mov $@_$MSG488,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4430
@_$LB4427
@scc_front__check_decl1$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__check_decl2
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
mov 32(%rbp),%rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB4433
push %rdi
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
@_$LB4433
mov $@_$MSG489,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4436
mov $0,%rax
jmp @scc_front__check_decl2$END
@_$LB4436
push %rsi
call @scc_front__id_find2
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4439
mov 32(%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4442
mov $@_$MSG490,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4442
mov 16(%rsi),%rbx
push %rbx
mov 8(%rsi),%rbx
push %rbx
push %rdi
push %r8
call @scc_front__type_cmp
mov %eax,%ebx
add $32,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4445
mov $@_$MSG491,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4445
mov $1,%rax
jmp @scc_front__check_decl2$END
@_$LB4439
mov $0,%rax
@scc_front__check_decl2$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__add_decl
push %rbp
mov %rsp,%rbp
sub $608,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 56(%rbp),%r9
push %r12
push %r13
push %r14
push %r15
mov 48(%rbp),%r15
push %r10
mov 40(%rbp),%r10
push %r11
mov 32(%rbp),%r11
mov $0,%r13d
mov $18446744073709551615,%r12
mov 24(%rbp),%rax
push %rax
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r15,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4448
mov $@_$MSG492,%rbx
push %rbx
mov 24(%r15),%rbx
push %rbx
mov 16(%r15),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4448
mov $@_$MSG493,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4450
mov $1,%r14d
mov $1,%r13d
mov 24(%rbp),%rax
push %rax
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %rdi
call @scc_front__is_pointer
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4453
mov $0,%rax
mov %rax,@_$DATA+11716560
jmp @_$LB4454
@_$LB4453
mov $@_$MSG494,%rbx
push %rbx
mov 16(%rbp),%rax
mov (%rax),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4456
mov $2,%rax
mov %rax,@_$DATA+11716560
jmp @_$LB4457
@_$LB4456
mov $@_$MSG495,%rbx
push %rbx
mov 16(%rbp),%rax
mov (%rax),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4459
mov $1,%rax
mov %rax,@_$DATA+11716560
jmp @_$LB4460
@_$LB4459
mov $0,%rax
mov %rax,@_$DATA+11716560
@_$LB4460
@_$LB4457
@_$LB4454
push %rdi
call @scc_front__syntax_tree_release
add $8,%rsp
jmp @_$LB4451
@_$LB4450
call @scc_front__is_global
mov %eax,%ebx
mov %ebx,%r14d
mov $@_$MSG496,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4462
mov $2,%r13d
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%r8),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
jne @_$LB4466
mov $@_$MSG497,%rbx
push %rbx
mov 24(%rbp),%rax
mov 24(%rax),%rbx
push %rbx
mov 24(%rbp),%rax
mov 16(%rax),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4466
mov 18446744073709551568(%rbp),%rbx
mov %rbx,%r12
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @_$LB4463
@_$LB4462
mov $@_$MSG498,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4469
mov $@_$MSG499,%rbx
push %rbx
mov 24(%rbp),%rax
mov 24(%rax),%rbx
push %rbx
mov 24(%rbp),%rax
mov 16(%rax),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4469
@_$LB4463
@_$LB4451
mov %r12,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
jne @_$LB4472
mov %r15,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4472
@_$LB4478
mov $@_$MSG500,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4472
@_$LB4475
mov 32(%r15),%rbx
mov %rbx,%r12
@_$LB4472
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4484
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4480
@_$LB4484
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4486
mov $@_$MSG501,%rbx
push %rbx
mov 24(%rbp),%rax
push %rax
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4486
@_$LB4493
call @scc_front__get_namespace
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4486
@_$LB4490
push %rsi
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov $@_$MSG502,%rbx
push %rbx
push %r9
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
mov 24(%rbp),%rax
push %rax
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r9
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
jmp @_$LB4487
@_$LB4486
mov 24(%rbp),%rax
push %rax
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
@_$LB4487
jmp @_$LB4481
@_$LB4480
mov $@_$MSG503,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov @_$DATA+11716520,%rsi
mov 8168(%rsi),%rbx
push %rbx
push %r9
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
mov $@_$MSG504,%rbx
push %rbx
push %r9
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
mov 24(%rbp),%rax
push %rax
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r9
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
@_$LB4481
mov %r11d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4495
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4498
push %r9
mov 24(%rbp),%rax
push %rax
mov 16(%rbp),%rax
push %rax
call @scc_front__check_decl1
add $24,%rsp
jmp @_$LB4499
@_$LB4498
pushq $0
mov 24(%rbp),%rax
push %rax
mov 16(%rbp),%rax
push %rax
call @scc_front__check_decl1
add $24,%rsp
@_$LB4499
jmp @_$LB4496
@_$LB4495
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4501
push %r9
mov 24(%rbp),%rax
push %rax
mov 16(%rbp),%rax
push %rax
call @scc_front__check_decl2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4505
mov %r13d,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB4505
@_$LB4508
push %r9
call @free
add $8,%rsp
jmp @scc_front__add_decl$END
@_$LB4505
jmp @_$LB4502
@_$LB4501
pushq $0
mov 24(%rbp),%rax
push %rax
mov 16(%rbp),%rax
push %rax
call @scc_front__check_decl2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4511
mov %r13d,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB4511
@_$LB4514
push %r9
call @free
add $8,%rsp
jmp @scc_front__add_decl$END
@_$LB4511
@_$LB4502
@_$LB4496
mov %r13d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4516
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4523
mov %r10d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4519
@_$LB4523
pushq $7
mov $@_$MSG505,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB4520
@_$LB4519
pushq $6
mov $@_$MSG506,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB4520
mov $@_$MSG507,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4525
pushq $4
mov $@_$MSG508,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB4526
@_$LB4525
mov $@_$MSG509,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4529
mov $@_$MSG510,%rbx
push %rbx
mov 16(%rbp),%rax
mov (%rax),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4535
mov $@_$MSG511,%rbx
push %rbx
mov 16(%rbp),%rax
mov (%rax),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4531
@_$LB4535
pushq $4
mov $@_$MSG512,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 24(%rbp),%rax
push %rax
mov 16(%rbp),%rax
push %rax
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
pushq $1
mov $@_$MSG513,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB4532
@_$LB4531
mov 16(%rbp),%rax
mov (%rax),%rbx
push %rbx
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
mov 16(%rbp),%rax
mov (%rax),%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG514,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB4532
@_$LB4529
@_$LB4526
jmp @_$LB4517
@_$LB4516
mov %r13d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB4537
mov %r11d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4541
pushq $4
mov $@_$MSG515,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB4541
jmp @_$LB4538
@_$LB4537
mov %r13d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB4544
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4550
mov %r10d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4546
@_$LB4550
pushq $7
mov $@_$MSG516,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB4547
@_$LB4546
pushq $6
mov $@_$MSG517,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB4547
pushq $4
mov $@_$MSG518,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 24(%rbp),%rax
push %rax
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %rdi
mov 16(%rbp),%rax
push %rax
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rdi
call @scc_front__syntax_tree_release
add $8,%rsp
mov %rsi,%rax
mov %r12,%rcx
imul %rcx
mov %rax,%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
pushq $1
mov $@_$MSG519,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB4544
@_$LB4538
@_$LB4517
mov %r11d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4556
mov %r13d,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB4553
@_$LB4556
push %r9
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r9
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG520,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB4553
mov 24(%rbp),%rax
push %rax
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov $@_$MSG521,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4558
mov 8(%rdi),%rbx
push %rbx
call @free
add $8,%rsp
push %r9
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,8(%rdi)
jmp @_$LB4559
@_$LB4558
mov 40(%rdi),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%rdi),%rbx
mov (%rbx),%rsi
push %r9
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,8(%rsi)
@_$LB4559
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4565
mov %r10d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4561
@_$LB4565
mov $0,%rbx
mov %r11d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4567
mov $1,%rbx
@_$LB4567
push %rbx
push %r8
mov 16(%rbp),%rax
push %rax
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r9
lea @_$DATA+11692000,%rbx
add $16,%rbx
push %rbx
call @scc_front__id_tab_add
add $40,%rsp
jmp @_$LB4562
@_$LB4561
mov $0,%rbx
mov %r11d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4570
mov $1,%rbx
@_$LB4570
push %rbx
push %r8
mov 16(%rbp),%rax
push %rax
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r9
mov @_$DATA+11716520,%rbx
push %rbx
call @scc_front__id_tab_add
add $40,%rsp
@_$LB4562
@scc_front__add_decl$END
pop %r11
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_decl
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
push %r14
mov 16(%rbp),%r14
mov $1,%r13d
mov $0,%r8d
mov 40(%r14),%rsi
mov (%rsi),%rbx
mov %rbx,%r12
push %r12
call @scc_front__struct_check
add $8,%rsp
pushq $1
push %r12
call @scc_front__get_struct_member_list
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4574
mov %rsi,%r12
@_$LB4574
mov 32(%r14),%rbx
mov %r13d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4577
@_$LB4575
mov 40(%r14),%rdi
mov %r13d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%r9
push %r9
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov $@_$MSG522,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4580
mov $1,%r8d
@_$LB4580
mov 32(%r14),%rsi
mov %rsi,%rbx
sub $1,%rbx
mov %r13d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB4582
mov $0,%rdi
jmp @_$LB4583
@_$LB4582
mov %r13d,%ebx
add $1,%ebx
mov %r13d,%esi
add $1,%esi
mov 40(%r14),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rdi
mov $@_$MSG523,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4586
mov $0,%rdi
@_$LB4586
@_$LB4583
push %r9
push %r12
call @scc_front__decl_check
add $16,%rsp
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4588
pushq $0
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
pushq $0
movslq %r8d,%r8
push %r8
push %r9
push %r12
call @scc_front__add_decl
add $48,%rsp
jmp @_$LB4589
@_$LB4588
pushq $0
pushq $0
pushq $0
movslq %r8d,%r8
push %r8
push %r9
push %r12
call @scc_front__add_decl
add $48,%rsp
@_$LB4589
add $1,%r13d
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4592
add $1,%r13d
@_$LB4592
mov 32(%r14),%rbx
mov %r13d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4575
@_$LB4577
@scc_front__translate_decl$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_fundef
push %rbp
mov %rsp,%rbp
sub $192,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
push %r12
mov 40(%r9),%rsi
mov (%rsi),%rbx
mov %rbx,%r8
mov 40(%r9),%rsi
mov 8(%rsi),%rbx
mov %rbx,%rdi
mov 40(%r9),%rsi
mov 16(%rsi),%rbx
mov %rbx,%r12
push %rdi
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov $@_$MSG524,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4595
mov $@_$MSG525,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4595
push %rdi
push %r8
call @scc_front__decl_check
add $16,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
push %rdi
push %r8
call @scc_front__add_decl
add $48,%rsp
mov @_$DATA+11716536,%rbx
add $1,%rbx
mov %rbx,@_$DATA+11716536
pushq $8
mov $@_$MSG526,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov $1,%r8d
call @scc_front__translate_stack_push
mov 32(%r9),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4598
@_$LB4596
mov %r8d,%ebx
add $1,%ebx
mov %r8d,%esi
add $1,%esi
mov 40(%r9),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__array_function_to_pointer
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
pushq $0
pushq $0
pushq $0
pushq $0
push %rsi
mov 40(%r9),%rdi
mov %r8d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__add_decl
add $48,%rsp
add $2,%r8d
mov 32(%r9),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4596
@_$LB4598
pushq $5
mov $@_$MSG527,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
pushq $0
push %r12
call @scc_front__translate_block
add $16,%rsp
call @scc_front__translate_stack_pop
pushq $5
mov $@_$MSG528,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@scc_front__translate_fundef$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__type_size
push %rbp
mov %rsp,%rbp
sub $144,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
push %r12
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov $@_$MSG529,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4601
mov $8,%rax
jmp @scc_front__type_size$END
@_$LB4601
mov $@_$MSG530,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4604
push %r8
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rsi
push %r9
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
push %rsi
call @scc_front__syntax_tree_release
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
jne @_$LB4607
mov $@_$MSG531,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB4607
mov 18446744073709551568(%rbp),%rbx
mov %r9,%rax
mov %rbx,%rcx
mul %rcx
mov %rax,%r9
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
mov %r9,%rax
jmp @scc_front__type_size$END
@_$LB4604
mov $@_$MSG532,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4610
mov $0,%rax
jmp @scc_front__type_size$END
@_$LB4610
mov $@_$MSG533,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4613
mov $@_$MSG534,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4616
mov $0,%rax
jmp @scc_front__type_size$END
@_$LB4616
mov $@_$MSG535,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4622
mov $@_$MSG536,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4619
@_$LB4622
mov $1,%rax
jmp @scc_front__type_size$END
@_$LB4619
mov $@_$MSG537,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4628
mov $@_$MSG538,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4625
@_$LB4628
mov $2,%rax
jmp @scc_front__type_size$END
@_$LB4625
mov $@_$MSG539,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4634
mov $@_$MSG540,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4631
@_$LB4634
mov $4,%rax
jmp @scc_front__type_size$END
@_$LB4631
mov $@_$MSG541,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4640
mov $@_$MSG542,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4637
@_$LB4640
mov $8,%rax
jmp @scc_front__type_size$END
@_$LB4637
mov $@_$MSG543,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4643
mov $4,%rax
jmp @scc_front__type_size$END
@_$LB4643
mov $@_$MSG544,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4646
mov $8,%rax
jmp @scc_front__type_size$END
@_$LB4646
mov $@_$MSG545,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4649
pushq $0
push %r9
call @scc_front__get_struct_member_list
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r12
mov $0,%r9
mov $1,%r8d
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4652
@_$LB4650
mov %r8d,%ebx
add $1,%ebx
mov %r8d,%esi
add $1,%esi
mov 40(%r12),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
mov 40(%r12),%rdi
mov %r8d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
add %rbx,%r9
add $2,%r8d
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4650
@_$LB4652
mov %r9,%rax
jmp @scc_front__type_size$END
@_$LB4649
mov $@_$MSG546,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4655
pushq $0
push %r9
call @scc_front__get_struct_member_list
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r12
mov $0,%r9
mov $1,%r8d
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4658
@_$LB4656
mov %r8d,%ebx
add $1,%ebx
mov %r8d,%esi
add $1,%esi
mov 40(%r12),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
mov 40(%r12),%rdi
mov %r8d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov %rsi,%rax
mov %r9,%rcx
cmp %rcx,%rax
jbe @_$LB4661
mov %rsi,%r9
@_$LB4661
add $2,%r8d
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4656
@_$LB4658
mov %r9,%rax
jmp @scc_front__type_size$END
@_$LB4655
@_$LB4613
mov $0,%rax
@scc_front__type_size$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__is_basic_type
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov $@_$MSG547,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4667
mov $@_$MSG548,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4664
@_$LB4667
mov $1,%rax
jmp @scc_front__is_basic_type$END
@_$LB4664
mov $@_$MSG549,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4673
mov $@_$MSG550,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4670
@_$LB4673
mov $1,%rax
jmp @scc_front__is_basic_type$END
@_$LB4670
mov $@_$MSG551,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4679
mov $@_$MSG552,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4676
@_$LB4679
mov $1,%rax
jmp @scc_front__is_basic_type$END
@_$LB4676
mov $@_$MSG553,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4685
mov $@_$MSG554,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4682
@_$LB4685
mov $1,%rax
jmp @scc_front__is_basic_type$END
@_$LB4682
mov $@_$MSG555,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4691
mov $@_$MSG556,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4688
@_$LB4691
mov $1,%rax
jmp @scc_front__is_basic_type$END
@_$LB4688
mov $0,%rax
@scc_front__is_basic_type$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__is_basic_decl
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rbx
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov $@_$MSG557,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4694
mov $1,%rax
jmp @scc_front__is_basic_decl$END
@_$LB4694
mov $0,%rax
@scc_front__is_basic_decl$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__is_float_type
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov $@_$MSG558,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4700
mov $@_$MSG559,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4697
@_$LB4700
mov $1,%rax
jmp @scc_front__is_float_type$END
@_$LB4697
mov $0,%rax
@scc_front__is_float_type$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__is_pointer_array_function
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rbx
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov $@_$MSG560,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4703
mov $1,%rax
jmp @scc_front__is_pointer_array_function$END
@_$LB4703
mov $@_$MSG561,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4706
mov $1,%rax
jmp @scc_front__is_pointer_array_function$END
@_$LB4706
mov $@_$MSG562,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4709
mov $1,%rax
jmp @scc_front__is_pointer_array_function$END
@_$LB4709
mov $@_$MSG563,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4712
mov $1,%rax
jmp @scc_front__is_pointer_array_function$END
@_$LB4712
mov $0,%rax
@scc_front__is_pointer_array_function$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__is_pointer_array
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rbx
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov $@_$MSG564,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4715
mov $1,%rax
jmp @scc_front__is_pointer_array$END
@_$LB4715
mov $@_$MSG565,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4718
mov $1,%rax
jmp @scc_front__is_pointer_array$END
@_$LB4718
mov $@_$MSG566,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4721
mov $1,%rax
jmp @scc_front__is_pointer_array$END
@_$LB4721
mov $0,%rax
@scc_front__is_pointer_array$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__is_function
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rbx
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov $@_$MSG567,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4724
mov $1,%rax
jmp @scc_front__is_function$END
@_$LB4724
mov $0,%rax
@scc_front__is_function$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__is_array_function
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rbx
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov $@_$MSG568,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4727
mov $1,%rax
jmp @scc_front__is_array_function$END
@_$LB4727
mov $@_$MSG569,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4730
mov $1,%rax
jmp @scc_front__is_array_function$END
@_$LB4730
mov $@_$MSG570,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4733
mov $1,%rax
jmp @scc_front__is_array_function$END
@_$LB4733
mov $0,%rax
@scc_front__is_array_function$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__is_pointer
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rbx
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov $@_$MSG571,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4736
mov $1,%rax
jmp @scc_front__is_pointer$END
@_$LB4736
mov $0,%rax
@scc_front__is_pointer$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__is_void_ptr
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
mov $@_$MSG572,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4739
mov $0,%rax
jmp @scc_front__is_void_ptr$END
@_$LB4739
mov $@_$MSG573,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4742
mov $0,%rax
jmp @scc_front__is_void_ptr$END
@_$LB4742
mov $@_$MSG574,%rbx
push %rbx
mov 40(%rsi),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4745
mov $0,%rax
jmp @scc_front__is_void_ptr$END
@_$LB4745
mov $1,%rax
@scc_front__is_void_ptr$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__is_void
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
mov $@_$MSG575,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4748
mov $0,%rax
jmp @scc_front__is_void$END
@_$LB4748
mov $@_$MSG576,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4751
mov $0,%rax
jmp @scc_front__is_void$END
@_$LB4751
mov $1,%rax
@scc_front__is_void$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__if_type_compat
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 48(%rbp),%rbx
push %rsi
push %rdi
push %r8
mov 40(%rbp),%r8
push %r9
mov 32(%rbp),%r9
push %r12
mov 24(%rbp),%r12
push %r13
mov 16(%rbp),%r13
push %r12
push %r13
call @scc_front__is_void
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4757
push %r8
push %r9
call @scc_front__is_void
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4754
@_$LB4757
mov $1,%rax
jmp @scc_front__if_type_compat$END
@_$LB4754
mov $0,%rsi
push %r13
call @scc_front__is_basic_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4766
push %r12
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4763
@_$LB4766
push %r12
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4759
@_$LB4763
mov $1,%rsi
@_$LB4759
mov %rsi,%rdi
mov $0,%rsi
push %r9
call @scc_front__is_basic_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4775
push %r8
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4772
@_$LB4775
push %r8
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4768
@_$LB4772
mov $1,%rsi
@_$LB4768
mov %rsi,%rbx
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4781
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4778
@_$LB4781
mov $1,%rax
jmp @scc_front__if_type_compat$END
@_$LB4778
mov $0,%rsi
push %r13
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4783
push %r12
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4783
@_$LB4787
mov $1,%rsi
@_$LB4783
mov %rsi,%rdi
mov $0,%rsi
push %r9
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4789
push %r8
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4789
@_$LB4793
mov $1,%rsi
@_$LB4789
mov %rsi,%rbx
mov %edi,%eax
mov %ebx,%ecx
cmp %ecx,%eax
je @_$LB4796
mov $1,%rax
jmp @scc_front__if_type_compat$END
@_$LB4796
mov $0,%rax
@scc_front__if_type_compat$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__is_integer_type
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
push %rdi
push %r8
call @scc_front__is_void
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4799
mov $0,%rax
jmp @scc_front__is_integer_type$END
@_$LB4799
mov $0,%rsi
push %r8
call @scc_front__is_basic_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4808
push %rdi
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4805
@_$LB4808
push %rdi
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4801
@_$LB4805
mov $1,%rsi
@_$LB4801
mov %rsi,%rbx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4811
mov $0,%rax
jmp @scc_front__is_integer_type$END
@_$LB4811
mov $0,%rsi
push %r8
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4813
push %rdi
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4813
@_$LB4817
mov $1,%rsi
@_$LB4813
mov %rsi,%rbx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4820
mov $0,%rax
jmp @scc_front__is_integer_type$END
@_$LB4820
mov $1,%rax
@scc_front__is_integer_type$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__array_function_to_pointer
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rdi
push %r8
push %r9
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov $@_$MSG577,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4822
mov $@_$MSG578,%rbx
mov %rbx,(%r9)
jmp @_$LB4823
@_$LB4822
mov $@_$MSG579,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4825
mov $@_$MSG580,%rbx
mov %rbx,(%r9)
jmp @_$LB4826
@_$LB4825
mov $@_$MSG581,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4829
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
pushq $0
mov $@_$MSG582,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
mov 40(%r9),%rsi
mov (%rsi),%rbx
push %rbx
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov 40(%r9),%rbx
mov %rdi,(%rbx)
@_$LB4829
@_$LB4826
@_$LB4823
mov %r8,%rax
@scc_front__array_function_to_pointer$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__array_function_to_pointer2
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov (%rdi),%rbx
push %rbx
call @scc_front__array_function_to_pointer
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov (%rdi),%rbx
push %rbx
call @scc_front__syntax_tree_release
add $8,%rsp
mov %rsi,(%rdi)
@scc_front__array_function_to_pointer2$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__get_member_offset
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 24(%rbp),%r12
push %r13
mov 16(%rbp),%r13
mov $0,%r8
mov $@_$MSG583,%rbx
push %rbx
mov (%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4831
mov $1,%r9d
mov 32(%r13),%rbx
mov %r9d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4835
@_$LB4833
push %r12
mov %r9d,%ebx
add $1,%ebx
mov %r9d,%esi
add $1,%esi
mov 40(%r13),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4838
mov $0,%rax
jmp @scc_front__get_member_offset$END
@_$LB4838
add $2,%r9d
mov 32(%r13),%rbx
mov %r9d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4833
@_$LB4835
jmp @_$LB4832
@_$LB4831
mov $@_$MSG584,%rbx
push %rbx
mov (%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4841
mov $1,%r9d
mov 32(%r13),%rbx
mov %r9d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4844
@_$LB4842
push %r12
mov %r9d,%ebx
add $1,%ebx
mov %r9d,%esi
add $1,%esi
mov 40(%r13),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4847
mov %r8,%rax
jmp @scc_front__get_member_offset$END
@_$LB4847
mov %r9d,%ebx
add $1,%ebx
mov %r9d,%esi
add $1,%esi
mov 40(%r13),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
mov 40(%r13),%rdi
mov %r9d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
add %rbx,%r8
add $2,%r9d
mov 32(%r13),%rbx
mov %r9d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4842
@_$LB4844
@_$LB4841
@_$LB4832
mov $18446744073709551615,%rax
@scc_front__get_member_offset$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__get_member_type
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov $@_$MSG585,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4849
mov $1,%r8d
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4853
@_$LB4851
push %r9
mov %r8d,%ebx
add $1,%ebx
mov %r8d,%esi
add $1,%esi
mov 40(%r12),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4856
mov 40(%r12),%rdi
mov %r8d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rax
jmp @scc_front__get_member_type$END
@_$LB4856
add $2,%r8d
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4851
@_$LB4853
jmp @_$LB4850
@_$LB4849
mov $@_$MSG586,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4859
mov $1,%r8d
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4862
@_$LB4860
push %r9
mov %r8d,%ebx
add $1,%ebx
mov %r8d,%esi
add $1,%esi
mov 40(%r12),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4865
mov 40(%r12),%rdi
mov %r8d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rax
jmp @scc_front__get_member_type$END
@_$LB4865
add $2,%r8d
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4860
@_$LB4862
@_$LB4859
@_$LB4850
mov $0,%rax
@scc_front__get_member_type$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__get_member_decl
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov $@_$MSG587,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4867
mov $1,%r8d
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4871
@_$LB4869
push %r9
mov %r8d,%ebx
add $1,%ebx
mov %r8d,%esi
add $1,%esi
mov 40(%r12),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4874
mov %r8d,%ebx
add $1,%ebx
mov %r8d,%esi
add $1,%esi
mov 40(%r12),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rax
jmp @scc_front__get_member_decl$END
@_$LB4874
add $2,%r8d
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4869
@_$LB4871
jmp @_$LB4868
@_$LB4867
mov $@_$MSG588,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4877
mov $1,%r8d
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4880
@_$LB4878
push %r9
mov %r8d,%ebx
add $1,%ebx
mov %r8d,%esi
add $1,%esi
mov 40(%r12),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4883
mov %r8d,%ebx
add $1,%ebx
mov %r8d,%esi
add $1,%esi
mov 40(%r12),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rax
jmp @scc_front__get_member_decl$END
@_$LB4883
add $2,%r8d
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4878
@_$LB4880
@_$LB4877
@_$LB4868
mov $0,%rax
@scc_front__get_member_decl$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_static_decl
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
push %r14
mov 16(%rbp),%r14
mov $1,%r13d
mov $0,%r8d
mov 40(%r14),%rsi
mov (%rsi),%rbx
mov %rbx,%r12
push %r12
call @scc_front__struct_check
add $8,%rsp
pushq $1
push %r12
call @scc_front__get_struct_member_list
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4886
mov %rsi,%r12
@_$LB4886
mov 32(%r14),%rbx
mov %r13d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4889
@_$LB4887
mov 40(%r14),%rdi
mov %r13d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%r9
push %r9
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov $@_$MSG589,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB4892
mov $1,%r8d
@_$LB4892
mov 32(%r14),%rsi
mov %rsi,%rbx
sub $1,%rbx
mov %r13d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB4894
mov $0,%rdi
jmp @_$LB4895
@_$LB4894
mov %r13d,%ebx
add $1,%ebx
mov %r13d,%esi
add $1,%esi
mov 40(%r14),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rdi
mov $@_$MSG590,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4898
mov $0,%rdi
@_$LB4898
@_$LB4895
push %r9
push %r12
call @scc_front__decl_check
add $16,%rsp
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4900
pushq $0
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
pushq $1
movslq %r8d,%r8
push %r8
push %r9
push %r12
call @scc_front__add_decl
add $48,%rsp
jmp @_$LB4901
@_$LB4900
pushq $0
pushq $0
pushq $1
movslq %r8d,%r8
push %r8
push %r9
push %r12
call @scc_front__add_decl
add $48,%rsp
@_$LB4901
add $1,%r13d
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4904
add $1,%r13d
@_$LB4904
mov 32(%r14),%rbx
mov %r13d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4887
@_$LB4889
@scc_front__translate_static_decl$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_extern_decl
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov 16(%rbp),%r13
mov $1,%r12d
mov 40(%r13),%rsi
mov (%rsi),%rbx
mov %rbx,%r9
push %r9
call @scc_front__struct_check
add $8,%rsp
pushq $1
push %r9
call @scc_front__get_struct_member_list
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4907
mov %rsi,%r9
@_$LB4907
mov 32(%r13),%rbx
mov %r12d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB4910
@_$LB4908
mov 40(%r13),%rdi
mov %r12d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%r8
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov 32(%r13),%rsi
mov %rsi,%rbx
sub $1,%rbx
mov %r12d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB4912
mov $0,%rdi
jmp @_$LB4913
@_$LB4912
mov %r12d,%ebx
add $1,%ebx
mov %r12d,%esi
add $1,%esi
mov 40(%r13),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rdi
mov $@_$MSG591,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB4916
mov $0,%rdi
@_$LB4916
@_$LB4913
push %r8
push %r9
call @scc_front__decl_check
add $16,%rsp
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4918
pushq $0
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
pushq $1
pushq $1
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
jmp @_$LB4919
@_$LB4918
pushq $0
pushq $0
pushq $1
pushq $1
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
@_$LB4919
add $1,%r12d
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB4922
add $1,%r12d
@_$LB4922
mov 32(%r13),%rbx
mov %r12d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB4908
@_$LB4910
@scc_front__translate_extern_decl$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__mktmpname
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
addq $1,@_$DATA+11716576
mov $@_$MSG592,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov @_$DATA+11716576,%rax
push %rax
push %rsi
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov %rsi,%rax
@scc_front__mktmpname$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__const_to_num
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 16(%rbp),%r12
mov $0,%r9
mov (%r12),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
jne @_$LB4924
add $1,%r12
mov (%r12),%bl
mov %bl,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB4927
mov 1(%r12),%bl
mov %bl,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB4930
mov $92,%r9
jmp @_$LB4931
@_$LB4930
mov 1(%r12),%bl
mov %bl,%al
mov $110,%cl
cmp %cl,%al
jne @_$LB4933
mov $10,%r9
jmp @_$LB4934
@_$LB4933
mov 1(%r12),%bl
mov %bl,%al
mov $116,%cl
cmp %cl,%al
jne @_$LB4936
mov $9,%r9
jmp @_$LB4937
@_$LB4936
mov 1(%r12),%bl
mov %bl,%al
mov $118,%cl
cmp %cl,%al
jne @_$LB4939
mov $11,%r9
jmp @_$LB4940
@_$LB4939
mov 1(%r12),%bl
mov %bl,%al
mov $114,%cl
cmp %cl,%al
jne @_$LB4942
mov $13,%r9
jmp @_$LB4943
@_$LB4942
mov 1(%r12),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
jne @_$LB4945
mov $39,%r9
jmp @_$LB4946
@_$LB4945
mov 1(%r12),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB4948
mov $34,%r9
jmp @_$LB4949
@_$LB4948
mov 1(%r12),%bl
mov %bl,%al
mov $63,%cl
cmp %cl,%al
jne @_$LB4951
mov $63,%r9
jmp @_$LB4952
@_$LB4951
mov 1(%r12),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB4954
mov 1(%r12),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB4954
@_$LB4958
mov $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB4961
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB4961
@_$LB4964
@_$LB4959
mov %r9,%rax
mov $3,%cl
shl %cl,%rax
mov %rax,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
add $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB4967
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jle @_$LB4959
@_$LB4967
@_$LB4961
jmp @_$LB4955
@_$LB4954
mov 1(%r12),%bl
mov %bl,%al
mov $120,%cl
cmp %cl,%al
jne @_$LB4969
mov $2,%r8d
@_$LB4971
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB4975
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB4975
@_$LB4979
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB4976
@_$LB4975
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB4981
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $70,%cl
cmp %cl,%al
jg @_$LB4981
@_$LB4985
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $65,%bl
mov %bl,%sil
add $10,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB4982
@_$LB4981
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB4987
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $102,%cl
cmp %cl,%al
jg @_$LB4987
@_$LB4991
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $97,%bl
mov %bl,%sil
add $10,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB4988
@_$LB4987
jmp @_$LB4973
@_$LB4988
@_$LB4982
@_$LB4976
add $1,%r8d
jmp @_$LB4971
@_$LB4973
jmp @_$LB4970
@_$LB4969
mov $92,%r9
@_$LB4970
@_$LB4955
@_$LB4952
@_$LB4949
@_$LB4946
@_$LB4943
@_$LB4940
@_$LB4937
@_$LB4934
@_$LB4931
jmp @_$LB4928
@_$LB4927
mov (%r12),%bl
mov %bl,%r9b
movsbq %r9b,%r9
@_$LB4928
jmp @_$LB4925
@_$LB4924
mov (%r12),%bl
mov %bl,%al
mov $49,%cl
cmp %cl,%al
jl @_$LB4993
mov (%r12),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB4993
@_$LB4997
mov $0,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB5000
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB5000
@_$LB5003
@_$LB4998
mov %r9,%rdi
mov %r9,%rax
mov $10,%rcx
mul %rcx
mov %rax,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
add $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB5006
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jle @_$LB4998
@_$LB5006
@_$LB5000
jmp @_$LB4994
@_$LB4993
mov 1(%r12),%bl
mov %bl,%al
mov $88,%cl
cmp %cl,%al
je @_$LB5012
mov 1(%r12),%bl
mov %bl,%al
mov $120,%cl
cmp %cl,%al
jne @_$LB5008
@_$LB5012
mov $2,%r8d
@_$LB5013
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB5017
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB5017
@_$LB5021
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB5018
@_$LB5017
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB5023
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $70,%cl
cmp %cl,%al
jg @_$LB5023
@_$LB5027
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $65,%bl
mov %bl,%sil
add $10,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB5024
@_$LB5023
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB5029
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $102,%cl
cmp %cl,%al
jg @_$LB5029
@_$LB5033
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $97,%bl
mov %bl,%sil
add $10,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB5030
@_$LB5029
jmp @_$LB5015
@_$LB5030
@_$LB5024
@_$LB5018
add $1,%r8d
jmp @_$LB5013
@_$LB5015
jmp @_$LB5009
@_$LB5008
mov $0,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB5036
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB5036
@_$LB5039
@_$LB5034
mov %r9,%rax
mov $3,%cl
shl %cl,%rax
mov %rax,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
add $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB5042
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jle @_$LB5034
@_$LB5042
@_$LB5036
@_$LB5009
@_$LB4994
@_$LB4925
mov %r9,%rax
@scc_front__const_to_num$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__fconst_to_num
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov 16(%rbp),%r13
mov $0,%r12d
mov $0,%rbx
mov %rbx,%r9
mov $4591870180066957722,%rbx
mov %rbx,%r8
mov (%r13),%bl
mov %bl,%sil
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB5045
@_$LB5043
mov %sil,%al
mov $46,%cl
cmp %cl,%al
jne @_$LB5048
mov %r12d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5050
mov $1,%r12d
jmp @_$LB5051
@_$LB5050
jmp @_$LB5045
@_$LB5051
@_$LB5048
mov %sil,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB5053
mov %sil,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB5053
@_$LB5057
mov %r12d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5059
mov %sil,%bl
sub $48,%bl
mov %bl,%sil
movsbq %sil,%rsi
cvtsi2sd %rsi,%xmm0
movq %xmm0,%rsi
movq %r8,%xmm0
movq %rsi,%xmm1
mulsd %xmm1,%xmm0
movq %xmm0,%rbx
movq %r9,%xmm0
movq %rbx,%xmm1
addsd %xmm1,%xmm0
movq %xmm0,%r9
mov $4591870180066957722,%rbx
movq %r8,%xmm0
movq %rbx,%xmm1
mulsd %xmm1,%xmm0
movq %xmm0,%r8
jmp @_$LB5060
@_$LB5059
mov $4621819117588971520,%rbx
movq %r9,%xmm0
movq %rbx,%xmm1
mulsd %xmm1,%xmm0
movq %xmm0,%rdi
mov %sil,%bl
sub $48,%bl
mov %bl,%sil
movsbq %sil,%rsi
cvtsi2sd %rsi,%xmm0
movq %xmm0,%rsi
movq %rdi,%xmm0
movq %rsi,%xmm1
addsd %xmm1,%xmm0
movq %xmm0,%rbx
mov %rbx,%r9
@_$LB5060
jmp @_$LB5054
@_$LB5053
jmp @_$LB5045
@_$LB5054
add $1,%r13
mov (%r13),%bl
mov %bl,%sil
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB5043
@_$LB5045
mov %r9,%rax
@scc_front__fconst_to_num$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__get_addr
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rdi
push %r8
push %r9
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
pushq $0
mov $@_$MSG593,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
mov $@_$MSG594,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5063
push %r9
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov %rdi,%rax
jmp @scc_front__get_addr$END
@_$LB5063
mov 40(%r9),%rsi
mov (%rsi),%rbx
push %rbx
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov 40(%r9),%rbx
mov %rdi,(%rbx)
mov %r8,%rax
@scc_front__get_addr$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_id
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
push %r8
mov 24(%rbp),%r8
mov 8(%rsi),%rbx
push %rbx
call @scc_front__id_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5066
mov $@_$MSG595,%rbx
push %rbx
mov 24(%rsi),%rbx
push %rbx
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5066
mov 16(%rdi),%rbx
push %rbx
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
movl $1,8(%r8)
mov $@_$MSG596,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5069
movl $0,8(%r8)
@_$LB5069
movw $0,12(%r8)
movw $0,14(%r8)
mov 8(%rdi),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r8)
mov 16(%rdi),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r8)
@scc_front__calculate_id$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_const
push %rbp
mov %rsp,%rbp
sub $176,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 24(%rbp),%r12
push %r13
mov 16(%rbp),%r13
mov 8(%r13),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB5071
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%r9
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
pushq $0
mov $@_$MSG597,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
push %r9
mov $@_$MSG598,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rsi
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
pushq $0
mov $@_$MSG599,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
push %rsi
push %rdi
call @scc_front__st_add_subtree
add $16,%rsp
mov %r8,24(%r12)
mov %rdi,32(%r12)
movl $0,8(%r12)
movw $0,12(%r12)
movw $0,14(%r12)
pushq $10
mov $@_$MSG600,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r9
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r9
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG601,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
pushq $4
mov $@_$MSG602,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r9
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r9
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG603,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 8(%r13),%rbx
push %rbx
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
mov 8(%r13),%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG604,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5072
@_$LB5071
movl $0,8(%r12)
movw $1,12(%r12)
movw $0,14(%r12)
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
pushq $0
mov $@_$MSG605,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,24(%r12)
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
mov $@_$MSG606,%rbx
push %rbx
mov $@_$MSG607,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,32(%r12)
mov 8(%r13),%rbx
push %rbx
call @scc_front__const_to_num
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%r12)
@_$LB5072
@scc_front__calculate_const$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_fconst
push %rbp
mov %rsp,%rbp
sub $160,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rsi
movl $0,8(%rdi)
movw $0,12(%rdi)
movw $0,14(%rdi)
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
pushq $0
mov $@_$MSG608,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,24(%rdi)
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
push %rsi
mov $@_$MSG609,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,32(%rdi)
pushq $12
mov $@_$MSG610,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG611,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
pushq $4
mov $@_$MSG612,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG613,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 8(%r8),%rbx
push %rbx
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
mov 8(%r8),%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG614,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@scc_front__calculate_fconst$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__deref_ptr
push %rbp
mov %rsp,%rbp
sub $448,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
push %r14
mov 32(%rbp),%r14
push %r15
mov 24(%rbp),%r15
push %r10
mov 16(%rbp),%r10
mov $1,%edi
mov 14(%r10),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
jne @_$LB5075
jmp @scc_front__deref_ptr$END
@_$LB5075
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%r13
mov 32(%r10),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov 32(%r10),%rbx
push %rbx
call @scc_front__syntax_tree_release
add $8,%rsp
mov %rsi,32(%r10)
mov 32(%r10),%rbx
push %rbx
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov $@_$MSG615,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5077
mov 40(%r9),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
mov %rbx,%r12
mov 40(%r9),%rsi
mov (%rsi),%rbx
mov %r13,8(%rbx)
mov $@_$MSG616,%rbx
mov %rbx,%r8
jmp @_$LB5078
@_$LB5077
mov $@_$MSG617,%rbx
push %rbx
mov (%r9),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5080
mov $@_$MSG618,%rbx
push %rbx
mov 24(%r10),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5084
mov $@_$MSG619,%rbx
push %rbx
movslq %r14d,%r14
push %r14
movslq %r15d,%r15
push %r15
call @scc_front__error
add $24,%rsp
@_$LB5084
mov $@_$MSG620,%rbx
push %rbx
mov 24(%r10),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5087
mov $@_$MSG621,%rbx
push %rbx
movslq %r14d,%r14
push %r14
movslq %r15d,%r15
push %r15
call @scc_front__error
add $24,%rsp
@_$LB5087
mov $@_$MSG622,%rbx
push %rbx
mov 24(%r10),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5090
mov $@_$MSG623,%rbx
push %rbx
movslq %r14d,%r14
push %r14
movslq %r15d,%r15
push %r15
call @scc_front__error
add $24,%rsp
@_$LB5090
mov $@_$MSG624,%rbx
push %rbx
mov 24(%r10),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5096
mov $@_$MSG625,%rbx
push %rbx
mov 24(%r10),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5092
@_$LB5096
mov $@_$MSG626,%rbx
mov %rbx,%r8
jmp @_$LB5093
@_$LB5092
mov $@_$MSG627,%rbx
push %rbx
mov 24(%r10),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5102
mov $@_$MSG628,%rbx
push %rbx
mov 24(%r10),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5098
@_$LB5102
mov $@_$MSG629,%rbx
mov %rbx,%r8
jmp @_$LB5099
@_$LB5098
mov $@_$MSG630,%rbx
push %rbx
mov 24(%r10),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5108
mov $@_$MSG631,%rbx
push %rbx
mov 24(%r10),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5104
@_$LB5108
mov $@_$MSG632,%rbx
mov %rbx,%r8
jmp @_$LB5105
@_$LB5104
mov $@_$MSG633,%rbx
push %rbx
mov 24(%r10),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5114
mov $@_$MSG634,%rbx
push %rbx
mov 24(%r10),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5110
@_$LB5114
mov $@_$MSG635,%rbx
mov %rbx,%r8
jmp @_$LB5111
@_$LB5110
mov $@_$MSG636,%rbx
push %rbx
mov 24(%r10),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5116
mov $@_$MSG637,%rbx
mov %rbx,%r8
jmp @_$LB5117
@_$LB5116
mov $@_$MSG638,%rbx
push %rbx
mov 24(%r10),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5120
mov $@_$MSG639,%rbx
mov %rbx,%r8
@_$LB5120
@_$LB5117
@_$LB5111
@_$LB5105
@_$LB5099
@_$LB5093
mov 8(%r9),%rbx
mov %rbx,%r12
mov %r13,8(%r9)
jmp @_$LB5081
@_$LB5080
mov 16(%r10),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB5122
mov $0,%edi
mov 40(%r9),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
mov %rbx,%r12
mov 40(%r9),%rsi
mov (%rsi),%rbx
mov %r13,8(%rbx)
mov %r10,%rbx
add $32,%rbx
push %rbx
call @scc_front__array_function_to_pointer2
add $8,%rsp
mov 32(%r10),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r13
pushq $1
pushq $0
pushq $0
pushq $0
mov 32(%r10),%rbx
push %rbx
mov 24(%r10),%rbx
push %rbx
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG640,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r13
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r13
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG641,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r12
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r12
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG642,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 16(%r10),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
movq $0,16(%r10)
pushq $1
mov $@_$MSG643,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r12
call @free
add $8,%rsp
jmp @_$LB5123
@_$LB5122
mov $0,%edi
mov %r10,%rbx
add $32,%rbx
push %rbx
call @scc_front__array_function_to_pointer2
add $8,%rsp
@_$LB5123
@_$LB5081
@_$LB5078
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5126
pushq $1
pushq $0
pushq $0
pushq $0
mov 32(%r10),%rbx
push %rbx
mov 24(%r10),%rbx
push %rbx
call @scc_front__add_decl
add $48,%rsp
mov 16(%r10),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB5128
pushq $3
mov $@_$MSG644,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5129
@_$LB5128
pushq $2
mov $@_$MSG645,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5129
pushq $2
push %r8
call @scc_front__c_write
add $16,%rsp
push %r13
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r13
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG646,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r12
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r12
call @scc_front__c_write
add $16,%rsp
mov 16(%r10),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB5132
pushq $1
mov $@_$MSG647,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 16(%r10),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
movq $0,16(%r10)
@_$LB5132
pushq $1
mov $@_$MSG648,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r12
call @free
add $8,%rsp
@_$LB5126
@scc_front__deref_ptr$END
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__scale_result
push %rbp
mov %rsp,%rbp
sub $192,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 32(%rbp),%r12
push %r13
mov 24(%rbp),%r13
push %r14
mov 16(%rbp),%r14
mov %r12,%rax
mov $1,%rcx
cmp %rcx,%rax
je @_$LB5135
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%r9
push %r13
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov $@_$MSG649,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5137
mov 8(%rdi),%rbx
mov %rbx,%r8
mov %r9,8(%rdi)
jmp @_$LB5138
@_$LB5137
mov 40(%rdi),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
mov %rbx,%r8
mov 40(%rdi),%rsi
mov (%rsi),%rbx
mov %r9,8(%rbx)
@_$LB5138
pushq $1
pushq $0
pushq $0
pushq $0
push %r13
push %r14
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG650,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r9
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r9
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG651,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG652,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @free
add $8,%rsp
push %r12
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r8
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG653,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @free
add $8,%rsp
@_$LB5135
@scc_front__scale_result$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__r_scale_result
push %rbp
mov %rsp,%rbp
sub $192,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 32(%rbp),%r12
push %r13
mov 24(%rbp),%r13
push %r14
mov 16(%rbp),%r14
mov %r12,%rax
mov $1,%rcx
cmp %rcx,%rax
je @_$LB5141
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%r9
push %r13
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov $@_$MSG654,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5143
mov 8(%rdi),%rbx
mov %rbx,%r8
mov %r9,8(%rdi)
jmp @_$LB5144
@_$LB5143
mov 40(%rdi),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
mov %rbx,%r8
mov 40(%rdi),%rsi
mov (%rsi),%rbx
mov %r9,8(%rbx)
@_$LB5144
pushq $1
pushq $0
pushq $0
pushq $0
push %r13
push %r14
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG655,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r9
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r9
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG656,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG657,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @free
add $8,%rsp
push %r12
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r8
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG658,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @free
add $8,%rsp
@_$LB5141
@scc_front__r_scale_result$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__write_label_name
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
@scc_front__write_label_name$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__write_label
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
pushq $6
mov $@_$MSG659,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @scc_front__write_label_name
add $8,%rsp
pushq $1
mov $@_$MSG660,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@scc_front__write_label$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_branch_relop
push %rbp
mov %rsp,%rbp
sub $640,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
mov 40(%rbp),%r8
push %r9
mov 32(%rbp),%r9
push %r12
mov 24(%rbp),%r12
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
jne @_$LB5147
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
jne @_$LB5147
@_$LB5150
pushq $0
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5153
mov $@_$MSG661,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5153
@_$LB5147
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5156
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5156
@_$LB5159
mov $0,%edi
mov $@_$MSG662,%rbx
push %rbx
push %r9
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5161
mov 18446744073709551568(%rbp),%rsi
mov 18446744073709551520(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jbe @_$LB5165
mov $1,%edi
@_$LB5165
jmp @_$LB5162
@_$LB5161
mov $@_$MSG663,%rbx
push %rbx
push %r9
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5167
mov 18446744073709551568(%rbp),%rsi
mov 18446744073709551520(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jae @_$LB5171
mov $1,%edi
@_$LB5171
jmp @_$LB5168
@_$LB5167
mov $@_$MSG664,%rbx
push %rbx
push %r9
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5173
mov 18446744073709551568(%rbp),%rsi
mov 18446744073709551520(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jb @_$LB5177
mov $1,%edi
@_$LB5177
jmp @_$LB5174
@_$LB5173
mov $@_$MSG665,%rbx
push %rbx
push %r9
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5179
mov 18446744073709551568(%rbp),%rsi
mov 18446744073709551520(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
ja @_$LB5183
mov $1,%edi
@_$LB5183
jmp @_$LB5180
@_$LB5179
mov $@_$MSG666,%rbx
push %rbx
push %r9
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5185
mov 18446744073709551568(%rbp),%rsi
mov 18446744073709551520(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB5189
mov $1,%edi
@_$LB5189
jmp @_$LB5186
@_$LB5185
mov $@_$MSG667,%rbx
push %rbx
push %r9
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5192
mov 18446744073709551568(%rbp),%rsi
mov 18446744073709551520(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
je @_$LB5195
mov $1,%edi
@_$LB5195
@_$LB5192
@_$LB5186
@_$LB5180
@_$LB5174
@_$LB5168
@_$LB5162
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5197
mov (%r12),%rbx
mov %rbx,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
je @_$LB5197
@_$LB5201
pushq $4
mov $@_$MSG668,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov (%r12),%rbx
push %rbx
call @scc_front__write_label_name
add $8,%rsp
pushq $1
mov $@_$MSG669,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5198
@_$LB5197
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5204
mov 8(%r12),%rbx
mov %rbx,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
je @_$LB5204
@_$LB5207
pushq $4
mov $@_$MSG670,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 8(%r12),%rbx
push %rbx
call @scc_front__write_label_name
add $8,%rsp
pushq $1
mov $@_$MSG671,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5204
@_$LB5198
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__translate_branch_relop$END
@_$LB5156
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5209
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5210
@_$LB5209
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5210
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5212
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
jmp @_$LB5213
@_$LB5212
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
@_$LB5213
mov (%r12),%rbx
mov %rbx,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
je @_$LB5215
pushq $4
push %r9
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG672,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG673,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov (%r12),%rbx
push %rbx
call @scc_front__write_label_name
add $8,%rsp
pushq $1
mov $@_$MSG674,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 8(%r12),%rbx
mov %rbx,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
je @_$LB5219
pushq $4
mov $@_$MSG675,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 8(%r12),%rbx
push %rbx
call @scc_front__write_label_name
add $8,%rsp
pushq $1
mov $@_$MSG676,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5219
jmp @_$LB5216
@_$LB5215
mov 8(%r12),%rbx
mov %rbx,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
je @_$LB5222
pushq $4
push %r8
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG677,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG678,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 8(%r12),%rbx
push %rbx
call @scc_front__write_label_name
add $8,%rsp
pushq $1
mov $@_$MSG679,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5222
@_$LB5216
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__translate_branch_relop$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_branch_and
push %rbp
mov %rsp,%rbp
sub $144,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
call @scc_front__control_label_push
mov (%rdi),%rbx
mov %rbx,18446744073709551584(%rbp)
mov 8(%rdi),%rbx
mov %rbx,18446744073709551592(%rbp)
mov 8(%rdi),%rbx
mov %rbx,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
jne @_$LB5225
mov @_$DATA+11716544,%rsi
mov 16(%rsi),%rbx
mov %rbx,8(%rdi)
@_$LB5225
mov $18446744073709551615,%rax
mov %rax,18446744073709551600(%rbp)
mov 8(%rdi),%rbx
mov %rbx,18446744073709551608(%rbp)
lea 18446744073709551600(%rbp),%rbx
push %rbx
mov 40(%r8),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__translate_branch
add $16,%rsp
lea 18446744073709551584(%rbp),%rbx
push %rbx
mov 40(%r8),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__translate_branch
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__write_label
add $8,%rsp
call @scc_front__control_label_pop
@scc_front__translate_branch_and$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_branch_or
push %rbp
mov %rsp,%rbp
sub $144,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
call @scc_front__control_label_push
mov (%rdi),%rbx
mov %rbx,18446744073709551584(%rbp)
mov 8(%rdi),%rbx
mov %rbx,18446744073709551592(%rbp)
mov (%rdi),%rbx
mov %rbx,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
jne @_$LB5228
mov @_$DATA+11716544,%rsi
mov 16(%rsi),%rbx
mov %rbx,(%rdi)
@_$LB5228
mov (%rdi),%rbx
mov %rbx,18446744073709551600(%rbp)
mov $18446744073709551615,%rax
mov %rax,18446744073709551608(%rbp)
lea 18446744073709551600(%rbp),%rbx
push %rbx
mov 40(%r8),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__translate_branch
add $16,%rsp
lea 18446744073709551584(%rbp),%rbx
push %rbx
mov 40(%r8),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__translate_branch
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__write_label
add $8,%rsp
call @scc_front__control_label_pop
@scc_front__translate_branch_or$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_branch_not
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
mov 8(%rsi),%rbx
mov %rbx,18446744073709551600(%rbp)
mov (%rsi),%rbx
mov %rbx,18446744073709551608(%rbp)
lea 18446744073709551600(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__translate_branch
add $16,%rsp
@scc_front__translate_branch_not$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_branch
push %rbp
mov %rsp,%rbp
sub $592,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
mov 24(%rbp),%rdi
mov $@_$MSG680,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5230
mov $@_$MSG681,%rbx
push %rbx
mov $@_$MSG682,%rbx
push %rbx
push %rdi
push %rsi
call @scc_front__translate_branch_relop
add $32,%rsp
jmp @_$LB5231
@_$LB5230
mov $@_$MSG683,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5233
mov $@_$MSG684,%rbx
push %rbx
mov $@_$MSG685,%rbx
push %rbx
push %rdi
push %rsi
call @scc_front__translate_branch_relop
add $32,%rsp
jmp @_$LB5234
@_$LB5233
mov $@_$MSG686,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5236
mov $@_$MSG687,%rbx
push %rbx
mov $@_$MSG688,%rbx
push %rbx
push %rdi
push %rsi
call @scc_front__translate_branch_relop
add $32,%rsp
jmp @_$LB5237
@_$LB5236
mov $@_$MSG689,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5239
mov $@_$MSG690,%rbx
push %rbx
mov $@_$MSG691,%rbx
push %rbx
push %rdi
push %rsi
call @scc_front__translate_branch_relop
add $32,%rsp
jmp @_$LB5240
@_$LB5239
mov $@_$MSG692,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5242
mov $@_$MSG693,%rbx
push %rbx
mov $@_$MSG694,%rbx
push %rbx
push %rdi
push %rsi
call @scc_front__translate_branch_relop
add $32,%rsp
jmp @_$LB5243
@_$LB5242
mov $@_$MSG695,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5245
mov $@_$MSG696,%rbx
push %rbx
mov $@_$MSG697,%rbx
push %rbx
push %rdi
push %rsi
call @scc_front__translate_branch_relop
add $32,%rsp
jmp @_$LB5246
@_$LB5245
mov $@_$MSG698,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5248
push %rdi
push %rsi
call @scc_front__translate_branch_not
add $16,%rsp
jmp @_$LB5249
@_$LB5248
mov $@_$MSG699,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5251
push %rdi
push %rsi
call @scc_front__translate_branch_and
add $16,%rsp
jmp @_$LB5252
@_$LB5251
mov $@_$MSG700,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5254
push %rdi
push %rsi
call @scc_front__translate_branch_or
add $16,%rsp
jmp @_$LB5255
@_$LB5254
lea 18446744073709551568(%rbp),%rbx
push %rbx
push %rsi
call @scc_front__calculate_expr
add $16,%rsp
mov 24(%rsi),%rbx
push %rbx
mov 16(%rsi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5258
mov 18446744073709551568(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB5260
mov (%rdi),%rbx
mov %rbx,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
je @_$LB5260
@_$LB5264
pushq $4
mov $@_$MSG701,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov (%rdi),%rbx
push %rbx
call @scc_front__write_label_name
add $8,%rsp
pushq $1
mov $@_$MSG702,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5261
@_$LB5260
mov 18446744073709551568(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5267
mov 8(%rdi),%rbx
mov %rbx,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
je @_$LB5267
@_$LB5270
pushq $4
mov $@_$MSG703,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 8(%rdi),%rbx
push %rbx
call @scc_front__write_label_name
add $8,%rsp
pushq $1
mov $@_$MSG704,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5267
@_$LB5261
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__translate_branch$END
@_$LB5258
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov (%rdi),%rbx
mov %rbx,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
je @_$LB5272
pushq $4
mov $@_$MSG705,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG706,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov (%rdi),%rbx
push %rbx
call @scc_front__write_label_name
add $8,%rsp
pushq $1
mov $@_$MSG707,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 8(%rdi),%rbx
mov %rbx,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
je @_$LB5276
pushq $4
mov $@_$MSG708,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 8(%rdi),%rbx
push %rbx
call @scc_front__write_label_name
add $8,%rsp
pushq $1
mov $@_$MSG709,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5276
jmp @_$LB5273
@_$LB5272
mov 8(%rdi),%rbx
mov %rbx,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
je @_$LB5279
pushq $4
mov $@_$MSG710,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG711,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 8(%rdi),%rbx
push %rbx
call @scc_front__write_label_name
add $8,%rsp
pushq $1
mov $@_$MSG712,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5279
@_$LB5273
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@_$LB5255
@_$LB5252
@_$LB5249
@_$LB5246
@_$LB5243
@_$LB5240
@_$LB5237
@_$LB5234
@_$LB5231
@scc_front__translate_branch$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_assign
push %rbp
mov %rsp,%rbp
sub $656,%rsp
push %rbx
push %rsi
push %rdi
mov 32(%rbp),%rdi
push %r8
push %r9
push %r12
mov 40(%rbp),%r12
push %r13
mov 24(%rbp),%r13
push %r14
mov 16(%rbp),%r14
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%r14),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%r14),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551576(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5285
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5282
@_$LB5285
mov $@_$MSG713,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5282
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5287
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
jmp @_$LB5288
@_$LB5287
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
@_$LB5288
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 18446744073709551582(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5290
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
pushq $0
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
push %rdi
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5294
mov $@_$MSG714,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5294
push %rdi
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %r12
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r12
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB5297
pushq $1
mov $@_$MSG715,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5297
mov $@_$MSG716,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5299
pushq $2
mov $@_$MSG717,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5300
@_$LB5299
mov $@_$MSG718,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5302
mov $@_$MSG719,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5306
mov $@_$MSG720,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5306
mov $@_$MSG721,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5309
mov $@_$MSG722,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5309
push %rdi
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5311
push %rdi
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5311
@_$LB5315
mov $@_$MSG723,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5317
pushq $2
mov $@_$MSG724,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5318
@_$LB5317
pushq $2
mov $@_$MSG725,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5318
jmp @_$LB5312
@_$LB5311
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB5320
pushq $2
mov $@_$MSG726,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5321
@_$LB5320
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB5323
pushq $2
mov $@_$MSG727,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5324
@_$LB5323
mov %esi,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB5326
pushq $2
mov $@_$MSG728,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5327
@_$LB5326
mov %esi,%eax
mov $8,%ecx
cmp %ecx,%eax
jne @_$LB5329
pushq $2
mov $@_$MSG729,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5330
@_$LB5329
mov $@_$MSG730,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5330
@_$LB5327
@_$LB5324
@_$LB5321
@_$LB5312
jmp @_$LB5303
@_$LB5302
mov $@_$MSG731,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5303
@_$LB5300
push %rdi
call @scc_front__syntax_tree_release
add $8,%rsp
jmp @_$LB5291
@_$LB5290
pushq $0
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5333
mov $@_$MSG732,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5333
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG733,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov $@_$MSG734,%rbx
push %rbx
push %rdi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5336
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG735,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5336
@_$LB5291
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG736,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r9
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r9
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551582(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5339
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB5339
@_$LB5342
pushq $1
mov $@_$MSG737,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
@_$LB5339
pushq $1
mov $@_$MSG738,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r9
call @free
add $8,%rsp
movl $0,8(%r13)
mov 18446744073709551532(%rbp),%bx
mov %bx,12(%r13)
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r13)
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r13)
movw $0,14(%r13)
mov 12(%r13),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5345
mov 18446744073709551520(%rbp),%rbx
mov %rbx,(%r13)
@_$LB5345
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_assign$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_add
push %rbp
mov %rsp,%rbp
sub $528,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
push %r14
mov 24(%rbp),%r14
mov $1,%r12
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5348
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5348
@_$LB5351
mov 18446744073709551568(%rbp),%rdi
mov 18446744073709551520(%rbp),%rsi
lea (%rdi,%rsi),%rbx
mov %rbx,(%r14)
movl $0,8(%r14)
movw $0,14(%r14)
movw $1,12(%r14)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__array_function_to_pointer
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r14)
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r14)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_add$END
@_$LB5348
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
pushq $1
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5354
mov $@_$MSG739,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5354
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5356
mov $@_$MSG740,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
jmp @_$LB5357
@_$LB5356
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__is_basic_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5360
mov $@_$MSG741,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5360
@_$LB5357
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5363
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r13
push %r13
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r12
push %r13
call @scc_front__syntax_tree_release
add $8,%rsp
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5366
mov $1,%r12
@_$LB5366
@_$LB5363
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__array_function_to_pointer
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r13
mov $@_$MSG742,%rbx
push %rbx
mov (%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5368
mov 8(%r13),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,8(%r13)
jmp @_$LB5369
@_$LB5368
mov 40(%r13),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r13),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
@_$LB5369
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5371
mov 18446744073709551520(%rbp),%rbx
mov %rbx,%rax
mov %r12,%rcx
mul %rcx
mov %rax,%rbx
mov %rbx,18446744073709551520(%rbp)
jmp @_$LB5372
@_$LB5371
push %r12
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__scale_result
add $24,%rsp
@_$LB5372
movl $0,8(%r14)
movw $0,14(%r14)
movw $0,12(%r14)
mov %r8,32(%r14)
mov %r9,24(%r14)
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG743,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG744,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5374
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5375
@_$LB5374
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5375
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG745,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5377
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5378
@_$LB5377
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5378
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG746,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_add$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_mul
push %rbp
mov %rsp,%rbp
sub $496,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5381
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5381
@_$LB5384
mov 18446744073709551568(%rbp),%rdi
mov 18446744073709551520(%rbp),%rsi
mov %rdi,%rax
mov %rsi,%rcx
mul %rcx
mov %rax,%rbx
mov %rbx,(%r13)
movl $0,8(%r13)
movw $0,14(%r13)
movw $1,12(%r13)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r13)
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r13)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_mul$END
@_$LB5381
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
pushq $0
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5387
mov $@_$MSG747,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5387
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5390
mov $@_$MSG748,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5390
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5393
mov $@_$MSG749,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5393
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov $@_$MSG750,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5395
mov 8(%r12),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,8(%r12)
jmp @_$LB5396
@_$LB5395
mov 40(%r12),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r12),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
@_$LB5396
movl $0,8(%r13)
movw $0,14(%r13)
movw $0,12(%r13)
mov %r8,32(%r13)
mov %r9,24(%r13)
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG751,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG752,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5398
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5399
@_$LB5398
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5399
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG753,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5401
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5402
@_$LB5401
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5402
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG754,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_mul$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_sub
push %rbp
mov %rsp,%rbp
sub $544,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
mov 24(%rbp),%r15
mov $1,%r13
mov $0,%r12d
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5405
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5405
@_$LB5408
mov 18446744073709551568(%rbp),%rdi
mov 18446744073709551520(%rbp),%rsi
mov %rdi,%rbx
sub %rsi,%rbx
mov %rbx,(%r15)
movl $0,8(%r15)
movw $0,14(%r15)
movw $1,12(%r15)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__array_function_to_pointer
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r15)
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r15)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_sub$END
@_$LB5405
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
pushq $1
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5411
mov $@_$MSG755,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5411
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5413
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5417
mov $@_$MSG756,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5417
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r14
push %r14
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
push %r14
call @scc_front__syntax_tree_release
add $8,%rsp
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5420
mov $1,%r13
@_$LB5420
mov 18446744073709551592(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
pushq $0
mov $@_$MSG757,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r9
mov 18446744073709551592(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
mov $@_$MSG758,%rbx
push %rbx
mov $@_$MSG759,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
mov $1,%r12d
jmp @_$LB5414
@_$LB5413
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5423
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r14
push %r14
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
push %r14
call @scc_front__syntax_tree_release
add $8,%rsp
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5426
mov $1,%r13
@_$LB5426
@_$LB5423
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__array_function_to_pointer
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
@_$LB5414
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r14
mov $@_$MSG760,%rbx
push %rbx
mov (%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5428
mov 8(%r14),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,8(%r14)
jmp @_$LB5429
@_$LB5428
mov 40(%r14),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r14),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
@_$LB5429
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5431
mov %r12d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5435
mov 18446744073709551520(%rbp),%rbx
mov %rbx,%rax
mov %r13,%rcx
mul %rcx
mov %rax,%rbx
mov %rbx,18446744073709551520(%rbp)
@_$LB5435
jmp @_$LB5432
@_$LB5431
mov %r12d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5438
push %r13
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__scale_result
add $24,%rsp
@_$LB5438
@_$LB5432
movl $0,8(%r15)
movw $0,14(%r15)
movw $0,12(%r15)
mov %r8,32(%r15)
mov %r9,24(%r15)
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG761,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG762,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5440
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5441
@_$LB5440
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5441
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG763,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5443
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5444
@_$LB5443
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5444
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG764,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
mov %r12d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5447
push %r13
mov 32(%r15),%rbx
push %rbx
mov 24(%r15),%rbx
push %rbx
call @scc_front__r_scale_result
add $24,%rsp
@_$LB5447
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_sub$END
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_div
push %rbp
mov %rsp,%rbp
sub $512,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5450
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5450
@_$LB5453
mov 18446744073709551520(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5456
mov $@_$MSG765,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5456
mov 18446744073709551568(%rbp),%rdi
mov 18446744073709551520(%rbp),%rsi
mov %rdi,%rax
mov %rsi,%rcx
xor %rdx,%rdx
div %rcx
mov %rax,%rbx
mov %rbx,(%r13)
movl $0,8(%r13)
movw $0,14(%r13)
movw $1,12(%r13)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r13)
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r13)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_div$END
@_$LB5450
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
pushq $0
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5459
mov $@_$MSG766,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5459
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5462
mov $@_$MSG767,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5462
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5465
mov $@_$MSG768,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5465
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov $@_$MSG769,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5467
mov 8(%r12),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,8(%r12)
jmp @_$LB5468
@_$LB5467
mov 40(%r12),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r12),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
@_$LB5468
movl $0,8(%r13)
movw $0,14(%r13)
movw $0,12(%r13)
mov %r8,32(%r13)
mov %r9,24(%r13)
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG770,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG771,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5470
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5471
@_$LB5470
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5471
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG772,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5473
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5474
@_$LB5473
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5474
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG773,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_div$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_mod
push %rbp
mov %rsp,%rbp
sub $512,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5477
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5477
@_$LB5480
mov 18446744073709551520(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5483
mov $@_$MSG774,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5483
mov 18446744073709551568(%rbp),%rdi
mov 18446744073709551520(%rbp),%rsi
mov %rdi,%rax
mov %rsi,%rcx
xor %rdx,%rdx
div %rcx
mov %rdx,%rax
mov %rax,%rbx
mov %rbx,(%r13)
movl $0,8(%r13)
movw $0,14(%r13)
movw $1,12(%r13)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r13)
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r13)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_mod$END
@_$LB5477
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
pushq $0
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5486
mov $@_$MSG775,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5486
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5489
mov $@_$MSG776,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5489
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5492
mov $@_$MSG777,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5492
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov $@_$MSG778,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5494
mov 8(%r12),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,8(%r12)
jmp @_$LB5495
@_$LB5494
mov 40(%r12),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r12),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
@_$LB5495
movl $0,8(%r13)
movw $0,14(%r13)
movw $0,12(%r13)
mov %r8,32(%r13)
mov %r9,24(%r13)
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG779,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG780,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5497
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5498
@_$LB5497
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5498
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG781,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5500
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5501
@_$LB5500
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5501
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG782,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_mod$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_and
push %rbp
mov %rsp,%rbp
sub $528,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5504
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5504
@_$LB5507
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5513
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5510
@_$LB5513
mov $@_$MSG783,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5510
mov 18446744073709551568(%rbp),%rdi
mov 18446744073709551520(%rbp),%rsi
mov %rdi,%rbx
and %rsi,%rbx
mov %rbx,(%r13)
movl $0,8(%r13)
movw $0,14(%r13)
movw $1,12(%r13)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r13)
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r13)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_and$END
@_$LB5504
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
pushq $0
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5516
mov $@_$MSG784,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5516
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5519
mov $@_$MSG785,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5519
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5522
mov $@_$MSG786,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5522
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5528
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5525
@_$LB5528
mov $@_$MSG787,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5525
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov $@_$MSG788,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5530
mov 8(%r12),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,8(%r12)
jmp @_$LB5531
@_$LB5530
mov 40(%r12),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r12),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
@_$LB5531
movl $0,8(%r13)
movw $0,14(%r13)
movw $0,12(%r13)
mov %r8,32(%r13)
mov %r9,24(%r13)
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG789,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG790,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5533
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5534
@_$LB5533
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5534
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG791,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5536
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5537
@_$LB5536
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5537
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG792,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_and$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_orr
push %rbp
mov %rsp,%rbp
sub $528,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5540
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5540
@_$LB5543
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5549
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5546
@_$LB5549
mov $@_$MSG793,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5546
mov 18446744073709551568(%rbp),%rdi
mov 18446744073709551520(%rbp),%rsi
mov %rdi,%rbx
or %rsi,%rbx
mov %rbx,(%r13)
movl $0,8(%r13)
movw $0,14(%r13)
movw $1,12(%r13)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r13)
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r13)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_orr$END
@_$LB5540
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
pushq $0
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5552
mov $@_$MSG794,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5552
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5555
mov $@_$MSG795,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5555
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5558
mov $@_$MSG796,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5558
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5564
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5561
@_$LB5564
mov $@_$MSG797,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5561
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov $@_$MSG798,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5566
mov 8(%r12),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,8(%r12)
jmp @_$LB5567
@_$LB5566
mov 40(%r12),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r12),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
@_$LB5567
movl $0,8(%r13)
movw $0,14(%r13)
movw $0,12(%r13)
mov %r8,32(%r13)
mov %r9,24(%r13)
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG799,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG800,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5569
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5570
@_$LB5569
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5570
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG801,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5572
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5573
@_$LB5572
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5573
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG802,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_orr$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_eor
push %rbp
mov %rsp,%rbp
sub $528,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5576
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5576
@_$LB5579
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5585
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5582
@_$LB5585
mov $@_$MSG803,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5582
mov 18446744073709551568(%rbp),%rdi
mov 18446744073709551520(%rbp),%rsi
mov %rdi,%rbx
xor %rsi,%rbx
mov %rbx,(%r13)
movl $0,8(%r13)
movw $0,14(%r13)
movw $1,12(%r13)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r13)
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r13)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_eor$END
@_$LB5576
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
pushq $0
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5588
mov $@_$MSG804,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5588
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5591
mov $@_$MSG805,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5591
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5594
mov $@_$MSG806,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5594
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5600
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5597
@_$LB5600
mov $@_$MSG807,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5597
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov $@_$MSG808,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5602
mov 8(%r12),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,8(%r12)
jmp @_$LB5603
@_$LB5602
mov 40(%r12),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r12),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
@_$LB5603
movl $0,8(%r13)
movw $0,14(%r13)
movw $0,12(%r13)
mov %r8,32(%r13)
mov %r9,24(%r13)
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG809,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG810,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5605
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5606
@_$LB5605
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5606
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG811,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5608
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5609
@_$LB5608
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5609
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG812,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_eor$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_lsh
push %rbp
mov %rsp,%rbp
sub $528,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5612
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5612
@_$LB5615
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5621
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5618
@_$LB5621
mov $@_$MSG813,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5618
mov 18446744073709551568(%rbp),%rdi
mov 18446744073709551520(%rbp),%rsi
mov %rdi,%rax
mov %sil,%cl
shl %cl,%rax
mov %rax,%rbx
mov %rbx,(%r13)
movl $0,8(%r13)
movw $0,14(%r13)
movw $1,12(%r13)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r13)
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r13)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_lsh$END
@_$LB5612
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
pushq $0
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5624
mov $@_$MSG814,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5624
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5627
mov $@_$MSG815,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5627
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5630
mov $@_$MSG816,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5630
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5636
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5633
@_$LB5636
mov $@_$MSG817,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5633
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov $@_$MSG818,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5638
mov 8(%r12),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,8(%r12)
jmp @_$LB5639
@_$LB5638
mov 40(%r12),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r12),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
@_$LB5639
movl $0,8(%r13)
movw $0,14(%r13)
movw $0,12(%r13)
mov %r8,32(%r13)
mov %r9,24(%r13)
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG819,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG820,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5641
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5642
@_$LB5641
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5642
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG821,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5644
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5645
@_$LB5644
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5645
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG822,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_lsh$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_rsh
push %rbp
mov %rsp,%rbp
sub $528,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5648
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5648
@_$LB5651
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5657
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5654
@_$LB5657
mov $@_$MSG823,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5654
mov 18446744073709551568(%rbp),%rdi
mov 18446744073709551520(%rbp),%rsi
mov %rdi,%rax
mov %sil,%cl
shr %cl,%rax
mov %rax,%rbx
mov %rbx,(%r13)
movl $0,8(%r13)
movw $0,14(%r13)
movw $1,12(%r13)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r13)
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r13)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_rsh$END
@_$LB5648
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
pushq $0
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5660
mov $@_$MSG824,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5660
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5663
mov $@_$MSG825,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5663
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5666
mov $@_$MSG826,%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 18446744073709551552(%rbp),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5666
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5672
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5669
@_$LB5672
mov $@_$MSG827,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5669
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov $@_$MSG828,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5674
mov 8(%r12),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,8(%r12)
jmp @_$LB5675
@_$LB5674
mov 40(%r12),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r12),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
@_$LB5675
movl $0,8(%r13)
movw $0,14(%r13)
movw $0,12(%r13)
mov %r8,32(%r13)
mov %r9,24(%r13)
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG829,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG830,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5677
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5678
@_$LB5677
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5678
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG831,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5680
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB5681
@_$LB5680
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB5681
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG832,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_rsh$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_neg
push %rbp
mov %rsp,%rbp
sub $320,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551568(%rbp),%rbx
add $32,%rbx
push %rbx
call @scc_front__array_function_to_pointer2
add $8,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5684
mov 18446744073709551568(%rbp),%rsi
mov %rsi,%rbx
neg %rbx
mov %rbx,(%r13)
movl $0,8(%r13)
movw $0,14(%r13)
movw $1,12(%r13)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r13)
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r13)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_neg$END
@_$LB5684
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5687
mov $@_$MSG833,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5687
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov $@_$MSG834,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5689
mov 8(%r12),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,8(%r12)
jmp @_$LB5690
@_$LB5689
mov 40(%r12),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r12),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
@_$LB5690
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
movl $0,8(%r13)
movw $0,14(%r13)
movw $0,12(%r13)
mov %r8,32(%r13)
mov %r9,24(%r13)
pushq $4
mov $@_$MSG835,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG836,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG837,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_neg$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_not
push %rbp
mov %rsp,%rbp
sub $320,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551568(%rbp),%rbx
add $32,%rbx
push %rbx
call @scc_front__array_function_to_pointer2
add $8,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5693
mov 18446744073709551568(%rbp),%rsi
mov %rsi,%rbx
not %rbx
mov %rbx,(%r13)
movl $0,8(%r13)
movw $0,14(%r13)
movw $1,12(%r13)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r13)
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r13)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_not$END
@_$LB5693
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5696
mov $@_$MSG838,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5696
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov $@_$MSG839,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5698
mov 8(%r12),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,8(%r12)
jmp @_$LB5699
@_$LB5698
mov 40(%r12),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r12),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
@_$LB5699
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
movl $0,8(%r13)
movw $0,14(%r13)
movw $0,12(%r13)
mov %r8,32(%r13)
mov %r9,24(%r13)
pushq $4
mov $@_$MSG840,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG841,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG842,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_not$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_member
push %rbp
mov %rsp,%rbp
sub $208,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
push %r9
push %r12
push %r13
push %r14
mov 24(%rbp),%r14
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%r8),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551582(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5701
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r9
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5705
mov $@_$MSG843,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5705
push %r9
call @scc_front__syntax_tree_release
add $8,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,16(%r14)
jmp @_$LB5702
@_$LB5701
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5708
mov $@_$MSG844,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5708
@_$LB5702
pushq $0
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__get_struct_member_list
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5711
mov $@_$MSG845,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5711
mov 40(%r8),%rbx
mov 8(%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
push %rdi
call @scc_front__get_member_type
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5714
mov $@_$MSG846,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5714
mov 40(%r8),%rbx
mov 8(%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
push %rdi
call @scc_front__get_member_decl
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r12
mov 40(%r8),%rbx
mov 8(%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
push %rdi
call @scc_front__get_member_offset
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r8
push %r13
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r13
push %r12
call @scc_front__get_addr
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r12
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov 40(%r9),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r9),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
mov 16(%r14),%rbx
add %r8,%rbx
mov %rbx,16(%r14)
movw $0,12(%r14)
movl $1,8(%r14)
movw $1,14(%r14)
mov %r13,24(%r14)
mov %r12,32(%r14)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_member$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_member_ptr
push %rbp
mov %rsp,%rbp
sub $224,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
push %r9
push %r12
push %r13
push %r14
mov 24(%rbp),%r14
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%r8),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5717
mov $@_$MSG847,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5717
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r9
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5720
mov $@_$MSG848,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5720
push %r9
call @scc_front__syntax_tree_release
add $8,%rsp
pushq $0
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__get_struct_member_list
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5723
mov $@_$MSG849,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5723
mov 40(%r8),%rbx
mov 8(%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
push %rdi
call @scc_front__get_member_type
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5726
mov $@_$MSG850,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5726
mov 40(%r8),%rbx
mov 8(%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
push %rdi
call @scc_front__get_member_decl
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r12
mov 40(%r8),%rbx
mov 8(%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
push %rdi
call @scc_front__get_member_offset
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r8
push %r13
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r13
push %r12
call @scc_front__get_addr
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r12
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov 40(%r9),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r9),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
movw $0,12(%r14)
movl $1,8(%r14)
movw $1,14(%r14)
mov %r13,24(%r14)
mov %r12,32(%r14)
mov %r8,16(%r14)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_member_ptr$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_sizeof
push %rbp
mov %rsp,%rbp
sub $128,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov @_$DATA+11716528,%ebx
mov %ebx,%edi
mov $1,%eax
mov %eax,@_$DATA+11716528
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%r9),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551582(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5729
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_release
add $8,%rsp
mov %rsi,18446744073709551600(%rbp)
@_$LB5729
pushq $0
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__get_struct_member_list
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5732
mov 18446744073709551592(%rbp),%rbx
mov %rbx,%rsi
@_$LB5732
mov 18446744073709551600(%rbp),%rbx
push %rbx
push %rsi
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
mov %edi,@_$DATA+11716528
movw $1,12(%r8)
mov %rsi,(%r8)
movl $0,8(%r8)
movw $0,14(%r8)
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
mov $@_$MSG851,%rbx
push %rbx
mov $@_$MSG852,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,32(%r8)
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
pushq $0
mov $@_$MSG853,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,24(%r8)
@scc_front__calculate_sizeof$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_sizeof_type
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
pushq $0
mov 40(%r9),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__get_struct_member_list
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5735
mov 40(%r9),%rsi
mov (%rsi),%rbx
mov %rbx,%rdi
@_$LB5735
mov 40(%r9),%rsi
mov 8(%rsi),%rbx
push %rbx
push %rdi
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
movw $1,12(%r8)
mov %rsi,(%r8)
movl $0,8(%r8)
movw $0,14(%r8)
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
mov $@_$MSG854,%rbx
push %rbx
mov $@_$MSG855,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,32(%r8)
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
pushq $0
mov $@_$MSG856,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,24(%r8)
@scc_front__calculate_sizeof_type$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_addr
push %rbp
mov %rsp,%rbp
sub $448,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551576(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5738
mov $@_$MSG857,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5738
mov 18446744073709551582(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5740
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB5743
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
push %r9
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 40(%r8),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r8),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
pushq $1
pushq $0
pushq $0
pushq $0
push %r9
push %r12
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG858,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG859,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG860,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
pushq $1
mov $@_$MSG861,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
movl $0,8(%r13)
movw $0,14(%r13)
movw $0,12(%r13)
mov %r12,24(%r13)
mov %r9,32(%r13)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @_$LB5744
@_$LB5743
movl $0,8(%r13)
movw $0,14(%r13)
movw $0,12(%r13)
mov 18446744073709551592(%rbp),%rbx
mov %rbx,24(%r13)
mov 18446744073709551600(%rbp),%rbx
mov %rbx,32(%r13)
@_$LB5744
jmp @_$LB5741
@_$LB5740
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_addr
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
push %r9
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 40(%r8),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r8),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
pushq $1
pushq $0
pushq $0
pushq $0
push %r9
push %r12
call @scc_front__add_decl
add $48,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB5746
pushq $5
mov $@_$MSG862,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5747
@_$LB5746
pushq $4
mov $@_$MSG863,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5747
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG864,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB5750
pushq $1
mov $@_$MSG865,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
@_$LB5750
pushq $1
mov $@_$MSG866,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
movl $0,8(%r13)
movw $0,14(%r13)
movw $0,12(%r13)
mov %r12,24(%r13)
mov %r9,32(%r13)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@_$LB5741
@scc_front__calculate_addr$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_deref
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
push %rdi
mov 40(%r8),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
push %rdi
call @scc_front__deref_ptr
add $24,%rsp
mov 32(%rdi),%rbx
push %rbx
call @scc_front__is_pointer_array
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5753
mov $@_$MSG867,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5753
movl $1,8(%rdi)
movw $1,14(%rdi)
@scc_front__calculate_deref$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_index_ptr
push %rbp
mov %rsp,%rbp
sub $400,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
push %r14
mov 24(%rbp),%r14
mov $1,%r12
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5755
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
jmp @_$LB5756
@_$LB5755
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
@_$LB5756
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r13
push %r13
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r12
push %r13
call @scc_front__syntax_tree_release
add $8,%rsp
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5759
mov $1,%r12
@_$LB5759
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__array_function_to_pointer
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r13
mov 40(%r13),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r13),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5761
mov 18446744073709551520(%rbp),%rbx
mov %rbx,%rax
mov %r12,%rcx
mul %rcx
mov %rax,%rbx
mov %rbx,18446744073709551520(%rbp)
jmp @_$LB5762
@_$LB5761
push %r12
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__scale_result
add $24,%rsp
@_$LB5762
movl $1,8(%r14)
movw $1,14(%r14)
movw $0,12(%r14)
mov %r8,32(%r14)
mov %r9,24(%r14)
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5764
mov 18446744073709551520(%rbp),%rbx
mov %rbx,16(%r14)
jmp @_$LB5765
@_$LB5764
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG868,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG869,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG870,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG871,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5765
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_index_ptr$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_index
push %rbp
mov %rsp,%rbp
sub $528,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
push %r14
mov 24(%rbp),%r14
mov $1,%r12
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__is_basic_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5771
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5771
@_$LB5774
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5768
@_$LB5771
mov $@_$MSG872,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5768
mov 18446744073709551582(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5776
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r13
push %r13
call @scc_front__is_pointer_array
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5780
mov $@_$MSG873,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5780
push %r13
call @scc_front__syntax_tree_release
add $8,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,16(%r14)
jmp @_$LB5777
@_$LB5776
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5783
mov $@_$MSG874,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5783
@_$LB5777
mov 18446744073709551582(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5785
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r13
jmp @_$LB5786
@_$LB5785
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r13
@_$LB5786
push %r13
call @scc_front__is_pointer
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5789
pushq $40
pushq $0
push %r14
call @memset
mov %rax,%rbx
add $24,%rsp
push %r14
push %rdi
call @scc_front__calculate_index_ptr
add $16,%rsp
push %r13
call @scc_front__syntax_tree_release
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_index$END
@_$LB5789
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5791
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
jmp @_$LB5792
@_$LB5791
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
@_$LB5792
push %r13
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rsi
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r12
push %rsi
call @scc_front__syntax_tree_release
add $8,%rsp
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5795
mov $1,%r12
@_$LB5795
push %r13
call @scc_front__array_function_to_pointer
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
push %r13
call @scc_front__syntax_tree_release
add $8,%rsp
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r13
mov 40(%r13),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r13),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5797
mov 18446744073709551520(%rbp),%rbx
mov %rbx,%rax
mov %r12,%rcx
mul %rcx
mov %rax,%rbx
mov %rbx,18446744073709551520(%rbp)
jmp @_$LB5798
@_$LB5797
push %r12
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__scale_result
add $24,%rsp
@_$LB5798
movl $1,8(%r14)
movw $1,14(%r14)
movw $0,12(%r14)
mov %r8,32(%r14)
mov %r9,24(%r14)
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5800
mov 18446744073709551520(%rbp),%rsi
mov 16(%r14),%rbx
add %rsi,%rbx
mov %rbx,16(%r14)
jmp @_$LB5801
@_$LB5800
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG875,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG876,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG877,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG878,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5801
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_index$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_inc
push %rbp
mov %rsp,%rbp
sub $1088,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
push %r10
push %r11
mov 24(%rbp),%r11
mov $1,%r14
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551576(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5807
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5804
@_$LB5807
mov $@_$MSG879,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5804
mov 18446744073709551582(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5809
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%r8
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r10
push %r10
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_integer_type
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5813
mov $@_$MSG880,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5813
push %r10
call @scc_front__is_pointer_array
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5815
push %r10
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r15
push %r15
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5819
mov $1,%r14
@_$LB5819
mov $8,%r13
push %r15
call @scc_front__syntax_tree_release
add $8,%rsp
jmp @_$LB5816
@_$LB5815
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_basic_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5821
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5821
@_$LB5825
push %r10
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB5822
@_$LB5821
mov $@_$MSG881,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5822
@_$LB5816
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
push %r10
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r9
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r15
mov $@_$MSG882,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5827
mov 8(%r15),%rbx
mov %rbx,%rdi
mov %r8,8(%r15)
jmp @_$LB5828
@_$LB5827
mov 40(%r15),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
mov %rbx,%rdi
mov 40(%r15),%rsi
mov (%rsi),%rbx
mov %r8,8(%rbx)
@_$LB5828
pushq $1
pushq $0
pushq $0
pushq $0
push %r9
push %r12
call @scc_front__add_decl
add $48,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB5830
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5833
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5833
@_$LB5837
mov $@_$MSG883,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5839
pushq $5
mov $@_$MSG884,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5840
@_$LB5839
pushq $5
mov $@_$MSG885,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5840
jmp @_$LB5834
@_$LB5833
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB5842
pushq $5
mov $@_$MSG886,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5843
@_$LB5842
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB5845
pushq $5
mov $@_$MSG887,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5846
@_$LB5845
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB5848
pushq $5
mov $@_$MSG888,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5849
@_$LB5848
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB5852
pushq $5
mov $@_$MSG889,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5852
@_$LB5849
@_$LB5846
@_$LB5843
@_$LB5834
jmp @_$LB5831
@_$LB5830
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5854
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5854
@_$LB5858
mov $@_$MSG890,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5860
pushq $4
mov $@_$MSG891,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5861
@_$LB5860
pushq $4
mov $@_$MSG892,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5861
jmp @_$LB5855
@_$LB5854
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB5863
pushq $4
mov $@_$MSG893,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5864
@_$LB5863
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB5866
pushq $4
mov $@_$MSG894,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5867
@_$LB5866
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB5869
pushq $4
mov $@_$MSG895,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5870
@_$LB5869
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB5873
pushq $4
mov $@_$MSG896,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5873
@_$LB5870
@_$LB5867
@_$LB5864
@_$LB5855
@_$LB5831
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG897,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB5876
pushq $1
mov $@_$MSG898,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
@_$LB5876
pushq $1
mov $@_$MSG899,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
pushq $4
mov $@_$MSG900,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG901,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG902,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r14
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG903,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB5878
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5881
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5881
@_$LB5885
mov $@_$MSG904,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5887
pushq $5
mov $@_$MSG905,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5888
@_$LB5887
pushq $5
mov $@_$MSG906,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5888
jmp @_$LB5882
@_$LB5881
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB5890
pushq $5
mov $@_$MSG907,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5891
@_$LB5890
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB5893
pushq $5
mov $@_$MSG908,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5894
@_$LB5893
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB5896
pushq $5
mov $@_$MSG909,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5897
@_$LB5896
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB5900
pushq $5
mov $@_$MSG910,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5900
@_$LB5897
@_$LB5894
@_$LB5891
@_$LB5882
jmp @_$LB5879
@_$LB5878
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5902
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5902
@_$LB5906
mov $@_$MSG911,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5908
pushq $4
mov $@_$MSG912,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5909
@_$LB5908
pushq $4
mov $@_$MSG913,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5909
jmp @_$LB5903
@_$LB5902
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB5911
pushq $4
mov $@_$MSG914,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5912
@_$LB5911
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB5914
pushq $4
mov $@_$MSG915,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5915
@_$LB5914
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB5917
pushq $4
mov $@_$MSG916,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5918
@_$LB5917
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB5921
pushq $4
mov $@_$MSG917,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5921
@_$LB5918
@_$LB5915
@_$LB5912
@_$LB5903
@_$LB5879
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG918,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB5924
pushq $1
mov $@_$MSG919,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
@_$LB5924
pushq $1
mov $@_$MSG920,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
push %r10
call @scc_front__syntax_tree_release
add $8,%rsp
mov %r12,24(%r11)
mov %r9,32(%r11)
movw $0,12(%r11)
movl $0,8(%r11)
movw $0,14(%r11)
jmp @_$LB5810
@_$LB5809
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_integer_type
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5927
mov $@_$MSG921,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5927
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5930
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r15
push %r15
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5933
mov $1,%r14
@_$LB5933
push %r15
call @scc_front__syntax_tree_release
add $8,%rsp
@_$LB5930
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
pushq $4
mov $@_$MSG922,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG923,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG924,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r14
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG925,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r11)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r11)
movw $0,12(%r11)
movl $0,8(%r11)
movw $0,14(%r11)
@_$LB5810
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_inc$END
pop %r11
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_dec
push %rbp
mov %rsp,%rbp
sub $1088,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
push %r10
push %r11
mov 24(%rbp),%r11
mov $1,%r14
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551576(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5939
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5936
@_$LB5939
mov $@_$MSG926,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5936
mov 18446744073709551582(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB5941
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%r8
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r10
push %r10
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_integer_type
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5945
mov $@_$MSG927,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5945
push %r10
call @scc_front__is_pointer_array
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5947
push %r10
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r15
push %r15
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB5951
mov $1,%r14
@_$LB5951
mov $8,%r13
push %r15
call @scc_front__syntax_tree_release
add $8,%rsp
jmp @_$LB5948
@_$LB5947
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_basic_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5953
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5953
@_$LB5957
push %r10
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB5954
@_$LB5953
mov $@_$MSG928,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB5954
@_$LB5948
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
push %r10
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r9
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r15
mov $@_$MSG929,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5959
mov 8(%r15),%rbx
mov %rbx,%rdi
mov %r8,8(%r15)
jmp @_$LB5960
@_$LB5959
mov 40(%r15),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
mov %rbx,%rdi
mov 40(%r15),%rsi
mov (%rsi),%rbx
mov %r8,8(%rbx)
@_$LB5960
pushq $1
pushq $0
pushq $0
pushq $0
push %r9
push %r12
call @scc_front__add_decl
add $48,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB5962
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5965
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5965
@_$LB5969
mov $@_$MSG930,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5971
pushq $5
mov $@_$MSG931,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5972
@_$LB5971
pushq $5
mov $@_$MSG932,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5972
jmp @_$LB5966
@_$LB5965
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB5974
pushq $5
mov $@_$MSG933,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5975
@_$LB5974
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB5977
pushq $5
mov $@_$MSG934,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5978
@_$LB5977
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB5980
pushq $5
mov $@_$MSG935,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5981
@_$LB5980
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB5984
pushq $5
mov $@_$MSG936,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5984
@_$LB5981
@_$LB5978
@_$LB5975
@_$LB5966
jmp @_$LB5963
@_$LB5962
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5986
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB5986
@_$LB5990
mov $@_$MSG937,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB5992
pushq $4
mov $@_$MSG938,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5993
@_$LB5992
pushq $4
mov $@_$MSG939,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB5993
jmp @_$LB5987
@_$LB5986
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB5995
pushq $4
mov $@_$MSG940,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5996
@_$LB5995
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB5998
pushq $4
mov $@_$MSG941,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB5999
@_$LB5998
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6001
pushq $4
mov $@_$MSG942,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6002
@_$LB6001
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6005
pushq $4
mov $@_$MSG943,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6005
@_$LB6002
@_$LB5999
@_$LB5996
@_$LB5987
@_$LB5963
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG944,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6008
pushq $1
mov $@_$MSG945,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
@_$LB6008
pushq $1
mov $@_$MSG946,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
pushq $4
mov $@_$MSG947,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG948,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG949,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r14
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG950,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6010
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6013
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6013
@_$LB6017
mov $@_$MSG951,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6019
pushq $5
mov $@_$MSG952,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6020
@_$LB6019
pushq $5
mov $@_$MSG953,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6020
jmp @_$LB6014
@_$LB6013
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6022
pushq $5
mov $@_$MSG954,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6023
@_$LB6022
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6025
pushq $5
mov $@_$MSG955,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6026
@_$LB6025
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6028
pushq $5
mov $@_$MSG956,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6029
@_$LB6028
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6032
pushq $5
mov $@_$MSG957,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6032
@_$LB6029
@_$LB6026
@_$LB6023
@_$LB6014
jmp @_$LB6011
@_$LB6010
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6034
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6034
@_$LB6038
mov $@_$MSG958,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6040
pushq $4
mov $@_$MSG959,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6041
@_$LB6040
pushq $4
mov $@_$MSG960,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6041
jmp @_$LB6035
@_$LB6034
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6043
pushq $4
mov $@_$MSG961,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6044
@_$LB6043
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6046
pushq $4
mov $@_$MSG962,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6047
@_$LB6046
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6049
pushq $4
mov $@_$MSG963,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6050
@_$LB6049
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6053
pushq $4
mov $@_$MSG964,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6053
@_$LB6050
@_$LB6047
@_$LB6044
@_$LB6035
@_$LB6011
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG965,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6056
pushq $1
mov $@_$MSG966,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
@_$LB6056
pushq $1
mov $@_$MSG967,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
push %r10
call @scc_front__syntax_tree_release
add $8,%rsp
mov %r12,24(%r11)
mov %r9,32(%r11)
movw $0,12(%r11)
movl $0,8(%r11)
movw $0,14(%r11)
jmp @_$LB5942
@_$LB5941
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_integer_type
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6059
mov $@_$MSG968,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6059
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6062
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r15
push %r15
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB6065
mov $1,%r14
@_$LB6065
push %r15
call @scc_front__syntax_tree_release
add $8,%rsp
@_$LB6062
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
pushq $4
mov $@_$MSG969,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG970,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG971,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r14
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG972,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r11)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r11)
movw $0,12(%r11)
movl $0,8(%r11)
movw $0,14(%r11)
@_$LB5942
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_dec$END
pop %r11
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_assign_add
push %rbp
mov %rsp,%rbp
sub $1184,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
push %r10
push %r11
mov 24(%rbp),%r11
mov $1,%r14
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551576(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6071
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6068
@_$LB6071
mov $@_$MSG973,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6068
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6074
mov $@_$MSG974,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6074
mov 18446744073709551582(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6076
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%r8
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r10
push %r10
call @scc_front__is_pointer_array
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6079
push %r10
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r15
push %r15
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB6083
mov $1,%r14
@_$LB6083
mov $8,%r13
push %r15
call @scc_front__syntax_tree_release
add $8,%rsp
jmp @_$LB6080
@_$LB6079
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_basic_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6085
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6085
@_$LB6089
push %r10
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB6086
@_$LB6085
mov $@_$MSG975,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6086
@_$LB6080
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
push %r10
call @scc_front__array_function_to_pointer
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r9
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r15
mov $@_$MSG976,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6091
mov 8(%r15),%rbx
mov %rbx,%rdi
mov %r8,8(%r15)
jmp @_$LB6092
@_$LB6091
mov 40(%r15),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
mov %rbx,%rdi
mov 40(%r15),%rsi
mov (%rsi),%rbx
mov %r8,8(%rbx)
@_$LB6092
pushq $1
pushq $0
pushq $0
pushq $0
push %r9
push %r12
call @scc_front__add_decl
add $48,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6094
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6097
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6097
@_$LB6101
mov $@_$MSG977,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6103
pushq $5
mov $@_$MSG978,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6104
@_$LB6103
pushq $5
mov $@_$MSG979,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6104
jmp @_$LB6098
@_$LB6097
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6106
pushq $5
mov $@_$MSG980,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6107
@_$LB6106
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6109
pushq $5
mov $@_$MSG981,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6110
@_$LB6109
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6112
pushq $5
mov $@_$MSG982,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6113
@_$LB6112
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6116
pushq $5
mov $@_$MSG983,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6116
@_$LB6113
@_$LB6110
@_$LB6107
@_$LB6098
jmp @_$LB6095
@_$LB6094
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6118
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6118
@_$LB6122
mov $@_$MSG984,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6124
pushq $4
mov $@_$MSG985,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6125
@_$LB6124
pushq $4
mov $@_$MSG986,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6125
jmp @_$LB6119
@_$LB6118
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6127
pushq $4
mov $@_$MSG987,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6128
@_$LB6127
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6130
pushq $4
mov $@_$MSG988,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6131
@_$LB6130
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6133
pushq $4
mov $@_$MSG989,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6134
@_$LB6133
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6137
pushq $4
mov $@_$MSG990,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6137
@_$LB6134
@_$LB6131
@_$LB6128
@_$LB6119
@_$LB6095
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG991,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6140
pushq $1
mov $@_$MSG992,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
@_$LB6140
pushq $1
mov $@_$MSG993,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6142
mov 18446744073709551520(%rbp),%rsi
mov %r14,%rax
mov %rsi,%rcx
mul %rcx
mov %rax,%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
jmp @_$LB6143
@_$LB6142
push %r14
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__scale_result
add $24,%rsp
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
@_$LB6143
pushq $4
mov $@_$MSG994,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG995,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG996,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG997,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6145
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6148
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6148
@_$LB6152
mov $@_$MSG998,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6154
pushq $5
mov $@_$MSG999,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6155
@_$LB6154
pushq $5
mov $@_$MSG1000,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6155
jmp @_$LB6149
@_$LB6148
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6157
pushq $5
mov $@_$MSG1001,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6158
@_$LB6157
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6160
pushq $5
mov $@_$MSG1002,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6161
@_$LB6160
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6163
pushq $5
mov $@_$MSG1003,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6164
@_$LB6163
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6167
pushq $5
mov $@_$MSG1004,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6167
@_$LB6164
@_$LB6161
@_$LB6158
@_$LB6149
jmp @_$LB6146
@_$LB6145
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6169
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6169
@_$LB6173
mov $@_$MSG1005,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6175
pushq $4
mov $@_$MSG1006,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6176
@_$LB6175
pushq $4
mov $@_$MSG1007,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6176
jmp @_$LB6170
@_$LB6169
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6178
pushq $4
mov $@_$MSG1008,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6179
@_$LB6178
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6181
pushq $4
mov $@_$MSG1009,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6182
@_$LB6181
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6184
pushq $4
mov $@_$MSG1010,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6185
@_$LB6184
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6188
pushq $4
mov $@_$MSG1011,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6188
@_$LB6185
@_$LB6182
@_$LB6179
@_$LB6170
@_$LB6146
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1012,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6191
pushq $1
mov $@_$MSG1013,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
@_$LB6191
pushq $1
mov $@_$MSG1014,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r10
call @scc_front__syntax_tree_release
add $8,%rsp
mov %r12,24(%r11)
mov %r9,32(%r11)
movw $0,12(%r11)
movl $0,8(%r11)
movw $0,14(%r11)
jmp @_$LB6077
@_$LB6076
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6194
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r15
push %r15
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB6197
mov $1,%r14
@_$LB6197
push %r15
call @scc_front__syntax_tree_release
add $8,%rsp
@_$LB6194
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6199
mov 18446744073709551520(%rbp),%rsi
mov %r14,%rax
mov %rsi,%rcx
mul %rcx
mov %rax,%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
jmp @_$LB6200
@_$LB6199
push %r14
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__scale_result
add $24,%rsp
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
@_$LB6200
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
pushq $4
mov $@_$MSG1015,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1016,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1017,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1018,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r11)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r11)
movw $0,12(%r11)
movl $0,8(%r11)
movw $0,14(%r11)
@_$LB6077
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_assign_add$END
pop %r11
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_assign_sub
push %rbp
mov %rsp,%rbp
sub $1184,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
push %r10
push %r11
mov 24(%rbp),%r11
mov $1,%r14
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551576(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6206
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6203
@_$LB6206
mov $@_$MSG1019,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6203
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6209
mov $@_$MSG1020,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6209
mov 18446744073709551582(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6211
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%r8
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r10
push %r10
call @scc_front__is_pointer_array
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6214
push %r10
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r15
push %r15
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB6218
mov $1,%r14
@_$LB6218
mov $8,%r13
push %r15
call @scc_front__syntax_tree_release
add $8,%rsp
jmp @_$LB6215
@_$LB6214
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_basic_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6220
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6220
@_$LB6224
push %r10
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB6221
@_$LB6220
mov $@_$MSG1021,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6221
@_$LB6215
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
push %r10
call @scc_front__array_function_to_pointer
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r9
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r15
mov $@_$MSG1022,%rbx
push %rbx
mov (%r15),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6226
mov 8(%r15),%rbx
mov %rbx,%rdi
mov %r8,8(%r15)
jmp @_$LB6227
@_$LB6226
mov 40(%r15),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
mov %rbx,%rdi
mov 40(%r15),%rsi
mov (%rsi),%rbx
mov %r8,8(%rbx)
@_$LB6227
pushq $1
pushq $0
pushq $0
pushq $0
push %r9
push %r12
call @scc_front__add_decl
add $48,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6229
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6232
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6232
@_$LB6236
mov $@_$MSG1023,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6238
pushq $5
mov $@_$MSG1024,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6239
@_$LB6238
pushq $5
mov $@_$MSG1025,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6239
jmp @_$LB6233
@_$LB6232
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6241
pushq $5
mov $@_$MSG1026,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6242
@_$LB6241
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6244
pushq $5
mov $@_$MSG1027,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6245
@_$LB6244
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6247
pushq $5
mov $@_$MSG1028,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6248
@_$LB6247
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6251
pushq $5
mov $@_$MSG1029,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6251
@_$LB6248
@_$LB6245
@_$LB6242
@_$LB6233
jmp @_$LB6230
@_$LB6229
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6253
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6253
@_$LB6257
mov $@_$MSG1030,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6259
pushq $4
mov $@_$MSG1031,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6260
@_$LB6259
pushq $4
mov $@_$MSG1032,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6260
jmp @_$LB6254
@_$LB6253
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6262
pushq $4
mov $@_$MSG1033,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6263
@_$LB6262
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6265
pushq $4
mov $@_$MSG1034,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6266
@_$LB6265
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6268
pushq $4
mov $@_$MSG1035,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6269
@_$LB6268
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6272
pushq $4
mov $@_$MSG1036,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6272
@_$LB6269
@_$LB6266
@_$LB6263
@_$LB6254
@_$LB6230
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1037,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6275
pushq $1
mov $@_$MSG1038,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
@_$LB6275
pushq $1
mov $@_$MSG1039,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6277
mov 18446744073709551520(%rbp),%rsi
mov %r14,%rax
mov %rsi,%rcx
mul %rcx
mov %rax,%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
jmp @_$LB6278
@_$LB6277
push %r14
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__scale_result
add $24,%rsp
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
@_$LB6278
pushq $4
mov $@_$MSG1040,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1041,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1042,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1043,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6280
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6283
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6283
@_$LB6287
mov $@_$MSG1044,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6289
pushq $5
mov $@_$MSG1045,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6290
@_$LB6289
pushq $5
mov $@_$MSG1046,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6290
jmp @_$LB6284
@_$LB6283
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6292
pushq $5
mov $@_$MSG1047,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6293
@_$LB6292
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6295
pushq $5
mov $@_$MSG1048,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6296
@_$LB6295
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6298
pushq $5
mov $@_$MSG1049,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6299
@_$LB6298
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6302
pushq $5
mov $@_$MSG1050,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6302
@_$LB6299
@_$LB6296
@_$LB6293
@_$LB6284
jmp @_$LB6281
@_$LB6280
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6304
push %r10
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6304
@_$LB6308
mov $@_$MSG1051,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6310
pushq $4
mov $@_$MSG1052,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6311
@_$LB6310
pushq $4
mov $@_$MSG1053,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6311
jmp @_$LB6305
@_$LB6304
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6313
pushq $4
mov $@_$MSG1054,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6314
@_$LB6313
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6316
pushq $4
mov $@_$MSG1055,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6317
@_$LB6316
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6319
pushq $4
mov $@_$MSG1056,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6320
@_$LB6319
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6323
pushq $4
mov $@_$MSG1057,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6323
@_$LB6320
@_$LB6317
@_$LB6314
@_$LB6305
@_$LB6281
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1058,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6326
pushq $1
mov $@_$MSG1059,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
@_$LB6326
pushq $1
mov $@_$MSG1060,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r10
call @scc_front__syntax_tree_release
add $8,%rsp
mov %r12,24(%r11)
mov %r9,32(%r11)
movw $0,12(%r11)
movl $0,8(%r11)
movw $0,14(%r11)
jmp @_$LB6212
@_$LB6211
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6329
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r15
push %r15
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB6332
mov $1,%r14
@_$LB6332
push %r15
call @scc_front__syntax_tree_release
add $8,%rsp
@_$LB6329
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6334
mov 18446744073709551520(%rbp),%rsi
mov %r14,%rax
mov %rsi,%rcx
mul %rcx
mov %rax,%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
jmp @_$LB6335
@_$LB6334
push %r14
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__scale_result
add $24,%rsp
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
@_$LB6335
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
pushq $4
mov $@_$MSG1061,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1062,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1063,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1064,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r11)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r11)
movw $0,12(%r11)
movl $0,8(%r11)
movw $0,14(%r11)
@_$LB6212
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_assign_sub$END
pop %r11
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_assign_op
push %rbp
mov %rsp,%rbp
sub $1184,%rsp
push %rbx
push %rsi
push %rdi
mov 32(%rbp),%rdi
push %r8
push %r9
mov 16(%rbp),%r9
push %r12
push %r13
push %r14
push %r15
push %r10
mov 40(%rbp),%r10
push %r11
mov 24(%rbp),%r11
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%r9),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%r9),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 18446744073709551576(%rbp),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6338
mov $@_$MSG1065,%rbx
push %rbx
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6338
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6341
mov $@_$MSG1066,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov $@_$MSG1067,%rbx
push %rbx
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6341
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6344
mov $@_$MSG1068,%rbx
push %rbx
push %rdi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6344
@_$LB6350
mov $@_$MSG1069,%rbx
push %rbx
push %rdi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6344
@_$LB6347
mov $@_$MSG1070,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov $@_$MSG1071,%rbx
push %rbx
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6344
mov 18446744073709551582(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6352
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%r8
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r15
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_basic_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6355
push %r15
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6355
@_$LB6359
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6362
mov $@_$MSG1072,%rbx
push %rbx
push %rdi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6362
@_$LB6368
mov $@_$MSG1073,%rbx
push %rbx
push %rdi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6362
@_$LB6365
mov $@_$MSG1074,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov $@_$MSG1075,%rbx
push %rbx
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6362
push %r15
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__type_size
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
jmp @_$LB6356
@_$LB6355
mov $@_$MSG1076,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov $@_$MSG1077,%rbx
push %rbx
push %rsi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
mov 24(%r9),%rbx
push %rbx
mov 16(%r9),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6356
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
push %r15
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r9
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r14
mov $@_$MSG1078,%rbx
push %rbx
mov (%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6370
mov 8(%r14),%rbx
mov %rbx,%rdi
mov %r8,8(%r14)
jmp @_$LB6371
@_$LB6370
mov 40(%r14),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
mov %rbx,%rdi
mov 40(%r14),%rsi
mov (%rsi),%rbx
mov %r8,8(%rbx)
@_$LB6371
pushq $1
pushq $0
pushq $0
pushq $0
push %r9
push %r12
call @scc_front__add_decl
add $48,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6373
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6376
push %r15
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6376
@_$LB6380
mov $@_$MSG1079,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6382
pushq $5
mov $@_$MSG1080,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6383
@_$LB6382
pushq $5
mov $@_$MSG1081,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6383
jmp @_$LB6377
@_$LB6376
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6385
pushq $5
mov $@_$MSG1082,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6386
@_$LB6385
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6388
pushq $5
mov $@_$MSG1083,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6389
@_$LB6388
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6391
pushq $5
mov $@_$MSG1084,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6392
@_$LB6391
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6395
pushq $5
mov $@_$MSG1085,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6395
@_$LB6392
@_$LB6389
@_$LB6386
@_$LB6377
jmp @_$LB6374
@_$LB6373
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6397
push %r15
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6397
@_$LB6401
mov $@_$MSG1086,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6403
pushq $4
mov $@_$MSG1087,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6404
@_$LB6403
pushq $4
mov $@_$MSG1088,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6404
jmp @_$LB6398
@_$LB6397
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6406
pushq $4
mov $@_$MSG1089,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6407
@_$LB6406
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6409
pushq $4
mov $@_$MSG1090,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6410
@_$LB6409
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6412
pushq $4
mov $@_$MSG1091,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6413
@_$LB6412
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6416
pushq $4
mov $@_$MSG1092,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6416
@_$LB6413
@_$LB6410
@_$LB6407
@_$LB6398
@_$LB6374
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1093,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6419
pushq $1
mov $@_$MSG1094,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
@_$LB6419
pushq $1
mov $@_$MSG1095,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6421
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
jmp @_$LB6422
@_$LB6421
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
@_$LB6422
push %r10
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r10
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1096,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1097,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1098,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1099,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6424
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6427
push %r15
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6427
@_$LB6431
mov $@_$MSG1100,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6433
pushq $5
mov $@_$MSG1101,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6434
@_$LB6433
pushq $5
mov $@_$MSG1102,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6434
jmp @_$LB6428
@_$LB6427
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6436
pushq $5
mov $@_$MSG1103,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6437
@_$LB6436
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6439
pushq $5
mov $@_$MSG1104,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6440
@_$LB6439
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6442
pushq $5
mov $@_$MSG1105,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6443
@_$LB6442
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6446
pushq $5
mov $@_$MSG1106,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6446
@_$LB6443
@_$LB6440
@_$LB6437
@_$LB6428
jmp @_$LB6425
@_$LB6424
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6448
push %r15
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6448
@_$LB6452
mov $@_$MSG1107,%rbx
push %rbx
mov 18446744073709551592(%rbp),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6454
pushq $4
mov $@_$MSG1108,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6455
@_$LB6454
pushq $4
mov $@_$MSG1109,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6455
jmp @_$LB6449
@_$LB6448
mov %r13,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6457
pushq $4
mov $@_$MSG1110,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6458
@_$LB6457
mov %r13,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6460
pushq $4
mov $@_$MSG1111,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6461
@_$LB6460
mov %r13,%rax
mov $4,%rcx
cmp %rcx,%rax
jne @_$LB6463
pushq $4
mov $@_$MSG1112,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6464
@_$LB6463
mov %r13,%rax
mov $8,%rcx
cmp %rcx,%rax
jne @_$LB6467
pushq $4
mov $@_$MSG1113,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6467
@_$LB6464
@_$LB6461
@_$LB6458
@_$LB6449
@_$LB6425
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1114,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r8
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6470
pushq $1
mov $@_$MSG1115,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551584(%rbp),%rbx
push %rbx
call @scc_front__c_write_num
add $8,%rsp
@_$LB6470
pushq $1
mov $@_$MSG1116,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r15
call @scc_front__syntax_tree_release
add $8,%rsp
mov %r12,24(%r11)
mov %r9,32(%r11)
movw $0,12(%r11)
movl $0,8(%r11)
movw $0,14(%r11)
jmp @_$LB6353
@_$LB6352
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6472
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
jmp @_$LB6473
@_$LB6472
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
@_$LB6473
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r10
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r10
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1117,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1118,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1119,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1120,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,24(%r11)
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,32(%r11)
movw $0,12(%r11)
movl $0,8(%r11)
movw $0,14(%r11)
@_$LB6353
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_assign_op$END
pop %r11
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_branch
push %rbp
mov %rsp,%rbp
sub $240,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 24(%rbp),%r12
push %r13
mov 16(%rbp),%r13
call @scc_front__control_label_push
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%r9
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
pushq $0
mov $@_$MSG1121,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
push %r9
mov $@_$MSG1122,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%rdi
pushq $1
pushq $0
pushq $0
pushq $0
push %rdi
push %r8
call @scc_front__add_decl
add $48,%rsp
mov $18446744073709551615,%rax
mov %rax,18446744073709551600(%rbp)
mov @_$DATA+11716544,%rsi
mov 8(%rsi),%rbx
mov %rbx,18446744073709551608(%rbp)
pushq $4
mov $@_$MSG1123,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r9
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r9
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1124,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %r13
call @scc_front__translate_branch
add $16,%rsp
pushq $4
mov $@_$MSG1125,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %r9
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r9
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1126,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__write_label
add $8,%rsp
call @scc_front__control_label_pop
push %r9
call @free
add $8,%rsp
movw $0,12(%r12)
movl $0,8(%r12)
movw $0,14(%r12)
mov %r8,24(%r12)
mov %rdi,32(%r12)
@scc_front__calculate_branch$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_relop
push %rbp
mov %rsp,%rbp
sub $656,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 32(%rbp),%r12
push %r13
mov 24(%rbp),%r13
push %r14
mov 16(%rbp),%r14
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%r14),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%r14),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6476
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6476
@_$LB6479
movq $1,(%r13)
mov $@_$MSG1127,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6481
mov 18446744073709551568(%rbp),%rsi
mov 18446744073709551520(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jbe @_$LB6485
movq $0,(%r13)
@_$LB6485
jmp @_$LB6482
@_$LB6481
mov $@_$MSG1128,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6487
mov 18446744073709551568(%rbp),%rsi
mov 18446744073709551520(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jae @_$LB6491
movq $0,(%r13)
@_$LB6491
jmp @_$LB6488
@_$LB6487
mov $@_$MSG1129,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6493
mov 18446744073709551568(%rbp),%rsi
mov 18446744073709551520(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jb @_$LB6497
movq $0,(%r13)
@_$LB6497
jmp @_$LB6494
@_$LB6493
mov $@_$MSG1130,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6499
mov 18446744073709551568(%rbp),%rsi
mov 18446744073709551520(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
ja @_$LB6503
movq $0,(%r13)
@_$LB6503
jmp @_$LB6500
@_$LB6499
mov $@_$MSG1131,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6505
mov 18446744073709551568(%rbp),%rsi
mov 18446744073709551520(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB6509
movq $0,(%r13)
@_$LB6509
jmp @_$LB6506
@_$LB6505
mov $@_$MSG1132,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6512
mov 18446744073709551568(%rbp),%rsi
mov 18446744073709551520(%rbp),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
je @_$LB6515
movq $0,(%r13)
@_$LB6515
@_$LB6512
@_$LB6506
@_$LB6500
@_$LB6494
@_$LB6488
@_$LB6482
movw $1,12(%r13)
movl $0,8(%r13)
movw $0,14(%r13)
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
pushq $0
mov $@_$MSG1133,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,24(%r13)
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
mov $@_$MSG1134,%rbx
push %rbx
mov $@_$MSG1135,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,32(%r13)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_relop$END
@_$LB6476
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
pushq $0
mov $@_$MSG1136,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r9
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
push %rdi
mov $@_$MSG1137,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
jne @_$LB6518
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
jne @_$LB6518
@_$LB6521
pushq $0
mov 18446744073709551552(%rbp),%rbx
push %rbx
mov 18446744073709551544(%rbp),%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6524
mov $@_$MSG1138,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6524
@_$LB6518
call @scc_front__control_label_push
pushq $4
mov $@_$MSG1139,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1140,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
pushq $4
push %r12
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6526
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
jmp @_$LB6527
@_$LB6526
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
@_$LB6527
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1141,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6529
mov 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
jmp @_$LB6530
@_$LB6529
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
@_$LB6530
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1142,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov @_$DATA+11716544,%rsi
mov 8(%rsi),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1143,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
pushq $4
mov $@_$MSG1144,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1145,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
pushq $6
mov $@_$MSG1146,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 8(%rsi),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1147,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
call @scc_front__control_label_pop
push %rdi
call @free
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
mov %r9,24(%r13)
mov %r8,32(%r13)
movw $0,12(%r13)
movl $0,8(%r13)
movw $0,14(%r13)
@scc_front__calculate_relop$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_lnot
push %rbp
mov %rsp,%rbp
sub $448,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
push %r9
push %r12
mov 24(%rbp),%r12
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%r8),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6532
movq $1,(%r12)
mov 18446744073709551568(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6536
movq $0,(%r12)
@_$LB6536
movw $1,12(%r12)
movl $0,8(%r12)
movw $0,14(%r12)
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
pushq $0
mov $@_$MSG1148,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,24(%r12)
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
mov $@_$MSG1149,%rbx
push %rbx
mov $@_$MSG1150,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,32(%r12)
jmp @_$LB6533
@_$LB6532
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
pushq $0
mov $@_$MSG1151,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r9
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
push %rdi
mov $@_$MSG1152,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
call @scc_front__control_label_push
pushq $4
mov $@_$MSG1153,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1154,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
pushq $4
mov $@_$MSG1155,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1156,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov @_$DATA+11716544,%rsi
mov 8(%rsi),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1157,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
pushq $4
mov $@_$MSG1158,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1159,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
pushq $6
mov $@_$MSG1160,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 8(%rsi),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1161,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov %r9,24(%r12)
mov %r8,32(%r12)
movw $0,12(%r12)
movl $0,8(%r12)
movw $0,14(%r12)
call @scc_front__control_label_pop
@_$LB6533
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_lnot$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_land
push %rbp
mov %rsp,%rbp
sub $640,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 24(%rbp),%r12
push %r13
mov 16(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%r13),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6539
mov 18446744073709551568(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB6542
movq $0,(%r12)
movw $1,12(%r12)
movl $0,8(%r12)
movw $0,14(%r12)
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
pushq $0
mov $@_$MSG1162,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,24(%r12)
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
mov $@_$MSG1163,%rbx
push %rbx
mov $@_$MSG1164,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,32(%r12)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_land$END
@_$LB6542
@_$LB6539
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
pushq $0
mov $@_$MSG1165,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r9
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
push %rdi
mov $@_$MSG1166,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG1167,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1168,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
call @scc_front__control_label_push
pushq $4
mov $@_$MSG1169,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1170,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 8(%rsi),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1171,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%r13),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6548
mov 18446744073709551520(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6545
@_$LB6548
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
jne @_$LB6551
pushq $4
mov $@_$MSG1172,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1173,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 8(%rsi),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1174,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
@_$LB6551
pushq $4
mov $@_$MSG1175,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1176,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6545
pushq $6
mov $@_$MSG1177,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 8(%rsi),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1178,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov %r9,24(%r12)
mov %r8,32(%r12)
movw $0,12(%r12)
movl $0,8(%r12)
movw $0,14(%r12)
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
call @scc_front__control_label_pop
@scc_front__calculate_land$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_lor
push %rbp
mov %rsp,%rbp
sub $640,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 24(%rbp),%r12
push %r13
mov 16(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%r13),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6554
mov 18446744073709551568(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6557
movq $1,(%r12)
movw $1,12(%r12)
movl $0,8(%r12)
movw $0,14(%r12)
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
pushq $0
mov $@_$MSG1179,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,24(%r12)
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
mov $@_$MSG1180,%rbx
push %rbx
mov $@_$MSG1181,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,32(%r12)
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @scc_front__calculate_lor$END
@_$LB6557
@_$LB6554
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
pushq $0
mov $@_$MSG1182,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r9
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
push %rdi
mov $@_$MSG1183,%rbx
push %rbx
call @scc_front__mkst
mov %rax,%rbx
add $32,%rsp
mov %rbx,%r8
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
pushq $4
mov $@_$MSG1184,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1185,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
call @scc_front__control_label_push
pushq $4
mov $@_$MSG1186,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1187,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 8(%rsi),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1188,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%r13),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 24(%r13),%rbx
push %rbx
mov 16(%r13),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6563
mov 18446744073709551520(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB6560
@_$LB6563
mov 18446744073709551532(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
jne @_$LB6566
pushq $4
mov $@_$MSG1189,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1190,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 8(%rsi),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1191,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
@_$LB6566
pushq $4
mov $@_$MSG1192,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $3
mov $@_$MSG1193,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6560
pushq $6
mov $@_$MSG1194,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 8(%rsi),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1195,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
mov %r9,24(%r12)
mov %r8,32(%r12)
movw $0,12(%r12)
movl $0,8(%r12)
movw $0,14(%r12)
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
call @scc_front__control_label_pop
@scc_front__calculate_lor$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_call
push %rbp
mov %rsp,%rbp
sub $624,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
push %r14
mov 16(%rbp),%r14
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 40(%r14),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6569
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_pointer_array
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6572
mov $@_$MSG1196,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6572
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_release
add $8,%rsp
mov %r9,18446744073709551552(%rbp)
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__is_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6575
mov $@_$MSG1197,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6575
@_$LB6569
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 32(%r8),%rsi
mov %rsi,%rbx
sub $1,%rbx
mov %rbx,%rax
mov $1,%cl
sar %cl,%rax
mov %rax,%rdi
mov 32(%r14),%rsi
mov %rsi,%rbx
sub $1,%rbx
mov %rdi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
je @_$LB6578
mov $@_$MSG1198,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6578
mov 32(%r14),%rbx
mov %rbx,%r9
mov %r9d,%eax
mov $1,%ecx
cmp %ecx,%eax
jle @_$LB6581
@_$LB6579
sub $1,%r9d
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%r14),%rdi
mov %r9d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 40(%r14),%rdi
mov %r9d,%esi
shl $3,%esi
lea (%rdi,%rsi),%rbx
mov (%rbx),%rsi
mov 24(%rsi),%rbx
push %rbx
mov 40(%r14),%rdi
mov %r9d,%esi
shl $3,%esi
lea (%rdi,%rsi),%rbx
mov (%rbx),%rsi
mov 16(%rsi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
pushq $1
mov %r9d,%ebx
shl $1,%ebx
mov %r9d,%esi
shl $1,%esi
mov 40(%r8),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
mov %r9d,%esi
shl $1,%esi
mov %esi,%ebx
sub $1,%ebx
mov %r9d,%ebx
shl $1,%ebx
mov %ebx,%esi
sub $1,%esi
mov 40(%r8),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
mov 18446744073709551600(%rbp),%rbx
push %rbx
mov 18446744073709551592(%rbp),%rbx
push %rbx
call @scc_front__if_type_compat
mov %eax,%ebx
add $40,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6584
mov $@_$MSG1199,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6584
mov %r9d,%esi
shl $1,%esi
mov %esi,%ebx
sub $1,%ebx
mov %r9d,%ebx
shl $1,%ebx
mov %ebx,%esi
sub $1,%esi
mov 40(%r8),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6586
mov %r9d,%ebx
shl $1,%ebx
mov %r9d,%esi
shl $1,%esi
mov 40(%r8),%rdi
mov %esi,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__is_pointer_array_function
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6586
@_$LB6590
mov $@_$MSG1200,%rbx
push %rbx
mov %r9d,%esi
shl $1,%esi
mov %esi,%ebx
sub $1,%ebx
mov %r9d,%esi
shl $1,%esi
mov %esi,%ebx
sub $1,%ebx
mov 40(%r8),%rdi
mov %ebx,%esi
shl $3,%esi
lea (%rdi,%rsi),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6592
pushq $6
mov $@_$MSG1201,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6593
@_$LB6592
pushq $6
mov $@_$MSG1202,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6593
jmp @_$LB6587
@_$LB6586
pushq $5
mov $@_$MSG1203,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6587
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6595
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
jmp @_$LB6596
@_$LB6595
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
@_$LB6596
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1204,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
mov %r9d,%eax
mov $1,%ecx
cmp %ecx,%eax
jg @_$LB6579
@_$LB6581
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 18446744073709551544(%rbp),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__decl_next
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r9
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov $@_$MSG1205,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6598
mov 8(%r8),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,8(%r8)
jmp @_$LB6599
@_$LB6598
mov 40(%r8),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r8),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
@_$LB6599
pushq $1
pushq $0
pushq $0
pushq $0
push %r9
push %r12
call @scc_front__add_decl
add $48,%rsp
push %r9
call @scc_front__is_basic_decl
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6601
push %r12
call @scc_front__is_float_type
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6601
@_$LB6605
mov $@_$MSG1206,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6607
pushq $6
mov $@_$MSG1207,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6608
@_$LB6607
pushq $6
mov $@_$MSG1208,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6608
jmp @_$LB6602
@_$LB6601
pushq $5
mov $@_$MSG1209,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6602
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1210,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551552(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1211,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 32(%r14),%rbx
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
jle @_$LB6611
pushq $4
mov $@_$MSG1212,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 32(%r14),%rsi
mov %rsi,%rbx
sub $1,%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1213,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
@_$LB6611
mov %r12,24(%r13)
mov %r9,32(%r13)
movw $0,12(%r13)
movl $0,8(%r13)
movw $0,14(%r13)
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_call$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_cast
push %rbp
mov %rsp,%rbp
sub $304,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
push %r14
mov 16(%rbp),%r14
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%r14),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551568(%rbp),%rbx
add $32,%rbx
push %rbx
call @scc_front__array_function_to_pointer2
add $8,%rsp
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
call @scc_front__mktmpname
mov %rax,%rbx
mov %rbx,%rdi
mov 40(%r14),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov 40(%r14),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__syntax_tree_dup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r8
call @scc_front__get_decl_type
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov $@_$MSG1214,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6613
mov 8(%r12),%rbx
push %rbx
call @free
add $8,%rsp
mov %rdi,8(%r12)
jmp @_$LB6614
@_$LB6613
mov $@_$MSG1215,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6616
mov 40(%r12),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov 40(%r12),%rsi
mov (%rsi),%rbx
mov %rdi,8(%rbx)
jmp @_$LB6617
@_$LB6616
mov $@_$MSG1216,%rbx
push %rbx
mov 24(%r14),%rbx
push %rbx
mov 16(%r14),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6617
@_$LB6614
pushq $1
pushq $0
pushq $0
pushq $0
push %r8
push %r9
call @scc_front__add_decl
add $48,%rsp
movl $0,8(%r13)
movw $0,14(%r13)
movw $0,12(%r13)
mov %r8,32(%r13)
mov %r9,24(%r13)
pushq $4
mov $@_$MSG1217,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1218,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6619
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
jmp @_$LB6620
@_$LB6619
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
@_$LB6620
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1219,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
@scc_front__calculate_cast$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__calculate_expr
push %rbp
mov %rsp,%rbp
sub $896,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
pushq $40
pushq $0
push %rdi
call @memset
mov %rax,%rbx
add $24,%rsp
pushq $40
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @memset
mov %rax,%rbx
add $24,%rsp
mov $@_$MSG1220,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6622
push %rdi
push %r8
call @scc_front__calculate_id
add $16,%rsp
jmp @_$LB6623
@_$LB6622
mov $@_$MSG1221,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6625
push %rdi
push %r8
call @scc_front__calculate_const
add $16,%rsp
jmp @_$LB6626
@_$LB6625
mov $@_$MSG1222,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6628
push %rdi
push %r8
call @scc_front__calculate_fconst
add $16,%rsp
jmp @_$LB6629
@_$LB6628
mov $@_$MSG1223,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6631
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%r8),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
push %rdi
mov 40(%r8),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @_$LB6632
@_$LB6631
mov $@_$MSG1224,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6634
mov $@_$MSG1225,%rbx
push %rbx
mov $@_$MSG1226,%rbx
push %rbx
push %rdi
push %r8
call @scc_front__calculate_assign
add $32,%rsp
jmp @_$LB6635
@_$LB6634
mov $@_$MSG1227,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6637
push %rdi
push %r8
call @scc_front__calculate_add
add $16,%rsp
jmp @_$LB6638
@_$LB6637
mov $@_$MSG1228,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6640
push %rdi
push %r8
call @scc_front__calculate_mul
add $16,%rsp
jmp @_$LB6641
@_$LB6640
mov $@_$MSG1229,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6643
push %rdi
push %r8
call @scc_front__calculate_sub
add $16,%rsp
jmp @_$LB6644
@_$LB6643
mov $@_$MSG1230,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6646
push %rdi
push %r8
call @scc_front__calculate_div
add $16,%rsp
jmp @_$LB6647
@_$LB6646
mov $@_$MSG1231,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6649
push %rdi
push %r8
call @scc_front__calculate_mod
add $16,%rsp
jmp @_$LB6650
@_$LB6649
mov $@_$MSG1232,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6652
push %rdi
push %r8
call @scc_front__calculate_and
add $16,%rsp
jmp @_$LB6653
@_$LB6652
mov $@_$MSG1233,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6655
push %rdi
push %r8
call @scc_front__calculate_orr
add $16,%rsp
jmp @_$LB6656
@_$LB6655
mov $@_$MSG1234,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6658
push %rdi
push %r8
call @scc_front__calculate_eor
add $16,%rsp
jmp @_$LB6659
@_$LB6658
mov $@_$MSG1235,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6661
push %rdi
push %r8
call @scc_front__calculate_lsh
add $16,%rsp
jmp @_$LB6662
@_$LB6661
mov $@_$MSG1236,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6664
push %rdi
push %r8
call @scc_front__calculate_rsh
add $16,%rsp
jmp @_$LB6665
@_$LB6664
mov $@_$MSG1237,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6667
push %rdi
push %r8
call @scc_front__calculate_neg
add $16,%rsp
jmp @_$LB6668
@_$LB6667
mov $@_$MSG1238,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6670
push %rdi
push %r8
call @scc_front__calculate_not
add $16,%rsp
jmp @_$LB6671
@_$LB6670
mov $@_$MSG1239,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6673
push %rdi
push %r8
call @scc_front__calculate_member
add $16,%rsp
jmp @_$LB6674
@_$LB6673
mov $@_$MSG1240,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6676
push %rdi
push %r8
call @scc_front__calculate_member_ptr
add $16,%rsp
jmp @_$LB6677
@_$LB6676
mov $@_$MSG1241,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6679
push %rdi
push %r8
call @scc_front__calculate_sizeof
add $16,%rsp
jmp @_$LB6680
@_$LB6679
mov $@_$MSG1242,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6682
push %rdi
push %r8
call @scc_front__calculate_sizeof_type
add $16,%rsp
jmp @_$LB6683
@_$LB6682
mov $@_$MSG1243,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6685
push %rdi
push %r8
call @scc_front__calculate_addr
add $16,%rsp
jmp @_$LB6686
@_$LB6685
mov $@_$MSG1244,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6688
push %rdi
push %r8
call @scc_front__calculate_deref
add $16,%rsp
jmp @_$LB6689
@_$LB6688
mov $@_$MSG1245,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6691
push %rdi
push %r8
call @scc_front__calculate_index
add $16,%rsp
jmp @_$LB6692
@_$LB6691
mov $@_$MSG1246,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6694
push %rdi
push %r8
call @scc_front__calculate_inc
add $16,%rsp
jmp @_$LB6695
@_$LB6694
mov $@_$MSG1247,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6697
push %rdi
push %r8
call @scc_front__calculate_dec
add $16,%rsp
jmp @_$LB6698
@_$LB6697
mov $@_$MSG1248,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6700
push %rdi
push %r8
call @scc_front__calculate_assign_add
add $16,%rsp
jmp @_$LB6701
@_$LB6700
mov $@_$MSG1249,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6703
push %rdi
push %r8
call @scc_front__calculate_assign_sub
add $16,%rsp
jmp @_$LB6704
@_$LB6703
mov $@_$MSG1250,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6706
mov $@_$MSG1251,%rbx
push %rbx
mov $@_$MSG1252,%rbx
push %rbx
push %rdi
push %r8
call @scc_front__calculate_assign_op
add $32,%rsp
jmp @_$LB6707
@_$LB6706
mov $@_$MSG1253,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6709
mov $@_$MSG1254,%rbx
push %rbx
mov $@_$MSG1255,%rbx
push %rbx
push %rdi
push %r8
call @scc_front__calculate_assign_op
add $32,%rsp
jmp @_$LB6710
@_$LB6709
mov $@_$MSG1256,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6712
mov $@_$MSG1257,%rbx
push %rbx
mov $@_$MSG1258,%rbx
push %rbx
push %rdi
push %r8
call @scc_front__calculate_assign_op
add $32,%rsp
jmp @_$LB6713
@_$LB6712
mov $@_$MSG1259,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6715
mov $@_$MSG1260,%rbx
push %rbx
mov $@_$MSG1261,%rbx
push %rbx
push %rdi
push %r8
call @scc_front__calculate_assign_op
add $32,%rsp
jmp @_$LB6716
@_$LB6715
mov $@_$MSG1262,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6718
mov $@_$MSG1263,%rbx
push %rbx
mov $@_$MSG1264,%rbx
push %rbx
push %rdi
push %r8
call @scc_front__calculate_assign_op
add $32,%rsp
jmp @_$LB6719
@_$LB6718
mov $@_$MSG1265,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6721
mov $@_$MSG1266,%rbx
push %rbx
mov $@_$MSG1267,%rbx
push %rbx
push %rdi
push %r8
call @scc_front__calculate_assign_op
add $32,%rsp
jmp @_$LB6722
@_$LB6721
mov $@_$MSG1268,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6724
mov $@_$MSG1269,%rbx
push %rbx
mov $@_$MSG1270,%rbx
push %rbx
push %rdi
push %r8
call @scc_front__calculate_assign_op
add $32,%rsp
jmp @_$LB6725
@_$LB6724
mov $@_$MSG1271,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6727
mov $@_$MSG1272,%rbx
push %rbx
mov $@_$MSG1273,%rbx
push %rbx
push %rdi
push %r8
call @scc_front__calculate_assign_op
add $32,%rsp
jmp @_$LB6728
@_$LB6727
mov $@_$MSG1274,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6730
push %rdi
push %r8
call @scc_front__calculate_branch
add $16,%rsp
jmp @_$LB6731
@_$LB6730
mov $@_$MSG1275,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6733
push %rdi
push %r8
call @scc_front__calculate_branch
add $16,%rsp
jmp @_$LB6734
@_$LB6733
mov $@_$MSG1276,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6736
push %rdi
push %r8
call @scc_front__calculate_branch
add $16,%rsp
jmp @_$LB6737
@_$LB6736
mov $@_$MSG1277,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6739
push %rdi
push %r8
call @scc_front__calculate_branch
add $16,%rsp
jmp @_$LB6740
@_$LB6739
mov $@_$MSG1278,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6742
push %rdi
push %r8
call @scc_front__calculate_branch
add $16,%rsp
jmp @_$LB6743
@_$LB6742
mov $@_$MSG1279,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6745
push %rdi
push %r8
call @scc_front__calculate_branch
add $16,%rsp
jmp @_$LB6746
@_$LB6745
mov $@_$MSG1280,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6748
push %rdi
push %r8
call @scc_front__calculate_branch
add $16,%rsp
jmp @_$LB6749
@_$LB6748
mov $@_$MSG1281,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6751
push %rdi
push %r8
call @scc_front__calculate_branch
add $16,%rsp
jmp @_$LB6752
@_$LB6751
mov $@_$MSG1282,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6754
push %rdi
push %r8
call @scc_front__calculate_branch
add $16,%rsp
jmp @_$LB6755
@_$LB6754
mov $@_$MSG1283,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6757
push %rdi
push %r8
call @scc_front__calculate_call
add $16,%rsp
jmp @_$LB6758
@_$LB6757
mov $@_$MSG1284,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6760
push %rdi
push %r8
call @scc_front__calculate_call
add $16,%rsp
jmp @_$LB6761
@_$LB6760
mov $@_$MSG1285,%rbx
push %rbx
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6763
push %rdi
push %r8
call @scc_front__calculate_cast
add $16,%rsp
jmp @_$LB6764
@_$LB6763
mov $@_$MSG1286,%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
mov 16(%r8),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6764
@_$LB6761
@_$LB6758
@_$LB6755
@_$LB6752
@_$LB6749
@_$LB6746
@_$LB6743
@_$LB6740
@_$LB6737
@_$LB6734
@_$LB6731
@_$LB6728
@_$LB6725
@_$LB6722
@_$LB6719
@_$LB6716
@_$LB6713
@_$LB6710
@_$LB6707
@_$LB6704
@_$LB6701
@_$LB6698
@_$LB6695
@_$LB6692
@_$LB6689
@_$LB6686
@_$LB6683
@_$LB6680
@_$LB6677
@_$LB6674
@_$LB6671
@_$LB6668
@_$LB6665
@_$LB6662
@_$LB6659
@_$LB6656
@_$LB6653
@_$LB6650
@_$LB6647
@_$LB6644
@_$LB6641
@_$LB6638
@_$LB6635
@_$LB6632
@_$LB6629
@_$LB6626
@_$LB6623
@scc_front__calculate_expr$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_block
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov $0,%r8d
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6767
call @scc_front__translate_stack_push
@_$LB6767
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB6770
@_$LB6768
mov 40(%r12),%rdi
mov %r8d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rsi
push %rsi
call @scc_front__translate_stmt
add $8,%rsp
add $1,%r8d
mov 32(%r12),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB6768
@_$LB6770
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6773
call @scc_front__translate_stack_pop
@_$LB6773
@scc_front__translate_block$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_return
push %rbp
mov %rsp,%rbp
sub $240,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov 32(%rdi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB6775
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__deref_ptr
add $24,%rsp
mov 18446744073709551580(%rbp),%bx
mov %bx,%ax
mov $0,%cx
cmp %cx,%ax
je @_$LB6778
mov 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
jmp @_$LB6779
@_$LB6778
mov 18446744073709551600(%rbp),%rbx
push %rbx
call @scc_front__get_decl_id
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
@_$LB6779
mov @_$DATA+11716560,%rbx
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB6781
pushq $8
mov $@_$MSG1287,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6782
@_$LB6781
mov @_$DATA+11716560,%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB6784
pushq $8
mov $@_$MSG1288,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6785
@_$LB6784
pushq $7
mov $@_$MSG1289,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6785
@_$LB6782
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
push %rsi
call @free
add $8,%rsp
pushq $1
mov $@_$MSG1290,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
jmp @_$LB6776
@_$LB6775
pushq $4
mov $@_$MSG1291,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@_$LB6776
@scc_front__translate_return$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_if
push %rbp
mov %rsp,%rbp
sub $128,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
call @scc_front__control_label_push
mov $18446744073709551615,%rax
mov %rax,18446744073709551600(%rbp)
mov @_$DATA+11716544,%rsi
mov 16(%rsi),%rbx
mov %rbx,18446744073709551608(%rbp)
lea 18446744073709551600(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__translate_branch
add $16,%rsp
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__translate_stmt
add $8,%rsp
mov @_$DATA+11716544,%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__write_label
add $8,%rsp
call @scc_front__control_label_pop
@scc_front__translate_if$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_while
push %rbp
mov %rsp,%rbp
sub $160,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
mov @_$DATA+11716532,%ebx
mov %ebx,%r8d
call @scc_front__control_label_push
mov $1,%eax
mov %eax,@_$DATA+11716532
mov @_$DATA+11716552,%rbx
mov %rbx,%rdi
mov @_$DATA+11716544,%rbx
mov %rbx,@_$DATA+11716552
mov $18446744073709551615,%rax
mov %rax,18446744073709551600(%rbp)
mov @_$DATA+11716544,%rsi
mov 16(%rsi),%rbx
mov %rbx,18446744073709551608(%rbp)
lea 18446744073709551600(%rbp),%rbx
push %rbx
mov 40(%r9),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__translate_branch
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__write_label
add $8,%rsp
mov 40(%r9),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__translate_stmt
add $8,%rsp
mov @_$DATA+11716544,%rsi
mov (%rsi),%rbx
mov %rbx,18446744073709551600(%rbp)
mov $18446744073709551615,%rax
mov %rax,18446744073709551608(%rbp)
lea 18446744073709551600(%rbp),%rbx
push %rbx
mov 40(%r9),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__translate_branch
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__write_label
add $8,%rsp
call @scc_front__control_label_pop
mov %r8d,@_$DATA+11716532
mov %rdi,@_$DATA+11716552
@scc_front__translate_while$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_dowhile
push %rbp
mov %rsp,%rbp
sub $144,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
mov @_$DATA+11716532,%ebx
mov %ebx,%r8d
call @scc_front__control_label_push
mov $1,%eax
mov %eax,@_$DATA+11716532
mov @_$DATA+11716552,%rbx
mov %rbx,%rdi
mov @_$DATA+11716544,%rbx
mov %rbx,@_$DATA+11716552
mov @_$DATA+11716544,%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__write_label
add $8,%rsp
mov 40(%r9),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__translate_stmt
add $8,%rsp
mov @_$DATA+11716544,%rsi
mov (%rsi),%rbx
mov %rbx,18446744073709551600(%rbp)
mov $18446744073709551615,%rax
mov %rax,18446744073709551608(%rbp)
lea 18446744073709551600(%rbp),%rbx
push %rbx
mov 40(%r9),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__translate_branch
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__write_label
add $8,%rsp
call @scc_front__control_label_pop
mov %r8d,@_$DATA+11716532
mov %rdi,@_$DATA+11716552
@scc_front__translate_dowhile$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_break
push %rbp
mov %rsp,%rbp
sub $112,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov @_$DATA+11716532,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6788
mov $@_$MSG1292,%rbx
push %rbx
mov 24(%rsi),%rbx
push %rbx
mov 16(%rsi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
@_$LB6788
pushq $4
mov $@_$MSG1293,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov @_$DATA+11716552,%rsi
mov 16(%rsi),%rbx
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1294,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rsi
call @free
add $8,%rsp
@scc_front__translate_break$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_goto
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
pushq $4
mov $@_$MSG1295,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov $@_$MSG1296,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov @_$DATA+11716536,%rbx
push %rbx
push %rdi
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov $@_$MSG1297,%rbx
push %rbx
push %rdi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov 40(%rsi),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
push %rdi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1298,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
@scc_front__translate_goto$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_label
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
pushq $6
mov $@_$MSG1299,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov $@_$MSG1300,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov @_$DATA+11716536,%rbx
push %rbx
push %rdi
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov $@_$MSG1301,%rbx
push %rbx
push %rdi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov 40(%rsi),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
push %rbx
push %rdi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %rdi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rdi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1302,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
push %rdi
call @free
add $8,%rsp
@scc_front__translate_label$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_ifelse
push %rbp
mov %rsp,%rbp
sub $208,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
call @scc_front__control_label_push
mov $18446744073709551615,%rax
mov %rax,18446744073709551600(%rbp)
mov @_$DATA+11716544,%rsi
mov 8(%rsi),%rbx
mov %rbx,18446744073709551608(%rbp)
lea 18446744073709551600(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__translate_branch
add $16,%rsp
mov 40(%rdi),%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__translate_stmt
add $8,%rsp
pushq $4
mov $@_$MSG1303,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__write_label_name
add $8,%rsp
pushq $1
mov $@_$MSG1304,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov @_$DATA+11716544,%rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_front__write_label
add $8,%rsp
mov 40(%rdi),%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__translate_stmt
add $8,%rsp
mov @_$DATA+11716544,%rsi
mov 16(%rsi),%rbx
push %rbx
call @scc_front__write_label
add $8,%rsp
call @scc_front__control_label_pop
@scc_front__translate_ifelse$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_asm
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
pushq $4
mov $@_$MSG1305,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
mov 40(%rsi),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
mov %rbx,%rsi
push %rsi
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
push %rsi
call @scc_front__c_write
add $16,%rsp
pushq $1
mov $@_$MSG1306,%rbx
push %rbx
call @scc_front__c_write
add $16,%rsp
@scc_front__translate_asm$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_stmt
push %rbp
mov %rsp,%rbp
sub $320,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov $@_$MSG1307,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6791
push %rdi
call @scc_front__translate_asm
add $8,%rsp
@_$LB6791
mov $@_$MSG1308,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6794
push %rdi
call @scc_front__translate_decl
add $8,%rsp
@_$LB6794
mov $@_$MSG1309,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6797
push %rdi
call @scc_front__translate_static_decl
add $8,%rsp
@_$LB6797
mov $@_$MSG1310,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6799
mov $@_$MSG1311,%rbx
push %rbx
mov 24(%rdi),%rbx
push %rbx
mov 16(%rdi),%rbx
push %rbx
call @scc_front__error
add $24,%rsp
jmp @_$LB6800
@_$LB6799
mov $@_$MSG1312,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6802
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 40(%rdi),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__calculate_expr
add $16,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_front__expr_ret_release
add $8,%rsp
jmp @_$LB6803
@_$LB6802
mov $@_$MSG1313,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6805
pushq $1
push %rdi
call @scc_front__translate_block
add $16,%rsp
jmp @_$LB6806
@_$LB6805
mov $@_$MSG1314,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6808
push %rdi
call @scc_front__translate_return
add $8,%rsp
jmp @_$LB6809
@_$LB6808
mov $@_$MSG1315,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6811
push %rdi
call @scc_front__translate_if
add $8,%rsp
jmp @_$LB6812
@_$LB6811
mov $@_$MSG1316,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6814
push %rdi
call @scc_front__translate_ifelse
add $8,%rsp
jmp @_$LB6815
@_$LB6814
mov $@_$MSG1317,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6817
push %rdi
call @scc_front__translate_while
add $8,%rsp
jmp @_$LB6818
@_$LB6817
mov $@_$MSG1318,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6820
push %rdi
call @scc_front__translate_dowhile
add $8,%rsp
jmp @_$LB6821
@_$LB6820
mov $@_$MSG1319,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6823
push %rdi
call @scc_front__translate_break
add $8,%rsp
jmp @_$LB6824
@_$LB6823
mov $@_$MSG1320,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6826
push %rdi
call @scc_front__translate_goto
add $8,%rsp
jmp @_$LB6827
@_$LB6826
mov $@_$MSG1321,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6830
push %rdi
call @scc_front__translate_label
add $8,%rsp
@_$LB6830
@_$LB6827
@_$LB6824
@_$LB6821
@_$LB6818
@_$LB6815
@_$LB6812
@_$LB6809
@_$LB6806
@_$LB6803
@_$LB6800
@scc_front__translate_stmt$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__translate_file
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
mov $0,%r8d
mov 32(%r9),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jge @_$LB6833
@_$LB6831
mov $@_$MSG1322,%rbx
push %rbx
mov 40(%r9),%rdi
mov %r8d,%esi
shl $3,%esi
lea (%rdi,%rsi),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6835
mov 40(%r9),%rdi
mov %r8d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__translate_decl
add $8,%rsp
jmp @_$LB6836
@_$LB6835
mov $@_$MSG1323,%rbx
push %rbx
mov 40(%r9),%rdi
mov %r8d,%esi
shl $3,%esi
lea (%rdi,%rsi),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6838
mov 40(%r9),%rdi
mov %r8d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__translate_fundef
add $8,%rsp
jmp @_$LB6839
@_$LB6838
mov $@_$MSG1324,%rbx
push %rbx
mov 40(%r9),%rdi
mov %r8d,%esi
shl $3,%esi
lea (%rdi,%rsi),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6841
mov 40(%r9),%rdi
mov %r8d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
mov 40(%r9),%rdi
mov %r8d,%esi
shl $3,%esi
lea (%rdi,%rsi),%rbx
mov (%rbx),%rsi
mov 40(%rsi),%rbx
mov (%rbx),%rsi
mov 8(%rsi),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11691984
jmp @_$LB6842
@_$LB6841
mov $@_$MSG1325,%rbx
push %rbx
mov 40(%r9),%rdi
mov %r8d,%esi
shl $3,%esi
lea (%rdi,%rsi),%rbx
mov (%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB6845
mov 40(%r9),%rdi
mov %r8d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_front__translate_asm
add $8,%rsp
@_$LB6845
@_$LB6842
@_$LB6839
@_$LB6836
add $1,%r8d
mov 32(%r9),%rbx
mov %r8d,%eax
movslq %eax,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jl @_$LB6831
@_$LB6833
@scc_front__translate_file$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_front__scc_run
push %rbp
mov %rsp,%rbp
sub $144,%rsp
push %rbx
push %rsi
call @scc_front__l_global_init
call @scc_front__expr_global_init
call @scc_front__type_global_init
call @scc_front__parse_global_init
call @scc_front__load_file
mov @_$DATA+11691248,%rax
mov %rax,@_$DATA+11691280
call @scc_front__parse_file
mov %rax,%rbx
mov %rbx,%rsi
push %rsi
call @scc_front__translate_file
add $8,%rsp
call @scc_front__out_flush
@scc_front__scc_run$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__error
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $@_$MSG1326,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
movslq %r8d,%r8
push %r8
push %rdi
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov $@_$MSG1327,%rbx
push %rbx
push %rdi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %rsi
push %rdi
call @scc__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
pushq $10
push %rdi
call @scc__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
push %rdi
call @strlen
mov %rax,%rsi
add $8,%rsp
mov %rsi,%rbx
push %rbx
mov %rdi,%rbx
push %rbx
mov $2,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $2,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@scc_back__error$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__name_hash
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $0,%edi
mov (%r8),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB6848
@_$LB6846
mov %edi,%eax
mov $11,%cl
shl %cl,%eax
mov %eax,%esi
mov %edi,%eax
mov $21,%cl
shr %cl,%eax
mov %eax,%ebx
mov %esi,%edi
or %ebx,%edi
mov (%r8),%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %ebx,%edi
add $1,%r8
mov (%r8),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB6846
@_$LB6848
mov %edi,%eax
mov $1021,%ecx
xor %edx,%edx
div %ecx
mov %edx,%eax
mov %eax,%ebx
mov %ebx,%ebx
mov %rbx,%rax
@scc_back__name_hash$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__readc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
call @scc__stream_getc
mov %eax,%ebx
movslq %ebx,%rbx
mov %rbx,%rax
@scc_back__readc$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__read_line
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov $0,%r8
mov $0,%esi
call @scc_back__readc
mov %eax,%ebx
mov %ebx,%edi
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB6851
@_$LB6849
mov %dil,%al
mov $10,%cl
cmp %cl,%al
jne @_$LB6854
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB6857
mov $@_$MSG1328,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
@_$LB6857
jmp @_$LB6851
@_$LB6854
movsbq %dil,%rdi
push %rdi
movslq %esi,%rsi
push %rsi
push %r8
call @scc__str_c_app2
mov %rax,%rbx
add $24,%rsp
mov %rbx,%r8
add $1,%esi
call @scc_back__readc
mov %eax,%ebx
mov %ebx,%edi
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB6849
@_$LB6851
addq $1,@_$DATA+11716592
mov %r8,%rax
@scc_back__read_line$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__slen
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $0,%rdi
mov (%r8),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB6860
mov $1,%rdi
lea (%r8,%rdi),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB6863
@_$LB6861
lea (%r8,%rdi),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB6866
add $1,%rdi
jmp @_$LB6863
@_$LB6866
lea (%r8,%rdi),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB6869
add $1,%rdi
lea (%r8,%rdi),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB6872
mov $@_$MSG1329,%rbx
push %rbx
mov @_$DATA+11716592,%rax
push %rax
call @scc_back__error
add $16,%rsp
@_$LB6872
@_$LB6869
add $1,%rdi
lea (%r8,%rdi),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB6861
@_$LB6863
mov %rdi,%rax
jmp @scc_back__slen$END
@_$LB6860
mov (%r8),%bl
mov %bl,%sil
movsbl %sil,%esi
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB6875
@_$LB6873
mov %esi,%eax
mov $32,%ecx
cmp %ecx,%eax
je @_$LB6881
mov %esi,%eax
mov $9,%ecx
cmp %ecx,%eax
je @_$LB6881
@_$LB6887
mov %esi,%eax
mov $11,%ecx
cmp %ecx,%eax
je @_$LB6881
@_$LB6884
mov %esi,%eax
mov $13,%ecx
cmp %ecx,%eax
jne @_$LB6878
@_$LB6881
jmp @_$LB6875
@_$LB6878
add $1,%rdi
add $1,%r8
mov (%r8),%bl
mov %bl,%sil
movsbl %sil,%esi
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB6873
@_$LB6875
mov %rdi,%rax
@scc_back__slen$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__snext
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB6890
mov $0,%rax
jmp @scc_back__snext$END
@_$LB6890
push %rdi
call @scc_back__slen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
add %rsi,%rdi
mov (%rdi),%bl
mov %bl,%al
mov $32,%cl
cmp %cl,%al
je @_$LB6896
mov (%rdi),%bl
mov %bl,%al
mov $9,%cl
cmp %cl,%al
je @_$LB6896
@_$LB6902
mov (%rdi),%bl
mov %bl,%al
mov $11,%cl
cmp %cl,%al
je @_$LB6896
@_$LB6899
mov (%rdi),%bl
mov %bl,%al
mov $13,%cl
cmp %cl,%al
jne @_$LB6893
@_$LB6896
@_$LB6891
add $1,%rdi
mov (%rdi),%bl
mov %bl,%al
mov $32,%cl
cmp %cl,%al
je @_$LB6891
mov (%rdi),%bl
mov %bl,%al
mov $9,%cl
cmp %cl,%al
je @_$LB6891
@_$LB6911
mov (%rdi),%bl
mov %bl,%al
mov $11,%cl
cmp %cl,%al
je @_$LB6891
@_$LB6908
mov (%rdi),%bl
mov %bl,%al
mov $13,%cl
cmp %cl,%al
je @_$LB6891
@_$LB6905
@_$LB6893
mov (%rdi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB6914
mov $0,%rax
jmp @scc_back__snext$END
@_$LB6914
mov %rdi,%rax
@scc_back__snext$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__sdup
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB6917
mov $0,%rax
jmp @scc_back__sdup$END
@_$LB6917
push %r8
call @scc_back__slen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB6920
mov $0,%rax
jmp @scc_back__sdup$END
@_$LB6920
mov %rsi,%rbx
add $1,%rbx
push %rbx
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %rsi
push %r8
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea (%rdi,%rsi),%rbx
movb $0,(%rbx)
mov %rdi,%rax
@scc_back__sdup$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__outc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov @_$DATA+11782144,%eax
mov $65536,%ecx
cmp %ecx,%eax
jne @_$LB6923
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+11782144,%ebx
movslq %ebx,%rbx
push %rbx
lea @_$DATA+11716608,%rbx
push %rbx
mov @_$DATA+11625536,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%eax
mov %eax,@_$DATA+11782144
@_$LB6923
lea @_$DATA+11716608,%rax
mov @_$DATA+11782144,%rcx
movslq %ecx,%rcx
add %rcx,%rax
mov %rax,%rbx
mov %sil,(%rbx)
addl $1,@_$DATA+11782144
@scc_back__outc$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_flush
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov @_$DATA+11782144,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB6926
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+11782144,%ebx
movslq %ebx,%rbx
push %rbx
lea @_$DATA+11716608,%rbx
push %rbx
mov @_$DATA+11625536,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB6926
@scc_back__out_flush$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__outs
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB6929
@_$LB6927
mov (%rsi),%bl
movsbq %bl,%rbx
push %rbx
call @scc_back__outc
add $8,%rsp
add $1,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB6927
@_$LB6929
@scc_back__outs$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_label
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov $@_$MSG1330,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %rsi
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1331,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@scc_back__out_label$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_label_name
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@scc_back__out_label_name$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_reg64
push %rbp
mov %rsp,%rbp
sub $208,%rsp
push %rbx
mov 16(%rbp),%rbx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB6931
mov $@_$MSG1332,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6932
@_$LB6931
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB6934
mov $@_$MSG1333,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6935
@_$LB6934
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB6937
mov $@_$MSG1334,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6938
@_$LB6937
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB6940
mov $@_$MSG1335,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6941
@_$LB6940
mov %ebx,%eax
mov $5,%ecx
cmp %ecx,%eax
jne @_$LB6943
mov $@_$MSG1336,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6944
@_$LB6943
mov %ebx,%eax
mov $6,%ecx
cmp %ecx,%eax
jne @_$LB6946
mov $@_$MSG1337,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6947
@_$LB6946
mov %ebx,%eax
mov $7,%ecx
cmp %ecx,%eax
jne @_$LB6949
mov $@_$MSG1338,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6950
@_$LB6949
mov %ebx,%eax
mov $8,%ecx
cmp %ecx,%eax
jne @_$LB6952
mov $@_$MSG1339,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6953
@_$LB6952
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB6955
mov $@_$MSG1340,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6956
@_$LB6955
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB6958
mov $@_$MSG1341,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6959
@_$LB6958
mov %ebx,%eax
mov $11,%ecx
cmp %ecx,%eax
jne @_$LB6962
mov $@_$MSG1342,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB6962
@_$LB6959
@_$LB6956
@_$LB6953
@_$LB6950
@_$LB6947
@_$LB6944
@_$LB6941
@_$LB6938
@_$LB6935
@_$LB6932
@scc_back__out_reg64$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_reg32
push %rbp
mov %rsp,%rbp
sub $208,%rsp
push %rbx
mov 16(%rbp),%rbx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB6964
mov $@_$MSG1343,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6965
@_$LB6964
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB6967
mov $@_$MSG1344,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6968
@_$LB6967
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB6970
mov $@_$MSG1345,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6971
@_$LB6970
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB6973
mov $@_$MSG1346,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6974
@_$LB6973
mov %ebx,%eax
mov $5,%ecx
cmp %ecx,%eax
jne @_$LB6976
mov $@_$MSG1347,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6977
@_$LB6976
mov %ebx,%eax
mov $6,%ecx
cmp %ecx,%eax
jne @_$LB6979
mov $@_$MSG1348,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6980
@_$LB6979
mov %ebx,%eax
mov $7,%ecx
cmp %ecx,%eax
jne @_$LB6982
mov $@_$MSG1349,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6983
@_$LB6982
mov %ebx,%eax
mov $8,%ecx
cmp %ecx,%eax
jne @_$LB6985
mov $@_$MSG1350,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6986
@_$LB6985
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB6988
mov $@_$MSG1351,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6989
@_$LB6988
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB6991
mov $@_$MSG1352,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6992
@_$LB6991
mov %ebx,%eax
mov $11,%ecx
cmp %ecx,%eax
jne @_$LB6995
mov $@_$MSG1353,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB6995
@_$LB6992
@_$LB6989
@_$LB6986
@_$LB6983
@_$LB6980
@_$LB6977
@_$LB6974
@_$LB6971
@_$LB6968
@_$LB6965
@scc_back__out_reg32$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_reg16
push %rbp
mov %rsp,%rbp
sub $208,%rsp
push %rbx
mov 16(%rbp),%rbx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB6997
mov $@_$MSG1354,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB6998
@_$LB6997
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB7000
mov $@_$MSG1355,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7001
@_$LB7000
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB7003
mov $@_$MSG1356,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7004
@_$LB7003
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB7006
mov $@_$MSG1357,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7007
@_$LB7006
mov %ebx,%eax
mov $5,%ecx
cmp %ecx,%eax
jne @_$LB7009
mov $@_$MSG1358,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7010
@_$LB7009
mov %ebx,%eax
mov $6,%ecx
cmp %ecx,%eax
jne @_$LB7012
mov $@_$MSG1359,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7013
@_$LB7012
mov %ebx,%eax
mov $7,%ecx
cmp %ecx,%eax
jne @_$LB7015
mov $@_$MSG1360,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7016
@_$LB7015
mov %ebx,%eax
mov $8,%ecx
cmp %ecx,%eax
jne @_$LB7018
mov $@_$MSG1361,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7019
@_$LB7018
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB7021
mov $@_$MSG1362,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7022
@_$LB7021
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB7024
mov $@_$MSG1363,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7025
@_$LB7024
mov %ebx,%eax
mov $11,%ecx
cmp %ecx,%eax
jne @_$LB7028
mov $@_$MSG1364,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB7028
@_$LB7025
@_$LB7022
@_$LB7019
@_$LB7016
@_$LB7013
@_$LB7010
@_$LB7007
@_$LB7004
@_$LB7001
@_$LB6998
@scc_back__out_reg16$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_reg8
push %rbp
mov %rsp,%rbp
sub $208,%rsp
push %rbx
mov 16(%rbp),%rbx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB7030
mov $@_$MSG1365,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7031
@_$LB7030
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB7033
mov $@_$MSG1366,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7034
@_$LB7033
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB7036
mov $@_$MSG1367,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7037
@_$LB7036
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB7039
mov $@_$MSG1368,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7040
@_$LB7039
mov %ebx,%eax
mov $5,%ecx
cmp %ecx,%eax
jne @_$LB7042
mov $@_$MSG1369,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7043
@_$LB7042
mov %ebx,%eax
mov $6,%ecx
cmp %ecx,%eax
jne @_$LB7045
mov $@_$MSG1370,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7046
@_$LB7045
mov %ebx,%eax
mov $7,%ecx
cmp %ecx,%eax
jne @_$LB7048
mov $@_$MSG1371,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7049
@_$LB7048
mov %ebx,%eax
mov $8,%ecx
cmp %ecx,%eax
jne @_$LB7051
mov $@_$MSG1372,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7052
@_$LB7051
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB7054
mov $@_$MSG1373,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7055
@_$LB7054
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB7057
mov $@_$MSG1374,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7058
@_$LB7057
mov %ebx,%eax
mov $11,%ecx
cmp %ecx,%eax
jne @_$LB7061
mov $@_$MSG1375,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB7061
@_$LB7058
@_$LB7055
@_$LB7052
@_$LB7049
@_$LB7046
@_$LB7043
@_$LB7040
@_$LB7037
@_$LB7034
@_$LB7031
@scc_back__out_reg8$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_reg
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
mov 24(%rbp),%rbx
push %rsi
mov 16(%rbp),%rsi
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB7067
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB7063
@_$LB7067
movslq %ebx,%rbx
push %rbx
call @scc_back__out_reg8
add $8,%rsp
jmp @_$LB7064
@_$LB7063
mov %esi,%eax
mov $3,%ecx
cmp %ecx,%eax
je @_$LB7073
mov %esi,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB7069
@_$LB7073
movslq %ebx,%rbx
push %rbx
call @scc_back__out_reg16
add $8,%rsp
jmp @_$LB7070
@_$LB7069
mov %esi,%eax
mov $5,%ecx
cmp %ecx,%eax
je @_$LB7079
mov %esi,%eax
mov $6,%ecx
cmp %ecx,%eax
je @_$LB7079
@_$LB7082
mov %esi,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB7075
@_$LB7079
movslq %ebx,%rbx
push %rbx
call @scc_back__out_reg32
add $8,%rsp
jmp @_$LB7076
@_$LB7075
mov %esi,%eax
mov $7,%ecx
cmp %ecx,%eax
je @_$LB7088
mov %esi,%eax
mov $8,%ecx
cmp %ecx,%eax
je @_$LB7088
@_$LB7091
mov %esi,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB7085
@_$LB7088
movslq %ebx,%rbx
push %rbx
call @scc_back__out_reg64
add $8,%rsp
@_$LB7085
@_$LB7076
@_$LB7070
@_$LB7064
@scc_back__out_reg$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__get_len
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 16(%rbp),%rbx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB7097
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB7093
@_$LB7097
mov $@_$MSG1376,%rbx
mov %rbx,%rax
jmp @scc_back__get_len$END
jmp @_$LB7094
@_$LB7093
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
je @_$LB7103
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB7099
@_$LB7103
mov $@_$MSG1377,%rbx
mov %rbx,%rax
jmp @scc_back__get_len$END
jmp @_$LB7100
@_$LB7099
mov %ebx,%eax
mov $5,%ecx
cmp %ecx,%eax
je @_$LB7109
mov %ebx,%eax
mov $6,%ecx
cmp %ecx,%eax
jne @_$LB7105
@_$LB7109
mov $@_$MSG1378,%rbx
mov %rbx,%rax
jmp @scc_back__get_len$END
jmp @_$LB7106
@_$LB7105
mov %ebx,%eax
mov $7,%ecx
cmp %ecx,%eax
je @_$LB7115
mov %ebx,%eax
mov $8,%ecx
cmp %ecx,%eax
jne @_$LB7112
@_$LB7115
mov $@_$MSG1379,%rbx
mov %rbx,%rax
@_$LB7112
@_$LB7106
@_$LB7100
@_$LB7094
@scc_back__get_len$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_num64
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rbx
pushq $0
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
call @scc_back__outs
add $8,%rsp
push %rsi
call @free
add $8,%rsp
@scc_back__out_num64$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_num32
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov %rsi,%rax
mov $4294967295,%rcx
and %rcx,%rax
mov %rax,%rbx
push %rbx
call @scc_back__out_num64
add $8,%rsp
@scc_back__out_num32$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_num16
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov %rsi,%rbx
and $65535,%rbx
push %rbx
call @scc_back__out_num64
add $8,%rsp
@scc_back__out_num16$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_num8
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov %rsi,%rbx
and $255,%rbx
push %rbx
call @scc_back__out_num64
add $8,%rsp
@scc_back__out_num8$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_num
push %rbp
mov %rsp,%rbp
sub $144,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
mov 24(%rbp),%rsi
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB7121
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB7117
@_$LB7121
mov 24(%rbp),%rax
push %rax
call @scc_back__out_num8
add $8,%rsp
jmp @_$LB7118
@_$LB7117
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
je @_$LB7127
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB7123
@_$LB7127
mov 24(%rbp),%rax
push %rax
call @scc_back__out_num16
add $8,%rsp
jmp @_$LB7124
@_$LB7123
mov %ebx,%eax
mov $5,%ecx
cmp %ecx,%eax
je @_$LB7133
mov %ebx,%eax
mov $6,%ecx
cmp %ecx,%eax
jne @_$LB7129
@_$LB7133
mov 24(%rbp),%rax
push %rax
call @scc_back__out_num32
add $8,%rsp
jmp @_$LB7130
@_$LB7129
mov %ebx,%eax
mov $7,%ecx
cmp %ecx,%eax
je @_$LB7139
mov %ebx,%eax
mov $8,%ecx
cmp %ecx,%eax
jne @_$LB7135
@_$LB7139
mov 24(%rbp),%rax
push %rax
call @scc_back__out_num64
add $8,%rsp
jmp @_$LB7136
@_$LB7135
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB7141
mov 24(%rbp),%rax
push %rax
call @scc_back__out_num64
add $8,%rsp
jmp @_$LB7142
@_$LB7141
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB7145
lea 24(%rbp),%rbx
mov %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%rax
movq %rax,%xmm0
cvtsd2ss %xmm0,%xmm0
movd %xmm0,%eax
mov %eax,18446744073709551520(%rbp)
lea 18446744073709551520(%rbp),%rbx
mov %rbx,%rsi
mov (%rsi),%ebx
mov %ebx,%ebx
push %rbx
call @scc_back__out_num32
add $8,%rsp
@_$LB7145
@_$LB7142
@_$LB7136
@_$LB7130
@_$LB7124
@_$LB7118
@scc_back__out_num$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_rax
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
mov 16(%rbp),%rbx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB7151
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB7147
@_$LB7151
mov $@_$MSG1380,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7148
@_$LB7147
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
je @_$LB7157
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB7153
@_$LB7157
mov $@_$MSG1381,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7154
@_$LB7153
mov %ebx,%eax
mov $5,%ecx
cmp %ecx,%eax
je @_$LB7163
mov %ebx,%eax
mov $6,%ecx
cmp %ecx,%eax
je @_$LB7163
@_$LB7166
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB7159
@_$LB7163
mov $@_$MSG1382,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7160
@_$LB7159
mov %ebx,%eax
mov $7,%ecx
cmp %ecx,%eax
je @_$LB7172
mov %ebx,%eax
mov $8,%ecx
cmp %ecx,%eax
je @_$LB7172
@_$LB7175
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB7169
@_$LB7172
mov $@_$MSG1383,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB7169
@_$LB7160
@_$LB7154
@_$LB7148
@scc_back__out_rax$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_rcx
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
mov 16(%rbp),%rbx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB7181
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB7177
@_$LB7181
mov $@_$MSG1384,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7178
@_$LB7177
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
je @_$LB7187
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB7183
@_$LB7187
mov $@_$MSG1385,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7184
@_$LB7183
mov %ebx,%eax
mov $5,%ecx
cmp %ecx,%eax
je @_$LB7193
mov %ebx,%eax
mov $6,%ecx
cmp %ecx,%eax
je @_$LB7193
@_$LB7196
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB7189
@_$LB7193
mov $@_$MSG1386,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7190
@_$LB7189
mov %ebx,%eax
mov $7,%ecx
cmp %ecx,%eax
je @_$LB7202
mov %ebx,%eax
mov $8,%ecx
cmp %ecx,%eax
je @_$LB7202
@_$LB7205
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB7199
@_$LB7202
mov $@_$MSG1387,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB7199
@_$LB7190
@_$LB7184
@_$LB7178
@scc_back__out_rcx$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_rdx
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
mov 16(%rbp),%rbx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB7211
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB7207
@_$LB7211
mov $@_$MSG1388,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7208
@_$LB7207
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
je @_$LB7217
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB7213
@_$LB7217
mov $@_$MSG1389,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7214
@_$LB7213
mov %ebx,%eax
mov $5,%ecx
cmp %ecx,%eax
je @_$LB7223
mov %ebx,%eax
mov $6,%ecx
cmp %ecx,%eax
je @_$LB7223
@_$LB7226
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB7219
@_$LB7223
mov $@_$MSG1390,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7220
@_$LB7219
mov %ebx,%eax
mov $7,%ecx
cmp %ecx,%eax
je @_$LB7232
mov %ebx,%eax
mov $8,%ecx
cmp %ecx,%eax
je @_$LB7232
@_$LB7235
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB7229
@_$LB7232
mov $@_$MSG1391,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB7229
@_$LB7220
@_$LB7214
@_$LB7208
@scc_back__out_rdx$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_acd
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
mov 24(%rbp),%rbx
push %rsi
mov 16(%rbp),%rsi
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7237
movslq %esi,%rsi
push %rsi
call @scc_back__out_rax
add $8,%rsp
jmp @_$LB7238
@_$LB7237
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB7240
movslq %esi,%rsi
push %rsi
call @scc_back__out_rcx
add $8,%rsp
jmp @_$LB7241
@_$LB7240
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB7244
movslq %esi,%rsi
push %rsi
call @scc_back__out_rdx
add $8,%rsp
@_$LB7244
@_$LB7241
@_$LB7238
@scc_back__out_acd$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__acd_extend
push %rbp
mov %rsp,%rbp
sub $816,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 32(%rbp),%r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov %r9d,%eax
mov $9,%ecx
cmp %ecx,%eax
je @_$LB7250
mov %r9d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB7246
@_$LB7250
mov %r8d,%eax
mov $9,%ecx
cmp %ecx,%eax
je @_$LB7252
mov %r8d,%eax
mov $10,%ecx
cmp %ecx,%eax
je @_$LB7252
@_$LB7256
mov %r8d,%eax
mov $7,%ecx
cmp %ecx,%eax
jge @_$LB7259
movslq %r8d,%r8
push %r8
pushq $7
movslq %r12d,%r12
push %r12
call @scc_back__acd_extend
add $24,%rsp
mov $7,%r8d
@_$LB7259
mov %r9d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB7261
mov $@_$MSG1392,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7262
@_$LB7261
mov $@_$MSG1393,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB7262
movslq %r12d,%r12
push %r12
movslq %r8d,%r8
push %r8
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1394,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r9d,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB7264
mov $@_$MSG1395,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7265
@_$LB7264
mov $@_$MSG1396,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB7265
movslq %r12d,%r12
push %r12
movslq %r9d,%r9
push %r9
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1397,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7253
@_$LB7252
mov %r9d,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB7267
mov %r8d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB7267
@_$LB7271
mov $@_$MSG1398,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r12d,%r12
push %r12
movslq %r8d,%r8
push %r8
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1399,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r12d,%r12
push %r12
movslq %r9d,%r9
push %r9
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1400,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7268
@_$LB7267
mov %r9d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB7274
mov %r8d,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB7274
@_$LB7277
mov $@_$MSG1401,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r12d,%r12
push %r12
movslq %r8d,%r8
push %r8
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1402,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r12d,%r12
push %r12
movslq %r9d,%r9
push %r9
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1403,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB7274
@_$LB7268
@_$LB7253
jmp @scc_back__acd_extend$END
jmp @_$LB7247
@_$LB7246
mov %r8d,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB7279
mov $@_$MSG1404,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r12d,%r12
push %r12
pushq $9
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1405,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r12d,%r12
push %r12
pushq $8
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1406,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__acd_extend$END
jmp @_$LB7280
@_$LB7279
mov %r8d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB7283
mov $@_$MSG1407,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r12d,%r12
push %r12
pushq $10
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1408,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r12d,%r12
push %r12
pushq $8
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1409,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__acd_extend$END
@_$LB7283
@_$LB7280
@_$LB7247
mov %r9d,%esi
sub $1,%esi
mov %esi,%eax
mov $1,%cl
sar %cl,%eax
mov %eax,%ebx
mov %ebx,%edi
mov %r8d,%esi
sub $1,%esi
mov %esi,%eax
mov $1,%cl
sar %cl,%eax
mov %eax,%ebx
mov %ebx,%esi
mov %edi,%eax
mov %esi,%ecx
cmp %ecx,%eax
jg @_$LB7286
jmp @scc_back__acd_extend$END
@_$LB7286
mov $@_$MSG1410,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %edi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB7289
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB7289
@_$LB7295
mov %r8d,%ebx
and $1,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7289
@_$LB7292
mov $@_$MSG1411,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r12d,%r12
push %r12
pushq $5
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1412,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r12d,%r12
push %r12
pushq $5
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1413,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__acd_extend$END
@_$LB7289
mov %r8d,%ebx
and $1,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB7297
mov $@_$MSG1414,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7298
@_$LB7297
mov $@_$MSG1415,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB7298
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7300
mov $@_$MSG1416,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7301
@_$LB7300
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB7303
mov $@_$MSG1417,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7304
@_$LB7303
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB7306
mov $@_$MSG1418,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7307
@_$LB7306
mov %esi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB7310
mov $@_$MSG1419,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB7310
@_$LB7307
@_$LB7304
@_$LB7301
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7312
mov $@_$MSG1420,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7313
@_$LB7312
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB7315
mov $@_$MSG1421,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7316
@_$LB7315
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB7318
mov $@_$MSG1422,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB7319
@_$LB7318
mov %edi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB7322
mov $@_$MSG1423,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB7322
@_$LB7319
@_$LB7316
@_$LB7313
movslq %r12d,%r12
push %r12
movslq %r8d,%r8
push %r8
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1424,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r12d,%r12
push %r12
movslq %r9d,%r9
push %r9
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1425,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@scc_back__acd_extend$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__sgetc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov (%r12),%bl
mov %bl,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB7324
mov 1(%r12),%bl
mov %bl,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB7327
movb $92,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scc_back__sgetc$END
jmp @_$LB7328
@_$LB7327
mov 1(%r12),%bl
mov %bl,%al
mov $110,%cl
cmp %cl,%al
jne @_$LB7330
movb $10,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scc_back__sgetc$END
jmp @_$LB7331
@_$LB7330
mov 1(%r12),%bl
mov %bl,%al
mov $116,%cl
cmp %cl,%al
jne @_$LB7333
movb $9,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scc_back__sgetc$END
jmp @_$LB7334
@_$LB7333
mov 1(%r12),%bl
mov %bl,%al
mov $118,%cl
cmp %cl,%al
jne @_$LB7336
movb $11,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scc_back__sgetc$END
jmp @_$LB7337
@_$LB7336
mov 1(%r12),%bl
mov %bl,%al
mov $114,%cl
cmp %cl,%al
jne @_$LB7339
movb $13,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scc_back__sgetc$END
jmp @_$LB7340
@_$LB7339
mov 1(%r12),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
jne @_$LB7342
movb $39,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scc_back__sgetc$END
jmp @_$LB7343
@_$LB7342
mov 1(%r12),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB7345
movb $34,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scc_back__sgetc$END
jmp @_$LB7346
@_$LB7345
mov 1(%r12),%bl
mov %bl,%al
mov $63,%cl
cmp %cl,%al
jne @_$LB7348
movb $63,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @scc_back__sgetc$END
jmp @_$LB7349
@_$LB7348
mov 1(%r12),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB7351
mov 1(%r12),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB7351
@_$LB7355
mov $1,%r8d
movb $0,(%r9)
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB7358
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB7358
@_$LB7361
@_$LB7356
mov (%r9),%bl
mov %bl,%al
mov $3,%cl
shl %cl,%al
mov %al,%dil
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %dil,%edi
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %bl,(%r9)
add $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB7364
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jle @_$LB7356
@_$LB7364
@_$LB7358
lea (%r12,%r8),%rbx
mov %rbx,%rax
jmp @scc_back__sgetc$END
jmp @_$LB7352
@_$LB7351
mov 1(%r12),%bl
mov %bl,%al
mov $120,%cl
cmp %cl,%al
jne @_$LB7366
mov $2,%r8d
movb $0,(%r9)
@_$LB7368
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB7372
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB7372
@_$LB7376
mov (%r9),%bl
mov %bl,%dil
shl $4,%dil
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %dil,%edi
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %bl,(%r9)
jmp @_$LB7373
@_$LB7372
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB7378
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $70,%cl
cmp %cl,%al
jg @_$LB7378
@_$LB7382
mov (%r9),%bl
mov %bl,%dil
shl $4,%dil
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $65,%bl
mov %bl,%sil
add $10,%sil
movsbl %dil,%edi
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %bl,(%r9)
jmp @_$LB7379
@_$LB7378
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB7384
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $102,%cl
cmp %cl,%al
jg @_$LB7384
@_$LB7388
mov (%r9),%bl
mov %bl,%dil
shl $4,%dil
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $97,%bl
mov %bl,%sil
add $10,%sil
movsbl %dil,%edi
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %bl,(%r9)
jmp @_$LB7385
@_$LB7384
jmp @_$LB7370
@_$LB7385
@_$LB7379
@_$LB7373
add $1,%r8d
jmp @_$LB7368
@_$LB7370
lea (%r12,%r8),%rbx
mov %rbx,%rax
jmp @scc_back__sgetc$END
jmp @_$LB7367
@_$LB7366
movb $92,(%r9)
mov %r12,%rbx
add $1,%rbx
mov %rbx,%rax
jmp @scc_back__sgetc$END
@_$LB7367
@_$LB7352
@_$LB7349
@_$LB7346
@_$LB7343
@_$LB7340
@_$LB7337
@_$LB7334
@_$LB7331
@_$LB7328
jmp @_$LB7325
@_$LB7324
mov (%r12),%bl
mov %bl,(%r9)
mov %r12,%rbx
add $1,%rbx
mov %rbx,%rax
@_$LB7325
@scc_back__sgetc$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_str
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov $0,%al
mov %al,18446744073709551601(%rbp)
mov %rsi,%rbx
add $1,%rbx
mov %rbx,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB7391
mov (%rsi),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
je @_$LB7391
@_$LB7394
@_$LB7389
lea 18446744073709551600(%rbp),%rax
push %rax
push %rsi
call @scc_back__sgetc
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
lea 18446744073709551600(%rbp),%rax
push %rax
call @scc_back__outs
add $8,%rsp
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB7397
mov (%rsi),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB7389
@_$LB7397
@_$LB7391
@scc_back__out_str$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__label_tab_add
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
push %r9
call @scc_back__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r8d
pushq $24
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r9
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%rdi)
mov %rsi,8(%rdi)
mov %r8d,%ebx
shl $3,%ebx
lea @_$DATA+11782208,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,16(%rdi)
mov %r8d,%esi
shl $3,%esi
lea @_$DATA+11782208,%rbx
movslq %esi,%rsi
add %rsi,%rbx
mov %rdi,(%rbx)
@scc_back__label_tab_add$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__label_tab_find
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %rdi
call @scc_back__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %esi,%ebx
shl $3,%ebx
lea @_$DATA+11782208,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7400
@_$LB7398
push %rdi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7403
mov %rsi,%rax
jmp @scc_back__label_tab_find$END
@_$LB7403
mov 16(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7398
@_$LB7400
mov $0,%rax
@scc_back__label_tab_find$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__id_tab_add
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 80(%rbp),%rsi
push %rdi
push %r8
push %r9
mov 72(%rbp),%r9
push %r12
mov 64(%rbp),%r12
push %r13
mov 56(%rbp),%r13
push %r14
mov 48(%rbp),%r14
push %r15
mov 40(%rbp),%r15
push %r10
mov 32(%rbp),%r10
push %r11
mov 24(%rbp),%r11
push %r11
call @scc_back__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r8d
pushq $80
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r11
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%rdi)
mov %r10,8(%rdi)
mov %r15d,16(%rdi)
mov %r14,24(%rdi)
mov %r13,32(%rdi)
mov %r12,56(%rdi)
mov %r9,64(%rdi)
movq $18446744073709551615,40(%rdi)
mov %esi,20(%rdi)
mov %r8d,%ebx
shl $3,%ebx
mov 16(%rbp),%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,72(%rdi)
mov %r8d,%esi
shl $3,%esi
mov 16(%rbp),%rbx
movslq %esi,%rsi
add %rsi,%rbx
mov %rdi,(%rbx)
@scc_back__id_tab_add$END
pop %r11
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__id_tab_find
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
push %rdi
call @scc_back__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r8,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7406
@_$LB7404
push %rdi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7409
mov %rsi,%rax
jmp @scc_back__id_tab_find$END
@_$LB7409
mov 72(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7404
@_$LB7406
mov $0,%rax
@scc_back__id_tab_find$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__id_tab_release
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
mov $0,%r8d
mov %r8d,%eax
mov $1021,%ecx
cmp %ecx,%eax
jge @_$LB7412
@_$LB7410
mov %r8d,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7415
@_$LB7413
mov %r8d,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rdi
mov %r8d,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov 72(%rdi),%rbx
mov %rbx,(%rsi)
mov (%rdi),%rbx
push %rbx
call @free
add $8,%rsp
push %rdi
call @free
add $8,%rsp
mov %r8d,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7413
@_$LB7415
add $1,%r8d
mov %r8d,%eax
mov $1021,%ecx
cmp %ecx,%eax
jl @_$LB7410
@_$LB7412
@scc_back__id_tab_release$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__next_op
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7418
mov 92(%rsi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7418
@_$LB7421
@_$LB7416
mov 88(%rsi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB7424
mov $@_$MSG1426,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7427
mov $0,%rax
jmp @scc_back__next_op$END
@_$LB7427
@_$LB7424
mov 352(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7430
mov 92(%rsi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB7416
@_$LB7430
@_$LB7418
mov %rsi,%rax
@scc_back__next_op$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__const_to_num
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 16(%rbp),%r12
mov $0,%r9
mov (%r12),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
jne @_$LB7432
add $1,%r12
mov (%r12),%bl
mov %bl,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB7435
mov 1(%r12),%bl
mov %bl,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB7438
mov $92,%r9
jmp @_$LB7439
@_$LB7438
mov 1(%r12),%bl
mov %bl,%al
mov $110,%cl
cmp %cl,%al
jne @_$LB7441
mov $10,%r9
jmp @_$LB7442
@_$LB7441
mov 1(%r12),%bl
mov %bl,%al
mov $116,%cl
cmp %cl,%al
jne @_$LB7444
mov $9,%r9
jmp @_$LB7445
@_$LB7444
mov 1(%r12),%bl
mov %bl,%al
mov $118,%cl
cmp %cl,%al
jne @_$LB7447
mov $11,%r9
jmp @_$LB7448
@_$LB7447
mov 1(%r12),%bl
mov %bl,%al
mov $114,%cl
cmp %cl,%al
jne @_$LB7450
mov $13,%r9
jmp @_$LB7451
@_$LB7450
mov 1(%r12),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
jne @_$LB7453
mov $39,%r9
jmp @_$LB7454
@_$LB7453
mov 1(%r12),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB7456
mov $34,%r9
jmp @_$LB7457
@_$LB7456
mov 1(%r12),%bl
mov %bl,%al
mov $63,%cl
cmp %cl,%al
jne @_$LB7459
mov $63,%r9
jmp @_$LB7460
@_$LB7459
mov 1(%r12),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB7462
mov 1(%r12),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB7462
@_$LB7466
mov $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB7469
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB7469
@_$LB7472
@_$LB7467
mov %r9,%rax
mov $3,%cl
shl %cl,%rax
mov %rax,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
add $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB7475
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jle @_$LB7467
@_$LB7475
@_$LB7469
jmp @_$LB7463
@_$LB7462
mov 1(%r12),%bl
mov %bl,%al
mov $120,%cl
cmp %cl,%al
jne @_$LB7477
mov $2,%r8d
@_$LB7479
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB7483
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB7483
@_$LB7487
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB7484
@_$LB7483
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB7489
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $70,%cl
cmp %cl,%al
jg @_$LB7489
@_$LB7493
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $65,%bl
mov %bl,%sil
add $10,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB7490
@_$LB7489
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB7495
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $102,%cl
cmp %cl,%al
jg @_$LB7495
@_$LB7499
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $97,%bl
mov %bl,%sil
add $10,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB7496
@_$LB7495
jmp @_$LB7481
@_$LB7496
@_$LB7490
@_$LB7484
add $1,%r8d
jmp @_$LB7479
@_$LB7481
jmp @_$LB7478
@_$LB7477
mov $92,%r9
@_$LB7478
@_$LB7463
@_$LB7460
@_$LB7457
@_$LB7454
@_$LB7451
@_$LB7448
@_$LB7445
@_$LB7442
@_$LB7439
jmp @_$LB7436
@_$LB7435
mov (%r12),%bl
mov %bl,%r9b
movsbq %r9b,%r9
@_$LB7436
jmp @_$LB7433
@_$LB7432
mov (%r12),%bl
mov %bl,%al
mov $49,%cl
cmp %cl,%al
jl @_$LB7501
mov (%r12),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB7501
@_$LB7505
mov $0,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB7508
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB7508
@_$LB7511
@_$LB7506
mov %r9,%rdi
mov %r9,%rax
mov $10,%rcx
mul %rcx
mov %rax,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
add $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB7514
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jle @_$LB7506
@_$LB7514
@_$LB7508
jmp @_$LB7502
@_$LB7501
mov 1(%r12),%bl
mov %bl,%al
mov $88,%cl
cmp %cl,%al
je @_$LB7520
mov 1(%r12),%bl
mov %bl,%al
mov $120,%cl
cmp %cl,%al
jne @_$LB7516
@_$LB7520
mov $2,%r8d
@_$LB7521
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB7525
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB7525
@_$LB7529
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB7526
@_$LB7525
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB7531
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $70,%cl
cmp %cl,%al
jg @_$LB7531
@_$LB7535
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $65,%bl
mov %bl,%sil
add $10,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB7532
@_$LB7531
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB7537
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $102,%cl
cmp %cl,%al
jg @_$LB7537
@_$LB7541
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $97,%bl
mov %bl,%sil
add $10,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB7538
@_$LB7537
jmp @_$LB7523
@_$LB7538
@_$LB7532
@_$LB7526
add $1,%r8d
jmp @_$LB7521
@_$LB7523
jmp @_$LB7517
@_$LB7516
mov $0,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB7544
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB7544
@_$LB7547
@_$LB7542
mov %r9,%rax
mov $3,%cl
shl %cl,%rax
mov %rax,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
add $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB7550
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jle @_$LB7542
@_$LB7550
@_$LB7544
@_$LB7517
@_$LB7502
@_$LB7433
mov %r9,%rax
@scc_back__const_to_num$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__fconst_to_num
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
mov 24(%rbp),%r15
push %r10
mov 16(%rbp),%r10
mov $0,%r13d
movl $0,(%r15)
mov (%r10),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB7556
mov (%r10),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jle @_$LB7553
@_$LB7556
mov $0,%rax
jmp @scc_back__fconst_to_num$END
@_$LB7553
lea (%r10,%r13),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB7559
@_$LB7557
lea (%r10,%r13),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $46,%cl
cmp %cl,%al
jne @_$LB7562
mov $0,%r13d
mov $0,%r8d
mov $0,%rbx
mov %rbx,%rax
mov %rax,18446744073709551600(%rbp)
mov $4591870180066957722,%rbx
mov %rbx,%r9
lea (%r10,%r13),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB7565
@_$LB7563
lea (%r10,%r13),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $46,%cl
cmp %cl,%al
jne @_$LB7567
mov $1,%r8d
jmp @_$LB7568
@_$LB7567
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB7570
lea (%r10,%r13),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $48,%bl
mov %bl,%sil
movsbq %sil,%rsi
cvtsi2sd %rsi,%xmm0
movq %xmm0,%rsi
movq %r9,%xmm0
movq %rsi,%xmm1
mulsd %xmm1,%xmm0
movq %xmm0,%rbx
movsd 18446744073709551600(%rbp),%xmm0
movq %rbx,%xmm1
addsd %xmm1,%xmm0
movsd %xmm0,18446744073709551600(%rbp)
mov $4591870180066957722,%rbx
movq %r9,%xmm0
movq %rbx,%xmm1
mulsd %xmm1,%xmm0
movq %xmm0,%r9
jmp @_$LB7571
@_$LB7570
mov $4621819117588971520,%rbx
movsd 18446744073709551600(%rbp),%xmm0
movq %rbx,%xmm1
mulsd %xmm1,%xmm0
movq %xmm0,%rdi
lea (%r10,%r13),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $48,%bl
mov %bl,%sil
movsbq %sil,%rsi
cvtsi2sd %rsi,%xmm0
movq %xmm0,%rsi
movq %rdi,%xmm0
movq %rsi,%xmm1
addsd %xmm1,%xmm0
movq %xmm0,%rbx
mov %rbx,%rax
mov %rax,18446744073709551600(%rbp)
@_$LB7571
@_$LB7568
add $1,%r13d
lea (%r10,%r13),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB7563
@_$LB7565
pushq $8
lea 18446744073709551600(%rbp),%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
movl $1,(%r15)
mov 18446744073709551584(%rbp),%rax
jmp @scc_back__fconst_to_num$END
@_$LB7562
add $1,%r13d
lea (%r10,%r13),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB7557
@_$LB7559
mov $0,%rax
@scc_back__fconst_to_num$END
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__ins_add
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
pushq $360
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov @_$DATA+11716592,%rax
mov %rax,56(%rdi)
movl $0,88(%rdi)
movl $0,92(%rdi)
movq $0,232(%rdi)
movw $0,64(%rdi)
movw $0,66(%rdi)
movb $0,68(%rdi)
movb $0,69(%rdi)
movb $0,70(%rdi)
movq $0,72(%rdi)
movq $0,80(%rdi)
pushq $88
pushq $255
mov %rdi,%rbx
add $256,%rbx
push %rbx
call @memset
mov %rax,%rbx
add $24,%rsp
mov $0,%r8d
mov %r8d,%eax
mov $4,%ecx
cmp %ecx,%eax
jge @_$LB7574
@_$LB7572
mov %r8d,%ebx
shl $3,%ebx
lea (%rdi,%rbx),%rsi
push %r9
call @scc_back__sdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%rsi)
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7577
mov 88(%rdi),%ebx
add $1,%ebx
mov %ebx,88(%rdi)
@_$LB7577
push %r9
call @scc_back__snext
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
add $1,%r8d
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB7580
mov 88(%rdi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB7580
@_$LB7583
mov $@_$MSG1427,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7586
movl $12,92(%rdi)
@_$LB7586
mov $@_$MSG1428,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7589
movl $1,92(%rdi)
@_$LB7589
mov $@_$MSG1429,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7592
movl $1,92(%rdi)
@_$LB7592
mov $@_$MSG1430,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7595
movl $11,92(%rdi)
@_$LB7595
mov $@_$MSG1431,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7598
movl $11,92(%rdi)
@_$LB7598
mov $@_$MSG1432,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7601
movl $13,92(%rdi)
@_$LB7601
mov $@_$MSG1433,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7604
movl $14,92(%rdi)
@_$LB7604
mov $@_$MSG1434,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7607
movl $17,92(%rdi)
@_$LB7607
mov $@_$MSG1435,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7610
movl $2,92(%rdi)
@_$LB7610
mov $@_$MSG1436,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7613
movl $2,92(%rdi)
@_$LB7613
mov $@_$MSG1437,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7616
movl $2,92(%rdi)
@_$LB7616
mov $@_$MSG1438,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7619
movl $2,92(%rdi)
@_$LB7619
mov $@_$MSG1439,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7622
movl $2,92(%rdi)
@_$LB7622
mov $@_$MSG1440,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7625
movl $2,92(%rdi)
@_$LB7625
mov $@_$MSG1441,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7628
movl $2,92(%rdi)
@_$LB7628
mov $@_$MSG1442,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7631
movl $3,92(%rdi)
@_$LB7631
mov $@_$MSG1443,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7634
movl $3,92(%rdi)
@_$LB7634
mov $@_$MSG1444,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7637
movl $3,92(%rdi)
@_$LB7637
mov $@_$MSG1445,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7640
movl $9,92(%rdi)
@_$LB7640
mov $@_$MSG1446,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7643
movl $9,92(%rdi)
@_$LB7643
mov $@_$MSG1447,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7646
movl $9,92(%rdi)
@_$LB7646
mov $@_$MSG1448,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7649
movl $10,92(%rdi)
@_$LB7649
mov $@_$MSG1449,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7652
movl $4,92(%rdi)
@_$LB7652
mov $@_$MSG1450,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7655
movl $4,92(%rdi)
@_$LB7655
mov $@_$MSG1451,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7658
movl $4,92(%rdi)
@_$LB7658
mov $@_$MSG1452,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7661
movl $5,92(%rdi)
@_$LB7661
mov $@_$MSG1453,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7664
movl $5,92(%rdi)
@_$LB7664
mov $@_$MSG1454,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7667
movl $5,92(%rdi)
@_$LB7667
mov $@_$MSG1455,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7670
movl $5,92(%rdi)
@_$LB7670
mov $@_$MSG1456,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7673
movl $5,92(%rdi)
@_$LB7673
mov $@_$MSG1457,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7676
movl $5,92(%rdi)
@_$LB7676
mov $@_$MSG1458,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7679
movl $6,92(%rdi)
@_$LB7679
mov $@_$MSG1459,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7682
movl $6,92(%rdi)
@_$LB7682
mov $@_$MSG1460,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7685
movl $6,92(%rdi)
@_$LB7685
mov $@_$MSG1461,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7688
movl $6,92(%rdi)
@_$LB7688
mov $@_$MSG1462,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7691
movl $6,92(%rdi)
@_$LB7691
mov $@_$MSG1463,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7694
movl $6,92(%rdi)
@_$LB7694
mov $@_$MSG1464,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7697
movl $5,92(%rdi)
@_$LB7697
mov $@_$MSG1465,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7700
movl $5,92(%rdi)
@_$LB7700
mov $@_$MSG1466,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7703
movl $5,92(%rdi)
@_$LB7703
mov $@_$MSG1467,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7706
movl $5,92(%rdi)
@_$LB7706
mov $@_$MSG1468,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7709
movl $5,92(%rdi)
@_$LB7709
mov $@_$MSG1469,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7712
movl $5,92(%rdi)
@_$LB7712
mov $@_$MSG1470,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7715
movl $6,92(%rdi)
@_$LB7715
mov $@_$MSG1471,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7718
movl $6,92(%rdi)
@_$LB7718
mov $@_$MSG1472,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7721
movl $6,92(%rdi)
@_$LB7721
mov $@_$MSG1473,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7724
movl $6,92(%rdi)
@_$LB7724
mov $@_$MSG1474,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7727
movl $6,92(%rdi)
@_$LB7727
mov $@_$MSG1475,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7730
movl $6,92(%rdi)
@_$LB7730
mov $@_$MSG1476,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7733
movl $7,92(%rdi)
@_$LB7733
mov $@_$MSG1477,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7736
movl $7,92(%rdi)
@_$LB7736
mov $@_$MSG1478,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7739
movl $7,92(%rdi)
@_$LB7739
mov $@_$MSG1479,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7742
movl $7,92(%rdi)
@_$LB7742
mov $@_$MSG1480,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7745
movl $7,92(%rdi)
@_$LB7745
mov $@_$MSG1481,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7748
movl $7,92(%rdi)
@_$LB7748
mov $@_$MSG1482,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7751
movl $8,92(%rdi)
@_$LB7751
@_$LB7580
mov %r8d,%eax
mov $4,%ecx
cmp %ecx,%eax
jl @_$LB7572
@_$LB7574
movq $0,352(%rdi)
mov @_$DATA+11782160,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7753
mov @_$DATA+11782176,%rcx
mov %rdi,352(%rcx)
jmp @_$LB7754
@_$LB7753
mov %rdi,%rax
mov %rax,@_$DATA+11782160
@_$LB7754
mov %rdi,%rax
mov %rax,@_$DATA+11782176
@scc_back__ins_add$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__load_global_vars
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov $0,%rdi
mov @_$DATA+11782160,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7757
@_$LB7755
addq $1,@_$DATA+11782192
mov 88(%r13),%ebx
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
jl @_$LB7759
mov $@_$MSG1483,%rbx
push %rbx
mov (%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7762
mov $@_$MSG1484,%rbx
push %rbx
mov 8(%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7765
mov 88(%r13),%ebx
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jge @_$LB7769
mov $@_$MSG1485,%rbx
push %rbx
mov 56(%r13),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB7769
mov 16(%r13),%rbx
push %rbx
call @scc_back__const_to_num
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov $0,%r12
mov 24(%r13),%rbx
mov %rbx,%r8
jmp @_$LB7766
@_$LB7765
mov $@_$MSG1486,%rbx
push %rbx
mov 8(%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7771
mov $1,%r9
mov $1,%r12
mov 16(%r13),%rbx
mov %rbx,%r8
jmp @_$LB7772
@_$LB7771
mov $@_$MSG1487,%rbx
push %rbx
mov 8(%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7774
mov $1,%r9
mov $2,%r12
mov 16(%r13),%rbx
mov %rbx,%r8
jmp @_$LB7775
@_$LB7774
mov $@_$MSG1488,%rbx
push %rbx
mov 8(%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7777
mov $2,%r9
mov $3,%r12
mov 16(%r13),%rbx
mov %rbx,%r8
jmp @_$LB7778
@_$LB7777
mov $@_$MSG1489,%rbx
push %rbx
mov 8(%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7780
mov $2,%r9
mov $4,%r12
mov 16(%r13),%rbx
mov %rbx,%r8
jmp @_$LB7781
@_$LB7780
mov $@_$MSG1490,%rbx
push %rbx
mov 8(%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7783
mov $4,%r9
mov $5,%r12
mov 16(%r13),%rbx
mov %rbx,%r8
jmp @_$LB7784
@_$LB7783
mov $@_$MSG1491,%rbx
push %rbx
mov 8(%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7786
mov $4,%r9
mov $6,%r12
mov 16(%r13),%rbx
mov %rbx,%r8
jmp @_$LB7787
@_$LB7786
mov $@_$MSG1492,%rbx
push %rbx
mov 8(%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7789
mov $8,%r9
mov $7,%r12
mov 16(%r13),%rbx
mov %rbx,%r8
jmp @_$LB7790
@_$LB7789
mov $@_$MSG1493,%rbx
push %rbx
mov 8(%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7792
mov $8,%r9
mov $8,%r12
mov 16(%r13),%rbx
mov %rbx,%r8
jmp @_$LB7793
@_$LB7792
mov $@_$MSG1494,%rbx
push %rbx
mov 8(%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7795
mov $8,%r9
mov $8,%r12
mov 16(%r13),%rbx
mov %rbx,%r8
jmp @_$LB7796
@_$LB7795
mov $@_$MSG1495,%rbx
push %rbx
mov 8(%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7798
mov $8,%r9
mov $10,%r12
mov 16(%r13),%rbx
mov %rbx,%r8
jmp @_$LB7799
@_$LB7798
mov $@_$MSG1496,%rbx
push %rbx
mov 8(%r13),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7801
mov $4,%r9
mov $9,%r12
mov 16(%r13),%rbx
mov %rbx,%r8
jmp @_$LB7802
@_$LB7801
mov $@_$MSG1497,%rbx
push %rbx
mov 56(%r13),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB7802
@_$LB7799
@_$LB7796
@_$LB7793
@_$LB7790
@_$LB7787
@_$LB7784
@_$LB7781
@_$LB7778
@_$LB7775
@_$LB7772
@_$LB7766
push %r8
lea @_$DATA+11790384,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7805
mov $@_$MSG1498,%rbx
push %rbx
push %r8
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB7807
pushq $0
pushq $0
pushq $0
push %rdi
push %r9
push %r12
mov @_$DATA+11782192,%rax
push %rax
push %r8
lea @_$DATA+11790384,%rax
push %rax
call @scc_back__id_tab_add
add $72,%rsp
jmp @_$LB7808
@_$LB7807
mov $0,%r9
@_$LB7808
@_$LB7805
jmp @_$LB7763
@_$LB7762
mov $0,%r9
@_$LB7763
jmp @_$LB7760
@_$LB7759
mov $0,%r9
@_$LB7760
add %r9,%rdi
mov %rdi,%rsi
add $15,%rsi
mov %rsi,%rbx
and $18446744073709551600,%rbx
mov %rbx,%rdi
mov 352(%r13),%rbx
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7755
@_$LB7757
mov %rdi,%rax
mov %rax,@_$DATA+11814912
@scc_back__load_global_vars$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__load_labels
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov @_$DATA+11782160,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7811
@_$LB7809
mov 88(%rsi),%ebx
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jl @_$LB7814
mov $@_$MSG1499,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7817
mov 8(%rsi),%rbx
push %rbx
call @scc_back__label_tab_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7820
push %rsi
mov 8(%rsi),%rbx
push %rbx
call @scc_back__label_tab_add
add $16,%rsp
@_$LB7820
@_$LB7817
@_$LB7814
mov 352(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7809
@_$LB7811
@scc_back__load_labels$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__load_branches
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
push %rsi
push %rdi
mov @_$DATA+11782160,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7823
@_$LB7821
mov 88(%rdi),%ebx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
jle @_$LB7825
mov $0,%esi
mov $@_$MSG1500,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7828
mov $1,%esi
jmp @_$LB7829
@_$LB7828
mov $@_$MSG1501,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7831
mov $1,%esi
jmp @_$LB7832
@_$LB7831
mov $@_$MSG1502,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7834
mov $1,%esi
jmp @_$LB7835
@_$LB7834
mov $@_$MSG1503,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7837
mov $1,%esi
jmp @_$LB7838
@_$LB7837
mov $@_$MSG1504,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7840
mov $1,%esi
jmp @_$LB7841
@_$LB7840
mov $@_$MSG1505,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7843
mov $1,%esi
jmp @_$LB7844
@_$LB7843
mov $@_$MSG1506,%rbx
push %rbx
mov (%rdi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7847
mov $2,%esi
@_$LB7847
@_$LB7844
@_$LB7841
@_$LB7838
@_$LB7835
@_$LB7832
@_$LB7829
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB7849
mov 88(%rdi),%ebx
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jge @_$LB7853
mov $@_$MSG1507,%rbx
push %rbx
mov 56(%rdi),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB7853
mov 24(%rdi),%rbx
push %rbx
call @scc_back__label_tab_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7856
mov $@_$MSG1508,%rbx
push %rbx
mov 56(%rdi),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB7856
mov 8(%rsi),%rbx
mov %rbx,344(%rdi)
jmp @_$LB7850
@_$LB7849
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB7858
mov 8(%rdi),%rbx
push %rbx
call @scc_back__label_tab_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7862
mov $@_$MSG1509,%rbx
push %rbx
mov 56(%rdi),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB7862
mov 8(%rsi),%rbx
mov %rbx,344(%rdi)
jmp @_$LB7859
@_$LB7858
movq $0,344(%rdi)
@_$LB7859
@_$LB7850
jmp @_$LB7826
@_$LB7825
movq $0,344(%rdi)
@_$LB7826
mov 352(%rdi),%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7821
@_$LB7823
@scc_back__load_branches$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__id_list_add
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
pushq $32
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
movq $0,16(%rdi)
push %r8
lea @_$DATA+11798560,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7865
movq $1,16(%rdi)
push %r8
lea @_$DATA+11806736,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7868
push %r8
lea @_$DATA+11790384,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
@_$LB7868
@_$LB7865
mov 20(%rsi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB7871
push %rdi
call @free
add $8,%rsp
jmp @scc_back__id_list_add$END
@_$LB7871
mov 8(%rsi),%rbx
mov %rbx,(%rdi)
push %r8
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,8(%rdi)
mov @_$DATA+11814992,%rax
mov %rax,24(%rdi)
mov %rdi,%rax
mov %rax,@_$DATA+11814992
@scc_back__id_list_add$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__id_list_release
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
mov @_$DATA+11814992,%rsi
mov @_$DATA+11814992,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7874
@_$LB7872
mov 24(%rsi),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11814992
mov 8(%rsi),%rbx
push %rbx
call @free
add $8,%rsp
push %rsi
call @free
add $8,%rsp
mov @_$DATA+11814992,%rsi
mov @_$DATA+11814992,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7872
@_$LB7874
@scc_back__id_list_release$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__new_reg_map
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov @_$DATA+11716592,%rax
mov $32,%rcx
mov %rax,%rdx
shr $63,%rdx
neg %rdx
idiv %rcx
mov %rax,%rsi
mov %rsi,%rbx
add $1,%rbx
mov %rbx,%rsi
pushq $32
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rsi,%rbx
shl $2,%rbx
push %rbx
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%rdi)
mov %rsi,%rbx
shl $2,%rbx
push %rbx
pushq $0
mov (%rdi),%rbx
push %rbx
call @memset
mov %rax,%rbx
add $24,%rsp
movq $0,8(%rdi)
movq $0,16(%rdi)
mov @_$DATA+11815040,%rax
mov %rax,24(%rdi)
mov @_$DATA+11815008,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7876
mov @_$DATA+11815024,%rcx
mov %rdi,8(%rcx)
jmp @_$LB7877
@_$LB7876
mov %rdi,%rax
mov %rax,@_$DATA+11815008
@_$LB7877
mov %rdi,%rax
mov %rax,@_$DATA+11815024
addq $1,@_$DATA+11815040
mov %rdi,%rax
@scc_back__new_reg_map$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__reg_map_release
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
mov @_$DATA+11815008,%rsi
mov @_$DATA+11815008,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7880
@_$LB7878
mov 8(%rsi),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11815008
mov (%rsi),%rbx
push %rbx
call @free
add $8,%rsp
push %rsi
call @free
add $8,%rsp
mov @_$DATA+11815008,%rsi
mov @_$DATA+11815008,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7878
@_$LB7880
mov $0,%rax
mov %rax,@_$DATA+11815024
mov $0,%rax
mov %rax,@_$DATA+11815040
@scc_back__reg_map_release$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__reg_map_sort
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
@_$LB7881
mov $0,%r9d
mov $0,%r8
mov @_$DATA+11815008,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7886
mov 8(%rdi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7889
@_$LB7887
mov 8(%rdi),%rbx
mov 16(%rbx),%rsi
mov 16(%rdi),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jbe @_$LB7891
mov 8(%rdi),%rbx
mov %rbx,%rsi
mov 8(%rsi),%rbx
mov %rbx,8(%rdi)
mov %rdi,8(%rsi)
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7894
mov %rsi,8(%r8)
jmp @_$LB7895
@_$LB7894
mov %rsi,%rax
mov %rax,@_$DATA+11815008
@_$LB7895
mov $1,%r9d
mov %rsi,%r8
jmp @_$LB7892
@_$LB7891
mov %rdi,%r8
mov 8(%rdi),%rbx
mov %rbx,%rdi
@_$LB7892
mov 8(%rdi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7887
@_$LB7889
@_$LB7886
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB7881
@_$LB7883
@scc_back__reg_map_sort$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__get_reg_index
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $0,%rdi
mov @_$DATA+11815008,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7898
@_$LB7896
mov 24(%rsi),%rbx
mov %rbx,%rax
mov %r8,%rcx
cmp %rcx,%rax
jne @_$LB7901
jmp @_$LB7898
@_$LB7901
mov 8(%rsi),%rbx
mov %rbx,%rsi
add $1,%rdi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7896
@_$LB7898
mov %rdi,%rax
@scc_back__get_reg_index$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__init_def_use
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov $1,%r8
mov @_$DATA+11814928,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7904
mov %r13,%rax
mov @_$DATA+11814944,%rcx
cmp %rcx,%rax
je @_$LB7904
@_$LB7907
@_$LB7902
mov @_$DATA+11814992,%r12
mov $0,%r9d
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7910
@_$LB7908
mov 92(%r13),%ebx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB7916
mov 92(%r13),%ebx
mov %ebx,%eax
mov $11,%ecx
cmp %ecx,%eax
je @_$LB7916
@_$LB7919
mov 92(%r13),%ebx
mov %ebx,%eax
mov $12,%ecx
cmp %ecx,%eax
jne @_$LB7912
@_$LB7916
mov (%r12),%rsi
mov 40(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7921
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 136(%rdi),%rbx
or %rsi,%rbx
mov %rbx,136(%rdi)
jmp @_$LB7922
@_$LB7921
mov (%r12),%rsi
mov 32(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7925
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 104(%rdi),%rbx
or %rsi,%rbx
mov %rbx,104(%rdi)
@_$LB7925
@_$LB7922
jmp @_$LB7913
@_$LB7912
mov 92(%r13),%ebx
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
je @_$LB7931
mov 92(%r13),%ebx
mov %ebx,%eax
mov $13,%ecx
cmp %ecx,%eax
je @_$LB7931
@_$LB7937
mov 92(%r13),%ebx
mov %ebx,%eax
mov $14,%ecx
cmp %ecx,%eax
je @_$LB7931
@_$LB7934
mov 92(%r13),%ebx
mov %ebx,%eax
mov $17,%ecx
cmp %ecx,%eax
jne @_$LB7927
@_$LB7931
mov (%r12),%rsi
mov 48(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7939
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 136(%rdi),%rbx
or %rsi,%rbx
mov %rbx,136(%rdi)
jmp @_$LB7940
@_$LB7939
mov (%r12),%rsi
mov 40(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7942
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 136(%rdi),%rbx
or %rsi,%rbx
mov %rbx,136(%rdi)
jmp @_$LB7943
@_$LB7942
mov (%r12),%rsi
mov 32(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7946
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 104(%rdi),%rbx
or %rsi,%rbx
mov %rbx,104(%rdi)
@_$LB7946
@_$LB7943
@_$LB7940
jmp @_$LB7928
@_$LB7927
mov 92(%r13),%ebx
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB7948
mov (%r12),%rsi
mov 32(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7952
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 136(%rdi),%rbx
or %rsi,%rbx
mov %rbx,136(%rdi)
@_$LB7952
jmp @_$LB7949
@_$LB7948
mov 92(%r13),%ebx
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB7954
mov (%r12),%rsi
mov 40(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7957
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 136(%rdi),%rbx
or %rsi,%rbx
mov %rbx,136(%rdi)
jmp @_$LB7958
@_$LB7957
mov (%r12),%rsi
mov 32(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7961
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 104(%rdi),%rbx
or %rsi,%rbx
mov %rbx,104(%rdi)
@_$LB7961
@_$LB7958
jmp @_$LB7955
@_$LB7954
mov 92(%r13),%ebx
mov %ebx,%eax
mov $5,%ecx
cmp %ecx,%eax
jne @_$LB7963
mov (%r12),%rsi
mov 40(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7966
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 136(%rdi),%rbx
or %rsi,%rbx
mov %rbx,136(%rdi)
jmp @_$LB7967
@_$LB7966
mov (%r12),%rsi
mov 32(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7970
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 136(%rdi),%rbx
or %rsi,%rbx
mov %rbx,136(%rdi)
@_$LB7970
@_$LB7967
jmp @_$LB7964
@_$LB7963
mov 92(%r13),%ebx
mov %ebx,%eax
mov $6,%ecx
cmp %ecx,%eax
jne @_$LB7972
mov (%r12),%rsi
mov 40(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7975
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 136(%rdi),%rbx
or %rsi,%rbx
mov %rbx,136(%rdi)
jmp @_$LB7976
@_$LB7975
mov (%r12),%rsi
mov 32(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7979
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 104(%rdi),%rbx
or %rsi,%rbx
mov %rbx,104(%rdi)
@_$LB7979
@_$LB7976
jmp @_$LB7973
@_$LB7972
mov 92(%r13),%ebx
mov %ebx,%eax
mov $7,%ecx
cmp %ecx,%eax
jne @_$LB7981
mov (%r12),%rsi
mov 40(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7984
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 136(%rdi),%rbx
or %rsi,%rbx
mov %rbx,136(%rdi)
jmp @_$LB7985
@_$LB7984
mov (%r12),%rsi
mov 32(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7988
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 136(%rdi),%rbx
or %rsi,%rbx
mov %rbx,136(%rdi)
@_$LB7988
@_$LB7985
jmp @_$LB7982
@_$LB7981
mov 92(%r13),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB7991
mov (%r12),%rsi
mov 32(%r13),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB7994
mov %r9d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r13,%rbx),%rdi
mov %r9d,%ebx
and $63,%ebx
mov %r8,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov 136(%rdi),%rbx
or %rsi,%rbx
mov %rbx,136(%rdi)
@_$LB7994
@_$LB7991
@_$LB7982
@_$LB7973
@_$LB7964
@_$LB7955
@_$LB7949
@_$LB7928
@_$LB7913
add $1,%r9d
mov 24(%r12),%rbx
mov %rbx,%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB7908
@_$LB7910
mov 352(%r13),%rbx
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB7997
mov %r13,%rax
mov @_$DATA+11814944,%rcx
cmp %rcx,%rax
jne @_$LB7902
@_$LB7997
@_$LB7904
@scc_back__init_def_use$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__calculate_df
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov @_$DATA+11814928,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8000
mov %r9,%rax
mov @_$DATA+11814944,%rcx
cmp %rcx,%rax
je @_$LB8000
@_$LB8003
@_$LB7998
movq $0,168(%r9)
movq $0,176(%r9)
movq $0,184(%r9)
movq $0,192(%r9)
mov 352(%r9),%rbx
mov %rbx,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8006
mov %r9,%rax
mov @_$DATA+11814944,%rcx
cmp %rcx,%rax
jne @_$LB7998
@_$LB8006
@_$LB8000
@_$LB8007
mov $0,%r8
mov @_$DATA+11814928,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8012
mov %r9,%rax
mov @_$DATA+11814944,%rcx
cmp %rcx,%rax
je @_$LB8012
@_$LB8015
@_$LB8010
movq $0,200(%r9)
movq $0,208(%r9)
movq $0,216(%r9)
movq $0,224(%r9)
mov 352(%r9),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8018
mov 352(%r9),%rbx
mov %rbx,%rax
mov @_$DATA+11814944,%rcx
cmp %rcx,%rax
je @_$LB8018
@_$LB8030
mov 92(%r9),%ebx
mov %ebx,%eax
mov $8,%ecx
cmp %ecx,%eax
je @_$LB8018
@_$LB8027
mov 92(%r9),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
je @_$LB8018
@_$LB8024
mov 92(%r9),%ebx
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
je @_$LB8018
@_$LB8021
mov 352(%r9),%rbx
mov 168(%rbx),%rsi
mov 200(%r9),%rbx
or %rsi,%rbx
mov %rbx,200(%r9)
mov 352(%r9),%rbx
mov 176(%rbx),%rsi
mov 208(%r9),%rbx
or %rsi,%rbx
mov %rbx,208(%r9)
mov 352(%r9),%rbx
mov 184(%rbx),%rsi
mov 216(%r9),%rbx
or %rsi,%rbx
mov %rbx,216(%r9)
mov 352(%r9),%rbx
mov 192(%rbx),%rsi
mov 224(%r9),%rbx
or %rsi,%rbx
mov %rbx,224(%r9)
@_$LB8018
mov 344(%r9),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8033
mov 344(%r9),%rbx
mov 168(%rbx),%rsi
mov 200(%r9),%rbx
or %rsi,%rbx
mov %rbx,200(%r9)
mov 344(%r9),%rbx
mov 176(%rbx),%rsi
mov 208(%r9),%rbx
or %rsi,%rbx
mov %rbx,208(%r9)
mov 344(%r9),%rbx
mov 184(%rbx),%rsi
mov 216(%r9),%rbx
or %rsi,%rbx
mov %rbx,216(%r9)
mov 344(%r9),%rbx
mov 192(%rbx),%rsi
mov 224(%r9),%rbx
or %rsi,%rbx
mov %rbx,224(%r9)
@_$LB8033
mov 168(%r9),%rbx
mov %rbx,18446744073709551584(%rbp)
mov 176(%r9),%rbx
mov %rbx,18446744073709551592(%rbp)
mov 184(%r9),%rbx
mov %rbx,18446744073709551600(%rbp)
mov 192(%r9),%rbx
mov %rbx,18446744073709551608(%rbp)
mov 104(%r9),%rbx
mov %rbx,%rsi
not %rsi
mov 200(%r9),%rbx
mov %rbx,%rdi
and %rsi,%rdi
mov 136(%r9),%rsi
mov %rsi,%rbx
or %rdi,%rbx
mov %rbx,168(%r9)
mov 112(%r9),%rbx
mov %rbx,%rsi
not %rsi
mov 208(%r9),%rbx
mov %rbx,%rdi
and %rsi,%rdi
mov 144(%r9),%rsi
mov %rsi,%rbx
or %rdi,%rbx
mov %rbx,176(%r9)
mov 120(%r9),%rbx
mov %rbx,%rsi
not %rsi
mov 216(%r9),%rbx
mov %rbx,%rdi
and %rsi,%rdi
mov 152(%r9),%rsi
mov %rsi,%rbx
or %rdi,%rbx
mov %rbx,184(%r9)
mov 128(%r9),%rbx
mov %rbx,%rsi
not %rsi
mov 224(%r9),%rbx
mov %rbx,%rdi
and %rsi,%rdi
mov 160(%r9),%rsi
mov %rsi,%rbx
or %rdi,%rbx
mov %rbx,192(%r9)
mov 18446744073709551584(%rbp),%rdi
mov 168(%r9),%rsi
mov %rdi,%rbx
xor %rsi,%rbx
or %rbx,%r8
mov 18446744073709551592(%rbp),%rdi
mov 176(%r9),%rsi
mov %rdi,%rbx
xor %rsi,%rbx
or %rbx,%r8
mov 18446744073709551600(%rbp),%rdi
mov 184(%r9),%rsi
mov %rdi,%rbx
xor %rsi,%rbx
or %rbx,%r8
mov 18446744073709551608(%rbp),%rdi
mov 192(%r9),%rsi
mov %rdi,%rbx
xor %rsi,%rbx
or %rbx,%r8
mov 352(%r9),%rbx
mov %rbx,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8036
mov %r9,%rax
mov @_$DATA+11814944,%rcx
cmp %rcx,%rax
jne @_$LB8010
@_$LB8036
@_$LB8012
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB8007
@_$LB8009
@scc_back__calculate_df$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_var_map
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
mov 16(%rbp),%r15
mov $1,%r9
mov @_$DATA+11716592,%rax
mov $32,%rcx
mov %rax,%rdx
shr $63,%rdx
neg %rdx
idiv %rcx
mov %rdx,%rax
mov %rax,%rbx
mov @_$DATA+11716592,%rsi
sub %rbx,%rsi
mov %rsi,%rbx
add $32,%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $8,%rcx
mov %rax,%rdx
shr $63,%rdx
neg %rdx
idiv %rcx
mov %rax,%rbx
push %rbx
call @scc__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r14
mov %rsi,%rax
mov $8,%rcx
mov %rax,%rdx
shr $63,%rdx
neg %rdx
idiv %rcx
mov %rax,%rbx
push %rbx
pushq $0
push %r14
call @memset
mov %rax,%rbx
add $24,%rsp
mov @_$DATA+11814960,%r13
mov @_$DATA+11814928,%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8039
mov %r12,%rax
mov @_$DATA+11814944,%rcx
cmp %rcx,%rax
je @_$LB8039
@_$LB8042
@_$LB8037
mov %r15d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r12,%rbx),%r8
mov %r15d,%eax
mov $6,%cl
sar %cl,%eax
mov %eax,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r12,%rbx),%rdi
mov 168(%r8),%rsi
mov 104(%rdi),%rbx
mov %rsi,%rdi
or %rbx,%rdi
mov %r15d,%ebx
and $63,%ebx
mov %r9,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov %rdi,%rbx
and %rsi,%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8045
mov %r13,%rax
mov $32,%rcx
mov %rax,%rdx
shr $63,%rdx
neg %rdx
idiv %rcx
mov %rax,%rbx
mov %r13,%rax
mov $32,%rcx
mov %rax,%rdx
shr $63,%rdx
neg %rdx
idiv %rcx
mov %rax,%rsi
mov %rsi,%rbx
shl $2,%rbx
lea (%r14,%rbx),%rdi
mov %r13,%rax
mov $32,%rcx
mov %rax,%rdx
shr $63,%rdx
neg %rdx
idiv %rcx
mov %rdx,%rax
mov %rax,%rbx
mov $1,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov (%rdi),%ebx
or %esi,%ebx
mov %ebx,(%rdi)
@_$LB8045
add $1,%r13
mov 352(%r12),%rbx
mov %rbx,%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8048
mov %r12,%rax
mov @_$DATA+11814944,%rcx
cmp %rcx,%rax
jne @_$LB8037
@_$LB8048
@_$LB8039
mov %r14,%rax
@scc_back__gen_var_map$END
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__if_reg_available
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
push %r14
mov 24(%rbp),%r14
push %r15
mov 16(%rbp),%r15
mov @_$DATA+11716592,%rax
mov $32,%rcx
mov %rax,%rdx
shr $63,%rdx
neg %rdx
idiv %rcx
mov %rax,%rsi
mov %rsi,%rbx
add $1,%rbx
mov %rbx,%r13
mov @_$DATA+11814960,%rax
mov $32,%rcx
mov %rax,%rdx
shr $63,%rdx
neg %rdx
idiv %rcx
mov %rax,%rbx
mov %rbx,%r12
mov @_$DATA+11814976,%rax
mov $32,%rcx
mov %rax,%rdx
shr $63,%rdx
neg %rdx
idiv %rcx
mov %rax,%rsi
mov %rsi,%rbx
add $1,%rbx
mov %rbx,%r9
mov %r12,%rax
mov %r13,%rcx
cmp %rcx,%rax
jge @_$LB8051
mov %r12,%rax
mov %r9,%rcx
cmp %rcx,%rax
jge @_$LB8051
@_$LB8054
@_$LB8049
mov (%r15),%rsi
mov %r12,%rbx
shl $2,%rbx
lea (%rsi,%rbx),%r8
mov %r12,%rsi
shl $2,%rsi
lea (%r14,%rsi),%rbx
mov (%r8),%edi
mov (%rbx),%esi
mov %edi,%ebx
and %esi,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8057
mov $0,%rax
jmp @scc_back__if_reg_available$END
@_$LB8057
add $1,%r12
mov %r12,%rax
mov %r13,%rcx
cmp %rcx,%rax
jge @_$LB8060
mov %r12,%rax
mov %r9,%rcx
cmp %rcx,%rax
jl @_$LB8049
@_$LB8060
@_$LB8051
mov $1,%rax
@scc_back__if_reg_available$END
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__use_reg
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
push %r14
mov 16(%rbp),%r14
mov @_$DATA+11716592,%rax
mov $32,%rcx
mov %rax,%rdx
shr $63,%rdx
neg %rdx
idiv %rcx
mov %rax,%rsi
mov %rsi,%rbx
add $1,%rbx
mov %rbx,%r12
mov @_$DATA+11814960,%rax
mov $32,%rcx
mov %rax,%rdx
shr $63,%rdx
neg %rdx
idiv %rcx
mov %rax,%rbx
mov %rbx,%r9
mov @_$DATA+11814976,%rax
mov $32,%rcx
mov %rax,%rdx
shr $63,%rdx
neg %rdx
idiv %rcx
mov %rax,%rsi
mov %rsi,%rbx
add $1,%rbx
mov %rbx,%r8
mov %r9,%rax
mov %r12,%rcx
cmp %rcx,%rax
jge @_$LB8063
mov %r9,%rax
mov %r8,%rcx
cmp %rcx,%rax
jge @_$LB8063
@_$LB8066
@_$LB8061
mov (%r14),%rsi
mov %r9,%rbx
shl $2,%rbx
lea (%rsi,%rbx),%rdi
mov %r9,%rsi
shl $2,%rsi
lea (%r13,%rsi),%rbx
mov (%rbx),%esi
mov (%rdi),%ebx
or %esi,%ebx
mov %ebx,(%rdi)
add $1,%r9
mov %r9,%rax
mov %r12,%rcx
cmp %rcx,%rax
jge @_$LB8069
mov %r9,%rax
mov %r8,%rcx
cmp %rcx,%rax
jl @_$LB8061
@_$LB8069
@_$LB8063
mov 16(%r14),%rbx
add $1,%rbx
mov %rbx,16(%r14)
@scc_back__use_reg$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__get_reg
push %rbp
mov %rsp,%rbp
sub $128,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
push %r14
mov @_$DATA+11814928,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8072
mov %rsi,%rax
mov @_$DATA+11814944,%rcx
cmp %rcx,%rax
je @_$LB8072
@_$LB8075
@_$LB8070
movq $0,104(%rsi)
movq $0,112(%rsi)
movq $0,120(%rsi)
movq $0,128(%rsi)
movq $0,136(%rsi)
movq $0,144(%rsi)
movq $0,152(%rsi)
movq $0,160(%rsi)
mov 352(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8078
mov %rsi,%rax
mov @_$DATA+11814944,%rcx
cmp %rcx,%rax
jne @_$LB8070
@_$LB8078
@_$LB8072
call @scc_back__init_def_use
call @scc_back__calculate_df
mov $0,%r8d
mov @_$DATA+11814992,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8081
@_$LB8079
mov $0,%edi
mov 8(%r14),%rbx
push %rbx
lea @_$DATA+11798560,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB8084
mov 8(%r14),%rbx
push %rbx
lea @_$DATA+11806736,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r13
mov $1,%edi
@_$LB8084
movslq %r8d,%r8
push %r8
call @scc_back__gen_var_map
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov @_$DATA+11815008,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8087
@_$LB8085
push %r12
push %r9
call @scc_back__if_reg_available
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8090
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8096
mov 24(%r9),%rbx
mov %rbx,%rax
mov $11,%rcx
cmp %rcx,%rax
jae @_$LB8099
mov 24(%r9),%rsi
mov %rsi,%rbx
shl $3,%rbx
mov @_$DATA+11814928,%rsi
add %rbx,%rsi
mov 256(%rsi),%rbx
mov %rbx,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
jne @_$LB8093
@_$LB8099
@_$LB8096
jmp @_$LB8087
@_$LB8093
@_$LB8090
mov 8(%r9),%rbx
mov %rbx,%r9
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB8085
@_$LB8087
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB8102
call @scc_back__new_reg_map
mov %rax,%rbx
mov %rbx,%r9
@_$LB8102
mov @_$DATA+11814928,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8105
mov 24(%r9),%rbx
mov %rbx,%rax
mov $11,%rcx
cmp %rcx,%rax
jb @_$LB8111
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8105
@_$LB8111
@_$LB8108
mov 24(%r9),%rbx
mov %rbx,40(%r13)
mov 40(%r13),%rbx
mov %rbx,%rax
mov $11,%rcx
cmp %rcx,%rax
jge @_$LB8114
mov 40(%r13),%rbx
mov $1,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%rsi
mov @_$DATA+11814928,%rax
mov 232(%rax),%rbx
or %rsi,%rbx
mov @_$DATA+11814928,%rcx
mov %rbx,232(%rcx)
@_$LB8114
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8117
mov 40(%r13),%rsi
mov %rsi,%rbx
shl $3,%rbx
mov @_$DATA+11814928,%rsi
add %rbx,%rsi
mov 32(%r13),%rbx
mov %rbx,256(%rsi)
@_$LB8117
push %r12
push %r9
call @scc_back__use_reg
add $16,%rsp
@_$LB8105
push %r12
call @free
add $8,%rsp
call @scc_back__reg_map_sort
add $1,%r8d
mov 24(%r14),%rbx
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB8079
@_$LB8081
call @scc_back__id_list_release
@scc_back__get_reg$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__load_local_vars
push %rbp
mov %rsp,%rbp
sub $112,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
push %r14
mov @_$DATA+11782160,%r14
mov $0,%rdi
mov $0,%ebx
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8120
@_$LB8118
addq $1,@_$DATA+11782192
mov 88(%r14),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8122
mov $@_$MSG1510,%rbx
push %rbx
mov (%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8122
@_$LB8126
mov $1,%rdi
mov $0,%rsi
jmp @_$LB8123
@_$LB8122
mov 88(%r14),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8128
mov $@_$MSG1511,%rbx
push %rbx
mov (%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8128
@_$LB8132
mov $0,%rdi
jmp @_$LB8129
@_$LB8128
mov 88(%r14),%ebx
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
jl @_$LB8135
mov $@_$MSG1512,%rbx
push %rbx
mov (%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8138
mov $0,%r9
mov $@_$MSG1513,%rbx
push %rbx
mov 8(%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8140
mov 88(%r14),%ebx
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jge @_$LB8144
mov $@_$MSG1514,%rbx
push %rbx
mov 56(%r14),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB8144
mov 16(%r14),%rbx
push %rbx
call @scc_back__const_to_num
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r12
mov $0,%r13
mov 24(%r14),%rbx
mov %rbx,%r8
jmp @_$LB8141
@_$LB8140
mov $@_$MSG1515,%rbx
push %rbx
mov 8(%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8146
mov $1,%r12
mov $1,%r13
mov 16(%r14),%rbx
mov %rbx,%r8
jmp @_$LB8147
@_$LB8146
mov $@_$MSG1516,%rbx
push %rbx
mov 8(%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8149
mov $1,%r12
mov $2,%r13
mov 16(%r14),%rbx
mov %rbx,%r8
jmp @_$LB8150
@_$LB8149
mov $@_$MSG1517,%rbx
push %rbx
mov 8(%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8152
mov $2,%r12
mov $3,%r13
mov 16(%r14),%rbx
mov %rbx,%r8
jmp @_$LB8153
@_$LB8152
mov $@_$MSG1518,%rbx
push %rbx
mov 8(%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8155
mov $2,%r12
mov $4,%r13
mov 16(%r14),%rbx
mov %rbx,%r8
jmp @_$LB8156
@_$LB8155
mov $@_$MSG1519,%rbx
push %rbx
mov 8(%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8158
mov $4,%r12
mov $5,%r13
mov 16(%r14),%rbx
mov %rbx,%r8
jmp @_$LB8159
@_$LB8158
mov $@_$MSG1520,%rbx
push %rbx
mov 8(%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8161
mov $4,%r12
mov $6,%r13
mov 16(%r14),%rbx
mov %rbx,%r8
jmp @_$LB8162
@_$LB8161
mov $@_$MSG1521,%rbx
push %rbx
mov 8(%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8164
mov $8,%r12
mov $7,%r13
mov 16(%r14),%rbx
mov %rbx,%r8
jmp @_$LB8165
@_$LB8164
mov $@_$MSG1522,%rbx
push %rbx
mov 8(%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8167
mov $8,%r12
mov $8,%r13
mov 16(%r14),%rbx
mov %rbx,%r8
jmp @_$LB8168
@_$LB8167
mov $@_$MSG1523,%rbx
push %rbx
mov 8(%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8170
mov $8,%r12
mov $8,%r13
mov $1,%r9
mov 16(%r14),%rbx
mov %rbx,%r8
jmp @_$LB8171
@_$LB8170
mov $@_$MSG1524,%rbx
push %rbx
mov 8(%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8173
mov $8,%r12
mov $10,%r13
mov 16(%r14),%rbx
mov %rbx,%r8
jmp @_$LB8174
@_$LB8173
mov $@_$MSG1525,%rbx
push %rbx
mov 8(%r14),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8176
mov $4,%r12
mov $9,%r13
mov 16(%r14),%rbx
mov %rbx,%r8
jmp @_$LB8177
@_$LB8176
mov $@_$MSG1526,%rbx
push %rbx
mov 56(%r14),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB8177
@_$LB8174
@_$LB8171
@_$LB8168
@_$LB8165
@_$LB8162
@_$LB8159
@_$LB8156
@_$LB8153
@_$LB8150
@_$LB8147
@_$LB8141
push %r8
lea @_$DATA+11790384,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB8179
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8182
pushq $0
pushq $0
pushq $0
push %rsi
push %r12
push %r13
mov @_$DATA+11782192,%rax
push %rax
push %r8
lea @_$DATA+11806736,%rax
push %rax
call @scc_back__id_tab_add
add $72,%rsp
add $1,%rsi
jmp @_$LB8183
@_$LB8182
push %r9
pushq $0
pushq $0
pushq $0
push %r12
push %r13
mov @_$DATA+11782192,%rax
push %rax
push %r8
lea @_$DATA+11798560,%rax
push %rax
call @scc_back__id_tab_add
add $72,%rsp
@_$LB8183
jmp @_$LB8180
@_$LB8179
mov $@_$MSG1527,%rbx
push %rbx
mov 56(%r14),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB8180
@_$LB8138
@_$LB8135
@_$LB8129
@_$LB8123
mov 352(%r14),%rbx
mov %rbx,%r14
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB8118
@_$LB8120
@scc_back__load_local_vars$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__reg_init
push %rbp
mov %rsp,%rbp
sub $208,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
push %r14
push %r15
push %r10
mov @_$DATA+11782160,%r10
mov %r10,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8186
@_$LB8184
mov $1,%r14d
mov 88(%r10),%ebx
mov %r14d,%eax
mov %ebx,%ecx
cmp %ecx,%eax
jge @_$LB8189
@_$LB8187
mov %r14d,%ebx
shl $3,%ebx
lea (%r10,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
lea @_$DATA+11798560,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r15
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8191
mov %r14d,%esi
sub $1,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r10,%rbx),%rsi
mov 8(%r15),%rbx
mov %rbx,32(%rsi)
jmp @_$LB8192
@_$LB8191
mov %r14d,%ebx
shl $3,%ebx
lea (%r10,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
lea @_$DATA+11806736,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r15
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8194
mov %r14d,%esi
sub $1,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r10,%rbx),%rsi
mov 8(%r15),%rbx
mov %rbx,32(%rsi)
jmp @_$LB8195
@_$LB8194
mov %r14d,%ebx
shl $3,%ebx
lea (%r10,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
lea @_$DATA+11790384,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r15
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8197
mov %r14d,%esi
sub $1,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r10,%rbx),%rsi
mov 8(%r15),%rbx
mov %rbx,32(%rsi)
mov %r14d,%esi
sub $1,%esi
lea (%r10,%rsi),%rbx
movb $1,68(%rbx)
jmp @_$LB8198
@_$LB8197
mov %r14d,%ebx
sub $1,%ebx
mov %ebx,%esi
shl $3,%esi
lea (%r10,%rsi),%rbx
movq $0,32(%rbx)
mov %r14d,%eax
mov $2,%ecx
cmp %ecx,%eax
jl @_$LB8201
mov $0,%edi
mov %r14d,%esi
shl $3,%esi
lea (%r10,%rsi),%rbx
mov %r14d,%ebx
shl $3,%ebx
lea (%r10,%rbx),%rsi
mov (%rsi),%rbx
lea (%rbx,%rdi),%rsi
mov (%rsi),%bl
mov %bl,%r8b
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB8204
@_$LB8202
mov %r8b,%al
mov $46,%cl
cmp %cl,%al
jne @_$LB8207
jmp @_$LB8204
@_$LB8207
add $1,%edi
mov %r14d,%esi
shl $3,%esi
lea (%r10,%rsi),%rbx
mov %r14d,%ebx
shl $3,%ebx
lea (%r10,%rbx),%rsi
mov (%rsi),%rbx
lea (%rbx,%rdi),%rsi
mov (%rsi),%bl
mov %bl,%r8b
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB8202
@_$LB8204
mov %r14d,%esi
shl $3,%esi
lea (%r10,%rsi),%rbx
mov %r14d,%esi
shl $3,%esi
lea (%r10,%rsi),%rbx
mov (%rbx),%rsi
mov (%rsi),%bl
mov %bl,%sil
mov %sil,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB8216
mov %sil,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB8216
@_$LB8219
mov %r8b,%al
mov $46,%cl
cmp %cl,%al
jne @_$LB8213
@_$LB8216
mov %sil,%al
mov $39,%cl
cmp %cl,%al
jne @_$LB8209
@_$LB8213
mov %r14d,%ebx
sub $2,%ebx
mov %ebx,%esi
shl $1,%esi
lea (%r10,%rsi),%rbx
movw $1,64(%rbx)
mov %r14d,%esi
sub $2,%esi
mov %esi,%ebx
shl $3,%ebx
lea (%r10,%rbx),%rdi
mov %r14d,%ebx
shl $3,%ebx
lea (%r10,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_back__const_to_num
mov %rax,%rbx
add $8,%rsp
mov %rbx,72(%rdi)
jmp @_$LB8210
@_$LB8209
mov %sil,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB8222
mov %sil,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB8222
@_$LB8225
mov %r14d,%ebx
sub $2,%ebx
mov %ebx,%esi
shl $1,%esi
lea (%r10,%rsi),%rbx
movw $1,64(%rbx)
@_$LB8222
@_$LB8210
@_$LB8201
@_$LB8198
@_$LB8195
@_$LB8192
add $1,%r14d
mov 88(%r10),%ebx
mov %r14d,%eax
mov %ebx,%ecx
cmp %ecx,%eax
jl @_$LB8187
@_$LB8189
mov %r14d,%eax
mov $4,%ecx
cmp %ecx,%eax
jge @_$LB8228
@_$LB8226
mov %r14d,%ebx
sub $1,%ebx
mov %ebx,%esi
shl $3,%esi
lea (%r10,%rsi),%rbx
movq $0,32(%rbx)
add $1,%r14d
mov %r14d,%eax
mov $4,%ecx
cmp %ecx,%eax
jl @_$LB8226
@_$LB8228
mov 352(%r10),%rbx
mov %rbx,%r10
mov %r10,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB8184
@_$LB8186
mov @_$DATA+11782160,%r10
mov %r10,%rax
mov %rax,@_$DATA+11814928
mov %r10,%rax
mov %rax,@_$DATA+11814944
mov $0,%r14d
mov $0,%rbx
mov $0,%rax
mov %rax,@_$DATA+11814960
mov $0,%rax
mov %rax,@_$DATA+11814976
mov $0,%r8
mov $0,%rdi
mov %r10,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8231
@_$LB8229
mov 88(%r10),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8234
mov $@_$MSG1528,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8236
mov %r10,%rax
mov %rax,@_$DATA+11814928
mov %r10,%rax
mov %rax,@_$DATA+11814944
mov %r8,%rax
mov %rax,@_$DATA+11814960
mov %r8,%rax
mov %rax,@_$DATA+11814976
mov $0,%rdi
mov @_$DATA+11814944,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8240
mov @_$DATA+11814944,%rax
mov 88(%rax),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8246
mov $@_$MSG1529,%rbx
push %rbx
mov @_$DATA+11814944,%rax
mov (%rax),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8240
@_$LB8246
@_$LB8243
@_$LB8238
mov @_$DATA+11814944,%rax
mov 352(%rax),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11814944
addq $1,@_$DATA+11814976
mov @_$DATA+11814944,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8249
mov @_$DATA+11814944,%rax
mov 88(%rax),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8238
mov $@_$MSG1530,%rbx
push %rbx
mov @_$DATA+11814944,%rax
mov (%rax),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8238
@_$LB8252
@_$LB8249
@_$LB8240
jmp @_$LB8237
@_$LB8236
mov $@_$MSG1531,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8254
mov $1,%rbx
jmp @_$LB8255
@_$LB8254
mov $@_$MSG1532,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8257
mov $0,%rbx
jmp @_$LB8258
@_$LB8257
mov $@_$MSG1533,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8260
mov @_$DATA+11814928,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8264
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8267
mov $0,%r14d
call @scc_back__get_reg
@_$LB8267
call @scc_back__reg_map_release
@_$LB8264
jmp @_$LB8261
@_$LB8260
mov $@_$MSG1534,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8270
mov $@_$MSG1535,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8272
mov 88(%r10),%ebx
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jge @_$LB8276
mov $@_$MSG1536,%rbx
push %rbx
mov 56(%r10),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB8276
mov $0,%r13d
mov 24(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8273
@_$LB8272
mov $@_$MSG1537,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8278
mov $1,%r13d
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8279
@_$LB8278
mov $@_$MSG1538,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8281
mov $2,%r13d
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8282
@_$LB8281
mov $@_$MSG1539,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8284
mov $3,%r13d
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8285
@_$LB8284
mov $@_$MSG1540,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8287
mov $4,%r13d
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8288
@_$LB8287
mov $@_$MSG1541,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8290
mov $5,%r13d
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8291
@_$LB8290
mov $@_$MSG1542,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8293
mov $6,%r13d
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8294
@_$LB8293
mov $@_$MSG1543,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8296
mov $7,%r13d
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8297
@_$LB8296
mov $@_$MSG1544,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8299
mov $8,%r13d
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8300
@_$LB8299
mov $@_$MSG1545,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8302
mov $8,%r13d
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8303
@_$LB8302
mov $@_$MSG1546,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8305
mov $10,%r13d
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8306
@_$LB8305
mov $@_$MSG1547,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8308
mov $9,%r13d
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8309
@_$LB8308
mov $@_$MSG1548,%rbx
push %rbx
mov 56(%r10),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB8309
@_$LB8306
@_$LB8303
@_$LB8300
@_$LB8297
@_$LB8294
@_$LB8291
@_$LB8288
@_$LB8285
@_$LB8282
@_$LB8279
@_$LB8273
mov %r13d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8312
mov @_$DATA+11814928,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8312
@_$LB8315
push %r12
call @scc_back__id_list_add
add $8,%rsp
add $1,%r14d
mov %r14d,%eax
mov $256,%ecx
cmp %ecx,%eax
jne @_$LB8318
mov $0,%r14d
call @scc_back__get_reg
@_$LB8318
@_$LB8312
@_$LB8270
@_$LB8261
@_$LB8258
@_$LB8255
@_$LB8237
@_$LB8234
add $1,%r8
mov 352(%r10),%rbx
mov %rbx,%r10
mov %r10,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB8229
@_$LB8231
mov $0,%rdi
mov $0,%rbx
mov @_$DATA+11782160,%r10
mov $0,%rax
mov %rax,@_$DATA+11814928
mov $0,%r14d
mov %r10,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8321
@_$LB8319
mov 88(%r10),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8324
mov $@_$MSG1549,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8326
mov %r10,%rax
mov %rax,@_$DATA+11814928
mov $0,%r14d
mov $0,%rdi
mov $0,%rax
mov @_$DATA+11814928,%rcx
mov %rax,96(%rcx)
jmp @_$LB8327
@_$LB8326
mov $@_$MSG1550,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8329
mov $1,%rbx
jmp @_$LB8330
@_$LB8329
mov $@_$MSG1551,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8332
mov $0,%rbx
jmp @_$LB8333
@_$LB8332
mov $@_$MSG1552,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8335
mov @_$DATA+11814928,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8339
mov @_$DATA+11814928,%rax
mov 96(%rax),%rbx
sub $32,%rbx
mov @_$DATA+11814928,%rcx
mov %rbx,96(%rcx)
mov %r14d,%eax
mov $11,%ecx
cmp %ecx,%eax
jl @_$LB8342
mov %r14d,%ebx
sub $10,%ebx
mov %ebx,%esi
shl $3,%esi
mov @_$DATA+11814928,%rax
mov 96(%rax),%rbx
movslq %esi,%rsi
sub %rsi,%rbx
mov @_$DATA+11814928,%rcx
mov %rbx,96(%rcx)
@_$LB8342
mov @_$DATA+11814928,%rax
mov 96(%rax),%rbx
and $18446744073709551600,%rbx
mov @_$DATA+11814928,%rcx
mov %rbx,96(%rcx)
@_$LB8339
jmp @_$LB8336
@_$LB8335
mov $@_$MSG1553,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8344
mov 88(%r10),%ebx
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
jge @_$LB8348
mov $@_$MSG1554,%rbx
push %rbx
mov 56(%r10),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB8348
mov 16(%r10),%rbx
push %rbx
lea @_$DATA+11798560,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r15
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8350
mov 40(%r15),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jl @_$LB8354
movq $18446744073709551615,40(%r15)
sub %r9,%rdi
mov %rdi,%rbx
and $18446744073709551600,%rbx
mov %rbx,%rdi
mov %rdi,32(%r15)
mov @_$DATA+11814928,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8357
mov @_$DATA+11814928,%rcx
mov %rdi,96(%rcx)
@_$LB8357
@_$LB8354
jmp @_$LB8351
@_$LB8350
mov 16(%r10),%rbx
push %rbx
lea @_$DATA+11806736,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r15
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8360
mov 40(%r15),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jl @_$LB8363
movq $18446744073709551615,40(%r15)
@_$LB8363
@_$LB8360
@_$LB8351
jmp @_$LB8345
@_$LB8344
mov $@_$MSG1555,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8365
mov 88(%r10),%ebx
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jge @_$LB8369
mov $@_$MSG1556,%rbx
push %rbx
mov 56(%r10),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB8369
mov 16(%r10),%rbx
push %rbx
lea @_$DATA+11798560,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r15
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8371
mov 40(%r15),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jl @_$LB8375
movq $18446744073709551615,40(%r15)
sub %r9,%rdi
mov %rdi,%rbx
and $18446744073709551600,%rbx
mov %rbx,%rdi
mov %rdi,32(%r15)
mov @_$DATA+11814928,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8378
mov @_$DATA+11814928,%rcx
mov %rdi,96(%rcx)
@_$LB8378
@_$LB8375
jmp @_$LB8372
@_$LB8371
mov 16(%r10),%rbx
push %rbx
lea @_$DATA+11806736,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r15
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8381
mov 40(%r15),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jl @_$LB8384
movq $18446744073709551615,40(%r15)
@_$LB8384
@_$LB8381
@_$LB8372
jmp @_$LB8366
@_$LB8365
mov $@_$MSG1557,%rbx
push %rbx
mov (%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8387
mov 88(%r10),%ebx
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
jge @_$LB8390
mov $@_$MSG1558,%rbx
push %rbx
mov 56(%r10),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB8390
mov $@_$MSG1559,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8392
mov 88(%r10),%ebx
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jge @_$LB8396
mov $@_$MSG1560,%rbx
push %rbx
mov 56(%r10),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB8396
mov 16(%r10),%rbx
push %rbx
call @scc_back__const_to_num
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
mov 24(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8393
@_$LB8392
mov $@_$MSG1561,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8398
mov $1,%r9
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8399
@_$LB8398
mov $@_$MSG1562,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8401
mov $1,%r9
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8402
@_$LB8401
mov $@_$MSG1563,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8404
mov $2,%r9
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8405
@_$LB8404
mov $@_$MSG1564,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8407
mov $2,%r9
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8408
@_$LB8407
mov $@_$MSG1565,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8410
mov $4,%r9
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8411
@_$LB8410
mov $@_$MSG1566,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8413
mov $4,%r9
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8414
@_$LB8413
mov $@_$MSG1567,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8416
mov $8,%r9
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8417
@_$LB8416
mov $@_$MSG1568,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8419
mov $8,%r9
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8420
@_$LB8419
mov $@_$MSG1569,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8422
mov $8,%r9
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8423
@_$LB8422
mov $@_$MSG1570,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8425
mov $8,%r9
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8426
@_$LB8425
mov $@_$MSG1571,%rbx
push %rbx
mov 8(%r10),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8428
mov $4,%r9
mov 16(%r10),%rbx
mov %rbx,%r12
jmp @_$LB8429
@_$LB8428
mov $@_$MSG1572,%rbx
push %rbx
mov 56(%r10),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB8429
@_$LB8426
@_$LB8423
@_$LB8420
@_$LB8417
@_$LB8414
@_$LB8411
@_$LB8408
@_$LB8405
@_$LB8402
@_$LB8399
@_$LB8393
push %r12
lea @_$DATA+11798560,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r15
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8432
mov 40(%r15),%rbx
mov %rbx,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
jne @_$LB8434
sub %r9,%rdi
mov %rdi,%rbx
and $18446744073709551600,%rbx
mov %rbx,%rdi
mov %rdi,32(%r15)
mov @_$DATA+11814928,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8438
mov @_$DATA+11814928,%rcx
mov %rdi,96(%rcx)
@_$LB8438
jmp @_$LB8435
@_$LB8434
mov 40(%r15),%rbx
mov %rbx,%rax
mov %r14d,%ecx
movslq %ecx,%rcx
cmp %rcx,%rax
jle @_$LB8441
mov 40(%r15),%rbx
mov %rbx,%r14
@_$LB8441
@_$LB8435
@_$LB8432
@_$LB8387
@_$LB8366
@_$LB8345
@_$LB8336
@_$LB8333
@_$LB8330
@_$LB8327
@_$LB8324
add $1,%r8
mov 352(%r10),%rbx
mov %rbx,%r10
mov %r10,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB8319
@_$LB8321
@scc_back__reg_init$END
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__id_find
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %rdi
lea @_$DATA+11798560,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8444
movq $0,48(%rsi)
mov %rsi,%rax
jmp @scc_back__id_find$END
@_$LB8444
push %rdi
lea @_$DATA+11806736,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8447
movq $1,48(%rsi)
mov %rsi,%rax
jmp @scc_back__id_find$END
@_$LB8447
push %rdi
lea @_$DATA+11790384,%rax
push %rax
call @scc_back__id_tab_find
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8450
movq $2,48(%rsi)
mov %rsi,%rax
jmp @scc_back__id_find$END
@_$LB8450
mov $0,%rax
@scc_back__id_find$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__get_operand
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
push %r8
mov 32(%rbp),%r8
push %r9
mov 16(%rbp),%r9
pushq $48
pushq $0
push %r8
call @memset
mov %rax,%rbx
add $24,%rsp
mov 88(%r9),%ebx
mov %esi,%eax
mov %ebx,%ecx
cmp %ecx,%eax
jl @_$LB8453
mov $@_$MSG1573,%rbx
push %rbx
mov 56(%r9),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB8453
mov %esi,%ebx
shl $3,%ebx
lea (%r9,%rbx),%rsi
mov (%rsi),%rbx
mov %rbx,%rsi
mov %rsi,40(%r8)
push %rsi
call @scc_back__id_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,8(%r8)
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8455
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8458
movq $0,(%r8)
jmp @_$LB8459
@_$LB8458
movq $1,(%r8)
@_$LB8459
jmp @_$LB8456
@_$LB8455
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB8468
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jle @_$LB8465
@_$LB8468
mov (%rsi),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
jne @_$LB8461
@_$LB8465
movq $2,(%r8)
lea 18446744073709551584(%rbp),%rbx
push %rbx
push %rsi
call @scc_back__fconst_to_num
mov %rax,%rbx
add $16,%rsp
mov %rbx,24(%r8)
mov 18446744073709551584(%rbp),%eax
movslq %eax,%rax
mov %rax,32(%r8)
push %rsi
call @scc_back__const_to_num
mov %rax,%rbx
add $8,%rsp
mov %rbx,16(%r8)
jmp @_$LB8462
@_$LB8461
movq $3,(%r8)
@_$LB8462
@_$LB8456
@scc_back__get_operand$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__op_is_reg
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov 8(%rdi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB8471
mov $0,%rax
jmp @scc_back__op_is_reg$END
@_$LB8471
mov 8(%rdi),%rsi
mov 40(%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jl @_$LB8474
mov 8(%rdi),%rsi
mov 40(%rsi),%rbx
mov %rbx,%rax
mov $11,%rcx
cmp %rcx,%rax
jge @_$LB8474
@_$LB8477
mov $1,%rax
jmp @scc_back__op_is_reg$END
@_$LB8474
mov $0,%rax
@scc_back__op_is_reg$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__op_is_const
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov (%rsi),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
je @_$LB8483
mov (%rsi),%rbx
mov %rbx,%rax
mov $3,%rcx
cmp %rcx,%rax
jne @_$LB8480
@_$LB8483
mov $1,%rax
jmp @scc_back__op_is_const$END
@_$LB8480
mov $0,%rax
@scc_back__op_is_const$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__op_is_addr
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov (%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB8486
mov $1,%rax
jmp @scc_back__op_is_addr$END
@_$LB8486
mov $0,%rax
@scc_back__op_is_addr$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__op_out_const
push %rbp
mov %rsp,%rbp
sub $208,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov (%r9),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB8488
mov %r12d,%eax
mov $9,%ecx
cmp %ecx,%eax
je @_$LB8495
mov %r12d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8491
@_$LB8495
mov 32(%r9),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8497
mov %r12d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8500
mov 24(%r9),%rbx
push %rbx
movslq %r12d,%r12
push %r12
call @scc_back__out_num
add $16,%rsp
jmp @_$LB8501
@_$LB8500
pushq $8
mov %r9,%rbx
add $24,%rbx
push %rbx
lea 18446744073709551584(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov 18446744073709551584(%rbp),%rax
movq %rax,%xmm0
cvtsd2ss %xmm0,%xmm0
movd %xmm0,%eax
mov %eax,18446744073709551568(%rbp)
mov $0,%rax
mov %rax,18446744073709551552(%rbp)
pushq $4
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551552(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov 18446744073709551552(%rbp),%rax
push %rax
movslq %r12d,%r12
push %r12
call @scc_back__out_num
add $16,%rsp
@_$LB8501
jmp @_$LB8498
@_$LB8497
mov %r12d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8503
mov 16(%r9),%rsi
mov %rsi,%rbx
cvtsi2sd %rbx,%xmm0
movq %xmm0,%rbx
mov %rbx,%rax
mov %rax,18446744073709551584(%rbp)
pushq $8
lea 18446744073709551584(%rbp),%rbx
push %rbx
lea 18446744073709551552(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov 18446744073709551552(%rbp),%rax
push %rax
movslq %r12d,%r12
push %r12
call @scc_back__out_num
add $16,%rsp
jmp @_$LB8504
@_$LB8503
mov 16(%r9),%rsi
mov %rsi,%rbx
cvtsi2ss %rbx,%xmm0
movd %xmm0,%ebx
mov %ebx,%eax
mov %eax,18446744073709551568(%rbp)
mov $0,%rax
mov %rax,18446744073709551552(%rbp)
pushq $4
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551552(%rbp),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov 18446744073709551552(%rbp),%rax
push %rax
movslq %r12d,%r12
push %r12
call @scc_back__out_num
add $16,%rsp
@_$LB8504
@_$LB8498
jmp @_$LB8492
@_$LB8491
mov 32(%r9),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8506
mov 24(%r9),%rsi
mov %rsi,%rbx
mov %rbx,%rax
mov %rax,18446744073709551552(%rbp)
mov 18446744073709551552(%rbp),%rax
push %rax
movslq %r12d,%r12
push %r12
call @scc_back__out_num
add $16,%rsp
jmp @_$LB8507
@_$LB8506
mov 16(%r9),%rbx
push %rbx
movslq %r12d,%r12
push %r12
call @scc_back__out_num
add $16,%rsp
@_$LB8507
@_$LB8492
jmp @_$LB8489
@_$LB8488
mov (%r9),%rbx
mov %rbx,%rax
mov $3,%rcx
cmp %rcx,%rax
jne @_$LB8510
mov $@_$MSG1574,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 40(%r9),%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8510
@_$LB8489
@scc_back__op_out_const$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__op_out_reg
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
mov 8(%rsi),%rbx
mov 40(%rbx),%rsi
mov %rsi,%rbx
add $1,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
call @scc_back__out_reg
add $16,%rsp
@scc_back__op_out_reg$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__op_out_mem
push %rbp
mov %rsp,%rbp
sub $144,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov 8(%rdi),%rsi
mov 48(%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB8512
mov 8(%rdi),%rsi
mov 40(%rsi),%rbx
mov %rbx,%rax
mov $11,%rcx
cmp %rcx,%rax
jl @_$LB8515
mov 8(%rdi),%rbx
mov 40(%rbx),%rsi
mov %rsi,%rbx
sub $11,%rbx
mov %rbx,%rdi
mov %rdi,%rsi
shl $3,%rsi
mov %rsi,%rax
mov @_$DATA+11815056,%rcx
add %rcx,%rax
mov %rax,%rbx
push %rbx
pushq $7
call @scc_back__out_num
add $16,%rsp
jmp @_$LB8516
@_$LB8515
mov 8(%rdi),%rsi
mov 32(%rsi),%rbx
push %rbx
pushq $7
call @scc_back__out_num
add $16,%rsp
@_$LB8516
mov $@_$MSG1575,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8513
@_$LB8512
mov 8(%rdi),%rsi
mov 48(%rsi),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB8518
mov $@_$MSG1576,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%rdi),%rsi
mov 32(%rsi),%rbx
push %rbx
pushq $7
call @scc_back__out_num
add $16,%rsp
jmp @_$LB8519
@_$LB8518
mov 8(%rdi),%rsi
mov 48(%rsi),%rbx
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB8522
mov 8(%rdi),%rsi
mov 32(%rsi),%rbx
mov %rbx,%rsi
shl $3,%rsi
mov %rsi,%rbx
add $16,%rbx
push %rbx
pushq $7
call @scc_back__out_num
add $16,%rsp
mov $@_$MSG1577,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8522
@_$LB8519
@_$LB8513
@scc_back__op_out_mem$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__op_out_mem_off
push %rbp
mov %rsp,%rbp
sub $144,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
mov 24(%rbp),%r8
mov 8(%rdi),%rsi
mov 48(%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB8524
mov 8(%rdi),%rsi
mov 40(%rsi),%rbx
mov %rbx,%rax
mov $11,%rcx
cmp %rcx,%rax
jl @_$LB8527
mov 8(%rdi),%rbx
mov 40(%rbx),%rsi
mov %rsi,%rbx
sub $11,%rbx
mov %rbx,%rsi
mov %rsi,%rbx
shl $3,%rbx
mov %rbx,%rax
mov @_$DATA+11815056,%rcx
add %rcx,%rax
mov %rax,%rdi
mov 16(%r8),%rsi
lea (%rdi,%rsi),%rbx
push %rbx
pushq $7
call @scc_back__out_num
add $16,%rsp
jmp @_$LB8528
@_$LB8527
mov 8(%rdi),%rbx
mov 32(%rbx),%rdi
mov 16(%r8),%rsi
lea (%rdi,%rsi),%rbx
push %rbx
pushq $7
call @scc_back__out_num
add $16,%rsp
@_$LB8528
mov $@_$MSG1578,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8525
@_$LB8524
mov 8(%rdi),%rsi
mov 48(%rsi),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB8530
mov $@_$MSG1579,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%rdi),%rbx
mov 32(%rbx),%rdi
mov 16(%r8),%rsi
lea (%rdi,%rsi),%rbx
push %rbx
pushq $7
call @scc_back__out_num
add $16,%rsp
jmp @_$LB8531
@_$LB8530
mov 8(%rdi),%rsi
mov 48(%rsi),%rbx
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB8534
mov 8(%rdi),%rbx
mov 32(%rbx),%rsi
mov %rsi,%rbx
shl $3,%rbx
mov %rbx,%rdi
add $16,%rdi
mov 16(%r8),%rsi
lea (%rdi,%rsi),%rbx
push %rbx
pushq $7
call @scc_back__out_num
add $16,%rsp
mov $@_$MSG1580,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8534
@_$LB8531
@_$LB8525
@scc_back__op_out_mem_off$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__if_class_signed
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov %esi,%eax
mov $9,%ecx
cmp %ecx,%eax
je @_$LB8540
mov %esi,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8537
@_$LB8540
mov $0,%rax
jmp @scc_back__if_class_signed$END
@_$LB8537
mov %esi,%ebx
and $1,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8543
mov $1,%rax
jmp @scc_back__if_class_signed$END
@_$LB8543
mov $0,%rax
@scc_back__if_class_signed$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__opcmp
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov $0,%edi
mov $0,%esi
push %r9
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8545
mov $1,%edi
jmp @_$LB8546
@_$LB8545
push %r9
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8548
mov $2,%edi
jmp @_$LB8549
@_$LB8548
push %r9
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8552
mov $3,%edi
@_$LB8552
@_$LB8549
@_$LB8546
push %r8
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8554
mov $1,%esi
jmp @_$LB8555
@_$LB8554
push %r8
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8557
mov $2,%esi
jmp @_$LB8558
@_$LB8557
push %r8
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8561
mov $3,%esi
@_$LB8561
@_$LB8558
@_$LB8555
mov %edi,%eax
mov %esi,%ecx
cmp %ecx,%eax
je @_$LB8564
mov $1,%rax
jmp @scc_back__opcmp$END
@_$LB8564
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8566
mov 8(%r9),%rbx
mov 8(%r8),%rdi
mov 48(%rbx),%rsi
mov 48(%rdi),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
je @_$LB8570
mov $1,%rax
jmp @scc_back__opcmp$END
@_$LB8570
mov 8(%r9),%rbx
mov 8(%r8),%rdi
mov 40(%rbx),%rsi
mov 40(%rdi),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
je @_$LB8573
mov $1,%rax
jmp @scc_back__opcmp$END
@_$LB8573
mov 8(%r9),%rbx
mov 8(%r8),%rdi
mov 32(%rbx),%rsi
mov 32(%rdi),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB8576
mov $0,%rax
jmp @scc_back__opcmp$END
@_$LB8576
jmp @_$LB8567
@_$LB8566
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8579
mov 8(%r9),%rbx
mov 8(%r8),%rdi
mov 40(%rbx),%rsi
mov 40(%rdi),%rbx
mov %rsi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB8582
mov $0,%rax
jmp @scc_back__opcmp$END
@_$LB8582
@_$LB8579
@_$LB8567
mov $1,%rax
@scc_back__opcmp$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__reg_extend
push %rbp
mov %rsp,%rbp
sub $816,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 32(%rbp),%r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov %r12d,%eax
mov $9,%ecx
cmp %ecx,%eax
je @_$LB8588
mov %r12d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8584
@_$LB8588
mov %r9d,%eax
mov $9,%ecx
cmp %ecx,%eax
je @_$LB8590
mov %r9d,%eax
mov $10,%ecx
cmp %ecx,%eax
je @_$LB8590
@_$LB8594
mov %r9d,%eax
mov $7,%ecx
cmp %ecx,%eax
jge @_$LB8597
push %r8
movslq %r9d,%r9
push %r9
pushq $7
call @scc_back__reg_extend
add $24,%rsp
mov $7,%r9d
@_$LB8597
mov %r12d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8599
mov $@_$MSG1581,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8600
@_$LB8599
mov $@_$MSG1582,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8600
push %r8
movslq %r9d,%r9
push %r9
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1583,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r12d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8602
mov $@_$MSG1584,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8603
@_$LB8602
mov $@_$MSG1585,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8603
push %r8
movslq %r12d,%r12
push %r12
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1586,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8591
@_$LB8590
mov %r12d,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB8605
mov %r9d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8605
@_$LB8609
mov $@_$MSG1587,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $10
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1588,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $9
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1589,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8606
@_$LB8605
mov %r12d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8612
mov %r9d,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB8612
@_$LB8615
mov $@_$MSG1590,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $9
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1591,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $10
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1592,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8612
@_$LB8606
@_$LB8591
jmp @scc_back__reg_extend$END
jmp @_$LB8585
@_$LB8584
mov %r9d,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB8617
mov $@_$MSG1593,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $9
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1594,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1595,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__reg_extend$END
jmp @_$LB8618
@_$LB8617
mov %r9d,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8621
mov $@_$MSG1596,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $10
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1597,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1598,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__reg_extend$END
@_$LB8621
@_$LB8618
@_$LB8585
mov %r12d,%esi
sub $1,%esi
mov %esi,%eax
mov $1,%cl
sar %cl,%eax
mov %eax,%ebx
mov %ebx,%edi
mov %r9d,%esi
sub $1,%esi
mov %esi,%eax
mov $1,%cl
sar %cl,%eax
mov %eax,%ebx
mov %ebx,%esi
mov %edi,%eax
mov %esi,%ecx
cmp %ecx,%eax
jg @_$LB8624
jmp @scc_back__reg_extend$END
@_$LB8624
mov $@_$MSG1599,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %edi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB8627
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB8627
@_$LB8633
mov %r9d,%ebx
and $1,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8627
@_$LB8630
mov $@_$MSG1600,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $5
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1601,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $5
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1602,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__reg_extend$END
@_$LB8627
mov %r9d,%ebx
and $1,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8635
mov $@_$MSG1603,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8636
@_$LB8635
mov $@_$MSG1604,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8636
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8638
mov $@_$MSG1605,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8639
@_$LB8638
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8641
mov $@_$MSG1606,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8642
@_$LB8641
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB8644
mov $@_$MSG1607,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8645
@_$LB8644
mov %esi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB8648
mov $@_$MSG1608,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8648
@_$LB8645
@_$LB8642
@_$LB8639
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8650
mov $@_$MSG1609,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8651
@_$LB8650
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8653
mov $@_$MSG1610,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8654
@_$LB8653
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB8656
mov $@_$MSG1611,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8657
@_$LB8656
mov %edi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB8660
mov $@_$MSG1612,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8660
@_$LB8657
@_$LB8654
@_$LB8651
push %r8
movslq %r9d,%r9
push %r9
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1613,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
movslq %r12d,%r12
push %r12
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1614,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@scc_back__reg_extend$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_ins_acd1
push %rbp
mov %rsp,%rbp
sub $320,%rsp
push %rbx
mov 32(%rbp),%rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 56(%rbp),%rdi
push %r8
mov 48(%rbp),%r8
push %r9
mov 40(%rbp),%r9
push %r12
mov 16(%rbp),%r12
push %r12
call @scc_back__outs
add $8,%rsp
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8663
push %rsi
call @scc_back__outs
add $8,%rsp
@_$LB8663
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8666
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8666
mov $@_$MSG1615,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8669
push %r9
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8671
push %r9
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1616,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_acd
add $16,%rsp
jmp @_$LB8672
@_$LB8671
push %r9
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8674
mov $@_$MSG1617,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
movslq %edi,%rdi
push %rdi
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1618,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
movslq %edi,%rdi
push %rdi
call @scc_back__out_acd
add $16,%rsp
jmp @_$LB8675
@_$LB8674
push %r9
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1619,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8677
movslq %r8d,%r8
push %r8
pushq $8
call @scc_back__out_acd
add $16,%rsp
jmp @_$LB8678
@_$LB8677
movslq %r8d,%r8
push %r8
movslq %edi,%rdi
push %rdi
call @scc_back__out_acd
add $16,%rsp
@_$LB8678
@_$LB8675
@_$LB8672
@_$LB8669
mov $@_$MSG1620,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8680
pushq $8
movslq %edi,%rdi
push %rdi
movslq %r8d,%r8
push %r8
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB8681
@_$LB8680
push %r9
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8684
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
movslq %r8d,%r8
push %r8
call @scc_back__acd_extend
add $24,%rsp
@_$LB8684
@_$LB8681
@scc_back__out_ins_acd1$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_ins_acd2
push %rbp
mov %rsp,%rbp
sub $208,%rsp
push %rbx
mov 32(%rbp),%rbx
push %rsi
mov 56(%rbp),%rsi
push %rdi
mov 48(%rbp),%rdi
push %r8
mov 40(%rbp),%r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
push %r12
call @scc_back__outs
add $8,%rsp
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8687
push %r9
call @scc_back__outs
add $8,%rsp
@_$LB8687
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8690
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8690
mov $@_$MSG1621,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
movslq %esi,%rsi
push %rsi
call @scc_back__out_acd
add $16,%rsp
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8693
mov $@_$MSG1622,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %rdi
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8695
push %rdi
movslq %esi,%rsi
push %rsi
call @scc_back__op_out_reg
add $16,%rsp
jmp @_$LB8696
@_$LB8695
push %rdi
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8698
mov $@_$MSG1623,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %rdi
movslq %esi,%rsi
push %rsi
call @scc_back__op_out_const
add $16,%rsp
jmp @_$LB8699
@_$LB8698
push %rdi
call @scc_back__op_out_mem
add $8,%rsp
@_$LB8699
@_$LB8696
@_$LB8693
mov $@_$MSG1624,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@scc_back__out_ins_acd2$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_ins_acd3
push %rbp
mov %rsp,%rbp
sub $160,%rsp
push %rbx
mov 32(%rbp),%rbx
push %rsi
mov 56(%rbp),%rsi
push %rdi
mov 48(%rbp),%rdi
push %r8
mov 40(%rbp),%r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
push %r12
call @scc_back__outs
add $8,%rsp
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8702
push %r9
call @scc_back__outs
add $8,%rsp
@_$LB8702
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8705
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8705
mov $@_$MSG1625,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
movslq %esi,%rsi
push %rsi
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1626,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %edi,%rdi
push %rdi
movslq %esi,%rsi
push %rsi
call @scc_back__out_acd
add $16,%rsp
mov $@_$MSG1627,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@scc_back__out_ins_acd3$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__out_ins
push %rbp
mov %rsp,%rbp
sub $304,%rsp
push %rbx
push %rsi
push %rdi
mov 64(%rbp),%rdi
push %r8
mov 56(%rbp),%r8
push %r9
mov 48(%rbp),%r9
push %r12
mov 40(%rbp),%r12
push %r13
mov 32(%rbp),%r13
push %r14
mov 24(%rbp),%r14
push %r15
mov 16(%rbp),%r15
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8708
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8710
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
mov %ebx,%edi
jmp @_$LB8711
@_$LB8710
mov 8(%r12),%rsi
mov 16(%rsi),%ebx
mov %ebx,%edi
@_$LB8711
@_$LB8708
push %r12
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8714
mov 8(%r12),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
je @_$LB8714
@_$LB8720
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
je @_$LB8714
@_$LB8717
push %r12
mov 8(%r12),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
call @scc_back__reg_extend
add $24,%rsp
@_$LB8714
push %r15
call @scc_back__outs
add $8,%rsp
mov %r14,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8723
push %r14
call @scc_back__outs
add $8,%rsp
@_$LB8723
mov %r13,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8726
push %r13
call @scc_back__outs
add $8,%rsp
@_$LB8726
mov $@_$MSG1628,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8728
push %r12
movslq %edi,%rdi
push %rdi
call @scc_back__op_out_reg
add $16,%rsp
jmp @_$LB8729
@_$LB8728
push %r12
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8731
mov $@_$MSG1629,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
movslq %edi,%rdi
push %rdi
call @scc_back__op_out_const
add $16,%rsp
jmp @_$LB8732
@_$LB8731
push %r12
call @scc_back__op_out_mem
add $8,%rsp
@_$LB8732
@_$LB8729
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8735
mov $@_$MSG1630,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8737
push %r9
movslq %edi,%rdi
push %rdi
call @scc_back__op_out_reg
add $16,%rsp
jmp @_$LB8738
@_$LB8737
push %r9
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8740
mov $@_$MSG1631,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
movslq %edi,%rdi
push %rdi
call @scc_back__op_out_const
add $16,%rsp
jmp @_$LB8741
@_$LB8740
push %r9
call @scc_back__op_out_mem
add $8,%rsp
@_$LB8741
@_$LB8738
@_$LB8735
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8744
push %r8
call @scc_back__outs
add $8,%rsp
@_$LB8744
mov $@_$MSG1632,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r9,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB8747
push %r9
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8750
push %r9
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
call @scc_back__reg_extend
add $24,%rsp
@_$LB8750
@_$LB8747
@scc_back__out_ins$END
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__needs_convert
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov 8(%rsi),%rbx
mov 16(%rbx),%esi
mov %esi,%ebx
sub $1,%ebx
mov %ebx,%eax
mov $1,%cl
sar %cl,%eax
mov %eax,%edi
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
mov %ebx,%esi
sub $1,%esi
mov %esi,%eax
mov $1,%cl
sar %cl,%eax
mov %eax,%ebx
mov %edi,%eax
mov %ebx,%ecx
cmp %ecx,%eax
jle @_$LB8753
mov $1,%rax
jmp @scc_back__needs_convert$END
@_$LB8753
mov $0,%rax
@scc_back__needs_convert$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_mov
push %rbp
mov %rsp,%rbp
sub $1200,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r8
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %r8
call @scc_back__get_operand
add $24,%rsp
mov $0,%edi
mov $0,%esi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8755
mov $1,%edi
jmp @_$LB8756
@_$LB8755
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8758
mov $2,%edi
jmp @_$LB8759
@_$LB8758
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8762
mov $3,%edi
@_$LB8762
@_$LB8759
@_$LB8756
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8764
mov $1,%esi
jmp @_$LB8765
@_$LB8764
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8767
mov $2,%esi
jmp @_$LB8768
@_$LB8767
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8771
mov $3,%esi
@_$LB8771
@_$LB8768
@_$LB8765
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__opcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8774
jmp @scc_back__gen_mov$END
@_$LB8774
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8776
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8779
mov $@_$MSG1633,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1634,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1635,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__reg_extend
add $24,%rsp
jmp @_$LB8780
@_$LB8779
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8782
mov $@_$MSG1636,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1637,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1638,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__reg_extend
add $24,%rsp
jmp @_$LB8783
@_$LB8782
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB8785
mov $@_$MSG1639,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1640,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1641,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8786
@_$LB8785
mov $@_$MSG1642,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1643,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1644,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8786
@_$LB8783
@_$LB8780
jmp @_$LB8777
@_$LB8776
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8788
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8791
mov $@_$MSG1645,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1646,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1647,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
mov $@_$MSG1648,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1649,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1650,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8792
@_$LB8791
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8794
mov $@_$MSG1651,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1652,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1653,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
mov $@_$MSG1654,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1655,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1656,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8795
@_$LB8794
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB8797
mov $@_$MSG1657,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1658,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1659,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1660,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1661,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1662,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8798
@_$LB8797
mov $@_$MSG1663,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1664,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1665,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1666,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1667,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1668,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8798
@_$LB8795
@_$LB8792
jmp @_$LB8789
@_$LB8788
mov $@_$MSG1669,%rbx
push %rbx
mov 56(%r8),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB8789
@_$LB8777
@scc_back__gen_mov$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_hfloat_basic_op
push %rbp
mov %rsp,%rbp
sub $1424,%rsp
push %rbx
push %rsi
push %rdi
mov 64(%rbp),%rdi
push %r8
mov 56(%rbp),%r8
push %r9
mov 48(%rbp),%r9
push %r12
mov 40(%rbp),%r12
push %r13
mov 32(%rbp),%r13
push %r14
mov 24(%rbp),%r14
push %r15
mov 16(%rbp),%r15
mov %r14d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8801
mov %r13d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8801
@_$LB8804
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB8807
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB8807
@_$LB8810
mov $@_$MSG1670,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
pushq $6
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1671,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $6
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1672,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %rdi
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1673,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r15d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8812
mov $@_$MSG1674,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
call @scc_back__op_out_mem
add $8,%rsp
jmp @_$LB8813
@_$LB8812
mov $@_$MSG1675,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
pushq $6
call @scc_back__op_out_reg
add $16,%rsp
@_$LB8813
mov $@_$MSG1676,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__gen_hfloat_basic_op$END
@_$LB8807
@_$LB8801
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8816
mov %r13d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8816
@_$LB8819
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB8822
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB8822
@_$LB8825
mov $@_$MSG1677,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1678,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $6
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1679,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %rdi
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1680,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r15d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8827
mov $@_$MSG1681,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
call @scc_back__op_out_mem
add $8,%rsp
jmp @_$LB8828
@_$LB8827
mov $@_$MSG1682,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
pushq $6
call @scc_back__op_out_reg
add $16,%rsp
@_$LB8828
mov $@_$MSG1683,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__gen_hfloat_basic_op$END
@_$LB8822
@_$LB8816
mov %r14d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8831
mov %r13d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8831
@_$LB8834
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB8837
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB8837
@_$LB8840
mov $@_$MSG1684,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
pushq $6
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1685,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %rdi
call @scc_back__outs
add $8,%rsp
push %r8
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1686,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r15d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8842
mov $@_$MSG1687,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
call @scc_back__op_out_mem
add $8,%rsp
jmp @_$LB8843
@_$LB8842
mov $@_$MSG1688,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
pushq $6
call @scc_back__op_out_reg
add $16,%rsp
@_$LB8843
mov $@_$MSG1689,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__gen_hfloat_basic_op$END
@_$LB8837
@_$LB8831
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8846
mov %r13d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8846
@_$LB8849
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB8852
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB8852
@_$LB8855
mov $@_$MSG1690,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1691,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %rdi
call @scc_back__outs
add $8,%rsp
push %r8
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1692,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r15d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8857
mov $@_$MSG1693,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
call @scc_back__op_out_mem
add $8,%rsp
jmp @_$LB8858
@_$LB8857
mov $@_$MSG1694,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
pushq $6
call @scc_back__op_out_reg
add $16,%rsp
@_$LB8858
mov $@_$MSG1695,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__gen_hfloat_basic_op$END
@_$LB8852
@_$LB8846
mov %r14d,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB8860
mov $@_$MSG1696,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1697,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8861
@_$LB8860
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8863
mov $@_$MSG1698,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1699,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1700,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 8(%r12),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB8864
@_$LB8863
mov %r14d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8866
mov $@_$MSG1701,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1702,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 8(%r12),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB8867
@_$LB8866
mov $@_$MSG1703,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
pushq $9
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1704,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8867
@_$LB8864
@_$LB8861
mov %r13d,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB8869
mov $@_$MSG1705,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1706,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8870
@_$LB8869
mov %r13d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8872
mov $@_$MSG1707,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1708,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1709,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 8(%r12),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB8873
@_$LB8872
mov %r13d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8875
mov $@_$MSG1710,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1711,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 8(%r12),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB8876
@_$LB8875
mov $@_$MSG1712,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $9
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1713,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8876
@_$LB8873
@_$LB8870
mov $@_$MSG1714,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1715,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %rdi
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1716,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r15d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8878
mov $@_$MSG1717,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
call @scc_back__op_out_mem
add $8,%rsp
jmp @_$LB8879
@_$LB8878
mov $@_$MSG1718,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
pushq $6
call @scc_back__op_out_reg
add $16,%rsp
@_$LB8879
mov $@_$MSG1719,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@scc_back__gen_hfloat_basic_op$END
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_float_basic_op
push %rbp
mov %rsp,%rbp
sub $1424,%rsp
push %rbx
push %rsi
push %rdi
mov 64(%rbp),%rdi
push %r8
mov 56(%rbp),%r8
push %r9
mov 48(%rbp),%r9
push %r12
mov 40(%rbp),%r12
push %r13
mov 32(%rbp),%r13
push %r14
mov 24(%rbp),%r14
push %r15
mov 16(%rbp),%r15
mov %r14d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8882
mov %r13d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8882
@_$LB8885
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8888
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8888
@_$LB8891
mov $@_$MSG1720,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1721,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1722,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %rdi
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1723,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r15d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8893
mov $@_$MSG1724,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
call @scc_back__op_out_mem
add $8,%rsp
jmp @_$LB8894
@_$LB8893
mov $@_$MSG1725,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
@_$LB8894
mov $@_$MSG1726,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__gen_float_basic_op$END
@_$LB8888
@_$LB8882
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8897
mov %r13d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8897
@_$LB8900
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8903
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8903
@_$LB8906
mov $@_$MSG1727,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1728,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1729,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %rdi
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1730,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r15d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8908
mov $@_$MSG1731,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
call @scc_back__op_out_mem
add $8,%rsp
jmp @_$LB8909
@_$LB8908
mov $@_$MSG1732,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
@_$LB8909
mov $@_$MSG1733,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__gen_float_basic_op$END
@_$LB8903
@_$LB8897
mov %r14d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8912
mov %r13d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8912
@_$LB8915
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8918
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8918
@_$LB8921
mov $@_$MSG1734,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1735,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %rdi
call @scc_back__outs
add $8,%rsp
push %r8
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1736,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r15d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8923
mov $@_$MSG1737,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
call @scc_back__op_out_mem
add $8,%rsp
jmp @_$LB8924
@_$LB8923
mov $@_$MSG1738,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
@_$LB8924
mov $@_$MSG1739,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__gen_float_basic_op$END
@_$LB8918
@_$LB8912
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8927
mov %r13d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8927
@_$LB8930
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8933
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8933
@_$LB8936
mov $@_$MSG1740,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1741,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %rdi
call @scc_back__outs
add $8,%rsp
push %r8
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1742,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r15d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8938
mov $@_$MSG1743,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
call @scc_back__op_out_mem
add $8,%rsp
jmp @_$LB8939
@_$LB8938
mov $@_$MSG1744,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
@_$LB8939
mov $@_$MSG1745,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__gen_float_basic_op$END
@_$LB8933
@_$LB8927
mov %r14d,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB8941
mov $@_$MSG1746,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1747,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8942
@_$LB8941
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8944
mov $@_$MSG1748,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1749,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1750,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 8(%r12),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB8945
@_$LB8944
mov %r14d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8947
mov $@_$MSG1751,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1752,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%r9),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 8(%r12),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB8948
@_$LB8947
mov $@_$MSG1753,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r9
pushq $10
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1754,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8948
@_$LB8945
@_$LB8942
mov %r13d,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB8950
mov $@_$MSG1755,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1756,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB8951
@_$LB8950
mov %r13d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8953
mov $@_$MSG1757,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1758,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1759,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 8(%r12),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB8954
@_$LB8953
mov %r13d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB8956
mov $@_$MSG1760,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1761,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%r8),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 8(%r12),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB8957
@_$LB8956
mov $@_$MSG1762,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
pushq $10
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1763,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB8957
@_$LB8954
@_$LB8951
mov $@_$MSG1764,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1765,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %rdi
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1766,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r15d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8959
mov $@_$MSG1767,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
call @scc_back__op_out_mem
add $8,%rsp
jmp @_$LB8960
@_$LB8959
mov $@_$MSG1768,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r12
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
@_$LB8960
mov $@_$MSG1769,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@scc_back__gen_float_basic_op$END
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_basic_op
push %rbp
mov %rsp,%rbp
sub $1088,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
push %r8
push %r9
push %r12
mov 24(%rbp),%r12
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %rsi
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %rsi
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $3
push %rsi
call @scc_back__get_operand
add $24,%rsp
mov $0,%r9d
mov $0,%r8d
mov $0,%edi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8962
mov $1,%r9d
jmp @_$LB8963
@_$LB8962
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8965
mov $2,%r9d
jmp @_$LB8966
@_$LB8965
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8969
mov $3,%r9d
@_$LB8969
@_$LB8966
@_$LB8963
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8971
mov $1,%r8d
jmp @_$LB8972
@_$LB8971
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8974
mov $2,%r8d
jmp @_$LB8975
@_$LB8974
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8978
mov $3,%r8d
@_$LB8978
@_$LB8975
@_$LB8972
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8980
mov $1,%edi
jmp @_$LB8981
@_$LB8980
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8983
mov $2,%edi
jmp @_$LB8984
@_$LB8983
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB8987
mov $3,%edi
@_$LB8987
@_$LB8984
@_$LB8981
mov %r9d,%eax
mov $2,%ecx
cmp %ecx,%eax
je @_$LB8993
mov %r9d,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB8990
@_$LB8993
mov $@_$MSG1770,%rbx
push %rbx
mov 56(%rsi),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB8990
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB8996
mov $@_$MSG1771,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9002
mov $@_$MSG1772,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB8996
@_$LB9002
@_$LB8999
mov $@_$MSG1773,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9004
mov $@_$MSG1774,%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %edi,%rdi
push %rdi
movslq %r8d,%r8
push %r8
movslq %r9d,%r9
push %r9
call @scc_back__gen_float_basic_op
add $56,%rsp
jmp @_$LB9005
@_$LB9004
mov $@_$MSG1775,%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %edi,%rdi
push %rdi
movslq %r8d,%r8
push %r8
movslq %r9d,%r9
push %r9
call @scc_back__gen_float_basic_op
add $56,%rsp
@_$LB9005
jmp @scc_back__gen_basic_op$END
@_$LB8996
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB9008
mov $@_$MSG1776,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9014
mov $@_$MSG1777,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9008
@_$LB9014
@_$LB9011
mov $@_$MSG1778,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9016
mov $@_$MSG1779,%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %edi,%rdi
push %rdi
movslq %r8d,%r8
push %r8
movslq %r9d,%r9
push %r9
call @scc_back__gen_hfloat_basic_op
add $56,%rsp
jmp @_$LB9017
@_$LB9016
mov $@_$MSG1780,%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %edi,%rdi
push %rdi
movslq %r8d,%r8
push %r8
movslq %r9d,%r9
push %r9
call @scc_back__gen_hfloat_basic_op
add $56,%rsp
@_$LB9017
jmp @scc_back__gen_basic_op$END
@_$LB9008
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9020
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__opcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9022
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9026
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
push %r12
call @scc_back__out_ins
add $56,%rsp
jmp @scc_back__gen_basic_op$END
@_$LB9026
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9029
mov 18446744073709551472(%rbp),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB9029
@_$LB9035
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $7,%ecx
cmp %ecx,%eax
jl @_$LB9038
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $2147483647,%rcx
cmp %rcx,%rax
jb @_$LB9038
@_$LB9041
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jbe @_$LB9029
@_$LB9038
@_$LB9032
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB9043
mov $@_$MSG1781,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9043
@_$LB9047
jmp @scc_back__gen_basic_op$END
jmp @_$LB9044
@_$LB9043
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__get_len
mov %rax,%rbx
add $8,%rsp
push %rbx
push %r12
call @scc_back__out_ins
add $56,%rsp
jmp @scc_back__gen_basic_op$END
@_$LB9044
@_$LB9029
jmp @_$LB9023
@_$LB9022
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9049
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9052
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1782,%rbx
push %rbx
call @scc_back__out_ins_acd1
add $48,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
push %r12
call @scc_back__out_ins_acd1
add $48,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
pushq $0
pushq $0
mov $@_$MSG1783,%rbx
push %rbx
call @scc_back__out_ins_acd2
add $48,%rsp
jmp @scc_back__gen_basic_op$END
jmp @_$LB9053
@_$LB9052
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9056
mov 18446744073709551472(%rbp),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB9056
@_$LB9062
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $7,%ecx
cmp %ecx,%eax
jl @_$LB9065
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $2147483647,%rcx
cmp %rcx,%rax
jb @_$LB9065
@_$LB9068
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jbe @_$LB9056
@_$LB9065
@_$LB9059
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1784,%rbx
push %rbx
call @scc_back__out_ins_acd1
add $48,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
push %r12
call @scc_back__out_ins_acd1
add $48,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
pushq $0
pushq $0
mov $@_$MSG1785,%rbx
push %rbx
call @scc_back__out_ins_acd2
add $48,%rsp
jmp @scc_back__gen_basic_op$END
@_$LB9056
@_$LB9053
jmp @_$LB9050
@_$LB9049
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9071
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9073
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1786,%rbx
push %rbx
call @scc_back__out_ins_acd1
add $48,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
push %r12
call @scc_back__out_ins_acd1
add $48,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
pushq $0
pushq $0
mov $@_$MSG1787,%rbx
push %rbx
call @scc_back__out_ins_acd2
add $48,%rsp
jmp @scc_back__gen_basic_op$END
jmp @_$LB9074
@_$LB9073
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9077
mov 18446744073709551472(%rbp),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB9077
@_$LB9083
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $7,%ecx
cmp %ecx,%eax
jl @_$LB9086
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $2147483647,%rcx
cmp %rcx,%rax
jb @_$LB9086
@_$LB9089
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jbe @_$LB9077
@_$LB9086
@_$LB9080
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1788,%rbx
push %rbx
call @scc_back__out_ins_acd1
add $48,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
push %r12
call @scc_back__out_ins_acd1
add $48,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
pushq $0
pushq $0
mov $@_$MSG1789,%rbx
push %rbx
call @scc_back__out_ins_acd2
add $48,%rsp
jmp @scc_back__gen_basic_op$END
@_$LB9077
@_$LB9074
@_$LB9071
@_$LB9050
@_$LB9023
@_$LB9020
mov %r9d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9092
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9094
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9097
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__opcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9100
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
push %r12
call @scc_back__out_ins
add $56,%rsp
jmp @scc_back__gen_basic_op$END
jmp @_$LB9101
@_$LB9100
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__opcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9103
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1790,%rbx
push %rbx
call @scc_back__out_ins_acd1
add $48,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
push %r12
call @scc_back__out_ins_acd1
add $48,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
pushq $0
pushq $0
mov $@_$MSG1791,%rbx
push %rbx
call @scc_back__out_ins_acd2
add $48,%rsp
jmp @scc_back__gen_basic_op$END
jmp @_$LB9104
@_$LB9103
mov $@_$MSG1792,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9107
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $5
call @scc_back__reg_extend
add $24,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $5
call @scc_back__reg_extend
add $24,%rsp
mov $@_$MSG1793,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1794,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1795,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $5,%ecx
cmp %ecx,%eax
jge @_$LB9109
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $5
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1796,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9110
@_$LB9109
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1797,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9110
jmp @scc_back__gen_basic_op$END
@_$LB9107
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1798,%rbx
push %rbx
call @scc_back__out_ins
add $56,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
push %r12
call @scc_back__out_ins
add $56,%rsp
jmp @scc_back__gen_basic_op$END
@_$LB9104
@_$LB9101
jmp @_$LB9098
@_$LB9097
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9113
mov 18446744073709551472(%rbp),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB9113
@_$LB9116
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $7,%ecx
cmp %ecx,%eax
jl @_$LB9122
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $2147483647,%rcx
cmp %rcx,%rax
jb @_$LB9122
@_$LB9125
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jbe @_$LB9119
@_$LB9122
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB9127
mov $@_$MSG1799,%rbx
push %rbx
push %r12
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9127
@_$LB9131
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__opcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9134
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1800,%rbx
push %rbx
call @scc_back__out_ins
add $56,%rsp
@_$LB9134
jmp @scc_back__gen_basic_op$END
jmp @_$LB9128
@_$LB9127
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__opcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9136
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
push %r12
call @scc_back__out_ins
add $56,%rsp
jmp @scc_back__gen_basic_op$END
jmp @_$LB9137
@_$LB9136
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1801,%rbx
push %rbx
call @scc_back__out_ins
add $56,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
push %r12
call @scc_back__out_ins
add $56,%rsp
jmp @scc_back__gen_basic_op$END
@_$LB9137
@_$LB9128
@_$LB9119
@_$LB9113
@_$LB9098
jmp @_$LB9095
@_$LB9094
mov %r8d,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9139
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9142
mov 18446744073709551472(%rbp),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB9142
@_$LB9146
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $2147483647,%rcx
cmp %rcx,%rax
jb @_$LB9152
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jbe @_$LB9149
@_$LB9152
pushq $8
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1802,%rbx
push %rbx
call @scc_back__out_ins
add $56,%rsp
pushq $8
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
push %r12
call @scc_back__out_ins
add $56,%rsp
jmp @scc_back__gen_basic_op$END
@_$LB9149
jmp @_$LB9143
@_$LB9142
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9155
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__opcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9158
pushq $8
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1803,%rbx
push %rbx
call @scc_back__out_ins
add $56,%rsp
pushq $8
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
push %r12
call @scc_back__out_ins
add $56,%rsp
jmp @scc_back__gen_basic_op$END
@_$LB9158
@_$LB9155
@_$LB9143
jmp @_$LB9140
@_$LB9139
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9161
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__needs_convert
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9161
@_$LB9164
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9166
mov 18446744073709551472(%rbp),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB9166
@_$LB9170
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $2147483647,%rcx
cmp %rcx,%rax
jb @_$LB9176
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jbe @_$LB9173
@_$LB9176
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1804,%rbx
push %rbx
call @scc_back__out_ins
add $56,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
push %r12
call @scc_back__out_ins
add $56,%rsp
jmp @scc_back__gen_basic_op$END
@_$LB9173
jmp @_$LB9167
@_$LB9166
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9179
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__opcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9179
@_$LB9182
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1805,%rbx
push %rbx
call @scc_back__out_ins
add $56,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
push %r12
call @scc_back__out_ins
add $56,%rsp
jmp @scc_back__gen_basic_op$END
@_$LB9179
@_$LB9167
@_$LB9161
@_$LB9140
@_$LB9095
@_$LB9092
mov %r8d,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9184
pushq $8
pushq $0
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1806,%rbx
push %rbx
call @scc_back__out_ins_acd1
add $48,%rsp
jmp @_$LB9185
@_$LB9184
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1807,%rbx
push %rbx
call @scc_back__out_ins_acd1
add $48,%rsp
@_$LB9185
mov %edi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9187
pushq $8
pushq $1
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1808,%rbx
push %rbx
call @scc_back__out_ins_acd1
add $48,%rsp
jmp @_$LB9188
@_$LB9187
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1809,%rbx
push %rbx
call @scc_back__out_ins_acd1
add $48,%rsp
@_$LB9188
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
pushq $1
pushq $0
pushq $0
push %r12
call @scc_back__out_ins_acd3
add $48,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
pushq $0
pushq $0
mov $@_$MSG1810,%rbx
push %rbx
call @scc_back__out_ins_acd2
add $48,%rsp
@scc_back__gen_basic_op$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_mul
push %rbp
mov %rsp,%rbp
sub $1408,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
push %r12
push %r13
push %r14
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %rdi
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %rdi
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $3
push %rdi
call @scc_back__get_operand
add $24,%rsp
mov $0,%r14d
mov $0,%r13d
mov $0,%r12d
mov $1,%r9d
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9190
mov $1,%r14d
jmp @_$LB9191
@_$LB9190
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9193
mov $2,%r14d
jmp @_$LB9194
@_$LB9193
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9197
mov $3,%r14d
@_$LB9197
@_$LB9194
@_$LB9191
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9199
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9203
mov $0,%r9d
@_$LB9203
mov $1,%r13d
jmp @_$LB9200
@_$LB9199
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9205
mov $2,%r13d
jmp @_$LB9206
@_$LB9205
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9208
mov $3,%r13d
jmp @_$LB9209
@_$LB9208
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9212
mov $0,%r9d
@_$LB9212
@_$LB9209
@_$LB9206
@_$LB9200
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9214
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9218
mov $0,%r9d
@_$LB9218
mov $1,%r12d
jmp @_$LB9215
@_$LB9214
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9220
mov $2,%r12d
jmp @_$LB9221
@_$LB9220
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9223
mov $3,%r12d
jmp @_$LB9224
@_$LB9223
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9227
mov $0,%r9d
@_$LB9227
@_$LB9224
@_$LB9221
@_$LB9215
mov %r14d,%eax
mov $2,%ecx
cmp %ecx,%eax
je @_$LB9233
mov %r14d,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9230
@_$LB9233
mov $@_$MSG1811,%rbx
push %rbx
mov 56(%rdi),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB9230
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB9236
mov $@_$MSG1812,%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r12d,%r12
push %r12
movslq %r13d,%r13
push %r13
movslq %r14d,%r14
push %r14
call @scc_back__gen_float_basic_op
add $56,%rsp
jmp @scc_back__gen_mul$END
@_$LB9236
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB9239
mov $@_$MSG1813,%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r12d,%r12
push %r12
movslq %r13d,%r13
push %r13
movslq %r14d,%r14
push %r14
call @scc_back__gen_hfloat_basic_op
add $56,%rsp
jmp @scc_back__gen_mul$END
@_$LB9239
mov %r12d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9242
mov 18446744073709551472(%rbp),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB9242
@_$LB9245
mov %r14d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9248
mov %r13d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9248
@_$LB9251
mov $2,%rdi
mov $1,%r8
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB9253
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1814,%rbx
push %rbx
call @scc_back__out_ins
add $56,%rsp
jmp @scc_back__gen_mul$END
jmp @_$LB9254
@_$LB9253
mov 18446744073709551488(%rbp),%rbx
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB9256
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__opcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9260
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1815,%rbx
push %rbx
call @scc_back__out_ins
add $56,%rsp
@_$LB9260
jmp @scc_back__gen_mul$END
jmp @_$LB9257
@_$LB9256
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__opcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9262
mov %r8,%rax
mov $64,%rcx
cmp %rcx,%rax
jae @_$LB9266
@_$LB9264
mov 18446744073709551488(%rbp),%rbx
mov %rdi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB9269
mov $@_$MSG1816,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
call @scc_back__out_num8
add $8,%rsp
mov $@_$MSG1817,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1818,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__gen_mul$END
@_$LB9269
mov %rdi,%rax
mov $1,%cl
shl %cl,%rax
mov %rax,%rbx
mov %rbx,%rdi
add $1,%r8
mov %r8,%rax
mov $64,%rcx
cmp %rcx,%rax
jb @_$LB9264
@_$LB9266
jmp @_$LB9263
@_$LB9262
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
lea 18446744073709551568(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $0
pushq $0
mov $@_$MSG1819,%rbx
push %rbx
call @scc_back__out_ins
add $56,%rsp
mov %r8,%rax
mov $64,%rcx
cmp %rcx,%rax
jae @_$LB9272
@_$LB9270
mov 18446744073709551488(%rbp),%rbx
mov %rdi,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB9275
mov $@_$MSG1820,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %r8
call @scc_back__out_num8
add $8,%rsp
mov $@_$MSG1821,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1822,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__gen_mul$END
@_$LB9275
mov %rdi,%rax
mov $1,%cl
shl %cl,%rax
mov %rax,%rbx
mov %rbx,%rdi
add $1,%r8
mov %r8,%rax
mov $64,%rcx
cmp %rcx,%rax
jb @_$LB9270
@_$LB9272
@_$LB9263
@_$LB9257
@_$LB9254
@_$LB9248
@_$LB9242
mov %r13d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9277
mov $@_$MSG1823,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1824,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1825,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9278
@_$LB9277
mov %r13d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9280
mov $@_$MSG1826,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1827,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1828,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9281
@_$LB9280
mov %r13d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9283
mov $@_$MSG1829,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1830,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1831,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9284
@_$LB9283
mov $@_$MSG1832,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1833,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1834,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9284
@_$LB9281
@_$LB9278
mov %r12d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9286
mov $@_$MSG1835,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1836,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1837,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9287
@_$LB9286
mov %r12d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9289
mov $@_$MSG1838,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1839,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1840,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9290
@_$LB9289
mov %r12d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9292
mov $@_$MSG1841,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1842,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1843,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9293
@_$LB9292
mov $@_$MSG1844,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1845,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1846,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9293
@_$LB9290
@_$LB9287
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9296
mov $@_$MSG1847,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9296
mov $@_$MSG1848,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1849,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r14d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9298
mov $@_$MSG1850,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1851,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1852,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9299
@_$LB9298
mov %r14d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9302
mov $@_$MSG1853,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1854,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1855,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9302
@_$LB9299
@scc_back__gen_mul$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_div
push %rbp
mov %rsp,%rbp
sub $1568,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov 16(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r13
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %r13
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $3
push %r13
call @scc_back__get_operand
add $24,%rsp
mov $0,%r12d
mov $0,%r9d
mov $0,%r8d
mov $1,%edi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9304
mov $1,%r12d
jmp @_$LB9305
@_$LB9304
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9307
mov $2,%r12d
jmp @_$LB9308
@_$LB9307
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9311
mov $3,%r12d
@_$LB9311
@_$LB9308
@_$LB9305
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9313
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9317
mov $0,%edi
@_$LB9317
mov $1,%r9d
jmp @_$LB9314
@_$LB9313
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9319
mov $2,%r9d
jmp @_$LB9320
@_$LB9319
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9322
mov $3,%r9d
jmp @_$LB9323
@_$LB9322
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9326
mov $0,%edi
@_$LB9326
@_$LB9323
@_$LB9320
@_$LB9314
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9328
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9332
mov $0,%edi
@_$LB9332
mov $1,%r8d
jmp @_$LB9329
@_$LB9328
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9334
mov $2,%r8d
jmp @_$LB9335
@_$LB9334
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9337
mov $3,%r8d
jmp @_$LB9338
@_$LB9337
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9341
mov $0,%edi
@_$LB9341
@_$LB9338
@_$LB9335
@_$LB9329
mov %r12d,%eax
mov $2,%ecx
cmp %ecx,%eax
je @_$LB9347
mov %r12d,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9344
@_$LB9347
mov $@_$MSG1856,%rbx
push %rbx
mov 56(%r13),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB9344
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB9350
mov $@_$MSG1857,%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r8d,%r8
push %r8
movslq %r9d,%r9
push %r9
movslq %r12d,%r12
push %r12
call @scc_back__gen_float_basic_op
add $56,%rsp
jmp @scc_back__gen_div$END
@_$LB9350
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB9353
mov $@_$MSG1858,%rbx
push %rbx
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r8d,%r8
push %r8
movslq %r9d,%r9
push %r9
movslq %r12d,%r12
push %r12
call @scc_back__gen_hfloat_basic_op
add $56,%rsp
jmp @scc_back__gen_div$END
@_$LB9353
mov %r9d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9355
mov $@_$MSG1859,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1860,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1861,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9356
@_$LB9355
mov %r9d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9358
mov $@_$MSG1862,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1863,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1864,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9359
@_$LB9358
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9361
mov $@_$MSG1865,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1866,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1867,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9362
@_$LB9361
mov $@_$MSG1868,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1869,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1870,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9362
@_$LB9359
@_$LB9356
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9364
mov $@_$MSG1871,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1872,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1873,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9365
@_$LB9364
mov %r8d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9367
mov $@_$MSG1874,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1875,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1876,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9368
@_$LB9367
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9370
mov $@_$MSG1877,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1878,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1879,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9371
@_$LB9370
mov $@_$MSG1880,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1881,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1882,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9371
@_$LB9368
@_$LB9365
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB9377
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9373
@_$LB9377
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9379
mov $@_$MSG1883,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1884,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1885,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9380
@_$LB9379
mov $@_$MSG1886,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9380
jmp @_$LB9374
@_$LB9373
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9382
mov $@_$MSG1887,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1888,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rdx
add $8,%rsp
mov $@_$MSG1889,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1890,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
je @_$LB9389
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB9385
@_$LB9389
mov $@_$MSG1891,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9386
@_$LB9385
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $5,%ecx
cmp %ecx,%eax
je @_$LB9395
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $6,%ecx
cmp %ecx,%eax
jne @_$LB9391
@_$LB9395
mov $@_$MSG1892,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9392
@_$LB9391
mov $@_$MSG1893,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9392
@_$LB9386
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rdx
add $8,%rsp
mov $@_$MSG1894,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1895,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rdx
add $8,%rsp
mov $@_$MSG1896,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9383
@_$LB9382
mov $@_$MSG1897,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rdx
add $8,%rsp
mov $@_$MSG1898,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rdx
add $8,%rsp
mov $@_$MSG1899,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9383
@_$LB9374
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9398
mov $@_$MSG1900,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9398
mov $@_$MSG1901,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1902,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r12d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9400
mov $@_$MSG1903,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1904,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1905,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9401
@_$LB9400
mov %r12d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9404
mov $@_$MSG1906,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1907,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1908,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9404
@_$LB9401
@scc_back__gen_div$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_mod
push %rbp
mov %rsp,%rbp
sub $1632,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov 16(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r13
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %r13
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $3
push %r13
call @scc_back__get_operand
add $24,%rsp
mov $0,%r12d
mov $0,%r9d
mov $0,%r8d
mov $1,%edi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9406
mov $1,%r12d
jmp @_$LB9407
@_$LB9406
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9409
mov $2,%r12d
jmp @_$LB9410
@_$LB9409
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9413
mov $3,%r12d
@_$LB9413
@_$LB9410
@_$LB9407
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9415
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9419
mov $0,%edi
@_$LB9419
mov $1,%r9d
jmp @_$LB9416
@_$LB9415
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9421
mov $2,%r9d
jmp @_$LB9422
@_$LB9421
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9424
mov $3,%r9d
jmp @_$LB9425
@_$LB9424
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9428
mov $0,%edi
@_$LB9428
@_$LB9425
@_$LB9422
@_$LB9416
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9430
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9434
mov $0,%edi
@_$LB9434
mov $1,%r8d
jmp @_$LB9431
@_$LB9430
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9436
mov $2,%r8d
jmp @_$LB9437
@_$LB9436
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9439
mov $3,%r8d
jmp @_$LB9440
@_$LB9439
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9443
mov $0,%edi
@_$LB9443
@_$LB9440
@_$LB9437
@_$LB9431
mov %r12d,%eax
mov $2,%ecx
cmp %ecx,%eax
je @_$LB9449
mov %r12d,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9446
@_$LB9449
mov $@_$MSG1909,%rbx
push %rbx
mov 56(%r13),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB9446
mov %r9d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9451
mov $@_$MSG1910,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1911,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1912,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9452
@_$LB9451
mov %r9d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9454
mov $@_$MSG1913,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1914,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1915,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9455
@_$LB9454
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9457
mov $@_$MSG1916,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1917,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1918,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9458
@_$LB9457
mov $@_$MSG1919,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1920,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1921,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9458
@_$LB9455
@_$LB9452
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9460
mov $@_$MSG1922,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1923,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1924,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9461
@_$LB9460
mov %r8d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9463
mov $@_$MSG1925,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1926,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1927,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9464
@_$LB9463
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9466
mov $@_$MSG1928,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1929,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1930,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551480(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9467
@_$LB9466
mov $@_$MSG1931,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1932,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1933,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9467
@_$LB9464
@_$LB9461
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB9473
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9469
@_$LB9473
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9475
mov $@_$MSG1934,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1935,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1936,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9476
@_$LB9475
mov $@_$MSG1937,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9476
jmp @_$LB9470
@_$LB9469
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9478
mov $@_$MSG1938,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1939,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rdx
add $8,%rsp
mov $@_$MSG1940,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1941,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
je @_$LB9485
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB9481
@_$LB9485
mov $@_$MSG1942,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9482
@_$LB9481
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $5,%ecx
cmp %ecx,%eax
je @_$LB9491
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $6,%ecx
cmp %ecx,%eax
jne @_$LB9487
@_$LB9491
mov $@_$MSG1943,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9488
@_$LB9487
mov $@_$MSG1944,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9488
@_$LB9482
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rdx
add $8,%rsp
mov $@_$MSG1945,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG1946,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rdx
add $8,%rsp
mov $@_$MSG1947,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9479
@_$LB9478
mov $@_$MSG1948,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rdx
add $8,%rsp
mov $@_$MSG1949,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rdx
add $8,%rsp
mov $@_$MSG1950,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9479
@_$LB9470
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9494
mov $@_$MSG1951,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9494
mov $@_$MSG1952,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1953,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB9500
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9496
@_$LB9500
mov $@_$MSG1954,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9497
@_$LB9496
mov $@_$MSG1955,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rdx
add $8,%rsp
mov $@_$MSG1956,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1957,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9497
mov %r12d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9502
mov $@_$MSG1958,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1959,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rbx
mov 16(%rbx),%esi
movslq %esi,%rsi
push %rsi
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1960,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9503
@_$LB9502
mov %r12d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9506
mov $@_$MSG1961,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1962,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1963,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9506
@_$LB9503
@scc_back__gen_mod$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_lsh
push %rbp
mov %rsp,%rbp
sub $1120,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 16(%rbp),%r12
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r12
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %r12
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $3
push %r12
call @scc_back__get_operand
add $24,%rsp
mov $0,%r9d
mov $0,%r8d
mov $0,%edi
mov $1,%ebx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9508
mov $1,%r9d
jmp @_$LB9509
@_$LB9508
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9511
mov $2,%r9d
jmp @_$LB9512
@_$LB9511
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9515
mov $3,%r9d
@_$LB9515
@_$LB9512
@_$LB9509
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9517
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9521
mov $0,%ebx
@_$LB9521
mov $1,%r8d
jmp @_$LB9518
@_$LB9517
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9523
mov $2,%r8d
jmp @_$LB9524
@_$LB9523
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9526
mov $3,%r8d
jmp @_$LB9527
@_$LB9526
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9530
mov $0,%ebx
@_$LB9530
@_$LB9527
@_$LB9524
@_$LB9518
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9532
mov $1,%edi
jmp @_$LB9533
@_$LB9532
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9535
mov $2,%edi
jmp @_$LB9536
@_$LB9535
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9539
mov $3,%edi
@_$LB9539
@_$LB9536
@_$LB9533
mov %r9d,%eax
mov $2,%ecx
cmp %ecx,%eax
je @_$LB9545
mov %r9d,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9542
@_$LB9545
mov $@_$MSG1964,%rbx
push %rbx
mov 56(%r12),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB9542
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9547
mov $@_$MSG1965,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1966,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1967,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9548
@_$LB9547
mov %r8d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9550
mov $@_$MSG1968,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1969,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1970,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9551
@_$LB9550
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9553
mov $@_$MSG1971,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1972,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1973,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9554
@_$LB9553
mov $@_$MSG1974,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1975,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1976,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9554
@_$LB9551
@_$LB9548
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9556
mov $@_$MSG1977,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $1
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1978,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $1
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1979,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9557
@_$LB9556
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9559
mov $@_$MSG1980,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $1
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG1981,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $1
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1982,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9560
@_$LB9559
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9562
mov $@_$MSG1983,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1984,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $1
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1985,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9563
@_$LB9562
mov $@_$MSG1986,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1987,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG1988,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9563
@_$LB9560
@_$LB9557
mov $@_$MSG1989,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1990,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r9d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9565
mov $@_$MSG1991,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1992,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1993,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9566
@_$LB9565
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9569
mov $@_$MSG1994,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG1995,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG1996,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9569
@_$LB9566
@scc_back__gen_lsh$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_rsh
push %rbp
mov %rsp,%rbp
sub $1136,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov 16(%rbp),%r13
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r13
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %r13
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $3
push %r13
call @scc_back__get_operand
add $24,%rsp
mov $0,%r12d
mov $0,%r9d
mov $0,%r8d
mov $1,%edi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9571
mov $1,%r12d
jmp @_$LB9572
@_$LB9571
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9574
mov $2,%r12d
jmp @_$LB9575
@_$LB9574
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9578
mov $3,%r12d
@_$LB9578
@_$LB9575
@_$LB9572
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9580
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9584
mov $0,%edi
@_$LB9584
mov $1,%r9d
jmp @_$LB9581
@_$LB9580
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9586
mov $2,%r9d
jmp @_$LB9587
@_$LB9586
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9589
mov $3,%r9d
jmp @_$LB9590
@_$LB9589
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9593
mov $0,%edi
@_$LB9593
@_$LB9590
@_$LB9587
@_$LB9581
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9595
mov $1,%r8d
jmp @_$LB9596
@_$LB9595
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9598
mov $2,%r8d
jmp @_$LB9599
@_$LB9598
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9602
mov $3,%r8d
@_$LB9602
@_$LB9599
@_$LB9596
mov %r12d,%eax
mov $2,%ecx
cmp %ecx,%eax
je @_$LB9608
mov %r12d,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9605
@_$LB9608
mov $@_$MSG1997,%rbx
push %rbx
mov 56(%r13),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB9605
mov %r9d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9610
mov $@_$MSG1998,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG1999,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2000,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9611
@_$LB9610
mov %r9d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9613
mov $@_$MSG2001,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2002,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2003,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9614
@_$LB9613
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9616
mov $@_$MSG2004,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2005,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2006,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9617
@_$LB9616
mov $@_$MSG2007,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2008,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2009,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9617
@_$LB9614
@_$LB9611
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9619
mov $@_$MSG2010,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $1
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2011,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $1
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2012,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9620
@_$LB9619
mov %r8d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9622
mov $@_$MSG2013,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $1
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2014,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $1
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2015,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9623
@_$LB9622
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9625
mov $@_$MSG2016,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2017,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $1
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2018,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9626
@_$LB9625
mov $@_$MSG2019,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2020,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2021,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9626
@_$LB9623
@_$LB9620
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9628
mov $@_$MSG2022,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9629
@_$LB9628
mov $@_$MSG2023,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9629
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2024,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r12d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9631
mov $@_$MSG2025,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2026,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2027,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9632
@_$LB9631
mov %r12d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9635
mov $@_$MSG2028,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2029,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2030,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9635
@_$LB9632
@scc_back__gen_rsh$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_branch
push %rbp
mov %rsp,%rbp
sub $1168,%rsp
push %rbx
mov 48(%rbp),%rbx
push %rsi
mov 40(%rbp),%rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov 32(%rbp),%r13
push %r14
mov 24(%rbp),%r14
push %r15
mov 16(%rbp),%r15
mov $0,%edi
mov 88(%r15),%ebx
mov %ebx,%eax
mov $4,%ecx
cmp %ecx,%eax
jge @_$LB9638
mov $@_$MSG2031,%rbx
push %rbx
mov 56(%r15),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB9638
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r15
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %r15
call @scc_back__get_operand
add $24,%rsp
mov $0,%r12d
mov $0,%r9d
mov $1,%r8d
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9640
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9644
mov $0,%r8d
@_$LB9644
mov $1,%r12d
jmp @_$LB9641
@_$LB9640
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9646
mov $2,%r12d
jmp @_$LB9647
@_$LB9646
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9649
mov $3,%r12d
mov $8,%edi
jmp @_$LB9650
@_$LB9649
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9653
mov $0,%r8d
@_$LB9653
@_$LB9650
@_$LB9647
@_$LB9641
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9655
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9659
mov $0,%r8d
@_$LB9659
mov $1,%r9d
jmp @_$LB9656
@_$LB9655
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9661
mov $2,%r9d
jmp @_$LB9662
@_$LB9661
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9664
mov $3,%r9d
mov $8,%edi
jmp @_$LB9665
@_$LB9664
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__if_class_signed
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9668
mov $0,%r8d
@_$LB9668
@_$LB9665
@_$LB9662
@_$LB9656
mov %r12d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9674
mov %r12d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9670
@_$LB9674
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9680
mov %r9d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9676
@_$LB9680
mov 18446744073709551576(%rbp),%rbx
mov 18446744073709551528(%rbp),%rdi
mov 16(%rbx),%esi
mov 16(%rdi),%ebx
mov %esi,%eax
mov %ebx,%ecx
cmp %ecx,%eax
jle @_$LB9682
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%edi
jmp @_$LB9683
@_$LB9682
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%edi
@_$LB9683
jmp @_$LB9677
@_$LB9676
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%edi
@_$LB9677
jmp @_$LB9671
@_$LB9670
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9689
mov %r9d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9685
@_$LB9689
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%edi
jmp @_$LB9686
@_$LB9685
mov $8,%edi
@_$LB9686
@_$LB9671
mov %edi,%eax
mov $9,%ecx
cmp %ecx,%eax
je @_$LB9695
mov %edi,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB9692
@_$LB9695
mov $0,%r8d
@_$LB9692
mov %r12d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9697
mov $@_$MSG2032,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2033,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2034,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9698
@_$LB9697
mov %r12d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9700
mov $@_$MSG2035,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %edi,%rdi
push %rdi
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2036,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %edi,%rdi
push %rdi
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2037,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9701
@_$LB9700
mov %r12d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9703
mov $@_$MSG2038,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2039,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2040,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9704
@_$LB9703
mov $@_$MSG2041,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2042,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2043,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9704
@_$LB9701
@_$LB9698
mov %r9d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9706
mov $@_$MSG2044,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2045,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2046,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9707
@_$LB9706
mov %r9d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9709
mov $@_$MSG2047,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
movslq %edi,%rdi
push %rdi
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2048,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %edi,%rdi
push %rdi
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2049,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9710
@_$LB9709
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9712
mov $@_$MSG2050,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2051,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2052,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9713
@_$LB9712
mov $@_$MSG2053,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2054,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2055,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9713
@_$LB9710
@_$LB9707
mov %edi,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB9715
mov $@_$MSG2056,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2057,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2058,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2059,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9716
@_$LB9715
mov %edi,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB9718
mov $@_$MSG2060,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2061,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2062,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2063,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9719
@_$LB9718
mov $@_$MSG2064,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %edi,%rdi
push %rdi
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2065,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %edi,%rdi
push %rdi
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2066,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9719
@_$LB9716
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9721
push %r14
call @scc_back__outs
add $8,%rsp
jmp @_$LB9722
@_$LB9721
push %r13
call @scc_back__outs
add $8,%rsp
@_$LB9722
mov $@_$MSG2067,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 24(%r15),%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2068,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $0,%eax
mov %eax,@_$DATA+11815072
@scc_back__gen_branch$END
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_ld
push %rbp
mov %rsp,%rbp
sub $1312,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r9
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %r9
call @scc_back__get_operand
add $24,%rsp
mov $0,%edi
mov $0,%esi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9724
mov $1,%edi
jmp @_$LB9725
@_$LB9724
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9727
mov $2,%edi
jmp @_$LB9728
@_$LB9727
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9731
mov $3,%edi
@_$LB9731
@_$LB9728
@_$LB9725
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9733
mov $1,%esi
jmp @_$LB9734
@_$LB9733
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9736
mov $2,%esi
jmp @_$LB9737
@_$LB9736
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9740
mov $3,%esi
@_$LB9740
@_$LB9737
@_$LB9734
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
je @_$LB9746
mov %edi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9743
@_$LB9746
mov $@_$MSG2069,%rbx
push %rbx
mov 56(%r9),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB9743
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9748
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9751
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $8
call @scc_back__reg_extend
add $24,%rsp
mov $@_$MSG2070,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2071,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r8d,%r8
push %r8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2072,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r8d,%r8
push %r8
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__reg_extend
add $24,%rsp
jmp @_$LB9752
@_$LB9751
mov %esi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9754
mov $@_$MSG2073,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2074,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r8d,%r8
push %r8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2075,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r8d,%r8
push %r8
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__reg_extend
add $24,%rsp
jmp @_$LB9755
@_$LB9754
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9757
mov $@_$MSG2076,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2077,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2078,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9758
@_$LB9757
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9761
mov $@_$MSG2079,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2080,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2081,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $8
pushq $0
call @scc_back__acd_extend
add $24,%rsp
@_$LB9761
@_$LB9758
mov $@_$MSG2082,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r8d,%r8
push %r8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2083,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r8d,%r8
push %r8
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__reg_extend
add $24,%rsp
@_$LB9755
@_$LB9752
jmp @_$LB9749
@_$LB9748
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9764
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9766
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $8
call @scc_back__reg_extend
add $24,%rsp
mov $@_$MSG2084,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2085,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2086,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
mov $@_$MSG2087,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2088,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2089,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9767
@_$LB9766
mov %esi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9769
mov $@_$MSG2090,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2091,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2092,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
mov $@_$MSG2093,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2094,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2095,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9770
@_$LB9769
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9772
mov $@_$MSG2096,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2097,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2098,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9773
@_$LB9772
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9776
mov $@_$MSG2099,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2100,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2101,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $8
pushq $0
call @scc_back__acd_extend
add $24,%rsp
@_$LB9776
@_$LB9773
mov $@_$MSG2102,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2103,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
mov $@_$MSG2104,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2105,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2106,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9770
@_$LB9767
@_$LB9764
@_$LB9749
@scc_back__gen_ld$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_ldo
push %rbp
mov %rsp,%rbp
sub $1520,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r9
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %r9
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $3
push %r9
call @scc_back__get_operand
add $24,%rsp
mov $0,%edi
mov $0,%esi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9778
mov $1,%edi
jmp @_$LB9779
@_$LB9778
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9781
mov $2,%edi
jmp @_$LB9782
@_$LB9781
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9785
mov $3,%edi
@_$LB9785
@_$LB9782
@_$LB9779
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9787
mov $1,%esi
jmp @_$LB9788
@_$LB9787
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9790
mov $2,%esi
jmp @_$LB9791
@_$LB9790
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9794
mov $3,%esi
@_$LB9794
@_$LB9791
@_$LB9788
mov 18446744073709551472(%rbp),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
je @_$LB9797
mov $@_$MSG2107,%rbx
push %rbx
mov 56(%r9),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB9797
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
je @_$LB9803
mov %edi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9800
@_$LB9803
mov $@_$MSG2108,%rbx
push %rbx
mov 56(%r9),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB9800
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9805
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9808
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $8
call @scc_back__reg_extend
add $24,%rsp
mov $@_$MSG2109,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2110,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2111,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r8d,%r8
push %r8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2112,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r8d,%r8
push %r8
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__reg_extend
add $24,%rsp
jmp @_$LB9809
@_$LB9808
mov %esi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9811
mov $@_$MSG2113,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem_off
add $16,%rsp
mov $@_$MSG2114,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r8d,%r8
push %r8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2115,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r8d,%r8
push %r8
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__reg_extend
add $24,%rsp
jmp @_$LB9812
@_$LB9811
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9814
mov $@_$MSG2116,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2117,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2118,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9815
@_$LB9814
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9818
mov $@_$MSG2119,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2120,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2121,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $8
pushq $0
call @scc_back__acd_extend
add $24,%rsp
@_$LB9818
@_$LB9815
mov $@_$MSG2122,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2123,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r8d,%r8
push %r8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2124,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %r8d,%r8
push %r8
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__reg_extend
add $24,%rsp
@_$LB9812
@_$LB9809
jmp @_$LB9806
@_$LB9805
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9821
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9823
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $8
call @scc_back__reg_extend
add $24,%rsp
mov $@_$MSG2125,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2126,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2127,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2128,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
mov $@_$MSG2129,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2130,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2131,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9824
@_$LB9823
mov %esi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9826
mov $@_$MSG2132,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem_off
add $16,%rsp
mov $@_$MSG2133,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2134,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
mov $@_$MSG2135,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2136,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2137,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9827
@_$LB9826
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9829
mov $@_$MSG2138,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2139,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2140,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9830
@_$LB9829
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9833
mov $@_$MSG2141,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2142,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2143,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $8
pushq $0
call @scc_back__acd_extend
add $24,%rsp
@_$LB9833
@_$LB9830
mov $@_$MSG2144,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2145,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2146,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r8d,%r8
push %r8
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
mov $@_$MSG2147,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2148,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2149,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9827
@_$LB9824
@_$LB9821
@_$LB9806
@scc_back__gen_ldo$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_st
push %rbp
mov %rsp,%rbp
sub $992,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %rsi
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %rsi
call @scc_back__get_operand
add $24,%rsp
mov $0,%r8d
mov $0,%esi
mov $1,%edi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9835
mov $1,%r8d
jmp @_$LB9836
@_$LB9835
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9838
mov $2,%r8d
jmp @_$LB9839
@_$LB9838
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9842
mov $3,%r8d
@_$LB9842
@_$LB9839
@_$LB9836
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9844
mov $0,%edi
mov $1,%esi
jmp @_$LB9845
@_$LB9844
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9847
mov $2,%esi
jmp @_$LB9848
@_$LB9847
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9851
mov $3,%esi
@_$LB9851
@_$LB9848
@_$LB9845
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9853
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %r9d,%r9
push %r9
call @scc_back__reg_extend
add $24,%rsp
jmp @_$LB9854
@_$LB9853
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9856
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9860
mov 18446744073709551520(%rbp),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB9860
@_$LB9866
mov %r9d,%eax
mov $7,%ecx
cmp %ecx,%eax
jl @_$LB9869
mov 18446744073709551536(%rbp),%rbx
mov %rbx,%rax
mov $2147483647,%rcx
cmp %rcx,%rax
jbe @_$LB9869
@_$LB9872
mov 18446744073709551536(%rbp),%rbx
mov %rbx,%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jb @_$LB9860
@_$LB9869
@_$LB9863
mov $@_$MSG2150,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r9d,%r9
push %r9
call @scc_back__get_len
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2151,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
movslq %r9d,%r9
push %r9
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2152,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2153,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $0,%eax
mov %eax,@_$DATA+11815072
jmp @scc_back__gen_st$END
@_$LB9860
mov $@_$MSG2154,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
movslq %r9d,%r9
push %r9
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2155,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r9d,%r9
push %r9
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2156,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9857
@_$LB9856
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9874
mov $@_$MSG2157,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2158,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2159,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %r9d,%r9
push %r9
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9875
@_$LB9874
mov $@_$MSG2160,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2161,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2162,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9875
@_$LB9857
@_$LB9854
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9877
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $8
call @scc_back__reg_extend
add $24,%rsp
mov $@_$MSG2163,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9880
movslq %r9d,%r9
push %r9
call @scc_back__out_rax
add $8,%rsp
jmp @_$LB9881
@_$LB9880
lea 18446744073709551520(%rbp),%rbx
push %rbx
movslq %r9d,%r9
push %r9
call @scc_back__op_out_reg
add $16,%rsp
@_$LB9881
mov $@_$MSG2164,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2165,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9878
@_$LB9877
mov %r8d,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9883
mov $@_$MSG2166,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9886
movslq %r9d,%r9
push %r9
call @scc_back__out_rax
add $8,%rsp
jmp @_$LB9887
@_$LB9886
lea 18446744073709551520(%rbp),%rbx
push %rbx
movslq %r9d,%r9
push %r9
call @scc_back__op_out_reg
add $16,%rsp
@_$LB9887
mov $@_$MSG2167,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2168,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9884
@_$LB9883
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9889
mov $@_$MSG2169,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2170,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2171,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $8
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9890
@_$LB9889
mov %r8d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9893
mov $@_$MSG2172,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2173,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2174,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9893
@_$LB9890
mov $@_$MSG2175,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9895
movslq %r9d,%r9
push %r9
call @scc_back__out_rax
add $8,%rsp
jmp @_$LB9896
@_$LB9895
lea 18446744073709551520(%rbp),%rbx
push %rbx
movslq %r9d,%r9
push %r9
call @scc_back__op_out_reg
add $16,%rsp
@_$LB9896
mov $@_$MSG2176,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9884
@_$LB9878
mov $0,%eax
mov %eax,@_$DATA+11815072
@scc_back__gen_st$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_sto
push %rbp
mov %rsp,%rbp
sub $1168,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r12
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %r12
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $3
push %r12
call @scc_back__get_operand
add $24,%rsp
mov $0,%r8d
mov $0,%esi
mov $1,%edi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9898
mov $1,%r8d
jmp @_$LB9899
@_$LB9898
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9901
mov $2,%r8d
jmp @_$LB9902
@_$LB9901
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9905
mov $3,%r8d
@_$LB9905
@_$LB9902
@_$LB9899
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9907
mov $0,%edi
mov $1,%esi
jmp @_$LB9908
@_$LB9907
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9910
mov $2,%esi
jmp @_$LB9911
@_$LB9910
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9914
mov $3,%esi
@_$LB9914
@_$LB9911
@_$LB9908
mov 18446744073709551472(%rbp),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
je @_$LB9917
mov $@_$MSG2177,%rbx
push %rbx
mov 56(%r12),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB9917
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9919
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %r9d,%r9
push %r9
call @scc_back__reg_extend
add $24,%rsp
jmp @_$LB9920
@_$LB9919
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9922
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9926
mov 18446744073709551520(%rbp),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB9926
@_$LB9932
mov %r9d,%eax
mov $7,%ecx
cmp %ecx,%eax
jl @_$LB9935
mov 18446744073709551536(%rbp),%rbx
mov %rbx,%rax
mov $2147483647,%rcx
cmp %rcx,%rax
jbe @_$LB9935
@_$LB9938
mov 18446744073709551536(%rbp),%rbx
mov %rbx,%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jb @_$LB9926
@_$LB9935
@_$LB9929
mov $@_$MSG2178,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r9d,%r9
push %r9
call @scc_back__get_len
mov %rax,%rbx
add $8,%rsp
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2179,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
movslq %r9d,%r9
push %r9
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2180,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2181,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2182,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $0,%eax
mov %eax,@_$DATA+11815072
jmp @scc_back__gen_sto$END
@_$LB9926
mov $@_$MSG2183,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
movslq %r9d,%r9
push %r9
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2184,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
movslq %r9d,%r9
push %r9
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2185,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9923
@_$LB9922
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9940
mov $@_$MSG2186,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2187,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2188,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %r9d,%r9
push %r9
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9941
@_$LB9940
mov $@_$MSG2189,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2190,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2191,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9941
@_$LB9923
@_$LB9920
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9943
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $8
call @scc_back__reg_extend
add $24,%rsp
mov $@_$MSG2192,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9946
movslq %r9d,%r9
push %r9
call @scc_back__out_rax
add $8,%rsp
jmp @_$LB9947
@_$LB9946
lea 18446744073709551520(%rbp),%rbx
push %rbx
movslq %r9d,%r9
push %r9
call @scc_back__op_out_reg
add $16,%rsp
@_$LB9947
mov $@_$MSG2193,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2194,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2195,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9944
@_$LB9943
mov %r8d,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB9949
mov $@_$MSG2196,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9952
movslq %r9d,%r9
push %r9
call @scc_back__out_rax
add $8,%rsp
jmp @_$LB9953
@_$LB9952
lea 18446744073709551520(%rbp),%rbx
push %rbx
movslq %r9d,%r9
push %r9
call @scc_back__op_out_reg
add $16,%rsp
@_$LB9953
mov $@_$MSG2197,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem_off
add $16,%rsp
mov $@_$MSG2198,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9950
@_$LB9949
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB9955
mov $@_$MSG2199,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2200,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2201,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $8
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB9956
@_$LB9955
mov %r8d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9959
mov $@_$MSG2202,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2203,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2204,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9959
@_$LB9956
mov $@_$MSG2205,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9961
movslq %r9d,%r9
push %r9
call @scc_back__out_rax
add $8,%rsp
jmp @_$LB9962
@_$LB9961
lea 18446744073709551520(%rbp),%rbx
push %rbx
movslq %r9d,%r9
push %r9
call @scc_back__op_out_reg
add $16,%rsp
@_$LB9962
mov $@_$MSG2206,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2207,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9950
@_$LB9944
mov $0,%eax
mov %eax,@_$DATA+11815072
@scc_back__gen_sto$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_push
push %rbp
mov %rsp,%rbp
sub $528,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
mov 24(%rbp),%rdi
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %rsi
call @scc_back__get_operand
add $24,%rsp
mov $0,%esi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9964
mov $1,%esi
jmp @_$LB9965
@_$LB9964
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9967
mov $2,%esi
jmp @_$LB9968
@_$LB9967
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB9971
mov $3,%esi
@_$LB9971
@_$LB9968
@_$LB9965
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9974
mov 18446744073709551568(%rbp),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB9974
@_$LB9980
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $2147483647,%rcx
cmp %rcx,%rax
jbe @_$LB9983
mov 18446744073709551584(%rbp),%rbx
mov %rbx,%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jb @_$LB9974
@_$LB9983
@_$LB9977
mov $@_$MSG2208,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2209,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__gen_push$END
@_$LB9974
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB9985
mov %edi,%eax
mov $8,%ecx
cmp %ecx,%eax
jg @_$LB9995
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $8,%ecx
cmp %ecx,%eax
jle @_$LB9992
@_$LB9995
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %edi,%eax
mov %ebx,%ecx
cmp %ecx,%eax
jne @_$LB9988
@_$LB9992
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
call @scc_back__reg_extend
add $24,%rsp
mov $@_$MSG2210,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $7
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2211,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9989
@_$LB9988
mov $@_$MSG2212,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $7
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2213,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
pushq $0
call @scc_back__acd_extend
add $24,%rsp
mov $@_$MSG2214,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9989
jmp @_$LB9986
@_$LB9985
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB9997
mov $@_$MSG2215,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %edi,%rdi
push %rdi
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2216,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB9998
@_$LB9997
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10000
mov $@_$MSG2217,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2218,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2219,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB10001
@_$LB10000
mov %esi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB10004
mov $@_$MSG2220,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2221,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2222,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB10004
@_$LB10001
@_$LB9998
mov $@_$MSG2223,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB9986
@scc_back__gen_push$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_call
push %rbp
mov %rsp,%rbp
sub $688,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r9
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %r9
call @scc_back__get_operand
add $24,%rsp
mov $0,%edi
mov $0,%esi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10006
mov $1,%edi
jmp @_$LB10007
@_$LB10006
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10009
mov $2,%edi
jmp @_$LB10010
@_$LB10009
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10013
mov $3,%edi
@_$LB10013
@_$LB10010
@_$LB10007
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10015
mov $1,%esi
jmp @_$LB10016
@_$LB10015
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10018
mov $2,%esi
jmp @_$LB10019
@_$LB10018
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10022
mov $3,%esi
@_$LB10022
@_$LB10019
@_$LB10016
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
je @_$LB10028
mov %edi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB10025
@_$LB10028
mov $@_$MSG2224,%rbx
push %rbx
mov 56(%r9),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB10025
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB10030
mov $@_$MSG2225,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2226,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10031
@_$LB10030
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10033
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $8
call @scc_back__reg_extend
add $24,%rsp
mov $@_$MSG2227,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2228,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10034
@_$LB10033
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10036
mov $@_$MSG2229,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2230,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2231,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $8
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB10037
@_$LB10036
mov $@_$MSG2232,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2233,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2234,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB10037
mov $@_$MSG2235,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB10034
@_$LB10031
mov $0,%eax
mov %eax,@_$DATA+11815072
mov 18446744073709551576(%rbp),%rsi
mov 20(%rsi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10040
jmp @scc_back__gen_call$END
@_$LB10040
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10042
pushq $9
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB10043
@_$LB10042
mov %r8d,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB10045
pushq $10
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB10046
@_$LB10045
pushq $8
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
@_$LB10046
@_$LB10043
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10048
mov $@_$MSG2236,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2237,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2238,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10049
@_$LB10048
mov $@_$MSG2239,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2240,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2241,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB10049
@scc_back__gen_call$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_retval
push %rbp
mov %rsp,%rbp
sub $464,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r8
call @scc_back__get_operand
add $24,%rsp
mov $0,%esi
mov @_$DATA+11815184,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10052
mov $@_$MSG2242,%rbx
push %rbx
mov 56(%r8),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB10052
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10054
mov $1,%esi
jmp @_$LB10055
@_$LB10054
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10057
mov $2,%esi
jmp @_$LB10058
@_$LB10057
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10061
mov $3,%esi
@_$LB10061
@_$LB10058
@_$LB10055
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10063
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
call @scc_back__reg_extend
add $24,%rsp
mov $@_$MSG2243,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $7
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2244,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10064
@_$LB10063
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB10066
mov $@_$MSG2245,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
movslq %edi,%rdi
push %rdi
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2246,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10067
@_$LB10066
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10069
mov $@_$MSG2247,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2248,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2249,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
movslq %edi,%rdi
push %rdi
pushq $0
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB10070
@_$LB10069
mov %esi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB10073
mov $@_$MSG2250,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2251,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2252,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB10073
@_$LB10070
@_$LB10067
@_$LB10064
mov 352(%r8),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10076
@_$LB10074
mov 92(%rsi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10079
mov $@_$MSG2253,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2254,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov @_$DATA+11815184,%rax
push %rax
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2255,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10076
@_$LB10079
mov 88(%rsi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10082
mov $@_$MSG2256,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10082
@_$LB10085
jmp @_$LB10076
@_$LB10082
mov 352(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10074
@_$LB10076
@scc_back__gen_retval$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_not
push %rbp
mov %rsp,%rbp
sub $1584,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r8
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %r8
call @scc_back__get_operand
add $24,%rsp
mov $0,%edi
mov $0,%esi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10087
mov $1,%edi
jmp @_$LB10088
@_$LB10087
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10090
mov $2,%edi
jmp @_$LB10091
@_$LB10090
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10094
mov $3,%edi
@_$LB10094
@_$LB10091
@_$LB10088
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10096
mov $1,%esi
jmp @_$LB10097
@_$LB10096
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10099
mov $2,%esi
jmp @_$LB10100
@_$LB10099
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10103
mov $3,%esi
@_$LB10103
@_$LB10100
@_$LB10097
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10105
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10108
mov $@_$MSG2257,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2258,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2259,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2260,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2261,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10109
@_$LB10108
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10111
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__reg_extend
add $24,%rsp
mov $@_$MSG2262,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2263,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2264,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2265,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2266,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10112
@_$LB10111
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB10114
mov $@_$MSG2267,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2268,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2269,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2270,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2271,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10115
@_$LB10114
mov $@_$MSG2272,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2273,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2274,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2275,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2276,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB10115
@_$LB10112
@_$LB10109
jmp @_$LB10106
@_$LB10105
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10117
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10120
mov $@_$MSG2277,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2278,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2279,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
mov $@_$MSG2280,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2281,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2282,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2283,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2284,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10121
@_$LB10120
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10123
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__reg_extend
add $24,%rsp
mov $@_$MSG2285,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2286,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2287,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
mov $@_$MSG2288,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2289,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2290,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2291,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2292,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10124
@_$LB10123
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB10126
mov $@_$MSG2293,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2294,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2295,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2296,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2297,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2298,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2299,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2300,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10127
@_$LB10126
mov $@_$MSG2301,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2302,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2303,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2304,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2305,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2306,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2307,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2308,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB10127
@_$LB10124
@_$LB10121
jmp @_$LB10118
@_$LB10117
mov $@_$MSG2309,%rbx
push %rbx
mov 56(%r8),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB10118
@_$LB10106
@scc_back__gen_not$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_neg
push %rbp
mov %rsp,%rbp
sub $2256,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r9
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %r9
call @scc_back__get_operand
add $24,%rsp
mov $0,%r8d
mov $0,%edi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10129
mov $1,%r8d
jmp @_$LB10130
@_$LB10129
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10132
mov $2,%r8d
jmp @_$LB10133
@_$LB10132
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10136
mov $3,%r8d
@_$LB10136
@_$LB10133
@_$LB10130
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10138
mov $1,%edi
jmp @_$LB10139
@_$LB10138
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10141
mov $2,%edi
jmp @_$LB10142
@_$LB10141
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10145
mov $3,%edi
@_$LB10145
@_$LB10142
@_$LB10139
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10154
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10147
@_$LB10154
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $9,%ecx
cmp %ecx,%eax
jne @_$LB10147
@_$LB10151
mov %edi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB10156
mov $@_$MSG2310,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2311,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10157
@_$LB10156
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10159
mov $@_$MSG2312,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2313,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2314,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB10160
@_$LB10159
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10162
mov $@_$MSG2315,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2316,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB10163
@_$LB10162
mov $@_$MSG2317,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $9
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2318,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB10163
@_$LB10160
@_$LB10157
mov $@_$MSG2319,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2320,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10165
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
jmp @_$LB10166
@_$LB10165
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $6
call @scc_back__op_out_reg
add $16,%rsp
@_$LB10166
mov $@_$MSG2321,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__gen_neg$END
jmp @_$LB10148
@_$LB10147
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10175
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10169
@_$LB10175
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
mov %ebx,%eax
mov $10,%ecx
cmp %ecx,%eax
jne @_$LB10169
@_$LB10172
mov %edi,%eax
mov $3,%ecx
cmp %ecx,%eax
jne @_$LB10177
mov $@_$MSG2322,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2323,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10178
@_$LB10177
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10180
mov $@_$MSG2324,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2325,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rcx
add $8,%rsp
mov $@_$MSG2326,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB10181
@_$LB10180
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10183
mov $@_$MSG2327,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2328,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $1
call @scc_back__acd_extend
add $24,%rsp
jmp @_$LB10184
@_$LB10183
mov $@_$MSG2329,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $10
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2330,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB10184
@_$LB10181
@_$LB10178
mov $@_$MSG2331,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2332,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10186
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
jmp @_$LB10187
@_$LB10186
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
@_$LB10187
mov $@_$MSG2333,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @scc_back__gen_neg$END
@_$LB10169
@_$LB10148
mov %r8d,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10189
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10192
mov $@_$MSG2334,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2335,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2336,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2337,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2338,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10193
@_$LB10192
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10195
mov $@_$MSG2339,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2340,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2341,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__reg_extend
add $24,%rsp
mov $@_$MSG2342,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2343,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10196
@_$LB10195
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB10198
mov $@_$MSG2344,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2345,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2346,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2347,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2348,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10199
@_$LB10198
mov $@_$MSG2349,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2350,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2351,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2352,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2353,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB10199
@_$LB10196
@_$LB10193
jmp @_$LB10190
@_$LB10189
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10201
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10204
mov $@_$MSG2354,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2355,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2356,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
mov $@_$MSG2357,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2358,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2359,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2360,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2361,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10205
@_$LB10204
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10207
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__reg_extend
add $24,%rsp
mov $@_$MSG2362,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2363,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rbx
mov 16(%rbx),%esi
movslq %esi,%rsi
push %rsi
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2364,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551528(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
pushq $0
call @scc_back__acd_extend
add $24,%rsp
mov $@_$MSG2365,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2366,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2367,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2368,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2369,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10208
@_$LB10207
mov %edi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB10210
mov $@_$MSG2370,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__op_out_const
add $16,%rsp
mov $@_$MSG2371,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2372,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2373,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2374,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2375,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2376,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2377,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10211
@_$LB10210
mov $@_$MSG2378,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2379,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2380,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2381,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2382,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2383,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2384,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2385,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB10211
@_$LB10208
@_$LB10205
jmp @_$LB10202
@_$LB10201
mov $@_$MSG2386,%rbx
push %rbx
mov 56(%r9),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB10202
@_$LB10190
@scc_back__gen_neg$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_adr
push %rbp
mov %rsp,%rbp
sub $432,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r8
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %r8
call @scc_back__get_operand
add $24,%rsp
mov $0,%edi
mov $0,%esi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10213
mov $1,%edi
jmp @_$LB10214
@_$LB10213
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10216
mov $2,%edi
jmp @_$LB10217
@_$LB10216
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10220
mov $3,%edi
@_$LB10220
@_$LB10217
@_$LB10214
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10222
mov $1,%esi
jmp @_$LB10223
@_$LB10222
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10225
mov $2,%esi
jmp @_$LB10226
@_$LB10225
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10229
mov $3,%esi
@_$LB10229
@_$LB10226
@_$LB10223
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB10235
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
jne @_$LB10232
@_$LB10235
mov $@_$MSG2387,%rbx
push %rbx
mov 56(%r8),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB10232
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10237
mov $@_$MSG2388,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2389,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2390,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10238
@_$LB10237
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10240
mov $@_$MSG2391,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2392,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2393,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2394,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2395,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2396,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10241
@_$LB10240
mov $@_$MSG2397,%rbx
push %rbx
mov 56(%r8),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB10241
@_$LB10238
@scc_back__gen_adr$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_adro
push %rbp
mov %rsp,%rbp
sub $496,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $1
push %r8
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551520(%rbp),%rbx
push %rbx
pushq $2
push %r8
call @scc_back__get_operand
add $24,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
pushq $3
push %r8
call @scc_back__get_operand
add $24,%rsp
mov $0,%edi
mov $0,%esi
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10243
mov $1,%edi
jmp @_$LB10244
@_$LB10243
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10246
mov $2,%edi
jmp @_$LB10247
@_$LB10246
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10250
mov $3,%edi
@_$LB10250
@_$LB10247
@_$LB10244
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_reg
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10252
mov $1,%esi
jmp @_$LB10253
@_$LB10252
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_const
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10255
mov $2,%esi
jmp @_$LB10256
@_$LB10255
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_is_addr
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10259
mov $3,%esi
@_$LB10259
@_$LB10256
@_$LB10253
mov %esi,%eax
mov $1,%ecx
cmp %ecx,%eax
je @_$LB10265
mov %esi,%eax
mov $2,%ecx
cmp %ecx,%eax
je @_$LB10265
@_$LB10268
mov 18446744073709551472(%rbp),%rbx
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
je @_$LB10262
@_$LB10265
mov $@_$MSG2398,%rbx
push %rbx
mov 56(%r8),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB10262
mov %edi,%eax
mov $1,%ecx
cmp %ecx,%eax
jne @_$LB10270
mov $@_$MSG2399,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem_off
add $16,%rsp
mov $@_$MSG2400,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
pushq $8
call @scc_back__op_out_reg
add $16,%rsp
mov $@_$MSG2401,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10271
@_$LB10270
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10273
mov $@_$MSG2402,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551472(%rbp),%rbx
push %rbx
lea 18446744073709551520(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem_off
add $16,%rsp
mov $@_$MSG2403,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
pushq $8
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2404,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2405,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 18446744073709551576(%rbp),%rsi
mov 16(%rsi),%ebx
movslq %ebx,%rbx
push %rbx
call @scc_back__out_rax
add $8,%rsp
mov $@_$MSG2406,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @scc_back__op_out_mem
add $8,%rsp
mov $@_$MSG2407,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10274
@_$LB10273
mov $@_$MSG2408,%rbx
push %rbx
mov 56(%r8),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB10274
@_$LB10271
@scc_back__gen_adro$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__write_msg
push %rbp
mov %rsp,%rbp
sub $144,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov $1,%r8
mov @_$DATA+11782160,%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10277
@_$LB10275
mov $1,%r9d
mov 88(%r12),%ebx
mov %r9d,%eax
mov %ebx,%ecx
cmp %ecx,%eax
jge @_$LB10280
@_$LB10278
mov %r9d,%esi
shl $3,%esi
lea (%r12,%rsi),%rbx
mov %r9d,%esi
shl $3,%esi
lea (%r12,%rsi),%rbx
mov (%rbx),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB10283
mov $@_$MSG2409,%rbx
push %rbx
mov (%r12),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10283
@_$LB10286
mov $@_$MSG2410,%rbx
push %rbx
call @scc__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r8
push %rdi
call @scc__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov $@_$MSG2411,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
push %rdi
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2412,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2413,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r9d,%ebx
shl $3,%ebx
lea (%r12,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2414,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov %r9d,%ebx
shl $3,%ebx
lea (%r12,%rbx),%rsi
mov (%rsi),%rbx
push %rbx
call @free
add $8,%rsp
mov %r9d,%esi
shl $3,%esi
lea (%r12,%rsi),%rbx
mov %rdi,(%rbx)
add $1,%r8
@_$LB10283
add $1,%r9d
mov 88(%r12),%ebx
mov %r9d,%eax
mov %ebx,%ecx
cmp %ecx,%eax
jl @_$LB10278
@_$LB10280
mov 352(%r12),%rbx
mov %rbx,%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10275
@_$LB10277
@scc_back__write_msg$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__gen_code
push %rbp
mov %rsp,%rbp
sub $1568,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
push %r8
push %r9
mov 88(%rsi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10289
mov $@_$MSG2415,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10291
push %rsi
call @scc_back__gen_mov
add $8,%rsp
jmp @_$LB10292
@_$LB10291
mov $@_$MSG2416,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10294
mov $@_$MSG2417,%rbx
push %rbx
push %rsi
call @scc_back__gen_basic_op
add $16,%rsp
jmp @_$LB10295
@_$LB10294
mov $@_$MSG2418,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10297
mov $@_$MSG2419,%rbx
push %rbx
push %rsi
call @scc_back__gen_basic_op
add $16,%rsp
jmp @_$LB10298
@_$LB10297
mov $@_$MSG2420,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10300
mov $@_$MSG2421,%rbx
push %rbx
push %rsi
call @scc_back__gen_basic_op
add $16,%rsp
jmp @_$LB10301
@_$LB10300
mov $@_$MSG2422,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10303
mov $@_$MSG2423,%rbx
push %rbx
push %rsi
call @scc_back__gen_basic_op
add $16,%rsp
jmp @_$LB10304
@_$LB10303
mov $@_$MSG2424,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10306
mov $@_$MSG2425,%rbx
push %rbx
push %rsi
call @scc_back__gen_basic_op
add $16,%rsp
jmp @_$LB10307
@_$LB10306
mov $@_$MSG2426,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10309
push %rsi
call @scc_back__gen_mul
add $8,%rsp
jmp @_$LB10310
@_$LB10309
mov $@_$MSG2427,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10312
push %rsi
call @scc_back__gen_div
add $8,%rsp
jmp @_$LB10313
@_$LB10312
mov $@_$MSG2428,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10315
push %rsi
call @scc_back__gen_mod
add $8,%rsp
jmp @_$LB10316
@_$LB10315
mov $@_$MSG2429,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10318
push %rsi
call @scc_back__gen_lsh
add $8,%rsp
jmp @_$LB10319
@_$LB10318
mov $@_$MSG2430,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10321
push %rsi
call @scc_back__gen_rsh
add $8,%rsp
jmp @_$LB10322
@_$LB10321
mov $@_$MSG2431,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10324
mov $@_$MSG2432,%rbx
push %rbx
mov $@_$MSG2433,%rbx
push %rbx
mov $@_$MSG2434,%rbx
push %rbx
mov $@_$MSG2435,%rbx
push %rbx
push %rsi
call @scc_back__gen_branch
add $40,%rsp
jmp @_$LB10325
@_$LB10324
mov $@_$MSG2436,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10327
mov $@_$MSG2437,%rbx
push %rbx
mov $@_$MSG2438,%rbx
push %rbx
mov $@_$MSG2439,%rbx
push %rbx
mov $@_$MSG2440,%rbx
push %rbx
push %rsi
call @scc_back__gen_branch
add $40,%rsp
jmp @_$LB10328
@_$LB10327
mov $@_$MSG2441,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10330
mov $@_$MSG2442,%rbx
push %rbx
mov $@_$MSG2443,%rbx
push %rbx
mov $@_$MSG2444,%rbx
push %rbx
mov $@_$MSG2445,%rbx
push %rbx
push %rsi
call @scc_back__gen_branch
add $40,%rsp
jmp @_$LB10331
@_$LB10330
mov $@_$MSG2446,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10333
mov $@_$MSG2447,%rbx
push %rbx
mov $@_$MSG2448,%rbx
push %rbx
mov $@_$MSG2449,%rbx
push %rbx
mov $@_$MSG2450,%rbx
push %rbx
push %rsi
call @scc_back__gen_branch
add $40,%rsp
jmp @_$LB10334
@_$LB10333
mov $@_$MSG2451,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10336
mov $@_$MSG2452,%rbx
push %rbx
mov $@_$MSG2453,%rbx
push %rbx
mov $@_$MSG2454,%rbx
push %rbx
mov $@_$MSG2455,%rbx
push %rbx
push %rsi
call @scc_back__gen_branch
add $40,%rsp
jmp @_$LB10337
@_$LB10336
mov $@_$MSG2456,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10339
mov $@_$MSG2457,%rbx
push %rbx
mov $@_$MSG2458,%rbx
push %rbx
mov $@_$MSG2459,%rbx
push %rbx
mov $@_$MSG2460,%rbx
push %rbx
push %rsi
call @scc_back__gen_branch
add $40,%rsp
jmp @_$LB10340
@_$LB10339
mov $@_$MSG2461,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10342
pushq $1
push %rsi
call @scc_back__gen_ld
add $16,%rsp
jmp @_$LB10343
@_$LB10342
mov $@_$MSG2462,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10345
pushq $3
push %rsi
call @scc_back__gen_ld
add $16,%rsp
jmp @_$LB10346
@_$LB10345
mov $@_$MSG2463,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10348
pushq $5
push %rsi
call @scc_back__gen_ld
add $16,%rsp
jmp @_$LB10349
@_$LB10348
mov $@_$MSG2464,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10351
pushq $7
push %rsi
call @scc_back__gen_ld
add $16,%rsp
jmp @_$LB10352
@_$LB10351
mov $@_$MSG2465,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10354
pushq $10
push %rsi
call @scc_back__gen_ld
add $16,%rsp
jmp @_$LB10355
@_$LB10354
mov $@_$MSG2466,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10357
pushq $9
push %rsi
call @scc_back__gen_ld
add $16,%rsp
jmp @_$LB10358
@_$LB10357
mov $@_$MSG2467,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10360
pushq $1
push %rsi
call @scc_back__gen_st
add $16,%rsp
jmp @_$LB10361
@_$LB10360
mov $@_$MSG2468,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10363
pushq $3
push %rsi
call @scc_back__gen_st
add $16,%rsp
jmp @_$LB10364
@_$LB10363
mov $@_$MSG2469,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10366
pushq $5
push %rsi
call @scc_back__gen_st
add $16,%rsp
jmp @_$LB10367
@_$LB10366
mov $@_$MSG2470,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10369
pushq $7
push %rsi
call @scc_back__gen_st
add $16,%rsp
jmp @_$LB10370
@_$LB10369
mov $@_$MSG2471,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10372
pushq $10
push %rsi
call @scc_back__gen_st
add $16,%rsp
jmp @_$LB10373
@_$LB10372
mov $@_$MSG2472,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10375
pushq $9
push %rsi
call @scc_back__gen_st
add $16,%rsp
jmp @_$LB10376
@_$LB10375
mov $@_$MSG2473,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10378
pushq $1
push %rsi
call @scc_back__gen_ldo
add $16,%rsp
jmp @_$LB10379
@_$LB10378
mov $@_$MSG2474,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10381
pushq $3
push %rsi
call @scc_back__gen_ldo
add $16,%rsp
jmp @_$LB10382
@_$LB10381
mov $@_$MSG2475,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10384
pushq $5
push %rsi
call @scc_back__gen_ldo
add $16,%rsp
jmp @_$LB10385
@_$LB10384
mov $@_$MSG2476,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10387
pushq $7
push %rsi
call @scc_back__gen_ldo
add $16,%rsp
jmp @_$LB10388
@_$LB10387
mov $@_$MSG2477,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10390
pushq $10
push %rsi
call @scc_back__gen_ldo
add $16,%rsp
jmp @_$LB10391
@_$LB10390
mov $@_$MSG2478,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10393
pushq $9
push %rsi
call @scc_back__gen_ldo
add $16,%rsp
jmp @_$LB10394
@_$LB10393
mov $@_$MSG2479,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10396
pushq $1
push %rsi
call @scc_back__gen_sto
add $16,%rsp
jmp @_$LB10397
@_$LB10396
mov $@_$MSG2480,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10399
pushq $3
push %rsi
call @scc_back__gen_sto
add $16,%rsp
jmp @_$LB10400
@_$LB10399
mov $@_$MSG2481,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10402
pushq $5
push %rsi
call @scc_back__gen_sto
add $16,%rsp
jmp @_$LB10403
@_$LB10402
mov $@_$MSG2482,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10405
pushq $7
push %rsi
call @scc_back__gen_sto
add $16,%rsp
jmp @_$LB10406
@_$LB10405
mov $@_$MSG2483,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10408
pushq $10
push %rsi
call @scc_back__gen_sto
add $16,%rsp
jmp @_$LB10409
@_$LB10408
mov $@_$MSG2484,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10411
pushq $9
push %rsi
call @scc_back__gen_sto
add $16,%rsp
jmp @_$LB10412
@_$LB10411
mov $@_$MSG2485,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10414
pushq $7
push %rsi
call @scc_back__gen_push
add $16,%rsp
jmp @_$LB10415
@_$LB10414
mov $@_$MSG2486,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10417
pushq $9
push %rsi
call @scc_back__gen_push
add $16,%rsp
jmp @_$LB10418
@_$LB10417
mov $@_$MSG2487,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10420
pushq $10
push %rsi
call @scc_back__gen_push
add $16,%rsp
jmp @_$LB10421
@_$LB10420
mov $@_$MSG2488,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10423
pushq $0
push %rsi
call @scc_back__gen_call
add $16,%rsp
jmp @_$LB10424
@_$LB10423
mov $@_$MSG2489,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10426
pushq $1
push %rsi
call @scc_back__gen_call
add $16,%rsp
jmp @_$LB10427
@_$LB10426
mov $@_$MSG2490,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10429
pushq $2
push %rsi
call @scc_back__gen_call
add $16,%rsp
jmp @_$LB10430
@_$LB10429
mov $@_$MSG2491,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10432
pushq $7
push %rsi
call @scc_back__gen_retval
add $16,%rsp
jmp @_$LB10433
@_$LB10432
mov $@_$MSG2492,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10435
pushq $9
push %rsi
call @scc_back__gen_retval
add $16,%rsp
jmp @_$LB10436
@_$LB10435
mov $@_$MSG2493,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10438
pushq $10
push %rsi
call @scc_back__gen_retval
add $16,%rsp
jmp @_$LB10439
@_$LB10438
mov $@_$MSG2494,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10441
push %rsi
call @scc_back__gen_not
add $8,%rsp
jmp @_$LB10442
@_$LB10441
mov $@_$MSG2495,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10444
push %rsi
call @scc_back__gen_neg
add $8,%rsp
jmp @_$LB10445
@_$LB10444
mov $@_$MSG2496,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10447
push %rsi
call @scc_back__gen_adr
add $8,%rsp
jmp @_$LB10448
@_$LB10447
mov $@_$MSG2497,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10450
push %rsi
call @scc_back__gen_adro
add $8,%rsp
jmp @_$LB10451
@_$LB10450
mov $@_$MSG2498,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10453
mov 88(%rsi),%ebx
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jge @_$LB10457
mov $@_$MSG2499,%rbx
push %rbx
mov 56(%rsi),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB10457
mov 8(%rsi),%rbx
push %rbx
call @scc_back__const_to_num
mov %rax,%rdi
add $8,%rsp
mov %rdi,%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10460
mov $@_$MSG2500,%rdi
push %rdi
call @scc_back__outs
add $8,%rsp
mov %rbx,%rdi
shl $3,%rdi
push %rdi
call @scc_back__out_num64
add $8,%rsp
mov $@_$MSG2501,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB10460
jmp @_$LB10454
@_$LB10453
mov $@_$MSG2502,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10462
mov 88(%rsi),%ebx
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jge @_$LB10466
mov $@_$MSG2503,%rbx
push %rbx
mov 56(%rsi),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB10466
mov %rsi,%rax
mov %rax,@_$DATA+11814928
mov 8(%rsi),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11815184
mov 96(%rsi),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11815056
mov @_$DATA+11815184,%rax
push %rax
call @scc_back__out_label
add $8,%rsp
mov $@_$MSG2504,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2505,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 96(%rsi),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10469
mov $@_$MSG2506,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 96(%rsi),%rdi
mov %rdi,%rbx
neg %rbx
push %rbx
call @scc_back__out_num64
add $8,%rsp
mov $@_$MSG2507,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB10469
mov $0,%ebx
mov %ebx,%eax
mov $11,%ecx
cmp %ecx,%eax
jge @_$LB10472
@_$LB10470
mov $1,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%r9
mov 232(%rsi),%r8
mov %r8,%rdi
and %r9,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10475
mov $@_$MSG2508,%rdi
push %rdi
call @scc_back__outs
add $8,%rsp
mov %ebx,%edi
add $1,%edi
movslq %edi,%rdi
push %rdi
call @scc_back__out_reg64
add $8,%rsp
mov $@_$MSG2509,%rdi
push %rdi
call @scc_back__outs
add $8,%rsp
mov %ebx,%edi
shl $3,%edi
lea (%rsi,%rdi),%r8
mov 256(%r8),%rdi
mov %rdi,%rax
mov $18446744073709551615,%rcx
cmp %rcx,%rax
je @_$LB10478
mov $@_$MSG2510,%rdi
push %rdi
call @scc_back__outs
add $8,%rsp
mov %ebx,%edi
shl $3,%edi
lea (%rsi,%rdi),%r8
mov 256(%r8),%rdi
mov %rdi,%r8
shl $3,%r8
mov %r8,%rdi
add $16,%rdi
push %rdi
pushq $7
call @scc_back__out_num
add $16,%rsp
mov $@_$MSG2511,%rdi
push %rdi
call @scc_back__outs
add $8,%rsp
mov %ebx,%edi
add $1,%edi
movslq %edi,%rdi
push %rdi
call @scc_back__out_reg64
add $8,%rsp
mov $@_$MSG2512,%rdi
push %rdi
call @scc_back__outs
add $8,%rsp
@_$LB10478
@_$LB10475
add $1,%ebx
mov %ebx,%eax
mov $11,%ecx
cmp %ecx,%eax
jl @_$LB10470
@_$LB10472
mov $0,%eax
mov %eax,@_$DATA+11815072
jmp @_$LB10463
@_$LB10462
mov $@_$MSG2513,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10480
mov @_$DATA+11815184,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10483
mov $@_$MSG2514,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov @_$DATA+11815184,%rax
push %rax
call @scc_back__out_label_name
add $8,%rsp
mov $@_$MSG2515,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $11,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10487
@_$LB10485
sub $1,%ebx
mov $1,%rax
mov %bl,%cl
shl %cl,%rax
mov %rax,%r8
mov @_$DATA+11814928,%rax
mov 232(%rax),%rdi
mov %rdi,%rsi
and %r8,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10490
mov $@_$MSG2516,%rsi
push %rsi
call @scc_back__outs
add $8,%rsp
mov %ebx,%esi
add $1,%esi
movslq %esi,%rsi
push %rsi
call @scc_back__out_reg64
add $8,%rsp
mov $@_$MSG2517,%rsi
push %rsi
call @scc_back__outs
add $8,%rsp
@_$LB10490
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10485
@_$LB10487
mov $@_$MSG2518,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $0,%rax
mov %rax,@_$DATA+11814928
jmp @_$LB10484
@_$LB10483
mov $@_$MSG2519,%rbx
push %rbx
mov 56(%rsi),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB10484
mov $0,%rax
mov %rax,@_$DATA+11815184
mov $0,%eax
mov %eax,@_$DATA+11815072
jmp @_$LB10481
@_$LB10480
mov $@_$MSG2520,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10492
mov 352(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10496
@_$LB10494
mov 92(%rsi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10499
mov $@_$MSG2521,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2522,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov @_$DATA+11815184,%rax
push %rax
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2523,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
jmp @_$LB10496
@_$LB10499
mov 88(%rsi),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10502
mov $@_$MSG2524,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10502
@_$LB10505
jmp @_$LB10496
@_$LB10502
mov 352(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10494
@_$LB10496
mov $0,%eax
mov %eax,@_$DATA+11815072
jmp @_$LB10493
@_$LB10492
mov $@_$MSG2525,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10507
mov 88(%rsi),%ebx
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jge @_$LB10511
mov $@_$MSG2526,%rbx
push %rbx
mov 56(%rsi),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB10511
mov $@_$MSG2527,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%rsi),%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2528,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $0,%eax
mov %eax,@_$DATA+11815072
jmp @_$LB10508
@_$LB10507
mov $@_$MSG2529,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10513
mov 88(%rsi),%ebx
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jge @_$LB10517
mov $@_$MSG2530,%rbx
push %rbx
mov 56(%rsi),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB10517
mov $@_$MSG2531,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov 8(%rsi),%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $@_$MSG2532,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov $0,%eax
mov %eax,@_$DATA+11815072
jmp @_$LB10514
@_$LB10513
mov $@_$MSG2533,%rbx
push %rbx
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10520
mov 88(%rsi),%ebx
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jge @_$LB10523
mov $@_$MSG2534,%rbx
push %rbx
mov 56(%rsi),%rbx
push %rbx
call @scc_back__error
add $16,%rsp
@_$LB10523
mov 8(%rsi),%rbx
push %rbx
call @scc_back__out_str
add $8,%rsp
mov $@_$MSG2535,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
@_$LB10520
@_$LB10514
@_$LB10508
@_$LB10493
@_$LB10481
@_$LB10463
@_$LB10454
@_$LB10451
@_$LB10448
@_$LB10445
@_$LB10442
@_$LB10439
@_$LB10436
@_$LB10433
@_$LB10430
@_$LB10427
@_$LB10424
@_$LB10421
@_$LB10418
@_$LB10415
@_$LB10412
@_$LB10409
@_$LB10406
@_$LB10403
@_$LB10400
@_$LB10397
@_$LB10394
@_$LB10391
@_$LB10388
@_$LB10385
@_$LB10382
@_$LB10379
@_$LB10376
@_$LB10373
@_$LB10370
@_$LB10367
@_$LB10364
@_$LB10361
@_$LB10358
@_$LB10355
@_$LB10352
@_$LB10349
@_$LB10346
@_$LB10343
@_$LB10340
@_$LB10337
@_$LB10334
@_$LB10331
@_$LB10328
@_$LB10325
@_$LB10322
@_$LB10319
@_$LB10316
@_$LB10313
@_$LB10310
@_$LB10307
@_$LB10304
@_$LB10301
@_$LB10298
@_$LB10295
@_$LB10292
@_$LB10289
@scc_back__gen_code$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc_back__bcode_run
push %rbp
mov %rsp,%rbp
sub $240,%rsp
push %rbx
push %rsi
call @scc_back__read_line
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10526
@_$LB10524
push %rsi
call @scc_back__ins_add
add $8,%rsp
push %rsi
call @free
add $8,%rsp
call @scc_back__read_line
mov %rax,%rbx
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10524
@_$LB10526
call @scc_back__load_global_vars
call @scc_back__load_labels
call @scc_back__load_branches
call @scc_back__load_local_vars
call @scc_back__reg_init
call @scc_back__write_msg
mov @_$DATA+11782160,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10529
@_$LB10527
push %rsi
call @scc_back__gen_code
add $8,%rsp
mov 352(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10527
@_$LB10529
mov $@_$MSG2536,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
mov @_$DATA+11814912,%rax
push %rax
call @scc_back__out_num64
add $8,%rsp
mov $@_$MSG2537,%rbx
push %rbx
call @scc_back__outs
add $8,%rsp
call @scc_back__out_flush
@scc_back__bcode_run$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@scc__main
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
mov %ebx,%eax
mov $3,%ecx
cmp %ecx,%eax
jge @_$LB10532
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $28,%rbx
push %rbx
mov $@_$MSG2538,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @scc__main$END
@_$LB10532
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov 8(%rdi),%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov %eax,@_$DATA+11625520
mov @_$DATA+11625520,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB10535
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $23,%rbx
push %rbx
mov $@_$MSG2539,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @scc__main$END
@_$LB10535
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $420,%rbx
push %rbx
mov $578,%rbx
push %rbx
mov 16(%rdi),%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov %eax,@_$DATA+11625536
mov @_$DATA+11625536,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB10538
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $24,%rbx
push %rbx
mov $@_$MSG2540,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @scc__main$END
@_$LB10538
call @scc_front__scc_run
call @scc_back__bcode_run
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+11625520,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+11625536,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rax
@scc__main$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__xmalloc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
mov %rsi,%rbx
add $16,%rbx
push %rbx
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10541
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $31,%rbx
push %rbx
mov $@_$MSG2541,%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB10541
mov %rdi,%rax
@assembler__xmalloc$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler____str_size
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $128,%rdi
mov %rdi,%rax
mov %r8,%rcx
cmp %rcx,%rax
jge @_$LB10544
@_$LB10542
mov %rdi,%rsi
mov %rdi,%rax
mov $3,%rcx
imul %rcx
mov %rax,%rsi
mov %rsi,%rax
mov $1,%cl
sar %cl,%rax
mov %rax,%rbx
mov %rbx,%rdi
mov %rdi,%rax
mov %r8,%rcx
cmp %rcx,%rax
jl @_$LB10542
@_$LB10544
mov %rdi,%rax
@assembler____str_size$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__xstrdup
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rdi,%rbx
add $1,%rbx
push %rbx
call @assembler____str_size
mov %rax,%rbx
add $8,%rsp
push %rbx
call @assembler__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
push %rdi
push %r8
push %rsi
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea (%rsi,%rdi),%rbx
movb $0,(%rbx)
mov %rsi,%rax
@assembler__xstrdup$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__str_c_app
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10546
pushq $128
call @assembler__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r9b,(%rdi)
movb $0,1(%rdi)
jmp @_$LB10547
@_$LB10546
push %r12
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r8,%rbx
add $1,%rbx
push %rbx
call @assembler____str_size
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r8,%rbx
add $2,%rbx
push %rbx
call @assembler____str_size
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rdi,%rax
mov %rsi,%rcx
cmp %rcx,%rax
jne @_$LB10549
mov %r12,%rdi
lea (%rdi,%r8),%rbx
mov %r9b,(%rbx)
mov %r8,%rbx
add $1,%rbx
mov %r8,%rsi
add $1,%rsi
lea (%rdi,%rsi),%rbx
movb $0,(%rbx)
jmp @_$LB10550
@_$LB10549
push %rsi
call @assembler__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r8
push %r12
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea (%rdi,%r8),%rbx
mov %r9b,(%rbx)
mov %r8,%rbx
add $1,%rbx
mov %r8,%rsi
add $1,%rsi
lea (%rdi,%rsi),%rbx
movb $0,(%rbx)
push %r12
call @free
add $8,%rsp
@_$LB10550
@_$LB10547
mov %rdi,%rax
@assembler__str_c_app$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__str_c_app2
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
push %r9
mov 32(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov %r12,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10552
pushq $128
call @assembler__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r9b,(%rdi)
movb $0,1(%rdi)
jmp @_$LB10553
@_$LB10552
lea (%r12,%rdi),%rbx
push %rbx
call @strlen
mov %rax,%rsi
add $8,%rsp
lea (%rsi,%rdi),%rbx
mov %rbx,%r8
mov %r8,%rbx
add $1,%rbx
push %rbx
call @assembler____str_size
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %r8,%rbx
add $2,%rbx
push %rbx
call @assembler____str_size
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rdi,%rax
mov %rsi,%rcx
cmp %rcx,%rax
jne @_$LB10555
mov %r12,%rdi
lea (%rdi,%r8),%rbx
mov %r9b,(%rbx)
mov %r8,%rbx
add $1,%rbx
mov %r8,%rsi
add $1,%rsi
lea (%rdi,%rsi),%rbx
movb $0,(%rbx)
jmp @_$LB10556
@_$LB10555
push %rsi
call @assembler__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %r8
push %r12
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
lea (%rdi,%r8),%rbx
mov %r9b,(%rbx)
mov %r8,%rbx
add $1,%rbx
mov %r8,%rsi
add $1,%rsi
lea (%rdi,%rsi),%rbx
movb $0,(%rbx)
push %r12
call @free
add $8,%rsp
@_$LB10556
@_$LB10553
mov %rdi,%rax
@assembler__str_c_app2$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__str_s_app
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB10559
@_$LB10557
mov (%rsi),%bl
movsbq %bl,%rbx
push %rbx
push %rdi
call @assembler__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %rsi,%rbx
add $1,%rbx
mov %rbx,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB10557
@_$LB10559
mov %rdi,%rax
@assembler__str_s_app$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__str_i_app
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov $10000000000000000000,%rdi
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10562
pushq $48
push %r9
call @assembler__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
jmp @assembler__str_i_app$END
@_$LB10562
mov %rdi,%rax
mov %r8,%rcx
cmp %rcx,%rax
jbe @_$LB10565
@_$LB10563
mov %rdi,%rax
mov $10,%rcx
xor %rdx,%rdx
div %rcx
mov %rax,%rdi
mov %rdi,%rax
mov %r8,%rcx
cmp %rcx,%rax
ja @_$LB10563
@_$LB10565
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10568
@_$LB10566
mov %r8,%rax
mov %rdi,%rcx
xor %rdx,%rdx
div %rcx
mov %rax,%rbx
mov %rbx,%rsi
mov %r8,%rax
mov %rdi,%rcx
xor %rdx,%rdx
div %rcx
mov %rdx,%rax
mov %rax,%r8
mov %rdi,%rax
mov $10,%rcx
xor %rdx,%rdx
div %rcx
mov %rax,%rdi
mov %esi,%ebx
add $48,%ebx
movslq %ebx,%rbx
push %rbx
push %r9
call @assembler__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r9
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10566
@_$LB10568
mov %r9,%rax
@assembler__str_i_app$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__error
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $@_$MSG2542,%rbx
push %rbx
call @assembler__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
movslq %r8d,%r8
push %r8
push %rdi
call @assembler__str_i_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov $@_$MSG2543,%rbx
push %rbx
push %rdi
call @assembler__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
push %rsi
push %rdi
call @assembler__str_s_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
pushq $10
push %rdi
call @assembler__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
push %rdi
call @strlen
mov %rax,%rsi
add $8,%rsp
mov %rsi,%rbx
push %rbx
mov %rdi,%rbx
push %rbx
mov $2,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $2,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@assembler__error$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__name_hash
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $20000,%edi
mov (%r8),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB10571
@_$LB10569
mov %edi,%eax
mov $11,%cl
shl %cl,%eax
mov %eax,%esi
mov %edi,%eax
mov $21,%cl
shr %cl,%eax
mov %eax,%ebx
mov %esi,%edi
or %ebx,%edi
mov (%r8),%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %ebx,%edi
add $1,%r8
mov (%r8),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB10569
@_$LB10571
mov %edi,%eax
mov $1021,%ecx
xor %edx,%edx
div %ecx
mov %edx,%eax
mov %eax,%ebx
mov %ebx,%ebx
mov %rbx,%rax
@assembler__name_hash$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__readc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov @_$DATA+11880880,%eax
mov @_$DATA+11880896,%ecx
cmp %ecx,%eax
jne @_$LB10574
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $65536,%rbx
push %rbx
lea @_$DATA+11815344,%rbx
push %rbx
mov @_$DATA+11815200,%ebx
movslq %ebx,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jg @_$LB10577
mov $18446744073709551615,%rax
jmp @assembler__readc$END
@_$LB10577
mov %esi,%eax
mov %eax,@_$DATA+11880896
mov $0,%eax
mov %eax,@_$DATA+11880880
@_$LB10574
lea @_$DATA+11815344,%rax
mov @_$DATA+11880880,%rcx
movslq %ecx,%rcx
add %rcx,%rax
mov %rax,%rsi
mov (%rsi),%bl
mov %bl,%sil
movzbl %sil,%esi
addl $1,@_$DATA+11880880
movslq %esi,%rsi
mov %rsi,%rax
@assembler__readc$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__read_line
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov $0,%esi
mov $0,%r8
call @assembler__readc
mov %eax,%ebx
mov %ebx,%edi
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB10580
@_$LB10578
mov %dil,%al
mov $10,%cl
cmp %cl,%al
jne @_$LB10583
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10586
mov $@_$MSG2544,%rbx
push %rbx
call @assembler__xstrdup
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
@_$LB10586
jmp @_$LB10580
@_$LB10583
movsbq %dil,%rdi
push %rdi
movslq %esi,%rsi
push %rsi
push %r8
call @assembler__str_c_app2
mov %rax,%rbx
add $24,%rsp
mov %rbx,%r8
add $1,%esi
call @assembler__readc
mov %eax,%ebx
mov %ebx,%edi
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB10578
@_$LB10580
addq $1,@_$DATA+11815328
mov %r8,%rax
@assembler__read_line$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__load_file
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
call @assembler__read_line
mov %rax,%rbx
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10589
@_$LB10587
pushq $120
call @assembler__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rdi,(%rsi)
mov @_$DATA+11815328,%rax
mov %rax,8(%rsi)
movq $0,112(%rsi)
movq $0,88(%rsi)
mov @_$DATA+11880912,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10591
mov @_$DATA+11880928,%rcx
mov %rsi,112(%rcx)
jmp @_$LB10592
@_$LB10591
mov %rsi,%rax
mov %rax,@_$DATA+11880912
@_$LB10592
mov %rsi,%rax
mov %rax,@_$DATA+11880928
call @assembler__read_line
mov %rax,%rbx
mov %rbx,%rdi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10587
@_$LB10589
@assembler__load_file$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__swrite
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov @_$DATA+11815296,%rax
mov 36(%rax),%esi
lea (%rsi,%r8),%ebx
mov %ebx,%eax
mov $48,%ecx
cmp %ecx,%eax
jle @_$LB10594
mov @_$DATA+11815296,%rax
mov 36(%rax),%esi
lea (%rsi,%r8),%ebx
movslq %ebx,%rbx
push %rbx
call @assembler__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov @_$DATA+11815296,%rax
mov 36(%rax),%ebx
mov %ebx,%eax
mov $48,%ecx
cmp %ecx,%eax
jg @_$LB10597
mov @_$DATA+11815296,%rax
mov 36(%rax),%ebx
movslq %ebx,%rbx
push %rbx
mov @_$DATA+11815296,%rbx
add $40,%rbx
push %rbx
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
jmp @_$LB10598
@_$LB10597
mov @_$DATA+11815296,%rax
mov 36(%rax),%ebx
movslq %ebx,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 88(%rax),%rbx
push %rbx
push %rdi
call @memcpy
mov %rax,%rbx
add $24,%rsp
@_$LB10598
push %r8
push %r9
mov @_$DATA+11815296,%rax
mov 36(%rax),%esi
lea (%rdi,%rsi),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov @_$DATA+11815296,%rax
mov 88(%rax),%rbx
push %rbx
call @free
add $8,%rsp
mov @_$DATA+11815296,%rcx
mov %rdi,88(%rcx)
jmp @_$LB10595
@_$LB10594
push %r8
push %r9
mov @_$DATA+11815296,%rdi
add $40,%rdi
mov @_$DATA+11815296,%rax
mov 36(%rax),%esi
lea (%rdi,%rsi),%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
@_$LB10595
mov @_$DATA+11815296,%rax
mov 36(%rax),%ebx
add %r8d,%ebx
mov @_$DATA+11815296,%rcx
mov %ebx,36(%rcx)
add %r8,@_$DATA+11881008
add %r8,@_$DATA+11815248
@assembler__swrite$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__soutc
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
pushq $1
lea 16(%rbp),%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
@assembler__soutc$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__outc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov @_$DATA+11946560,%eax
mov $65536,%ecx
cmp %ecx,%eax
jne @_$LB10601
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+11946560,%ebx
movslq %ebx,%rbx
push %rbx
lea @_$DATA+11881024,%rbx
push %rbx
mov @_$DATA+11815216,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%eax
mov %eax,@_$DATA+11946560
@_$LB10601
lea @_$DATA+11881024,%rax
mov @_$DATA+11946560,%rcx
movslq %ecx,%rcx
add %rcx,%rax
mov %rax,%rbx
mov %sil,(%rbx)
addl $1,@_$DATA+11946560
@assembler__outc$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__out_flush
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov @_$DATA+11946560,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10604
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+11946560,%ebx
movslq %ebx,%rbx
push %rbx
lea @_$DATA+11881024,%rbx
push %rbx
mov @_$DATA+11815216,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB10604
@assembler__out_flush$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__c_write
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov 16(%rbp),%rdi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10607
@_$LB10605
mov (%rdi),%bl
movsbq %bl,%rbx
push %rbx
call @assembler__outc
add $8,%rsp
add $1,%rdi
sub $1,%esi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10605
@_$LB10607
@assembler__c_write$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__out_addr
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
mov $64,%r8d
@_$LB10608
sub $4,%r8d
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $@_$MSG2545,%rdi
mov %r9,%rax
mov %r8b,%cl
shr %cl,%rax
mov %rax,%rsi
mov %rsi,%rbx
and $15,%rbx
lea (%rdi,%rbx),%rsi
mov %rsi,%rbx
push %rbx
mov @_$DATA+11815232,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10608
@_$LB10610
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $2,%rbx
push %rbx
mov $@_$MSG2546,%rsi
mov %rsi,%rbx
push %rbx
mov @_$DATA+11815232,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@assembler__out_addr$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__mkelf
push %rbp
mov %rsp,%rbp
sub $208,%rsp
push %rbx
push %rsi
pushq $7
mov $@_$MSG2547,%rbx
push %rbx
lea @_$DATA+11880944,%rbx
push %rbx
call @memcpy
mov %rax,%rbx
add $24,%rsp
mov $2,%ax
mov %ax,@_$DATA+11880960
mov $62,%ax
mov %ax,@_$DATA+11880962
mov $1,%eax
mov %eax,@_$DATA+11880964
mov $64,%rax
mov %rax,@_$DATA+11880976
mov $64,%ax
mov %ax,@_$DATA+11880996
mov $56,%ax
mov %ax,@_$DATA+11880998
mov $2,%ax
mov %ax,@_$DATA+11881000
mov $64,%ax
mov %ax,@_$DATA+11881002
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $64,%rbx
push %rbx
lea @_$DATA+11880944,%rsi
mov %rsi,%rbx
push %rbx
mov @_$DATA+11815216,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%eax
mov %eax,18446744073709551504(%rbp)
mov $5,%eax
mov %eax,18446744073709551508(%rbp)
mov $0,%rax
mov %rax,18446744073709551512(%rbp)
mov $65536,%rax
mov %rax,18446744073709551520(%rbp)
mov $65536,%rax
mov %rax,18446744073709551528(%rbp)
mov @_$DATA+11881008,%rbx
add $176,%rbx
mov %rbx,18446744073709551536(%rbp)
mov @_$DATA+11881008,%rbx
add $176,%rbx
mov %rbx,18446744073709551544(%rbp)
mov $4096,%rax
mov %rax,18446744073709551552(%rbp)
mov $1,%eax
mov %eax,18446744073709551560(%rbp)
mov $6,%eax
mov %eax,18446744073709551564(%rbp)
mov $0,%rax
mov %rax,18446744073709551568(%rbp)
mov $536870912,%rax
mov %rax,18446744073709551576(%rbp)
mov $536870912,%rax
mov %rax,18446744073709551584(%rbp)
mov $0,%rax
mov %rax,18446744073709551592(%rbp)
mov @_$DATA+11815264,%rax
mov %rax,18446744073709551600(%rbp)
mov $4096,%rax
mov %rax,18446744073709551608(%rbp)
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $112,%rbx
push %rbx
lea 18446744073709551504(%rbp),%rbx
push %rbx
mov @_$DATA+11815216,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov @_$DATA+11880912,%rax
mov %rax,@_$DATA+11815296
mov @_$DATA+11815296,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10613
@_$LB10611
mov @_$DATA+11815296,%rax
mov 36(%rax),%ebx
mov %ebx,%eax
mov $48,%ecx
cmp %ecx,%eax
jle @_$LB10615
mov @_$DATA+11815296,%rax
mov 36(%rax),%ebx
movslq %ebx,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 88(%rax),%rbx
push %rbx
call @assembler__c_write
add $16,%rsp
jmp @_$LB10616
@_$LB10615
mov @_$DATA+11815296,%rax
mov 36(%rax),%ebx
movslq %ebx,%rbx
push %rbx
mov @_$DATA+11815296,%rbx
add $40,%rbx
push %rbx
call @assembler__c_write
add $16,%rsp
@_$LB10616
mov @_$DATA+11815232,%eax
mov $0,%ecx
cmp %ecx,%eax
jl @_$LB10619
mov @_$DATA+11815296,%rax
mov 16(%rax),%rbx
push %rbx
call @assembler__out_addr
add $8,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov (%rax),%rbx
push %rbx
call @strlen
mov %rax,%rsi
add $8,%rsp
mov %rsi,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov (%rax),%rsi
mov %rsi,%rbx
push %rbx
mov @_$DATA+11815232,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $@_$MSG2548,%rsi
mov %rsi,%rbx
push %rbx
mov @_$DATA+11815232,%ebx
movslq %ebx,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB10619
mov @_$DATA+11815296,%rax
mov 112(%rax),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11815296
mov @_$DATA+11815296,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10611
@_$LB10613
call @assembler__out_flush
@assembler__mkelf$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__read_str
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov $0,%r8
mov $0,%edi
movsbq %r9b,%r9
push %r9
push %r8
call @assembler__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%r8
mov (%r12),%rbx
add $1,%rbx
mov %rbx,(%r12)
mov (%r12),%rsi
mov (%rsi),%bl
mov %bl,%sil
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB10622
@_$LB10620
movsbq %sil,%rsi
push %rsi
movslq %edi,%rdi
push %rdi
push %r8
call @assembler__str_c_app2
mov %rax,%rbx
add $24,%rsp
mov %rbx,%r8
add $1,%edi
mov %sil,%al
mov %r9b,%cl
cmp %cl,%al
jne @_$LB10625
jmp @_$LB10622
@_$LB10625
mov %sil,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB10628
mov (%r12),%rbx
add $1,%rbx
mov %rbx,(%r12)
mov (%r12),%rsi
mov (%rsi),%bl
mov %bl,%sil
mov %sil,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB10631
jmp @_$LB10622
@_$LB10631
movsbq %sil,%rsi
push %rsi
movslq %edi,%rdi
push %rdi
push %r8
call @assembler__str_c_app2
mov %rax,%rbx
add $24,%rsp
mov %rbx,%r8
add $1,%edi
@_$LB10628
mov (%r12),%rbx
add $1,%rbx
mov %rbx,(%r12)
mov (%r12),%rsi
mov (%rsi),%bl
mov %bl,%sil
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB10620
@_$LB10622
mov %sil,%al
mov $0,%cl
cmp %cl,%al
je @_$LB10634
mov (%r12),%rbx
add $1,%rbx
mov %rbx,(%r12)
@_$LB10634
mov %r8,%rax
@assembler__read_str$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__skip_spaces
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $32,%cl
cmp %cl,%al
je @_$LB10640
mov (%rsi),%bl
mov %bl,%al
mov $13,%cl
cmp %cl,%al
je @_$LB10640
@_$LB10646
mov (%rsi),%bl
mov %bl,%al
mov $9,%cl
cmp %cl,%al
je @_$LB10640
@_$LB10643
mov (%rsi),%bl
mov %bl,%al
mov $11,%cl
cmp %cl,%al
jne @_$LB10637
@_$LB10640
@_$LB10635
add $1,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $32,%cl
cmp %cl,%al
je @_$LB10635
mov (%rsi),%bl
mov %bl,%al
mov $13,%cl
cmp %cl,%al
je @_$LB10635
@_$LB10655
mov (%rsi),%bl
mov %bl,%al
mov $9,%cl
cmp %cl,%al
je @_$LB10635
@_$LB10652
mov (%rsi),%bl
mov %bl,%al
mov $11,%cl
cmp %cl,%al
je @_$LB10635
@_$LB10649
@_$LB10637
mov %rsi,%rax
@assembler__skip_spaces$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__is_id
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 16(%rbp),%rbx
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10670
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jle @_$LB10661
@_$LB10670
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB10673
mov %bl,%al
mov $90,%cl
cmp %cl,%al
jle @_$LB10661
@_$LB10673
@_$LB10667
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB10676
mov %bl,%al
mov $122,%cl
cmp %cl,%al
jle @_$LB10661
@_$LB10676
@_$LB10664
mov %bl,%al
mov $95,%cl
cmp %cl,%al
jne @_$LB10658
@_$LB10661
mov $1,%rax
jmp @assembler__is_id$END
@_$LB10658
mov $0,%rax
@assembler__is_id$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__is_id2
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
mov 16(%rbp),%rbx
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10694
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jle @_$LB10682
@_$LB10694
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB10697
mov %bl,%al
mov $90,%cl
cmp %cl,%al
jle @_$LB10682
@_$LB10697
@_$LB10691
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB10700
mov %bl,%al
mov $122,%cl
cmp %cl,%al
jle @_$LB10682
@_$LB10700
@_$LB10688
mov %bl,%al
mov $95,%cl
cmp %cl,%al
je @_$LB10682
@_$LB10685
mov %bl,%al
mov $36,%cl
cmp %cl,%al
jne @_$LB10679
@_$LB10682
mov $1,%rax
jmp @assembler__is_id2$END
@_$LB10679
mov $0,%rax
@assembler__is_id2$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__read_word
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
mov $0,%esi
mov (%r9),%rbx
push %rbx
call @assembler__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov (%r8),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB10703
mov $0,%rax
jmp @assembler__read_word$END
@_$LB10703
mov $0,%rdi
mov (%r8),%bl
movsbq %bl,%rbx
push %rbx
call @assembler__is_id
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10705
mov (%r8),%bl
movsbq %bl,%rbx
push %rbx
call @assembler__is_id2
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10709
@_$LB10707
mov (%r8),%bl
movsbq %bl,%rbx
push %rbx
movslq %esi,%rsi
push %rsi
push %rdi
call @assembler__str_c_app2
mov %rax,%rbx
add $24,%rsp
mov %rbx,%rdi
add $1,%esi
add $1,%r8
mov (%r8),%bl
movsbq %bl,%rbx
push %rbx
call @assembler__is_id2
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10707
@_$LB10709
mov %r8,(%r9)
mov %rdi,%rax
jmp @assembler__read_word$END
jmp @_$LB10706
@_$LB10705
mov (%r8),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
jne @_$LB10711
mov %r8,(%r9)
pushq $39
push %r9
call @assembler__read_str
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
jmp @assembler__read_word$END
jmp @_$LB10712
@_$LB10711
mov (%r8),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB10715
mov %r8,(%r9)
pushq $34
push %r9
call @assembler__read_str
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rax
jmp @assembler__read_word$END
@_$LB10715
@_$LB10712
@_$LB10706
mov (%r8),%bl
movsbq %bl,%rbx
push %rbx
push %rdi
call @assembler__str_c_app
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov %r8,%rbx
add $1,%rbx
mov %rbx,(%r9)
mov %rdi,%rax
@assembler__read_word$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__const_to_num
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
mov 16(%rbp),%r12
mov $0,%r9
mov (%r12),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
jne @_$LB10717
add $1,%r12
mov (%r12),%bl
mov %bl,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB10720
mov 1(%r12),%bl
mov %bl,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB10723
mov $92,%r9
jmp @_$LB10724
@_$LB10723
mov 1(%r12),%bl
mov %bl,%al
mov $110,%cl
cmp %cl,%al
jne @_$LB10726
mov $10,%r9
jmp @_$LB10727
@_$LB10726
mov 1(%r12),%bl
mov %bl,%al
mov $116,%cl
cmp %cl,%al
jne @_$LB10729
mov $9,%r9
jmp @_$LB10730
@_$LB10729
mov 1(%r12),%bl
mov %bl,%al
mov $118,%cl
cmp %cl,%al
jne @_$LB10732
mov $11,%r9
jmp @_$LB10733
@_$LB10732
mov 1(%r12),%bl
mov %bl,%al
mov $114,%cl
cmp %cl,%al
jne @_$LB10735
mov $13,%r9
jmp @_$LB10736
@_$LB10735
mov 1(%r12),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
jne @_$LB10738
mov $39,%r9
jmp @_$LB10739
@_$LB10738
mov 1(%r12),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB10741
mov $34,%r9
jmp @_$LB10742
@_$LB10741
mov 1(%r12),%bl
mov %bl,%al
mov $63,%cl
cmp %cl,%al
jne @_$LB10744
mov $63,%r9
jmp @_$LB10745
@_$LB10744
mov 1(%r12),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10747
mov 1(%r12),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB10747
@_$LB10751
mov $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10754
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB10754
@_$LB10757
@_$LB10752
mov %r9,%rax
mov $3,%cl
shl %cl,%rax
mov %rax,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
add $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10760
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jle @_$LB10752
@_$LB10760
@_$LB10754
jmp @_$LB10748
@_$LB10747
mov 1(%r12),%bl
mov %bl,%al
mov $120,%cl
cmp %cl,%al
jne @_$LB10762
mov $2,%r8d
@_$LB10764
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10768
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB10768
@_$LB10772
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB10769
@_$LB10768
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB10774
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $70,%cl
cmp %cl,%al
jg @_$LB10774
@_$LB10778
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $65,%bl
mov %bl,%sil
add $10,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB10775
@_$LB10774
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB10780
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $102,%cl
cmp %cl,%al
jg @_$LB10780
@_$LB10784
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $97,%bl
mov %bl,%sil
add $10,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB10781
@_$LB10780
jmp @_$LB10766
@_$LB10781
@_$LB10775
@_$LB10769
add $1,%r8d
jmp @_$LB10764
@_$LB10766
jmp @_$LB10763
@_$LB10762
mov $92,%r9
@_$LB10763
@_$LB10748
@_$LB10745
@_$LB10742
@_$LB10739
@_$LB10736
@_$LB10733
@_$LB10730
@_$LB10727
@_$LB10724
jmp @_$LB10721
@_$LB10720
mov (%r12),%bl
mov %bl,%r9b
movsbq %r9b,%r9
@_$LB10721
jmp @_$LB10718
@_$LB10717
mov (%r12),%bl
mov %bl,%al
mov $49,%cl
cmp %cl,%al
jl @_$LB10786
mov (%r12),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB10786
@_$LB10790
mov $0,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10793
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB10793
@_$LB10796
@_$LB10791
mov %r9,%rdi
mov %r9,%rax
mov $10,%rcx
mul %rcx
mov %rax,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
add $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10799
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jle @_$LB10791
@_$LB10799
@_$LB10793
jmp @_$LB10787
@_$LB10786
mov 1(%r12),%bl
mov %bl,%al
mov $88,%cl
cmp %cl,%al
je @_$LB10805
mov 1(%r12),%bl
mov %bl,%al
mov $120,%cl
cmp %cl,%al
jne @_$LB10801
@_$LB10805
mov $2,%r8d
@_$LB10806
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10810
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB10810
@_$LB10814
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB10811
@_$LB10810
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB10816
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $70,%cl
cmp %cl,%al
jg @_$LB10816
@_$LB10820
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $65,%bl
mov %bl,%sil
add $10,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB10817
@_$LB10816
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB10822
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $102,%cl
cmp %cl,%al
jg @_$LB10822
@_$LB10826
mov %r9,%rdi
shl $4,%rdi
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $97,%bl
mov %bl,%sil
add $10,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
jmp @_$LB10823
@_$LB10822
jmp @_$LB10808
@_$LB10823
@_$LB10817
@_$LB10811
add $1,%r8d
jmp @_$LB10806
@_$LB10808
jmp @_$LB10802
@_$LB10801
mov $0,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10829
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB10829
@_$LB10832
@_$LB10827
mov %r9,%rax
mov $3,%cl
shl %cl,%rax
mov %rax,%rdi
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %sil,%esi
lea (%rdi,%rsi),%rbx
mov %rbx,%r9
add $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10835
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jle @_$LB10827
@_$LB10835
@_$LB10829
@_$LB10802
@_$LB10787
@_$LB10718
mov %r9,%rax
@assembler__const_to_num$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__sgetc
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov (%r12),%bl
mov %bl,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB10837
mov 1(%r12),%bl
mov %bl,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB10840
movb $92,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @assembler__sgetc$END
jmp @_$LB10841
@_$LB10840
mov 1(%r12),%bl
mov %bl,%al
mov $110,%cl
cmp %cl,%al
jne @_$LB10843
movb $10,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @assembler__sgetc$END
jmp @_$LB10844
@_$LB10843
mov 1(%r12),%bl
mov %bl,%al
mov $116,%cl
cmp %cl,%al
jne @_$LB10846
movb $9,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @assembler__sgetc$END
jmp @_$LB10847
@_$LB10846
mov 1(%r12),%bl
mov %bl,%al
mov $118,%cl
cmp %cl,%al
jne @_$LB10849
movb $11,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @assembler__sgetc$END
jmp @_$LB10850
@_$LB10849
mov 1(%r12),%bl
mov %bl,%al
mov $114,%cl
cmp %cl,%al
jne @_$LB10852
movb $13,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @assembler__sgetc$END
jmp @_$LB10853
@_$LB10852
mov 1(%r12),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
jne @_$LB10855
movb $39,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @assembler__sgetc$END
jmp @_$LB10856
@_$LB10855
mov 1(%r12),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB10858
movb $34,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @assembler__sgetc$END
jmp @_$LB10859
@_$LB10858
mov 1(%r12),%bl
mov %bl,%al
mov $63,%cl
cmp %cl,%al
jne @_$LB10861
movb $63,(%r9)
mov %r12,%rbx
add $2,%rbx
mov %rbx,%rax
jmp @assembler__sgetc$END
jmp @_$LB10862
@_$LB10861
mov 1(%r12),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10864
mov 1(%r12),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB10864
@_$LB10868
mov $1,%r8d
movb $0,(%r9)
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10871
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jg @_$LB10871
@_$LB10874
@_$LB10869
mov (%r9),%bl
mov %bl,%al
mov $3,%cl
shl %cl,%al
mov %al,%dil
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %dil,%edi
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %bl,(%r9)
add $1,%r8d
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10877
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $55,%cl
cmp %cl,%al
jle @_$LB10869
@_$LB10877
@_$LB10871
lea (%r12,%r8),%rbx
mov %rbx,%rax
jmp @assembler__sgetc$END
jmp @_$LB10865
@_$LB10864
mov 1(%r12),%bl
mov %bl,%al
mov $120,%cl
cmp %cl,%al
jne @_$LB10879
mov $2,%r8d
movb $0,(%r9)
@_$LB10881
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10885
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jg @_$LB10885
@_$LB10889
mov (%r9),%bl
mov %bl,%dil
shl $4,%dil
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%sil
sub $48,%sil
movsbl %dil,%edi
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %bl,(%r9)
jmp @_$LB10886
@_$LB10885
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $65,%cl
cmp %cl,%al
jl @_$LB10891
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $70,%cl
cmp %cl,%al
jg @_$LB10891
@_$LB10895
mov (%r9),%bl
mov %bl,%dil
shl $4,%dil
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $65,%bl
mov %bl,%sil
add $10,%sil
movsbl %dil,%edi
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %bl,(%r9)
jmp @_$LB10892
@_$LB10891
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $97,%cl
cmp %cl,%al
jl @_$LB10897
lea (%r12,%r8),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $102,%cl
cmp %cl,%al
jg @_$LB10897
@_$LB10901
mov (%r9),%bl
mov %bl,%dil
shl $4,%dil
lea (%r12,%r8),%rbx
mov (%rbx),%sil
mov %sil,%bl
sub $97,%bl
mov %bl,%sil
add $10,%sil
movsbl %dil,%edi
movsbl %sil,%esi
lea (%rdi,%rsi),%ebx
mov %bl,(%r9)
jmp @_$LB10898
@_$LB10897
jmp @_$LB10883
@_$LB10898
@_$LB10892
@_$LB10886
add $1,%r8d
jmp @_$LB10881
@_$LB10883
lea (%r12,%r8),%rbx
mov %rbx,%rax
jmp @assembler__sgetc$END
jmp @_$LB10880
@_$LB10879
movb $92,(%r9)
mov %r12,%rbx
add $1,%rbx
mov %rbx,%rax
jmp @assembler__sgetc$END
@_$LB10880
@_$LB10865
@_$LB10862
@_$LB10859
@_$LB10856
@_$LB10853
@_$LB10850
@_$LB10847
@_$LB10844
@_$LB10841
jmp @_$LB10838
@_$LB10837
mov (%r12),%bl
mov %bl,(%r9)
mov %r12,%rbx
add $1,%rbx
mov %rbx,%rax
@_$LB10838
@assembler__sgetc$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__format_hash
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
mov $0,%r8d
mov $301,%edi
mov (%r9),%bl
mov %bl,%sil
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB10904
@_$LB10902
mov %sil,%al
mov $40,%cl
cmp %cl,%al
jne @_$LB10906
add $1,%r8d
jmp @_$LB10907
@_$LB10906
mov %sil,%al
mov $41,%cl
cmp %cl,%al
jne @_$LB10909
sub $1,%r8d
jmp @_$LB10910
@_$LB10909
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10913
mov %sil,%al
mov $42,%cl
cmp %cl,%al
jne @_$LB10915
mov %edi,%esi
mov %edi,%eax
mov $97,%ecx
mul %ecx
mov %eax,%esi
mov %esi,%ebx
add $31,%ebx
mov %ebx,%edi
jmp @_$LB10916
@_$LB10915
mov %sil,%al
mov $44,%cl
cmp %cl,%al
jne @_$LB10918
mov %edi,%esi
mov %edi,%eax
mov $89,%ecx
mul %ecx
mov %eax,%esi
mov %esi,%ebx
add $19,%ebx
mov %ebx,%edi
jmp @_$LB10919
@_$LB10918
mov %sil,%al
mov $37,%cl
cmp %cl,%al
jne @_$LB10922
mov %edi,%esi
mov %edi,%eax
mov $47,%ecx
mul %ecx
mov %eax,%esi
mov %esi,%ebx
add $173,%ebx
mov %ebx,%edi
@_$LB10922
@_$LB10919
@_$LB10916
@_$LB10913
@_$LB10910
@_$LB10907
add $1,%r9
mov (%r9),%bl
mov %bl,%sil
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB10902
@_$LB10904
mov %edi,%eax
mov $1021,%ecx
xor %edx,%edx
div %ecx
mov %edx,%eax
mov %eax,%ebx
mov %ebx,%ebx
mov %rbx,%rax
@assembler__format_hash$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__label_tab_add
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
push %rdi
push %r8
push %rsi
call @assembler__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%r8d
pushq $24
call @assembler__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rsi,(%rdi)
mov @_$DATA+11815248,%rax
mov %rax,8(%rdi)
mov %r8d,%ebx
shl $3,%ebx
lea @_$DATA+11946576,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,16(%rdi)
mov %r8d,%esi
shl $3,%esi
lea @_$DATA+11946576,%rbx
movslq %esi,%rsi
add %rsi,%rbx
mov %rdi,(%rbx)
@assembler__label_tab_add$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__label_tab_find
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %rdi
call @assembler__name_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
mov %esi,%ebx
shl $3,%ebx
lea @_$DATA+11946576,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10925
@_$LB10923
push %rdi
mov (%rsi),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10928
mov %rsi,%rax
jmp @assembler__label_tab_find$END
@_$LB10928
mov 16(%rsi),%rbx
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB10923
@_$LB10925
mov $0,%rax
@assembler__label_tab_find$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__parse_num
push %rbp
mov %rsp,%rbp
sub $112,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov (%r12),%rbx
mov %rbx,%r8
mov (%r12),%rbx
push %rbx
call @assembler__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%r12)
mov $0,%edi
mov (%r12),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $45,%cl
cmp %cl,%al
jne @_$LB10931
mov (%r12),%rbx
add $1,%rbx
mov %rbx,(%r12)
mov $1,%edi
@_$LB10931
mov (%r12),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $64,%cl
cmp %cl,%al
jne @_$LB10933
mov (%r12),%rbx
add $1,%rbx
mov %rbx,(%r12)
push %r12
call @assembler__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov $@_$MSG2549,%rbx
push %rbx
push %r8
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB10936
push %r8
call @free
add $8,%rsp
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10939
mov @_$DATA+11815280,%rbx
neg %rbx
mov %rbx,(%r9)
jmp @_$LB10940
@_$LB10939
mov @_$DATA+11815280,%rax
mov %rax,(%r9)
@_$LB10940
mov $1,%eax
mov @_$DATA+11815296,%rcx
mov %eax,32(%rcx)
mov $0,%rax
jmp @assembler__parse_num$END
jmp @_$LB10937
@_$LB10936
push %r8
call @assembler__label_tab_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov @_$DATA+11815312,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10942
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB10946
push %r8
call @free
add $8,%rsp
mov 8(%rsi),%rbx
mov %rbx,(%r9)
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10949
mov (%r9),%rsi
mov %rsi,%rbx
neg %rbx
mov %rbx,(%r9)
@_$LB10949
mov $0,%rax
jmp @assembler__parse_num$END
@_$LB10946
mov $@_$MSG2550,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
jmp @_$LB10943
@_$LB10942
mov $1,%eax
mov @_$DATA+11815296,%rcx
mov %eax,32(%rcx)
@_$LB10943
@_$LB10937
push %r8
call @free
add $8,%rsp
mov $18446744073709551614,%rax
jmp @assembler__parse_num$END
jmp @_$LB10934
@_$LB10933
mov (%r12),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $48,%cl
cmp %cl,%al
jl @_$LB10958
mov (%r12),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $57,%cl
cmp %cl,%al
jle @_$LB10955
@_$LB10958
mov (%r12),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $39,%cl
cmp %cl,%al
jne @_$LB10951
@_$LB10955
mov (%r12),%rbx
push %rbx
call @assembler__const_to_num
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%r9)
push %r12
call @assembler__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
push %r8
call @free
add $8,%rsp
jmp @_$LB10952
@_$LB10951
mov %r8,(%r12)
mov $18446744073709551615,%rax
jmp @assembler__parse_num$END
@_$LB10952
@_$LB10934
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10961
mov (%r9),%rsi
mov %rsi,%rbx
neg %rbx
mov %rbx,(%r9)
@_$LB10961
mov $0,%rax
@assembler__parse_num$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__parse_const
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
push %r14
mov 16(%rbp),%r14
mov (%r14),%rbx
mov %rbx,%rdi
mov $0,%r8d
mov $0,%esi
movq $0,(%r13)
@_$LB10962
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %r14
call @assembler__parse_num
mov %eax,%ebx
add $16,%rsp
mov %ebx,%r9d
mov %r9d,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB10967
mov %rdi,(%r14)
mov $18446744073709551615,%rax
jmp @assembler__parse_const$END
@_$LB10967
mov %r9d,%eax
mov $4294967294,%ecx
cmp %ecx,%eax
jne @_$LB10970
mov $1,%r8d
@_$LB10970
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10972
mov (%r13),%rbx
mov %rbx,%rax
mov 18446744073709551600(%rbp),%rcx
sub %rcx,%rax
mov %rax,%rbx
mov %rbx,(%r13)
jmp @_$LB10973
@_$LB10972
mov (%r13),%rbx
mov %rbx,%rax
mov 18446744073709551600(%rbp),%rcx
add %rcx,%rax
mov %rax,%rbx
mov %rbx,(%r13)
@_$LB10973
mov (%r14),%rbx
push %rbx
call @assembler__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%r14)
mov (%r14),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $43,%cl
cmp %cl,%al
jne @_$LB10975
mov $0,%esi
mov (%r14),%rbx
add $1,%rbx
mov %rbx,(%r14)
jmp @_$LB10976
@_$LB10975
mov (%r14),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $45,%cl
cmp %cl,%al
jne @_$LB10978
mov $1,%esi
mov (%r14),%rbx
add $1,%rbx
mov %rbx,(%r14)
jmp @_$LB10979
@_$LB10978
jmp @_$LB10964
@_$LB10979
@_$LB10976
jmp @_$LB10962
@_$LB10964
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10982
movq $0,(%r13)
@_$LB10982
mov $0,%rax
@assembler__parse_const$END
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__str_match
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov (%r9),%rbx
mov %rbx,%rsi
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov (%r9),%rbx
push %rbx
call @assembler__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%r9)
movslq %edi,%rdi
push %rdi
push %r8
mov (%r9),%rbx
push %rbx
call @strncmp
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10985
mov %rsi,(%r9)
mov $0,%rax
jmp @assembler__str_match$END
@_$LB10985
mov (%r9),%rbx
movslq %edi,%rdi
add %rdi,%rbx
mov %rbx,(%r9)
mov $1,%rax
@assembler__str_match$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__str_match2
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 32(%rbp),%rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov (%r9),%rbx
mov %rbx,%rsi
mov (%r9),%rbx
push %rbx
call @assembler__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%r9)
movslq %edi,%rdi
push %rdi
push %r8
mov (%r9),%rbx
push %rbx
call @strncmp
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10988
mov %rsi,(%r9)
mov $0,%rax
jmp @assembler__str_match2$END
@_$LB10988
mov (%r9),%rbx
movslq %edi,%rdi
add %rdi,%rbx
mov %rbx,(%r9)
mov $1,%rax
@assembler__str_match2$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__parse_reg32
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
pushq $3
mov $@_$MSG2551,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10991
mov $0,%rax
jmp @assembler__parse_reg32$END
@_$LB10991
pushq $3
mov $@_$MSG2552,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10994
mov $1,%rax
jmp @assembler__parse_reg32$END
@_$LB10994
pushq $3
mov $@_$MSG2553,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB10997
mov $2,%rax
jmp @assembler__parse_reg32$END
@_$LB10997
pushq $3
mov $@_$MSG2554,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11000
mov $3,%rax
jmp @assembler__parse_reg32$END
@_$LB11000
pushq $3
mov $@_$MSG2555,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11003
mov $4,%rax
jmp @assembler__parse_reg32$END
@_$LB11003
pushq $3
mov $@_$MSG2556,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11006
mov $5,%rax
jmp @assembler__parse_reg32$END
@_$LB11006
pushq $3
mov $@_$MSG2557,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11009
mov $6,%rax
jmp @assembler__parse_reg32$END
@_$LB11009
pushq $3
mov $@_$MSG2558,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11012
mov $7,%rax
jmp @assembler__parse_reg32$END
@_$LB11012
pushq $3
mov $@_$MSG2559,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11015
mov $8,%rax
jmp @assembler__parse_reg32$END
@_$LB11015
pushq $3
mov $@_$MSG2560,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11018
mov $9,%rax
jmp @assembler__parse_reg32$END
@_$LB11018
pushq $4
mov $@_$MSG2561,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11021
mov $10,%rax
jmp @assembler__parse_reg32$END
@_$LB11021
pushq $4
mov $@_$MSG2562,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11024
mov $11,%rax
jmp @assembler__parse_reg32$END
@_$LB11024
pushq $4
mov $@_$MSG2563,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11027
mov $12,%rax
jmp @assembler__parse_reg32$END
@_$LB11027
pushq $4
mov $@_$MSG2564,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11030
mov $13,%rax
jmp @assembler__parse_reg32$END
@_$LB11030
pushq $4
mov $@_$MSG2565,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11033
mov $14,%rax
jmp @assembler__parse_reg32$END
@_$LB11033
pushq $4
mov $@_$MSG2566,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11036
mov $15,%rax
jmp @assembler__parse_reg32$END
@_$LB11036
pushq $3
mov $@_$MSG2567,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11039
mov $18446744073709551614,%rax
jmp @assembler__parse_reg32$END
@_$LB11039
mov $18446744073709551615,%rax
@assembler__parse_reg32$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__parse_reg16
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
pushq $2
mov $@_$MSG2568,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11042
mov $0,%rax
jmp @assembler__parse_reg16$END
@_$LB11042
pushq $2
mov $@_$MSG2569,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11045
mov $1,%rax
jmp @assembler__parse_reg16$END
@_$LB11045
pushq $2
mov $@_$MSG2570,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11048
mov $2,%rax
jmp @assembler__parse_reg16$END
@_$LB11048
pushq $2
mov $@_$MSG2571,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11051
mov $3,%rax
jmp @assembler__parse_reg16$END
@_$LB11051
pushq $2
mov $@_$MSG2572,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11054
mov $4,%rax
jmp @assembler__parse_reg16$END
@_$LB11054
pushq $2
mov $@_$MSG2573,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11057
mov $5,%rax
jmp @assembler__parse_reg16$END
@_$LB11057
pushq $2
mov $@_$MSG2574,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11060
mov $6,%rax
jmp @assembler__parse_reg16$END
@_$LB11060
pushq $2
mov $@_$MSG2575,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11063
mov $7,%rax
jmp @assembler__parse_reg16$END
@_$LB11063
pushq $3
mov $@_$MSG2576,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11066
mov $8,%rax
jmp @assembler__parse_reg16$END
@_$LB11066
pushq $3
mov $@_$MSG2577,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11069
mov $9,%rax
jmp @assembler__parse_reg16$END
@_$LB11069
pushq $4
mov $@_$MSG2578,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11072
mov $10,%rax
jmp @assembler__parse_reg16$END
@_$LB11072
pushq $4
mov $@_$MSG2579,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11075
mov $11,%rax
jmp @assembler__parse_reg16$END
@_$LB11075
pushq $4
mov $@_$MSG2580,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11078
mov $12,%rax
jmp @assembler__parse_reg16$END
@_$LB11078
pushq $4
mov $@_$MSG2581,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11081
mov $13,%rax
jmp @assembler__parse_reg16$END
@_$LB11081
pushq $4
mov $@_$MSG2582,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11084
mov $14,%rax
jmp @assembler__parse_reg16$END
@_$LB11084
pushq $4
mov $@_$MSG2583,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11087
mov $15,%rax
jmp @assembler__parse_reg16$END
@_$LB11087
mov $18446744073709551615,%rax
@assembler__parse_reg16$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__parse_reg8
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
pushq $2
mov $@_$MSG2584,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11090
mov $0,%rax
jmp @assembler__parse_reg8$END
@_$LB11090
pushq $2
mov $@_$MSG2585,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11093
mov $1,%rax
jmp @assembler__parse_reg8$END
@_$LB11093
pushq $2
mov $@_$MSG2586,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11096
mov $2,%rax
jmp @assembler__parse_reg8$END
@_$LB11096
pushq $2
mov $@_$MSG2587,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11099
mov $3,%rax
jmp @assembler__parse_reg8$END
@_$LB11099
pushq $3
mov $@_$MSG2588,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11102
mov $8,%rax
jmp @assembler__parse_reg8$END
@_$LB11102
pushq $3
mov $@_$MSG2589,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11105
mov $9,%rax
jmp @assembler__parse_reg8$END
@_$LB11105
pushq $4
mov $@_$MSG2590,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11108
mov $10,%rax
jmp @assembler__parse_reg8$END
@_$LB11108
pushq $4
mov $@_$MSG2591,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11111
mov $11,%rax
jmp @assembler__parse_reg8$END
@_$LB11111
pushq $4
mov $@_$MSG2592,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11114
mov $12,%rax
jmp @assembler__parse_reg8$END
@_$LB11114
pushq $4
mov $@_$MSG2593,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11117
mov $13,%rax
jmp @assembler__parse_reg8$END
@_$LB11117
pushq $4
mov $@_$MSG2594,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11120
mov $14,%rax
jmp @assembler__parse_reg8$END
@_$LB11120
pushq $4
mov $@_$MSG2595,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11123
mov $15,%rax
jmp @assembler__parse_reg8$END
@_$LB11123
pushq $3
mov $@_$MSG2596,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11126
mov $20,%rax
jmp @assembler__parse_reg8$END
@_$LB11126
pushq $3
mov $@_$MSG2597,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11129
mov $21,%rax
jmp @assembler__parse_reg8$END
@_$LB11129
pushq $3
mov $@_$MSG2598,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11132
mov $22,%rax
jmp @assembler__parse_reg8$END
@_$LB11132
pushq $3
mov $@_$MSG2599,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11135
mov $23,%rax
jmp @assembler__parse_reg8$END
@_$LB11135
pushq $2
mov $@_$MSG2600,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11138
mov $28,%rax
jmp @assembler__parse_reg8$END
@_$LB11138
pushq $2
mov $@_$MSG2601,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11141
mov $29,%rax
jmp @assembler__parse_reg8$END
@_$LB11141
pushq $2
mov $@_$MSG2602,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11144
mov $30,%rax
jmp @assembler__parse_reg8$END
@_$LB11144
pushq $2
mov $@_$MSG2603,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11147
mov $31,%rax
jmp @assembler__parse_reg8$END
@_$LB11147
mov $18446744073709551615,%rax
@assembler__parse_reg8$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__parse_reg64
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
pushq $3
mov $@_$MSG2604,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11150
mov $0,%rax
jmp @assembler__parse_reg64$END
@_$LB11150
pushq $3
mov $@_$MSG2605,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11153
mov $1,%rax
jmp @assembler__parse_reg64$END
@_$LB11153
pushq $3
mov $@_$MSG2606,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11156
mov $2,%rax
jmp @assembler__parse_reg64$END
@_$LB11156
pushq $3
mov $@_$MSG2607,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11159
mov $3,%rax
jmp @assembler__parse_reg64$END
@_$LB11159
pushq $3
mov $@_$MSG2608,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11162
mov $4,%rax
jmp @assembler__parse_reg64$END
@_$LB11162
pushq $3
mov $@_$MSG2609,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11165
mov $5,%rax
jmp @assembler__parse_reg64$END
@_$LB11165
pushq $3
mov $@_$MSG2610,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11168
mov $6,%rax
jmp @assembler__parse_reg64$END
@_$LB11168
pushq $3
mov $@_$MSG2611,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11171
mov $7,%rax
jmp @assembler__parse_reg64$END
@_$LB11171
pushq $2
mov $@_$MSG2612,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11174
mov $8,%rax
jmp @assembler__parse_reg64$END
@_$LB11174
pushq $2
mov $@_$MSG2613,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11177
mov $9,%rax
jmp @assembler__parse_reg64$END
@_$LB11177
pushq $3
mov $@_$MSG2614,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11180
mov $10,%rax
jmp @assembler__parse_reg64$END
@_$LB11180
pushq $3
mov $@_$MSG2615,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11183
mov $11,%rax
jmp @assembler__parse_reg64$END
@_$LB11183
pushq $3
mov $@_$MSG2616,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11186
mov $12,%rax
jmp @assembler__parse_reg64$END
@_$LB11186
pushq $3
mov $@_$MSG2617,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11189
mov $13,%rax
jmp @assembler__parse_reg64$END
@_$LB11189
pushq $3
mov $@_$MSG2618,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11192
mov $14,%rax
jmp @assembler__parse_reg64$END
@_$LB11192
pushq $3
mov $@_$MSG2619,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11195
mov $15,%rax
jmp @assembler__parse_reg64$END
@_$LB11195
pushq $3
mov $@_$MSG2620,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11198
mov $18446744073709551614,%rax
jmp @assembler__parse_reg64$END
@_$LB11198
mov $18446744073709551615,%rax
@assembler__parse_reg64$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__parse_creg
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
pushq $3
mov $@_$MSG2621,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11201
mov $0,%rax
jmp @assembler__parse_creg$END
@_$LB11201
pushq $3
mov $@_$MSG2622,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11204
mov $2,%rax
jmp @assembler__parse_creg$END
@_$LB11204
pushq $3
mov $@_$MSG2623,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11207
mov $3,%rax
jmp @assembler__parse_creg$END
@_$LB11207
pushq $3
mov $@_$MSG2624,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11210
mov $4,%rax
jmp @assembler__parse_creg$END
@_$LB11210
pushq $3
mov $@_$MSG2625,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11213
mov $8,%rax
jmp @assembler__parse_creg$END
@_$LB11213
mov $18446744073709551615,%rax
@assembler__parse_creg$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__parse_xreg
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
pushq $4
mov $@_$MSG2626,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11216
mov $0,%rax
jmp @assembler__parse_xreg$END
@_$LB11216
pushq $5
mov $@_$MSG2627,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11219
mov $10,%rax
jmp @assembler__parse_xreg$END
@_$LB11219
pushq $5
mov $@_$MSG2628,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11222
mov $11,%rax
jmp @assembler__parse_xreg$END
@_$LB11222
pushq $5
mov $@_$MSG2629,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11225
mov $12,%rax
jmp @assembler__parse_xreg$END
@_$LB11225
pushq $5
mov $@_$MSG2630,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11228
mov $13,%rax
jmp @assembler__parse_xreg$END
@_$LB11228
pushq $5
mov $@_$MSG2631,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11231
mov $14,%rax
jmp @assembler__parse_xreg$END
@_$LB11231
pushq $5
mov $@_$MSG2632,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11234
mov $15,%rax
jmp @assembler__parse_xreg$END
@_$LB11234
pushq $4
mov $@_$MSG2633,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11237
mov $1,%rax
jmp @assembler__parse_xreg$END
@_$LB11237
pushq $4
mov $@_$MSG2634,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11240
mov $2,%rax
jmp @assembler__parse_xreg$END
@_$LB11240
pushq $4
mov $@_$MSG2635,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11243
mov $3,%rax
jmp @assembler__parse_xreg$END
@_$LB11243
pushq $4
mov $@_$MSG2636,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11246
mov $4,%rax
jmp @assembler__parse_xreg$END
@_$LB11246
pushq $4
mov $@_$MSG2637,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11249
mov $5,%rax
jmp @assembler__parse_xreg$END
@_$LB11249
pushq $4
mov $@_$MSG2638,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11252
mov $6,%rax
jmp @assembler__parse_xreg$END
@_$LB11252
pushq $4
mov $@_$MSG2639,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11255
mov $7,%rax
jmp @assembler__parse_xreg$END
@_$LB11255
pushq $4
mov $@_$MSG2640,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11258
mov $8,%rax
jmp @assembler__parse_xreg$END
@_$LB11258
pushq $4
mov $@_$MSG2641,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11261
mov $9,%rax
jmp @assembler__parse_xreg$END
@_$LB11261
mov $18446744073709551615,%rax
@assembler__parse_xreg$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__parse_yreg
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
pushq $4
mov $@_$MSG2642,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11264
mov $0,%rax
jmp @assembler__parse_yreg$END
@_$LB11264
pushq $5
mov $@_$MSG2643,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11267
mov $10,%rax
jmp @assembler__parse_yreg$END
@_$LB11267
pushq $5
mov $@_$MSG2644,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11270
mov $11,%rax
jmp @assembler__parse_yreg$END
@_$LB11270
pushq $5
mov $@_$MSG2645,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11273
mov $12,%rax
jmp @assembler__parse_yreg$END
@_$LB11273
pushq $5
mov $@_$MSG2646,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11276
mov $13,%rax
jmp @assembler__parse_yreg$END
@_$LB11276
pushq $5
mov $@_$MSG2647,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11279
mov $14,%rax
jmp @assembler__parse_yreg$END
@_$LB11279
pushq $5
mov $@_$MSG2648,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11282
mov $15,%rax
jmp @assembler__parse_yreg$END
@_$LB11282
pushq $4
mov $@_$MSG2649,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11285
mov $1,%rax
jmp @assembler__parse_yreg$END
@_$LB11285
pushq $4
mov $@_$MSG2650,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11288
mov $2,%rax
jmp @assembler__parse_yreg$END
@_$LB11288
pushq $4
mov $@_$MSG2651,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11291
mov $3,%rax
jmp @assembler__parse_yreg$END
@_$LB11291
pushq $4
mov $@_$MSG2652,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11294
mov $4,%rax
jmp @assembler__parse_yreg$END
@_$LB11294
pushq $4
mov $@_$MSG2653,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11297
mov $5,%rax
jmp @assembler__parse_yreg$END
@_$LB11297
pushq $4
mov $@_$MSG2654,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11300
mov $6,%rax
jmp @assembler__parse_yreg$END
@_$LB11300
pushq $4
mov $@_$MSG2655,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11303
mov $7,%rax
jmp @assembler__parse_yreg$END
@_$LB11303
pushq $4
mov $@_$MSG2656,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11306
mov $8,%rax
jmp @assembler__parse_yreg$END
@_$LB11306
pushq $4
mov $@_$MSG2657,%rbx
push %rbx
push %rsi
call @assembler__str_match2
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11309
mov $9,%rax
jmp @assembler__parse_yreg$END
@_$LB11309
mov $18446744073709551615,%rax
@assembler__parse_yreg$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__parse_addr
push %rbp
mov %rsp,%rbp
sub $336,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
mov (%r9),%rbx
mov %rbx,%rdi
movl $0,4(%r8)
mov $@_$MSG2658,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11312
lea 18446744073709551600(%rbp),%rbx
push %rbx
push %r9
call @assembler__parse_const
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11315
mov $18446744073709551615,%rax
jmp @assembler__parse_addr$END
@_$LB11315
mov 18446744073709551600(%rbp),%rax
mov $2147483647,%rcx
cmp %rcx,%rax
jbe @_$LB11318
mov 18446744073709551600(%rbp),%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jae @_$LB11318
@_$LB11321
mov $@_$MSG2659,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11318
mov 18446744073709551600(%rbp),%rax
mov %eax,4(%r8)
mov $@_$MSG2660,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11324
movb $0,(%r8)
movb $255,1(%r8)
movb $255,2(%r8)
movb $0,3(%r8)
mov $0,%rax
jmp @assembler__parse_addr$END
@_$LB11324
@_$LB11312
mov $@_$MSG2661,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11327
mov $@_$MSG2662,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11327
push %r9
call @assembler__parse_reg64
mov %eax,%ebx
add $8,%rsp
mov %bl,1(%r8)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB11329
movb $0,(%r8)
mov $@_$MSG2663,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11332
movb $255,2(%r8)
movb $0,3(%r8)
mov $0,%rax
jmp @assembler__parse_addr$END
jmp @_$LB11333
@_$LB11332
mov $@_$MSG2664,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11336
mov $@_$MSG2665,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11336
@_$LB11333
mov $@_$MSG2666,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11339
mov $@_$MSG2667,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11339
push %r9
call @assembler__parse_reg64
mov %eax,%ebx
add $8,%rsp
mov %bl,2(%r8)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11342
mov $@_$MSG2668,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11342
mov 2(%r8),%bl
mov %bl,%al
mov $4,%cl
cmp %cl,%al
jne @_$LB11345
mov $@_$MSG2669,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11345
mov $@_$MSG2670,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11347
movb $0,3(%r8)
mov $0,%rax
jmp @assembler__parse_addr$END
jmp @_$LB11348
@_$LB11347
mov $@_$MSG2671,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11351
mov $@_$MSG2672,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11351
@_$LB11348
mov $@_$MSG2673,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11353
movb $0,3(%r8)
jmp @_$LB11354
@_$LB11353
mov $@_$MSG2674,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11356
movb $64,3(%r8)
jmp @_$LB11357
@_$LB11356
mov $@_$MSG2675,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11359
movb $128,3(%r8)
jmp @_$LB11360
@_$LB11359
mov $@_$MSG2676,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11362
movb $192,3(%r8)
jmp @_$LB11363
@_$LB11362
mov $@_$MSG2677,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11363
@_$LB11360
@_$LB11357
@_$LB11354
mov $@_$MSG2678,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11366
mov $@_$MSG2679,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11366
mov $0,%rax
jmp @assembler__parse_addr$END
jmp @_$LB11330
@_$LB11329
push %r9
call @assembler__parse_reg32
mov %eax,%ebx
add $8,%rsp
mov %bl,1(%r8)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
je @_$LB11368
movb $1,(%r8)
mov $@_$MSG2680,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11371
movb $255,2(%r8)
movb $0,3(%r8)
mov $0,%rax
jmp @assembler__parse_addr$END
jmp @_$LB11372
@_$LB11371
mov $@_$MSG2681,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11375
mov $@_$MSG2682,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11375
@_$LB11372
mov $@_$MSG2683,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11378
mov $@_$MSG2684,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11378
push %r9
call @assembler__parse_reg32
mov %eax,%ebx
add $8,%rsp
mov %bl,2(%r8)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11381
mov $@_$MSG2685,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11381
mov 2(%r8),%bl
mov %bl,%al
mov $4,%cl
cmp %cl,%al
jne @_$LB11384
mov $@_$MSG2686,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11384
mov $@_$MSG2687,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11386
movb $0,3(%r8)
mov $0,%rax
jmp @assembler__parse_addr$END
jmp @_$LB11387
@_$LB11386
mov $@_$MSG2688,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11390
mov $@_$MSG2689,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11390
@_$LB11387
mov $@_$MSG2690,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11392
movb $0,3(%r8)
jmp @_$LB11393
@_$LB11392
mov $@_$MSG2691,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11395
movb $64,3(%r8)
jmp @_$LB11396
@_$LB11395
mov $@_$MSG2692,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11398
movb $128,3(%r8)
jmp @_$LB11399
@_$LB11398
mov $@_$MSG2693,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11401
movb $192,3(%r8)
jmp @_$LB11402
@_$LB11401
mov $@_$MSG2694,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11402
@_$LB11399
@_$LB11396
@_$LB11393
mov $@_$MSG2695,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11405
mov $@_$MSG2696,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11405
mov $0,%rax
jmp @assembler__parse_addr$END
jmp @_$LB11369
@_$LB11368
mov $@_$MSG2697,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11407
mov $@_$MSG2698,%rbx
push %rbx
push %r9
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11411
mov $@_$MSG2699,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11411
movb $0,(%r8)
movb $16,1(%r8)
movb $255,2(%r8)
movb $0,3(%r8)
mov $0,%rax
jmp @assembler__parse_addr$END
jmp @_$LB11408
@_$LB11407
mov $@_$MSG2700,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11408
@_$LB11369
@_$LB11330
@assembler__parse_addr$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__get_ins_args
push %rbp
mov %rsp,%rbp
sub $320,%rsp
push %rbx
push %rsi
push %rdi
mov 32(%rbp),%rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov 16(%rbp),%r9
lea 24(%rbp),%rbx
push %rbx
call @assembler__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11414
@_$LB11412
mov $@_$MSG2701,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11416
push %rdi
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_addr
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11420
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11420
jmp @_$LB11417
@_$LB11416
mov $@_$MSG2702,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11422
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_reg8
mov %eax,%ebx
add $8,%rsp
mov %bl,8(%rdi)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11426
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11426
jmp @_$LB11423
@_$LB11422
mov $@_$MSG2703,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11428
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_reg8
mov %eax,%ebx
add $8,%rsp
mov %bl,9(%rdi)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11432
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11432
jmp @_$LB11429
@_$LB11428
mov $@_$MSG2704,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11434
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_reg16
mov %eax,%ebx
add $8,%rsp
mov %bl,8(%rdi)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11438
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11438
jmp @_$LB11435
@_$LB11434
mov $@_$MSG2705,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11440
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_reg16
mov %eax,%ebx
add $8,%rsp
mov %bl,9(%rdi)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11444
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11444
jmp @_$LB11441
@_$LB11440
mov $@_$MSG2706,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11446
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_reg32
mov %eax,%ebx
add $8,%rsp
mov %bl,8(%rdi)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11450
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11450
jmp @_$LB11447
@_$LB11446
mov $@_$MSG2707,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11452
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_reg32
mov %eax,%ebx
add $8,%rsp
mov %bl,9(%rdi)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11456
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11456
jmp @_$LB11453
@_$LB11452
mov $@_$MSG2708,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11458
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_reg64
mov %eax,%ebx
add $8,%rsp
mov %bl,8(%rdi)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11462
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11462
jmp @_$LB11459
@_$LB11458
mov $@_$MSG2709,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11464
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_reg64
mov %eax,%ebx
add $8,%rsp
mov %bl,9(%rdi)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11468
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11468
jmp @_$LB11465
@_$LB11464
mov $@_$MSG2710,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11470
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_creg
mov %eax,%ebx
add $8,%rsp
mov %bl,8(%rdi)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11474
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11474
jmp @_$LB11471
@_$LB11470
mov $@_$MSG2711,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11476
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_creg
mov %eax,%ebx
add $8,%rsp
mov %bl,9(%rdi)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11480
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11480
jmp @_$LB11477
@_$LB11476
mov $@_$MSG2712,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11482
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_xreg
mov %eax,%ebx
add $8,%rsp
mov %bl,8(%rdi)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11486
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11486
jmp @_$LB11483
@_$LB11482
mov $@_$MSG2713,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11488
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_xreg
mov %eax,%ebx
add $8,%rsp
mov %bl,9(%rdi)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11492
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11492
jmp @_$LB11489
@_$LB11488
mov $@_$MSG2714,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11494
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_yreg
mov %eax,%ebx
add $8,%rsp
mov %bl,8(%rdi)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11498
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11498
jmp @_$LB11495
@_$LB11494
mov $@_$MSG2715,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11500
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_yreg
mov %eax,%ebx
add $8,%rsp
mov %bl,9(%rdi)
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11504
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11504
jmp @_$LB11501
@_$LB11500
mov $@_$MSG2716,%rbx
push %rbx
push %rsi
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11506
mov %rdi,%rbx
add $16,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_const
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11510
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11510
jmp @_$LB11507
@_$LB11506
push %rsi
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11513
push %rsi
call @free
add $8,%rsp
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11513
@_$LB11507
@_$LB11501
@_$LB11495
@_$LB11489
@_$LB11483
@_$LB11477
@_$LB11471
@_$LB11465
@_$LB11459
@_$LB11453
@_$LB11447
@_$LB11441
@_$LB11435
@_$LB11429
@_$LB11423
@_$LB11417
push %rsi
call @free
add $8,%rsp
lea 24(%rbp),%rbx
push %rbx
call @assembler__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB11412
@_$LB11414
mov 16(%rbp),%rax
push %rax
call @assembler__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,16(%rbp)
mov 16(%rbp),%rax
mov (%rax),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB11516
mov $18446744073709551615,%rax
jmp @assembler__get_ins_args$END
@_$LB11516
mov $0,%rax
@assembler__get_ins_args$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__ins_add
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
mov 72(%rbp),%rsi
push %rdi
push %r8
push %r9
mov 64(%rbp),%r9
push %r12
mov 56(%rbp),%r12
push %r13
mov 48(%rbp),%r13
push %r14
mov 40(%rbp),%r14
push %r15
mov 32(%rbp),%r15
push %r10
mov 24(%rbp),%r10
push %r11
mov 16(%rbp),%r11
mov 16(%rbp),%rax
push %rax
call @assembler__format_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%edi
pushq $56
call @assembler__xmalloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
lea 16(%rbp),%rbx
push %rbx
call @assembler__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,(%r8)
mov 16(%rbp),%rax
mov %rax,8(%r8)
mov %r10,16(%r8)
mov %r15,24(%r8)
mov %r14b,32(%r8)
mov %r13b,33(%r8)
mov %r12w,34(%r8)
mov %r9d,36(%r8)
mov %rsi,40(%r8)
mov (%r8),%rbx
push %rbx
call @assembler__name_hash
mov %eax,%ebx
add $8,%rsp
add %ebx,%edi
mov %edi,%eax
mov $1021,%ecx
mov %eax,%edx
shr $31,%edx
neg %edx
idiv %ecx
mov %edx,%eax
mov %eax,%ebx
mov %ebx,%edi
mov %edi,%ebx
shl $3,%ebx
lea @_$DATA+11954752,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,48(%r8)
mov %edi,%esi
shl $3,%esi
lea @_$DATA+11954752,%rbx
movslq %esi,%rsi
add %rsi,%rbx
mov %r8,(%rbx)
@assembler__ins_add$END
pop %r11
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__write_addr_prefix
push %rbp
mov %rsp,%rbp
sub $48,%rsp
push %rbx
push %rsi
mov 16(%rbp),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB11519
pushq $103
call @assembler__soutc
add $8,%rsp
@_$LB11519
@assembler__write_addr_prefix$END
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__get_addr_rex
push %rbp
mov %rsp,%rbp
sub $32,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
mov $0,%sil
mov 1(%rdi),%bl
mov %bl,%al
mov $8,%cl
cmp %cl,%al
jl @_$LB11522
mov 1(%rdi),%bl
mov %bl,%al
mov $16,%cl
cmp %cl,%al
jge @_$LB11522
@_$LB11525
or $65,%sil
@_$LB11522
mov 2(%rdi),%bl
mov %bl,%al
mov $8,%cl
cmp %cl,%al
jl @_$LB11528
mov 1(%rdi),%bl
mov %bl,%al
mov $16,%cl
cmp %cl,%al
jge @_$LB11528
@_$LB11531
or $66,%sil
@_$LB11528
movzbq %sil,%rsi
mov %rsi,%rax
@assembler__get_addr_rex$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__write_addr
push %rbp
mov %rsp,%rbp
sub $432,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
push %r9
mov 24(%rbp),%r9
mov 1(%r9),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jge @_$LB11533
mov 2(%r9),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jge @_$LB11536
mov %edi,%ebx
or $4,%ebx
movslq %ebx,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
pushq $37
call @assembler__soutc
add $8,%rsp
pushq $4
mov %r9,%rbx
add $4,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
jmp @_$LB11537
@_$LB11536
mov %edi,%ebx
or $4,%ebx
movslq %ebx,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
mov 3(%r9),%sil
mov $5,%rax
mov %sil,%cl
movsbq %cl,%rcx
or %rcx,%rax
mov %rax,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
pushq $4
mov %r9,%rbx
add $4,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
@_$LB11537
jmp @_$LB11534
@_$LB11533
mov 1(%r9),%bl
mov %bl,%al
mov $16,%cl
cmp %cl,%al
jne @_$LB11539
mov %edi,%ebx
or $5,%ebx
movslq %ebx,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
pushq $4
mov %r9,%rbx
add $4,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
jmp @_$LB11540
@_$LB11539
mov 2(%r9),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jge @_$LB11542
mov 1(%r9),%sil
mov %sil,%bl
and $7,%bl
mov %bl,%r8b
movsbl %r8b,%r8d
mov 4(%r9),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11545
mov %r8d,%eax
mov $5,%ecx
cmp %ecx,%eax
je @_$LB11545
@_$LB11549
mov %r8d,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB11551
mov %edi,%ebx
or $4,%ebx
movslq %ebx,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
pushq $36
call @assembler__soutc
add $8,%rsp
jmp @_$LB11552
@_$LB11551
mov %edi,%ebx
or %r8d,%ebx
movslq %ebx,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
@_$LB11552
jmp @_$LB11546
@_$LB11545
mov 4(%r9),%ebx
mov %ebx,%eax
mov $127,%ecx
cmp %ecx,%eax
jbe @_$LB11558
mov 4(%r9),%ebx
mov %ebx,%eax
mov $4294967168,%ecx
cmp %ecx,%eax
jb @_$LB11554
@_$LB11558
mov %edi,%esi
or $64,%esi
mov %esi,%ebx
or %r8d,%ebx
movslq %ebx,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
mov %r8d,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB11561
pushq $36
call @assembler__soutc
add $8,%rsp
@_$LB11561
pushq $1
mov %r9,%rbx
add $4,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
jmp @_$LB11555
@_$LB11554
mov %edi,%esi
or $128,%esi
mov %esi,%ebx
or %r8d,%ebx
movslq %ebx,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
mov %r8d,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB11564
pushq $36
call @assembler__soutc
add $8,%rsp
@_$LB11564
pushq $4
mov %r9,%rbx
add $4,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
@_$LB11555
@_$LB11546
jmp @_$LB11543
@_$LB11542
mov 1(%r9),%sil
mov %sil,%bl
and $7,%bl
mov %bl,%r8b
movsbl %r8b,%r8d
mov 2(%r9),%sil
mov %sil,%bl
and $7,%bl
mov %bl,%sil
movsbl %sil,%esi
mov 4(%r9),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11566
mov %r8d,%eax
mov $5,%ecx
cmp %ecx,%eax
je @_$LB11566
@_$LB11570
mov %edi,%ebx
or $4,%ebx
movslq %ebx,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
mov %esi,%eax
mov $3,%cl
shl %cl,%eax
mov %eax,%edi
mov 3(%r9),%bl
mov %bl,%sil
or %dil,%sil
mov %sil,%bl
or %r8b,%bl
movsbq %bl,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
jmp @_$LB11567
@_$LB11566
mov 4(%r9),%ebx
mov %ebx,%eax
mov $127,%ecx
cmp %ecx,%eax
jbe @_$LB11576
mov 4(%r9),%ebx
mov %ebx,%eax
mov $4294967168,%ecx
cmp %ecx,%eax
jb @_$LB11572
@_$LB11576
mov %edi,%ebx
or $68,%ebx
movslq %ebx,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
mov %esi,%eax
mov $3,%cl
shl %cl,%eax
mov %eax,%edi
mov 3(%r9),%bl
mov %bl,%sil
or %dil,%sil
mov %sil,%bl
or %r8b,%bl
movsbq %bl,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
pushq $1
mov %r9,%rbx
add $4,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
jmp @_$LB11573
@_$LB11572
mov %edi,%ebx
or $132,%ebx
movslq %ebx,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
mov %esi,%eax
mov $3,%cl
shl %cl,%eax
mov %eax,%edi
mov 3(%r9),%bl
mov %bl,%sil
or %dil,%sil
mov %sil,%bl
or %r8b,%bl
movsbq %bl,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
pushq $4
mov %r9,%rbx
add $4,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
@_$LB11573
@_$LB11567
@_$LB11543
@_$LB11540
@_$LB11534
@assembler__write_addr$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__write_default_ins
push %rbp
mov %rsp,%rbp
sub $224,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 24(%rbp),%r9
push %r12
mov 16(%rbp),%r12
mov 33(%r12),%bl
mov %bl,%r8b
movsbl %r8b,%r8d
mov 34(%r12),%bx
mov %bx,%di
movswl %di,%edi
mov 36(%r12),%esi
mov %esi,%ebx
and $2,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11579
mov 36(%r12),%esi
mov %esi,%ebx
and $12,%ebx
mov %ebx,%esi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11581
mov 36(%r12),%esi
mov %esi,%ebx
and $128,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11584
mov 16(%r9),%rbx
mov %rbx,%rax
mov $255,%rcx
cmp %rcx,%rax
jbe @_$LB11588
mov 16(%r9),%rbx
mov %rbx,%rax
mov $18446744073709551488,%rcx
cmp %rcx,%rax
jae @_$LB11588
@_$LB11591
mov $18446744073709551615,%rax
jmp @assembler__write_default_ins$END
@_$LB11588
jmp @_$LB11585
@_$LB11584
mov 16(%r9),%rbx
mov %rbx,%rax
mov $127,%rcx
cmp %rcx,%rax
jbe @_$LB11594
mov 16(%r9),%rbx
mov %rbx,%rax
mov $18446744073709551488,%rcx
cmp %rcx,%rax
jae @_$LB11594
@_$LB11597
mov $18446744073709551615,%rax
jmp @assembler__write_default_ins$END
@_$LB11594
@_$LB11585
jmp @_$LB11582
@_$LB11581
mov %esi,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB11599
mov 36(%r12),%esi
mov %esi,%ebx
and $128,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11602
mov 16(%r9),%rbx
mov %rbx,%rax
mov $65535,%rcx
cmp %rcx,%rax
jbe @_$LB11606
mov 16(%r9),%rbx
mov %rbx,%rax
mov $18446744073709518848,%rcx
cmp %rcx,%rax
jae @_$LB11606
@_$LB11609
mov $18446744073709551615,%rax
jmp @assembler__write_default_ins$END
@_$LB11606
jmp @_$LB11603
@_$LB11602
mov 16(%r9),%rbx
mov %rbx,%rax
mov $32767,%rcx
cmp %rcx,%rax
jbe @_$LB11612
mov 16(%r9),%rbx
mov %rbx,%rax
mov $18446744073709518848,%rcx
cmp %rcx,%rax
jae @_$LB11612
@_$LB11615
mov $18446744073709551615,%rax
jmp @assembler__write_default_ins$END
@_$LB11612
@_$LB11603
jmp @_$LB11600
@_$LB11599
mov %esi,%eax
mov $8,%ecx
cmp %ecx,%eax
jne @_$LB11618
mov 36(%r12),%esi
mov %esi,%ebx
and $128,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11620
mov 16(%r9),%rbx
mov %rbx,%rax
mov $4294967295,%rcx
cmp %rcx,%rax
jbe @_$LB11624
mov 16(%r9),%rbx
mov %rbx,%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jae @_$LB11624
@_$LB11627
mov $18446744073709551615,%rax
jmp @assembler__write_default_ins$END
@_$LB11624
jmp @_$LB11621
@_$LB11620
mov 16(%r9),%rbx
mov %rbx,%rax
mov $2147483647,%rcx
cmp %rcx,%rax
jbe @_$LB11630
mov 16(%r9),%rbx
mov %rbx,%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jae @_$LB11630
@_$LB11633
mov $18446744073709551615,%rax
jmp @assembler__write_default_ins$END
@_$LB11630
@_$LB11621
@_$LB11618
@_$LB11600
@_$LB11582
@_$LB11579
mov 36(%r12),%esi
mov %esi,%ebx
and $16,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11636
push %r9
call @assembler__write_addr_prefix
add $8,%rsp
push %r9
call @assembler__get_addr_rex
mov %al,%bl
add $8,%rsp
movzbl %bl,%ebx
or %ebx,%r8d
@_$LB11636
mov 36(%r12),%esi
mov %esi,%ebx
and $32,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11639
mov 8(%r9),%bl
mov %bl,%al
mov $8,%cl
cmp %cl,%al
jl @_$LB11642
mov 8(%r9),%bl
mov %bl,%al
mov $16,%cl
cmp %cl,%al
jge @_$LB11642
@_$LB11645
or $65,%r8d
@_$LB11642
mov 8(%r9),%bl
mov %bl,%al
mov $20,%cl
cmp %cl,%al
jl @_$LB11648
mov 8(%r9),%bl
mov %bl,%al
mov $24,%cl
cmp %cl,%al
jge @_$LB11648
@_$LB11651
or $64,%r8d
@_$LB11648
mov 8(%r9),%sil
mov %sil,%bl
and $7,%bl
movsbl %bl,%ebx
or %ebx,%edi
@_$LB11639
mov 36(%r12),%esi
mov %esi,%ebx
and $64,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11654
mov 9(%r9),%bl
mov %bl,%al
mov $8,%cl
cmp %cl,%al
jl @_$LB11657
mov 9(%r9),%bl
mov %bl,%al
mov $16,%cl
cmp %cl,%al
jge @_$LB11657
@_$LB11660
or $68,%r8d
@_$LB11657
mov 9(%r9),%bl
mov %bl,%al
mov $20,%cl
cmp %cl,%al
jl @_$LB11663
mov 9(%r9),%bl
mov %bl,%al
mov $24,%cl
cmp %cl,%al
jge @_$LB11663
@_$LB11666
or $64,%r8d
@_$LB11663
mov 9(%r9),%bl
mov %bl,%sil
and $7,%sil
mov %sil,%al
mov $3,%cl
shl %cl,%al
mov %al,%bl
movsbl %bl,%ebx
or %ebx,%edi
@_$LB11654
mov 16(%r12),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11669
mov 16(%r12),%rbx
push %rbx
call @strlen
mov %rax,%rbx
add $8,%rsp
push %rbx
mov 16(%r12),%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
@_$LB11669
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11672
mov 36(%r12),%esi
mov %esi,%ebx
and $32,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11675
mov 8(%r9),%bl
mov %bl,%al
mov $28,%cl
cmp %cl,%al
jl @_$LB11678
mov 8(%r9),%bl
mov %bl,%al
mov $32,%cl
cmp %cl,%al
jge @_$LB11678
@_$LB11681
mov $@_$MSG2717,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11678
@_$LB11675
mov 36(%r12),%esi
mov %esi,%ebx
and $64,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11684
mov 9(%r9),%bl
mov %bl,%al
mov $28,%cl
cmp %cl,%al
jl @_$LB11687
mov 9(%r9),%bl
mov %bl,%al
mov $32,%cl
cmp %cl,%al
jge @_$LB11687
@_$LB11690
mov $@_$MSG2718,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11687
@_$LB11684
movslq %r8d,%r8
push %r8
call @assembler__soutc
add $8,%rsp
@_$LB11672
mov 32(%r12),%bl
movsbq %bl,%rbx
push %rbx
mov 24(%r12),%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
mov 36(%r12),%esi
mov %esi,%ebx
and $16,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11692
push %r9
movslq %edi,%rdi
push %rdi
call @assembler__write_addr
add $16,%rsp
jmp @_$LB11693
@_$LB11692
mov 36(%r12),%esi
mov %esi,%ebx
and $1,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11696
mov %edi,%ebx
or $192,%ebx
movslq %ebx,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
@_$LB11696
@_$LB11693
mov 36(%r12),%esi
mov %esi,%ebx
and $2,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11699
mov 36(%r12),%esi
mov %esi,%ebx
and $12,%ebx
mov %ebx,%esi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11701
pushq $1
mov %r9,%rbx
add $16,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
jmp @_$LB11702
@_$LB11701
mov %esi,%eax
mov $4,%ecx
cmp %ecx,%eax
jne @_$LB11704
pushq $2
mov %r9,%rbx
add $16,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
jmp @_$LB11705
@_$LB11704
mov %esi,%eax
mov $8,%ecx
cmp %ecx,%eax
jne @_$LB11707
pushq $4
mov %r9,%rbx
add $16,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
jmp @_$LB11708
@_$LB11707
mov %esi,%eax
mov $12,%ecx
cmp %ecx,%eax
jne @_$LB11711
pushq $8
mov %r9,%rbx
add $16,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
@_$LB11711
@_$LB11708
@_$LB11705
@_$LB11702
@_$LB11699
mov $0,%rax
@assembler__write_default_ins$END
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__movl_handler
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
mov 8(%rdi),%bl
mov %bl,%al
mov $8,%cl
cmp %cl,%al
jl @_$LB11714
pushq $65
call @assembler__soutc
add $8,%rsp
@_$LB11714
mov 8(%rdi),%bl
mov %bl,%sil
and $7,%sil
mov $184,%rax
mov %sil,%cl
movsbq %cl,%rcx
or %rcx,%rax
mov %rax,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
pushq $4
mov %rdi,%rbx
add $16,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
mov $0,%rax
@assembler__movl_handler$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__movq_handler
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
mov 8(%rdi),%bl
mov %bl,%al
mov $8,%cl
cmp %cl,%al
jl @_$LB11716
pushq $73
call @assembler__soutc
add $8,%rsp
jmp @_$LB11717
@_$LB11716
pushq $72
call @assembler__soutc
add $8,%rsp
@_$LB11717
mov 8(%rdi),%bl
mov %bl,%sil
and $7,%sil
mov $184,%rax
mov %sil,%cl
movsbq %cl,%rcx
or %rcx,%rax
mov %rax,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
pushq $8
mov %rdi,%rbx
add $16,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
mov $0,%rax
@assembler__movq_handler$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__movw_handler
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
pushq $102
call @assembler__soutc
add $8,%rsp
mov 8(%rdi),%bl
mov %bl,%al
mov $8,%cl
cmp %cl,%al
jl @_$LB11720
pushq $65
call @assembler__soutc
add $8,%rsp
@_$LB11720
mov 8(%rdi),%bl
mov %bl,%sil
and $7,%sil
mov $184,%rax
mov %sil,%cl
movsbq %cl,%rcx
or %rcx,%rax
mov %rax,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
pushq $2
mov %rdi,%rbx
add $16,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
mov $0,%rax
@assembler__movw_handler$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__movb_handler
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
mov 8(%rdi),%bl
mov %bl,%al
mov $20,%cl
cmp %cl,%al
jl @_$LB11722
mov 8(%rdi),%bl
mov %bl,%al
mov $24,%cl
cmp %cl,%al
jge @_$LB11722
@_$LB11726
pushq $64
call @assembler__soutc
add $8,%rsp
jmp @_$LB11723
@_$LB11722
mov 8(%rdi),%bl
mov %bl,%al
mov $8,%cl
cmp %cl,%al
jl @_$LB11729
mov 8(%rdi),%bl
mov %bl,%al
mov $16,%cl
cmp %cl,%al
jge @_$LB11729
@_$LB11732
pushq $65
call @assembler__soutc
add $8,%rsp
@_$LB11729
@_$LB11723
mov 8(%rdi),%bl
mov %bl,%sil
and $7,%sil
mov $176,%rax
mov %sil,%cl
movsbq %cl,%rcx
or %rcx,%rax
mov %rax,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
pushq $1
mov %rdi,%rbx
add $16,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
mov $0,%rax
@assembler__movb_handler$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__movq_handler2
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
mov 16(%rdi),%rbx
mov %rbx,%rax
mov $4294967295,%rcx
cmp %rcx,%rax
jbe @_$LB11735
mov $1,%rax
jmp @assembler__movq_handler2$END
@_$LB11735
mov 8(%rdi),%bl
mov %bl,%al
mov $8,%cl
cmp %cl,%al
jl @_$LB11738
pushq $65
call @assembler__soutc
add $8,%rsp
@_$LB11738
mov 8(%rdi),%bl
mov %bl,%sil
and $7,%sil
mov $184,%rax
mov %sil,%cl
movsbq %cl,%rcx
or %rcx,%rax
mov %rax,%rbx
push %rbx
call @assembler__soutc
add $8,%rsp
pushq $4
mov %rdi,%rbx
add $16,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
mov $0,%rax
@assembler__movq_handler2$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__ins_init_mov
push %rbp
mov %rsp,%rbp
sub $896,%rsp
push %rbx
pushq $0
pushq $33
pushq $216
pushq $0
pushq $1
mov $@_$MSG2719,%rbx
push %rbx
pushq $0
mov $@_$MSG2720,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $192
pushq $0
pushq $1
mov $@_$MSG2721,%rbx
push %rbx
pushq $0
mov $@_$MSG2722,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $224
pushq $0
pushq $1
mov $@_$MSG2723,%rbx
push %rbx
pushq $0
mov $@_$MSG2724,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $232
pushq $0
pushq $1
mov $@_$MSG2725,%rbx
push %rbx
pushq $0
mov $@_$MSG2726,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $208
pushq $0
pushq $1
mov $@_$MSG2727,%rbx
push %rbx
pushq $0
mov $@_$MSG2728,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $216
pushq $0
pushq $1
mov $@_$MSG2729,%rbx
push %rbx
pushq $0
mov $@_$MSG2730,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $192
pushq $0
pushq $1
mov $@_$MSG2731,%rbx
push %rbx
pushq $0
mov $@_$MSG2732,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $224
pushq $0
pushq $1
mov $@_$MSG2733,%rbx
push %rbx
pushq $0
mov $@_$MSG2734,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $232
pushq $0
pushq $1
mov $@_$MSG2735,%rbx
push %rbx
pushq $0
mov $@_$MSG2736,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $208
pushq $0
pushq $1
mov $@_$MSG2737,%rbx
push %rbx
pushq $0
mov $@_$MSG2738,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG2739,%rbx
push %rbx
mov $@_$MSG2740,%rbx
push %rbx
mov $@_$MSG2741,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG2742,%rbx
push %rbx
pushq $0
mov $@_$MSG2743,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $2
mov $@_$MSG2744,%rbx
push %rbx
pushq $0
mov $@_$MSG2745,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG2746,%rbx
push %rbx
pushq $0
mov $@_$MSG2747,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $2
mov $@_$MSG2748,%rbx
push %rbx
pushq $0
mov $@_$MSG2749,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $1
mov $@_$MSG2750,%rbx
push %rbx
pushq $0
mov $@_$MSG2751,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG2752,%rbx
push %rbx
mov $@_$MSG2753,%rbx
push %rbx
mov $@_$MSG2754,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG2755,%rbx
push %rbx
pushq $0
mov $@_$MSG2756,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG2757,%rbx
push %rbx
pushq $0
mov $@_$MSG2758,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG2759,%rbx
push %rbx
pushq $0
mov $@_$MSG2760,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG2761,%rbx
push %rbx
pushq $0
mov $@_$MSG2762,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG2763,%rbx
push %rbx
mov $@_$MSG2764,%rbx
push %rbx
mov $@_$MSG2765,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG2766,%rbx
push %rbx
pushq $0
mov $@_$MSG2767,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $2
mov $@_$MSG2768,%rbx
push %rbx
pushq $0
mov $@_$MSG2769,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG2770,%rbx
push %rbx
pushq $0
mov $@_$MSG2771,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $2
mov $@_$MSG2772,%rbx
push %rbx
pushq $0
mov $@_$MSG2773,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG2774,%rbx
push %rbx
pushq $0
mov $@_$MSG2775,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG2776,%rbx
push %rbx
mov $@_$MSG2777,%rbx
push %rbx
mov $@_$MSG2778,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG2779,%rbx
push %rbx
pushq $0
mov $@_$MSG2780,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $2
mov $@_$MSG2781,%rbx
push %rbx
pushq $0
mov $@_$MSG2782,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG2783,%rbx
push %rbx
pushq $0
mov $@_$MSG2784,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $2
mov $@_$MSG2785,%rbx
push %rbx
pushq $0
mov $@_$MSG2786,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $150
pushq $0
pushq $0
pushq $1
mov $@_$MSG2787,%rbx
push %rbx
mov $@_$MSG2788,%rbx
push %rbx
mov $@_$MSG2789,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG2790,%rbx
push %rbx
mov $@_$MSG2791,%rbx
push %rbx
mov $@_$MSG2792,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG2793,%rbx
push %rbx
mov $@_$MSG2794,%rbx
push %rbx
mov $@_$MSG2795,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $0
pushq $0
pushq $1
mov $@_$MSG2796,%rbx
push %rbx
pushq $0
mov $@_$MSG2797,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG2798,%rbx
push %rbx
pushq $0
mov $@_$MSG2799,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG2800,%rbx
push %rbx
pushq $0
mov $@_$MSG2801,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $154
pushq $0
pushq $0
pushq $1
mov $@_$MSG2802,%rbx
push %rbx
pushq $0
mov $@_$MSG2803,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG2804,%rbx
push %rbx
pushq $0
mov $@_$MSG2805,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG2806,%rbx
push %rbx
pushq $0
mov $@_$MSG2807,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $26
pushq $0
pushq $72
pushq $1
mov $@_$MSG2808,%rbx
push %rbx
pushq $0
mov $@_$MSG2809,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG2810,%rbx
push %rbx
pushq $0
mov $@_$MSG2811,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG2812,%rbx
push %rbx
pushq $0
mov $@_$MSG2813,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__movw_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2814,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__movb_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2815,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__movl_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2816,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__movq_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2817,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $43
pushq $0
pushq $72
pushq $1
mov $@_$MSG2818,%rbx
push %rbx
pushq $0
mov $@_$MSG2819,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__movq_handler2,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2820,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG2821,%rbx
push %rbx
mov $@_$MSG2822,%rbx
push %rbx
mov $@_$MSG2823,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG2824,%rbx
push %rbx
pushq $0
mov $@_$MSG2825,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG2826,%rbx
push %rbx
pushq $0
mov $@_$MSG2827,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $1
mov $@_$MSG2828,%rbx
push %rbx
pushq $0
mov $@_$MSG2829,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
@assembler__ins_init_mov$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__jmp_handler
push %rbp
mov %rsp,%rbp
sub $128,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
mov 16(%rdi),%rbx
mov %rbx,%rax
mov @_$DATA+11815248,%rcx
sub %rcx,%rax
mov %rax,%rsi
mov %rsi,%rbx
sub $5,%rbx
mov %rbx,%rax
mov $2147483647,%rcx
cmp %rcx,%rax
jbe @_$LB11741
mov 16(%rdi),%rbx
mov %rbx,%rax
mov @_$DATA+11815248,%rcx
sub %rcx,%rax
mov %rax,%rsi
mov %rsi,%rbx
sub $5,%rbx
mov %rbx,%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jae @_$LB11741
@_$LB11744
mov $@_$MSG2830,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11741
mov 16(%rdi),%rbx
mov %rbx,%rax
mov @_$DATA+11815248,%rcx
sub %rcx,%rax
mov %rax,%rsi
mov %rsi,%rbx
sub $2,%rbx
mov %rbx,%rax
mov %eax,18446744073709551568(%rbp)
mov 18446744073709551568(%rbp),%eax
mov $127,%ecx
cmp %ecx,%eax
jbe @_$LB11746
mov 18446744073709551568(%rbp),%eax
mov $4294967168,%ecx
cmp %ecx,%eax
jae @_$LB11746
@_$LB11750
mov 18446744073709551568(%rbp),%ebx
sub $3,%ebx
mov %ebx,%eax
mov %eax,18446744073709551568(%rbp)
pushq $233
call @assembler__soutc
add $8,%rsp
pushq $4
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
jmp @_$LB11747
@_$LB11746
pushq $235
call @assembler__soutc
add $8,%rsp
pushq $1
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
@_$LB11747
mov $1,%eax
mov @_$DATA+11815296,%rcx
mov %eax,32(%rcx)
mov $0,%rax
@assembler__jmp_handler$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__jcond_handler
push %rbp
mov %rsp,%rbp
sub $128,%rsp
push %rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
push %r8
mov 16(%rbp),%r8
mov 16(%rdi),%rbx
mov %rbx,%rax
mov @_$DATA+11815248,%rcx
sub %rcx,%rax
mov %rax,%rsi
mov %rsi,%rbx
sub $6,%rbx
mov %rbx,%rax
mov $2147483647,%rcx
cmp %rcx,%rax
jbe @_$LB11753
mov 16(%rdi),%rbx
mov %rbx,%rax
mov @_$DATA+11815248,%rcx
sub %rcx,%rax
mov %rax,%rsi
mov %rsi,%rbx
sub $6,%rbx
mov %rbx,%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jae @_$LB11753
@_$LB11756
mov $@_$MSG2831,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11753
mov 16(%rdi),%rbx
mov %rbx,%rax
mov @_$DATA+11815248,%rcx
sub %rcx,%rax
mov %rax,%rsi
mov %rsi,%rbx
sub $2,%rbx
mov %rbx,%rax
mov %eax,18446744073709551568(%rbp)
mov 18446744073709551568(%rbp),%eax
mov $127,%ecx
cmp %ecx,%eax
jbe @_$LB11758
mov 18446744073709551568(%rbp),%eax
mov $4294967168,%ecx
cmp %ecx,%eax
jae @_$LB11758
@_$LB11762
mov 18446744073709551568(%rbp),%ebx
sub $4,%ebx
mov %ebx,%eax
mov %eax,18446744073709551568(%rbp)
pushq $2
mov %r8,%rbx
add $1,%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
pushq $4
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
jmp @_$LB11759
@_$LB11758
pushq $1
push %r8
call @assembler__swrite
add $16,%rsp
pushq $1
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
@_$LB11759
mov $1,%eax
mov @_$DATA+11815296,%rcx
mov %eax,32(%rcx)
mov $0,%rax
@assembler__jcond_handler$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__call_handler
push %rbp
mov %rsp,%rbp
sub $96,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rdi
mov 24(%rbp),%rdi
mov 16(%rdi),%rbx
mov %rbx,%rax
mov @_$DATA+11815248,%rcx
sub %rcx,%rax
mov %rax,%rsi
mov %rsi,%rbx
sub $5,%rbx
mov %rbx,%rax
mov $2147483647,%rcx
cmp %rcx,%rax
jbe @_$LB11765
mov 16(%rdi),%rbx
mov %rbx,%rax
mov @_$DATA+11815248,%rcx
sub %rcx,%rax
mov %rax,%rsi
mov %rsi,%rbx
sub $5,%rbx
mov %rbx,%rax
mov $18446744071562067968,%rcx
cmp %rcx,%rax
jae @_$LB11765
@_$LB11768
mov $@_$MSG2832,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11765
mov 16(%rdi),%rbx
mov %rbx,%rax
mov @_$DATA+11815248,%rcx
sub %rcx,%rax
mov %rax,%rsi
mov %rsi,%rbx
sub $5,%rbx
mov %rbx,%rax
mov %eax,18446744073709551568(%rbp)
pushq $232
call @assembler__soutc
add $8,%rsp
pushq $4
lea 18446744073709551568(%rbp),%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
mov $1,%eax
mov @_$DATA+11815296,%rcx
mov %eax,32(%rcx)
mov $0,%rax
@assembler__call_handler$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__ins_init_jmp
push %rbp
mov %rsp,%rbp
sub $400,%rsp
push %rbx
mov $@assembler__jmp_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2833,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $32
pushq $0
pushq $1
mov $@_$MSG2834,%rbx
push %rbx
pushq $0
mov $@_$MSG2835,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $32
pushq $0
pushq $1
mov $@_$MSG2836,%rbx
push %rbx
pushq $0
mov $@_$MSG2837,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2838,%rbx
push %rbx
pushq $0
mov $@_$MSG2839,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2840,%rbx
push %rbx
pushq $0
mov $@_$MSG2841,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2842,%rbx
push %rbx
pushq $0
mov $@_$MSG2843,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2844,%rbx
push %rbx
pushq $0
mov $@_$MSG2845,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2846,%rbx
push %rbx
pushq $0
mov $@_$MSG2847,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2848,%rbx
push %rbx
pushq $0
mov $@_$MSG2849,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2850,%rbx
push %rbx
pushq $0
mov $@_$MSG2851,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2852,%rbx
push %rbx
pushq $0
mov $@_$MSG2853,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2854,%rbx
push %rbx
pushq $0
mov $@_$MSG2855,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2856,%rbx
push %rbx
pushq $0
mov $@_$MSG2857,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2858,%rbx
push %rbx
pushq $0
mov $@_$MSG2859,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2860,%rbx
push %rbx
pushq $0
mov $@_$MSG2861,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2862,%rbx
push %rbx
pushq $0
mov $@_$MSG2863,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2864,%rbx
push %rbx
pushq $0
mov $@_$MSG2865,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2866,%rbx
push %rbx
pushq $0
mov $@_$MSG2867,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__jcond_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2868,%rbx
push %rbx
pushq $0
mov $@_$MSG2869,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
mov $@assembler__call_handler,%rax
push %rax
pushq $0
pushq $0
pushq $0
pushq $0
pushq $0
pushq $0
mov $@_$MSG2870,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $16
pushq $0
pushq $1
mov $@_$MSG2871,%rbx
push %rbx
pushq $0
mov $@_$MSG2872,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $16
pushq $0
pushq $1
mov $@_$MSG2873,%rbx
push %rbx
pushq $0
mov $@_$MSG2874,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG2875,%rbx
push %rbx
pushq $0
mov $@_$MSG2876,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
@assembler__ins_init_jmp$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__ins_init_basic_op
push %rbp
mov %rsp,%rbp
sub $6368,%rsp
push %rbx
pushq $0
pushq $33
pushq $0
pushq $0
pushq $1
mov $@_$MSG2877,%rbx
push %rbx
pushq $0
mov $@_$MSG2878,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $0
pushq $72
pushq $1
mov $@_$MSG2879,%rbx
push %rbx
pushq $0
mov $@_$MSG2880,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $0
pushq $0
pushq $1
mov $@_$MSG2881,%rbx
push %rbx
mov $@_$MSG2882,%rbx
push %rbx
mov $@_$MSG2883,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $0
pushq $0
pushq $1
mov $@_$MSG2884,%rbx
push %rbx
pushq $0
mov $@_$MSG2885,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $0
pushq $0
pushq $1
mov $@_$MSG2886,%rbx
push %rbx
pushq $0
mov $@_$MSG2887,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $0
pushq $72
pushq $1
mov $@_$MSG2888,%rbx
push %rbx
pushq $0
mov $@_$MSG2889,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $0
pushq $0
pushq $1
mov $@_$MSG2890,%rbx
push %rbx
mov $@_$MSG2891,%rbx
push %rbx
mov $@_$MSG2892,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $0
pushq $0
pushq $1
mov $@_$MSG2893,%rbx
push %rbx
pushq $0
mov $@_$MSG2894,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $8
pushq $0
pushq $1
mov $@_$MSG2895,%rbx
push %rbx
pushq $0
mov $@_$MSG2896,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $8
pushq $72
pushq $1
mov $@_$MSG2897,%rbx
push %rbx
pushq $0
mov $@_$MSG2898,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $8
pushq $0
pushq $1
mov $@_$MSG2899,%rbx
push %rbx
mov $@_$MSG2900,%rbx
push %rbx
mov $@_$MSG2901,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $8
pushq $0
pushq $1
mov $@_$MSG2902,%rbx
push %rbx
pushq $0
mov $@_$MSG2903,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $8
pushq $0
pushq $1
mov $@_$MSG2904,%rbx
push %rbx
pushq $0
mov $@_$MSG2905,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $8
pushq $72
pushq $1
mov $@_$MSG2906,%rbx
push %rbx
pushq $0
mov $@_$MSG2907,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $8
pushq $0
pushq $1
mov $@_$MSG2908,%rbx
push %rbx
mov $@_$MSG2909,%rbx
push %rbx
mov $@_$MSG2910,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $8
pushq $0
pushq $1
mov $@_$MSG2911,%rbx
push %rbx
pushq $0
mov $@_$MSG2912,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $16
pushq $0
pushq $1
mov $@_$MSG2913,%rbx
push %rbx
pushq $0
mov $@_$MSG2914,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $16
pushq $72
pushq $1
mov $@_$MSG2915,%rbx
push %rbx
pushq $0
mov $@_$MSG2916,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $16
pushq $0
pushq $1
mov $@_$MSG2917,%rbx
push %rbx
mov $@_$MSG2918,%rbx
push %rbx
mov $@_$MSG2919,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $16
pushq $0
pushq $1
mov $@_$MSG2920,%rbx
push %rbx
pushq $0
mov $@_$MSG2921,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $16
pushq $0
pushq $1
mov $@_$MSG2922,%rbx
push %rbx
pushq $0
mov $@_$MSG2923,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $16
pushq $72
pushq $1
mov $@_$MSG2924,%rbx
push %rbx
pushq $0
mov $@_$MSG2925,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $16
pushq $0
pushq $1
mov $@_$MSG2926,%rbx
push %rbx
mov $@_$MSG2927,%rbx
push %rbx
mov $@_$MSG2928,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $16
pushq $0
pushq $1
mov $@_$MSG2929,%rbx
push %rbx
pushq $0
mov $@_$MSG2930,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $24
pushq $0
pushq $1
mov $@_$MSG2931,%rbx
push %rbx
pushq $0
mov $@_$MSG2932,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $24
pushq $72
pushq $1
mov $@_$MSG2933,%rbx
push %rbx
pushq $0
mov $@_$MSG2934,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $24
pushq $0
pushq $1
mov $@_$MSG2935,%rbx
push %rbx
mov $@_$MSG2936,%rbx
push %rbx
mov $@_$MSG2937,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $24
pushq $0
pushq $1
mov $@_$MSG2938,%rbx
push %rbx
pushq $0
mov $@_$MSG2939,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $24
pushq $0
pushq $1
mov $@_$MSG2940,%rbx
push %rbx
pushq $0
mov $@_$MSG2941,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $24
pushq $72
pushq $1
mov $@_$MSG2942,%rbx
push %rbx
pushq $0
mov $@_$MSG2943,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $24
pushq $0
pushq $1
mov $@_$MSG2944,%rbx
push %rbx
mov $@_$MSG2945,%rbx
push %rbx
mov $@_$MSG2946,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $24
pushq $0
pushq $1
mov $@_$MSG2947,%rbx
push %rbx
pushq $0
mov $@_$MSG2948,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG2949,%rbx
push %rbx
pushq $0
mov $@_$MSG2950,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $1
mov $@_$MSG2951,%rbx
push %rbx
pushq $0
mov $@_$MSG2952,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG2953,%rbx
push %rbx
mov $@_$MSG2954,%rbx
push %rbx
mov $@_$MSG2955,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG2956,%rbx
push %rbx
pushq $0
mov $@_$MSG2957,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $171
pushq $56
pushq $0
pushq $1
mov $@_$MSG2958,%rbx
push %rbx
pushq $0
mov $@_$MSG2959,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $138
pushq $0
pushq $0
pushq $1
mov $@_$MSG2960,%rbx
push %rbx
pushq $0
mov $@_$MSG2961,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $56
pushq $0
pushq $1
mov $@_$MSG2962,%rbx
push %rbx
pushq $0
mov $@_$MSG2963,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $43
pushq $56
pushq $72
pushq $1
mov $@_$MSG2964,%rbx
push %rbx
pushq $0
mov $@_$MSG2965,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $10
pushq $0
pushq $72
pushq $1
mov $@_$MSG2966,%rbx
push %rbx
pushq $0
mov $@_$MSG2967,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $56
pushq $72
pushq $1
mov $@_$MSG2968,%rbx
push %rbx
pushq $0
mov $@_$MSG2969,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $167
pushq $56
pushq $0
pushq $1
mov $@_$MSG2970,%rbx
push %rbx
mov $@_$MSG2971,%rbx
push %rbx
mov $@_$MSG2972,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $134
pushq $0
pushq $0
pushq $1
mov $@_$MSG2973,%rbx
push %rbx
mov $@_$MSG2974,%rbx
push %rbx
mov $@_$MSG2975,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $56
pushq $0
pushq $1
mov $@_$MSG2976,%rbx
push %rbx
mov $@_$MSG2977,%rbx
push %rbx
mov $@_$MSG2978,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $56
pushq $0
pushq $1
mov $@_$MSG2979,%rbx
push %rbx
pushq $0
mov $@_$MSG2980,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $130
pushq $0
pushq $0
pushq $1
mov $@_$MSG2981,%rbx
push %rbx
pushq $0
mov $@_$MSG2982,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $154
pushq $56
pushq $0
pushq $1
mov $@_$MSG2983,%rbx
push %rbx
pushq $0
mov $@_$MSG2984,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $56
pushq $0
pushq $1
mov $@_$MSG2985,%rbx
push %rbx
pushq $0
mov $@_$MSG2986,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $26
pushq $56
pushq $72
pushq $1
mov $@_$MSG2987,%rbx
push %rbx
pushq $0
mov $@_$MSG2988,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $56
pushq $72
pushq $1
mov $@_$MSG2989,%rbx
push %rbx
pushq $0
mov $@_$MSG2990,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $150
pushq $56
pushq $0
pushq $1
mov $@_$MSG2991,%rbx
push %rbx
mov $@_$MSG2992,%rbx
push %rbx
mov $@_$MSG2993,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $56
pushq $0
pushq $1
mov $@_$MSG2994,%rbx
push %rbx
mov $@_$MSG2995,%rbx
push %rbx
mov $@_$MSG2996,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $56
pushq $0
pushq $1
mov $@_$MSG2997,%rbx
push %rbx
pushq $0
mov $@_$MSG2998,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG2999,%rbx
push %rbx
pushq $0
mov $@_$MSG3000,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3001,%rbx
push %rbx
pushq $0
mov $@_$MSG3002,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3003,%rbx
push %rbx
pushq $0
mov $@_$MSG3004,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3005,%rbx
push %rbx
pushq $0
mov $@_$MSG3006,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3007,%rbx
push %rbx
mov $@_$MSG3008,%rbx
push %rbx
mov $@_$MSG3009,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3010,%rbx
push %rbx
mov $@_$MSG3011,%rbx
push %rbx
mov $@_$MSG3012,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3013,%rbx
push %rbx
pushq $0
mov $@_$MSG3014,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3015,%rbx
push %rbx
pushq $0
mov $@_$MSG3016,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3017,%rbx
push %rbx
pushq $0
mov $@_$MSG3018,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $1
mov $@_$MSG3019,%rbx
push %rbx
pushq $0
mov $@_$MSG3020,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3021,%rbx
push %rbx
mov $@_$MSG3022,%rbx
push %rbx
mov $@_$MSG3023,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3024,%rbx
push %rbx
pushq $0
mov $@_$MSG3025,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $171
pushq $0
pushq $0
pushq $1
mov $@_$MSG3026,%rbx
push %rbx
pushq $0
mov $@_$MSG3027,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $138
pushq $0
pushq $0
pushq $1
mov $@_$MSG3028,%rbx
push %rbx
pushq $0
mov $@_$MSG3029,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $43
pushq $0
pushq $72
pushq $1
mov $@_$MSG3030,%rbx
push %rbx
pushq $0
mov $@_$MSG3031,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $10
pushq $0
pushq $72
pushq $1
mov $@_$MSG3032,%rbx
push %rbx
pushq $0
mov $@_$MSG3033,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $167
pushq $0
pushq $0
pushq $1
mov $@_$MSG3034,%rbx
push %rbx
mov $@_$MSG3035,%rbx
push %rbx
mov $@_$MSG3036,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $134
pushq $0
pushq $0
pushq $1
mov $@_$MSG3037,%rbx
push %rbx
mov $@_$MSG3038,%rbx
push %rbx
mov $@_$MSG3039,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $0
pushq $0
pushq $1
mov $@_$MSG3040,%rbx
push %rbx
pushq $0
mov $@_$MSG3041,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $130
pushq $0
pushq $0
pushq $1
mov $@_$MSG3042,%rbx
push %rbx
pushq $0
mov $@_$MSG3043,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $154
pushq $0
pushq $0
pushq $1
mov $@_$MSG3044,%rbx
push %rbx
pushq $0
mov $@_$MSG3045,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $26
pushq $0
pushq $72
pushq $1
mov $@_$MSG3046,%rbx
push %rbx
pushq $0
mov $@_$MSG3047,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $150
pushq $0
pushq $0
pushq $1
mov $@_$MSG3048,%rbx
push %rbx
mov $@_$MSG3049,%rbx
push %rbx
mov $@_$MSG3050,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $0
pushq $0
pushq $1
mov $@_$MSG3051,%rbx
push %rbx
pushq $0
mov $@_$MSG3052,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3053,%rbx
push %rbx
pushq $0
mov $@_$MSG3054,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3055,%rbx
push %rbx
pushq $0
mov $@_$MSG3056,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3057,%rbx
push %rbx
pushq $0
mov $@_$MSG3058,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3059,%rbx
push %rbx
pushq $0
mov $@_$MSG3060,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3061,%rbx
push %rbx
mov $@_$MSG3062,%rbx
push %rbx
mov $@_$MSG3063,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3064,%rbx
push %rbx
mov $@_$MSG3065,%rbx
push %rbx
mov $@_$MSG3066,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3067,%rbx
push %rbx
pushq $0
mov $@_$MSG3068,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3069,%rbx
push %rbx
pushq $0
mov $@_$MSG3070,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $32
pushq $0
pushq $1
mov $@_$MSG3071,%rbx
push %rbx
pushq $0
mov $@_$MSG3072,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $32
pushq $72
pushq $1
mov $@_$MSG3073,%rbx
push %rbx
pushq $0
mov $@_$MSG3074,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $32
pushq $0
pushq $1
mov $@_$MSG3075,%rbx
push %rbx
mov $@_$MSG3076,%rbx
push %rbx
mov $@_$MSG3077,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $32
pushq $0
pushq $1
mov $@_$MSG3078,%rbx
push %rbx
pushq $0
mov $@_$MSG3079,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $32
pushq $0
pushq $1
mov $@_$MSG3080,%rbx
push %rbx
pushq $0
mov $@_$MSG3081,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $32
pushq $72
pushq $1
mov $@_$MSG3082,%rbx
push %rbx
pushq $0
mov $@_$MSG3083,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $32
pushq $0
pushq $1
mov $@_$MSG3084,%rbx
push %rbx
mov $@_$MSG3085,%rbx
push %rbx
mov $@_$MSG3086,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $32
pushq $0
pushq $1
mov $@_$MSG3087,%rbx
push %rbx
pushq $0
mov $@_$MSG3088,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $32
pushq $0
pushq $1
mov $@_$MSG3089,%rbx
push %rbx
pushq $0
mov $@_$MSG3090,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $32
pushq $72
pushq $1
mov $@_$MSG3091,%rbx
push %rbx
pushq $0
mov $@_$MSG3092,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $32
pushq $0
pushq $1
mov $@_$MSG3093,%rbx
push %rbx
mov $@_$MSG3094,%rbx
push %rbx
mov $@_$MSG3095,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $32
pushq $0
pushq $1
mov $@_$MSG3096,%rbx
push %rbx
pushq $0
mov $@_$MSG3097,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $40
pushq $0
pushq $1
mov $@_$MSG3098,%rbx
push %rbx
pushq $0
mov $@_$MSG3099,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $40
pushq $72
pushq $1
mov $@_$MSG3100,%rbx
push %rbx
pushq $0
mov $@_$MSG3101,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $40
pushq $0
pushq $1
mov $@_$MSG3102,%rbx
push %rbx
mov $@_$MSG3103,%rbx
push %rbx
mov $@_$MSG3104,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $40
pushq $0
pushq $1
mov $@_$MSG3105,%rbx
push %rbx
pushq $0
mov $@_$MSG3106,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $40
pushq $0
pushq $1
mov $@_$MSG3107,%rbx
push %rbx
pushq $0
mov $@_$MSG3108,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $40
pushq $72
pushq $1
mov $@_$MSG3109,%rbx
push %rbx
pushq $0
mov $@_$MSG3110,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $40
pushq $0
pushq $1
mov $@_$MSG3111,%rbx
push %rbx
mov $@_$MSG3112,%rbx
push %rbx
mov $@_$MSG3113,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $40
pushq $0
pushq $1
mov $@_$MSG3114,%rbx
push %rbx
pushq $0
mov $@_$MSG3115,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $40
pushq $0
pushq $1
mov $@_$MSG3116,%rbx
push %rbx
pushq $0
mov $@_$MSG3117,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $40
pushq $72
pushq $1
mov $@_$MSG3118,%rbx
push %rbx
pushq $0
mov $@_$MSG3119,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $40
pushq $0
pushq $1
mov $@_$MSG3120,%rbx
push %rbx
mov $@_$MSG3121,%rbx
push %rbx
mov $@_$MSG3122,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $40
pushq $0
pushq $1
mov $@_$MSG3123,%rbx
push %rbx
pushq $0
mov $@_$MSG3124,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $56
pushq $0
pushq $1
mov $@_$MSG3125,%rbx
push %rbx
pushq $0
mov $@_$MSG3126,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $56
pushq $72
pushq $1
mov $@_$MSG3127,%rbx
push %rbx
pushq $0
mov $@_$MSG3128,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $56
pushq $0
pushq $1
mov $@_$MSG3129,%rbx
push %rbx
mov $@_$MSG3130,%rbx
push %rbx
mov $@_$MSG3131,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $56
pushq $0
pushq $1
mov $@_$MSG3132,%rbx
push %rbx
pushq $0
mov $@_$MSG3133,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $56
pushq $0
pushq $1
mov $@_$MSG3134,%rbx
push %rbx
pushq $0
mov $@_$MSG3135,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $56
pushq $72
pushq $1
mov $@_$MSG3136,%rbx
push %rbx
pushq $0
mov $@_$MSG3137,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $56
pushq $0
pushq $1
mov $@_$MSG3138,%rbx
push %rbx
mov $@_$MSG3139,%rbx
push %rbx
mov $@_$MSG3140,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $56
pushq $0
pushq $1
mov $@_$MSG3141,%rbx
push %rbx
pushq $0
mov $@_$MSG3142,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $56
pushq $0
pushq $1
mov $@_$MSG3143,%rbx
push %rbx
pushq $0
mov $@_$MSG3144,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $56
pushq $72
pushq $1
mov $@_$MSG3145,%rbx
push %rbx
pushq $0
mov $@_$MSG3146,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $56
pushq $0
pushq $1
mov $@_$MSG3147,%rbx
push %rbx
mov $@_$MSG3148,%rbx
push %rbx
mov $@_$MSG3149,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $56
pushq $0
pushq $1
mov $@_$MSG3150,%rbx
push %rbx
pushq $0
mov $@_$MSG3151,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3152,%rbx
push %rbx
pushq $0
mov $@_$MSG3153,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3154,%rbx
push %rbx
pushq $0
mov $@_$MSG3155,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3156,%rbx
push %rbx
pushq $0
mov $@_$MSG3157,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3158,%rbx
push %rbx
pushq $0
mov $@_$MSG3159,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3160,%rbx
push %rbx
pushq $0
mov $@_$MSG3161,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3162,%rbx
push %rbx
pushq $0
mov $@_$MSG3163,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3164,%rbx
push %rbx
pushq $0
mov $@_$MSG3165,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3166,%rbx
push %rbx
pushq $0
mov $@_$MSG3167,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3168,%rbx
push %rbx
pushq $0
mov $@_$MSG3169,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3170,%rbx
push %rbx
pushq $0
mov $@_$MSG3171,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3172,%rbx
push %rbx
pushq $0
mov $@_$MSG3173,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3174,%rbx
push %rbx
pushq $0
mov $@_$MSG3175,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3176,%rbx
push %rbx
pushq $0
mov $@_$MSG3177,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3178,%rbx
push %rbx
pushq $0
mov $@_$MSG3179,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3180,%rbx
push %rbx
pushq $0
mov $@_$MSG3181,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3182,%rbx
push %rbx
pushq $0
mov $@_$MSG3183,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $10
pushq $0
pushq $0
pushq $1
mov $@_$MSG3184,%rbx
push %rbx
pushq $0
mov $@_$MSG3185,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $48
pushq $0
pushq $1
mov $@_$MSG3186,%rbx
push %rbx
pushq $0
mov $@_$MSG3187,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3188,%rbx
push %rbx
pushq $0
mov $@_$MSG3189,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3190,%rbx
push %rbx
pushq $0
mov $@_$MSG3191,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3192,%rbx
push %rbx
pushq $0
mov $@_$MSG3193,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3194,%rbx
push %rbx
pushq $0
mov $@_$MSG3195,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3196,%rbx
push %rbx
pushq $0
mov $@_$MSG3197,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3198,%rbx
push %rbx
pushq $0
mov $@_$MSG3199,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3200,%rbx
push %rbx
pushq $0
mov $@_$MSG3201,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3202,%rbx
push %rbx
pushq $0
mov $@_$MSG3203,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3204,%rbx
push %rbx
pushq $0
mov $@_$MSG3205,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3206,%rbx
push %rbx
pushq $0
mov $@_$MSG3207,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3208,%rbx
push %rbx
pushq $0
mov $@_$MSG3209,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3210,%rbx
push %rbx
pushq $0
mov $@_$MSG3211,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3212,%rbx
push %rbx
pushq $0
mov $@_$MSG3213,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3214,%rbx
push %rbx
pushq $0
mov $@_$MSG3215,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3216,%rbx
push %rbx
pushq $0
mov $@_$MSG3217,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3218,%rbx
push %rbx
pushq $0
mov $@_$MSG3219,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $0
pushq $0
pushq $1
mov $@_$MSG3220,%rbx
push %rbx
pushq $0
mov $@_$MSG3221,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3222,%rbx
push %rbx
pushq $0
mov $@_$MSG3223,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3224,%rbx
push %rbx
pushq $0
mov $@_$MSG3225,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3226,%rbx
push %rbx
mov $@_$MSG3227,%rbx
push %rbx
mov $@_$MSG3228,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $32
pushq $0
pushq $1
mov $@_$MSG3229,%rbx
push %rbx
pushq $0
mov $@_$MSG3230,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $32
pushq $72
pushq $1
mov $@_$MSG3231,%rbx
push %rbx
pushq $0
mov $@_$MSG3232,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $32
pushq $0
pushq $1
mov $@_$MSG3233,%rbx
push %rbx
mov $@_$MSG3234,%rbx
push %rbx
mov $@_$MSG3235,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $32
pushq $0
pushq $1
mov $@_$MSG3236,%rbx
push %rbx
pushq $0
mov $@_$MSG3237,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $32
pushq $0
pushq $1
mov $@_$MSG3238,%rbx
push %rbx
pushq $0
mov $@_$MSG3239,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $32
pushq $72
pushq $1
mov $@_$MSG3240,%rbx
push %rbx
pushq $0
mov $@_$MSG3241,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $32
pushq $0
pushq $1
mov $@_$MSG3242,%rbx
push %rbx
mov $@_$MSG3243,%rbx
push %rbx
mov $@_$MSG3244,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $32
pushq $0
pushq $1
mov $@_$MSG3245,%rbx
push %rbx
pushq $0
mov $@_$MSG3246,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $40
pushq $0
pushq $1
mov $@_$MSG3247,%rbx
push %rbx
pushq $0
mov $@_$MSG3248,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $40
pushq $72
pushq $1
mov $@_$MSG3249,%rbx
push %rbx
pushq $0
mov $@_$MSG3250,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $40
pushq $0
pushq $1
mov $@_$MSG3251,%rbx
push %rbx
mov $@_$MSG3252,%rbx
push %rbx
mov $@_$MSG3253,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $40
pushq $0
pushq $1
mov $@_$MSG3254,%rbx
push %rbx
pushq $0
mov $@_$MSG3255,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $40
pushq $0
pushq $1
mov $@_$MSG3256,%rbx
push %rbx
pushq $0
mov $@_$MSG3257,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $40
pushq $72
pushq $1
mov $@_$MSG3258,%rbx
push %rbx
pushq $0
mov $@_$MSG3259,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $40
pushq $0
pushq $1
mov $@_$MSG3260,%rbx
push %rbx
mov $@_$MSG3261,%rbx
push %rbx
mov $@_$MSG3262,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $40
pushq $0
pushq $1
mov $@_$MSG3263,%rbx
push %rbx
pushq $0
mov $@_$MSG3264,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $48
pushq $0
pushq $1
mov $@_$MSG3265,%rbx
push %rbx
pushq $0
mov $@_$MSG3266,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $48
pushq $72
pushq $1
mov $@_$MSG3267,%rbx
push %rbx
pushq $0
mov $@_$MSG3268,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $48
pushq $0
pushq $1
mov $@_$MSG3269,%rbx
push %rbx
mov $@_$MSG3270,%rbx
push %rbx
mov $@_$MSG3271,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $48
pushq $0
pushq $1
mov $@_$MSG3272,%rbx
push %rbx
pushq $0
mov $@_$MSG3273,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $48
pushq $0
pushq $1
mov $@_$MSG3274,%rbx
push %rbx
pushq $0
mov $@_$MSG3275,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $48
pushq $72
pushq $1
mov $@_$MSG3276,%rbx
push %rbx
pushq $0
mov $@_$MSG3277,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $48
pushq $0
pushq $1
mov $@_$MSG3278,%rbx
push %rbx
mov $@_$MSG3279,%rbx
push %rbx
mov $@_$MSG3280,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $48
pushq $0
pushq $1
mov $@_$MSG3281,%rbx
push %rbx
pushq $0
mov $@_$MSG3282,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $56
pushq $0
pushq $1
mov $@_$MSG3283,%rbx
push %rbx
pushq $0
mov $@_$MSG3284,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $56
pushq $72
pushq $1
mov $@_$MSG3285,%rbx
push %rbx
pushq $0
mov $@_$MSG3286,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $56
pushq $0
pushq $1
mov $@_$MSG3287,%rbx
push %rbx
mov $@_$MSG3288,%rbx
push %rbx
mov $@_$MSG3289,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $56
pushq $0
pushq $1
mov $@_$MSG3290,%rbx
push %rbx
pushq $0
mov $@_$MSG3291,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $56
pushq $0
pushq $1
mov $@_$MSG3292,%rbx
push %rbx
pushq $0
mov $@_$MSG3293,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $56
pushq $72
pushq $1
mov $@_$MSG3294,%rbx
push %rbx
pushq $0
mov $@_$MSG3295,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $56
pushq $0
pushq $1
mov $@_$MSG3296,%rbx
push %rbx
mov $@_$MSG3297,%rbx
push %rbx
mov $@_$MSG3298,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $56
pushq $0
pushq $1
mov $@_$MSG3299,%rbx
push %rbx
pushq $0
mov $@_$MSG3300,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3301,%rbx
push %rbx
pushq $0
mov $@_$MSG3302,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $1
mov $@_$MSG3303,%rbx
push %rbx
pushq $0
mov $@_$MSG3304,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3305,%rbx
push %rbx
mov $@_$MSG3306,%rbx
push %rbx
mov $@_$MSG3307,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3308,%rbx
push %rbx
pushq $0
mov $@_$MSG3309,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $171
pushq $0
pushq $0
pushq $1
mov $@_$MSG3310,%rbx
push %rbx
pushq $0
mov $@_$MSG3311,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $138
pushq $0
pushq $0
pushq $1
mov $@_$MSG3312,%rbx
push %rbx
pushq $0
mov $@_$MSG3313,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $0
pushq $0
pushq $1
mov $@_$MSG3314,%rbx
push %rbx
pushq $0
mov $@_$MSG3315,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $43
pushq $0
pushq $72
pushq $1
mov $@_$MSG3316,%rbx
push %rbx
pushq $0
mov $@_$MSG3317,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $10
pushq $0
pushq $72
pushq $1
mov $@_$MSG3318,%rbx
push %rbx
pushq $0
mov $@_$MSG3319,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $0
pushq $72
pushq $1
mov $@_$MSG3320,%rbx
push %rbx
pushq $0
mov $@_$MSG3321,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $167
pushq $0
pushq $0
pushq $1
mov $@_$MSG3322,%rbx
push %rbx
mov $@_$MSG3323,%rbx
push %rbx
mov $@_$MSG3324,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $134
pushq $0
pushq $0
pushq $1
mov $@_$MSG3325,%rbx
push %rbx
mov $@_$MSG3326,%rbx
push %rbx
mov $@_$MSG3327,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $0
pushq $0
pushq $1
mov $@_$MSG3328,%rbx
push %rbx
mov $@_$MSG3329,%rbx
push %rbx
mov $@_$MSG3330,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $0
pushq $0
pushq $1
mov $@_$MSG3331,%rbx
push %rbx
pushq $0
mov $@_$MSG3332,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $130
pushq $0
pushq $0
pushq $1
mov $@_$MSG3333,%rbx
push %rbx
pushq $0
mov $@_$MSG3334,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $154
pushq $0
pushq $0
pushq $1
mov $@_$MSG3335,%rbx
push %rbx
pushq $0
mov $@_$MSG3336,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $0
pushq $0
pushq $1
mov $@_$MSG3337,%rbx
push %rbx
pushq $0
mov $@_$MSG3338,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $26
pushq $0
pushq $72
pushq $1
mov $@_$MSG3339,%rbx
push %rbx
pushq $0
mov $@_$MSG3340,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $0
pushq $72
pushq $1
mov $@_$MSG3341,%rbx
push %rbx
pushq $0
mov $@_$MSG3342,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $150
pushq $0
pushq $0
pushq $1
mov $@_$MSG3343,%rbx
push %rbx
mov $@_$MSG3344,%rbx
push %rbx
mov $@_$MSG3345,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $0
pushq $0
pushq $1
mov $@_$MSG3346,%rbx
push %rbx
mov $@_$MSG3347,%rbx
push %rbx
mov $@_$MSG3348,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $0
pushq $0
pushq $1
mov $@_$MSG3349,%rbx
push %rbx
pushq $0
mov $@_$MSG3350,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3351,%rbx
push %rbx
pushq $0
mov $@_$MSG3352,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3353,%rbx
push %rbx
pushq $0
mov $@_$MSG3354,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3355,%rbx
push %rbx
pushq $0
mov $@_$MSG3356,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3357,%rbx
push %rbx
pushq $0
mov $@_$MSG3358,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3359,%rbx
push %rbx
mov $@_$MSG3360,%rbx
push %rbx
mov $@_$MSG3361,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3362,%rbx
push %rbx
mov $@_$MSG3363,%rbx
push %rbx
mov $@_$MSG3364,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3365,%rbx
push %rbx
pushq $0
mov $@_$MSG3366,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3367,%rbx
push %rbx
pushq $0
mov $@_$MSG3368,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3369,%rbx
push %rbx
pushq $0
mov $@_$MSG3370,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $1
mov $@_$MSG3371,%rbx
push %rbx
pushq $0
mov $@_$MSG3372,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3373,%rbx
push %rbx
mov $@_$MSG3374,%rbx
push %rbx
mov $@_$MSG3375,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3376,%rbx
push %rbx
pushq $0
mov $@_$MSG3377,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $171
pushq $16
pushq $0
pushq $1
mov $@_$MSG3378,%rbx
push %rbx
pushq $0
mov $@_$MSG3379,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $16
pushq $0
pushq $1
mov $@_$MSG3380,%rbx
push %rbx
pushq $0
mov $@_$MSG3381,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $43
pushq $16
pushq $72
pushq $1
mov $@_$MSG3382,%rbx
push %rbx
pushq $0
mov $@_$MSG3383,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $16
pushq $72
pushq $1
mov $@_$MSG3384,%rbx
push %rbx
pushq $0
mov $@_$MSG3385,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $167
pushq $16
pushq $0
pushq $1
mov $@_$MSG3386,%rbx
push %rbx
mov $@_$MSG3387,%rbx
push %rbx
mov $@_$MSG3388,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $16
pushq $0
pushq $1
mov $@_$MSG3389,%rbx
push %rbx
mov $@_$MSG3390,%rbx
push %rbx
mov $@_$MSG3391,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $16
pushq $0
pushq $1
mov $@_$MSG3392,%rbx
push %rbx
pushq $0
mov $@_$MSG3393,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $154
pushq $16
pushq $0
pushq $1
mov $@_$MSG3394,%rbx
push %rbx
pushq $0
mov $@_$MSG3395,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $16
pushq $0
pushq $1
mov $@_$MSG3396,%rbx
push %rbx
pushq $0
mov $@_$MSG3397,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $26
pushq $16
pushq $72
pushq $1
mov $@_$MSG3398,%rbx
push %rbx
pushq $0
mov $@_$MSG3399,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $16
pushq $72
pushq $1
mov $@_$MSG3400,%rbx
push %rbx
pushq $0
mov $@_$MSG3401,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $150
pushq $16
pushq $0
pushq $1
mov $@_$MSG3402,%rbx
push %rbx
mov $@_$MSG3403,%rbx
push %rbx
mov $@_$MSG3404,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $16
pushq $0
pushq $1
mov $@_$MSG3405,%rbx
push %rbx
mov $@_$MSG3406,%rbx
push %rbx
mov $@_$MSG3407,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $16
pushq $0
pushq $1
mov $@_$MSG3408,%rbx
push %rbx
pushq $0
mov $@_$MSG3409,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3410,%rbx
push %rbx
pushq $0
mov $@_$MSG3411,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3412,%rbx
push %rbx
pushq $0
mov $@_$MSG3413,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3414,%rbx
push %rbx
pushq $0
mov $@_$MSG3415,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3416,%rbx
push %rbx
pushq $0
mov $@_$MSG3417,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3418,%rbx
push %rbx
mov $@_$MSG3419,%rbx
push %rbx
mov $@_$MSG3420,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3421,%rbx
push %rbx
mov $@_$MSG3422,%rbx
push %rbx
mov $@_$MSG3423,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3424,%rbx
push %rbx
pushq $0
mov $@_$MSG3425,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3426,%rbx
push %rbx
pushq $0
mov $@_$MSG3427,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3428,%rbx
push %rbx
pushq $0
mov $@_$MSG3429,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $1
mov $@_$MSG3430,%rbx
push %rbx
pushq $0
mov $@_$MSG3431,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3432,%rbx
push %rbx
mov $@_$MSG3433,%rbx
push %rbx
mov $@_$MSG3434,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3435,%rbx
push %rbx
pushq $0
mov $@_$MSG3436,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $171
pushq $40
pushq $0
pushq $1
mov $@_$MSG3437,%rbx
push %rbx
pushq $0
mov $@_$MSG3438,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $138
pushq $0
pushq $0
pushq $1
mov $@_$MSG3439,%rbx
push %rbx
pushq $0
mov $@_$MSG3440,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $40
pushq $0
pushq $1
mov $@_$MSG3441,%rbx
push %rbx
pushq $0
mov $@_$MSG3442,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $43
pushq $40
pushq $72
pushq $1
mov $@_$MSG3443,%rbx
push %rbx
pushq $0
mov $@_$MSG3444,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $10
pushq $0
pushq $72
pushq $1
mov $@_$MSG3445,%rbx
push %rbx
pushq $0
mov $@_$MSG3446,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $40
pushq $72
pushq $1
mov $@_$MSG3447,%rbx
push %rbx
pushq $0
mov $@_$MSG3448,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $167
pushq $40
pushq $0
pushq $1
mov $@_$MSG3449,%rbx
push %rbx
mov $@_$MSG3450,%rbx
push %rbx
mov $@_$MSG3451,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $134
pushq $0
pushq $0
pushq $1
mov $@_$MSG3452,%rbx
push %rbx
mov $@_$MSG3453,%rbx
push %rbx
mov $@_$MSG3454,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $40
pushq $0
pushq $1
mov $@_$MSG3455,%rbx
push %rbx
mov $@_$MSG3456,%rbx
push %rbx
mov $@_$MSG3457,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $40
pushq $0
pushq $1
mov $@_$MSG3458,%rbx
push %rbx
pushq $0
mov $@_$MSG3459,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $130
pushq $0
pushq $0
pushq $1
mov $@_$MSG3460,%rbx
push %rbx
pushq $0
mov $@_$MSG3461,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $154
pushq $40
pushq $0
pushq $1
mov $@_$MSG3462,%rbx
push %rbx
pushq $0
mov $@_$MSG3463,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $40
pushq $0
pushq $1
mov $@_$MSG3464,%rbx
push %rbx
pushq $0
mov $@_$MSG3465,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $26
pushq $40
pushq $72
pushq $1
mov $@_$MSG3466,%rbx
push %rbx
pushq $0
mov $@_$MSG3467,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $40
pushq $72
pushq $1
mov $@_$MSG3468,%rbx
push %rbx
pushq $0
mov $@_$MSG3469,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $150
pushq $40
pushq $0
pushq $1
mov $@_$MSG3470,%rbx
push %rbx
mov $@_$MSG3471,%rbx
push %rbx
mov $@_$MSG3472,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $40
pushq $0
pushq $1
mov $@_$MSG3473,%rbx
push %rbx
mov $@_$MSG3474,%rbx
push %rbx
mov $@_$MSG3475,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $40
pushq $0
pushq $1
mov $@_$MSG3476,%rbx
push %rbx
pushq $0
mov $@_$MSG3477,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3478,%rbx
push %rbx
pushq $0
mov $@_$MSG3479,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3480,%rbx
push %rbx
pushq $0
mov $@_$MSG3481,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3482,%rbx
push %rbx
pushq $0
mov $@_$MSG3483,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3484,%rbx
push %rbx
pushq $0
mov $@_$MSG3485,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3486,%rbx
push %rbx
mov $@_$MSG3487,%rbx
push %rbx
mov $@_$MSG3488,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3489,%rbx
push %rbx
mov $@_$MSG3490,%rbx
push %rbx
mov $@_$MSG3491,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3492,%rbx
push %rbx
pushq $0
mov $@_$MSG3493,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3494,%rbx
push %rbx
pushq $0
mov $@_$MSG3495,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3496,%rbx
push %rbx
pushq $0
mov $@_$MSG3497,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $1
mov $@_$MSG3498,%rbx
push %rbx
pushq $0
mov $@_$MSG3499,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3500,%rbx
push %rbx
mov $@_$MSG3501,%rbx
push %rbx
mov $@_$MSG3502,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3503,%rbx
push %rbx
pushq $0
mov $@_$MSG3504,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $171
pushq $24
pushq $0
pushq $1
mov $@_$MSG3505,%rbx
push %rbx
pushq $0
mov $@_$MSG3506,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $24
pushq $0
pushq $1
mov $@_$MSG3507,%rbx
push %rbx
pushq $0
mov $@_$MSG3508,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $43
pushq $24
pushq $72
pushq $1
mov $@_$MSG3509,%rbx
push %rbx
pushq $0
mov $@_$MSG3510,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $24
pushq $72
pushq $1
mov $@_$MSG3511,%rbx
push %rbx
pushq $0
mov $@_$MSG3512,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $167
pushq $24
pushq $0
pushq $1
mov $@_$MSG3513,%rbx
push %rbx
mov $@_$MSG3514,%rbx
push %rbx
mov $@_$MSG3515,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $24
pushq $0
pushq $1
mov $@_$MSG3516,%rbx
push %rbx
mov $@_$MSG3517,%rbx
push %rbx
mov $@_$MSG3518,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $24
pushq $0
pushq $1
mov $@_$MSG3519,%rbx
push %rbx
pushq $0
mov $@_$MSG3520,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $154
pushq $24
pushq $0
pushq $1
mov $@_$MSG3521,%rbx
push %rbx
pushq $0
mov $@_$MSG3522,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $24
pushq $0
pushq $1
mov $@_$MSG3523,%rbx
push %rbx
pushq $0
mov $@_$MSG3524,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $26
pushq $24
pushq $72
pushq $1
mov $@_$MSG3525,%rbx
push %rbx
pushq $0
mov $@_$MSG3526,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $24
pushq $72
pushq $1
mov $@_$MSG3527,%rbx
push %rbx
pushq $0
mov $@_$MSG3528,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $150
pushq $24
pushq $0
pushq $1
mov $@_$MSG3529,%rbx
push %rbx
mov $@_$MSG3530,%rbx
push %rbx
mov $@_$MSG3531,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $24
pushq $0
pushq $1
mov $@_$MSG3532,%rbx
push %rbx
mov $@_$MSG3533,%rbx
push %rbx
mov $@_$MSG3534,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $24
pushq $0
pushq $1
mov $@_$MSG3535,%rbx
push %rbx
pushq $0
mov $@_$MSG3536,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3537,%rbx
push %rbx
pushq $0
mov $@_$MSG3538,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3539,%rbx
push %rbx
pushq $0
mov $@_$MSG3540,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3541,%rbx
push %rbx
pushq $0
mov $@_$MSG3542,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3543,%rbx
push %rbx
pushq $0
mov $@_$MSG3544,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3545,%rbx
push %rbx
mov $@_$MSG3546,%rbx
push %rbx
mov $@_$MSG3547,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3548,%rbx
push %rbx
mov $@_$MSG3549,%rbx
push %rbx
mov $@_$MSG3550,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3551,%rbx
push %rbx
pushq $0
mov $@_$MSG3552,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3553,%rbx
push %rbx
pushq $0
mov $@_$MSG3554,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3555,%rbx
push %rbx
pushq $0
mov $@_$MSG3556,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $1
mov $@_$MSG3557,%rbx
push %rbx
pushq $0
mov $@_$MSG3558,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3559,%rbx
push %rbx
mov $@_$MSG3560,%rbx
push %rbx
mov $@_$MSG3561,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3562,%rbx
push %rbx
pushq $0
mov $@_$MSG3563,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $171
pushq $32
pushq $0
pushq $1
mov $@_$MSG3564,%rbx
push %rbx
pushq $0
mov $@_$MSG3565,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $138
pushq $0
pushq $0
pushq $1
mov $@_$MSG3566,%rbx
push %rbx
pushq $0
mov $@_$MSG3567,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $32
pushq $0
pushq $1
mov $@_$MSG3568,%rbx
push %rbx
pushq $0
mov $@_$MSG3569,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $43
pushq $32
pushq $72
pushq $1
mov $@_$MSG3570,%rbx
push %rbx
pushq $0
mov $@_$MSG3571,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $10
pushq $0
pushq $72
pushq $1
mov $@_$MSG3572,%rbx
push %rbx
pushq $0
mov $@_$MSG3573,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $32
pushq $72
pushq $1
mov $@_$MSG3574,%rbx
push %rbx
pushq $0
mov $@_$MSG3575,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $167
pushq $32
pushq $0
pushq $1
mov $@_$MSG3576,%rbx
push %rbx
mov $@_$MSG3577,%rbx
push %rbx
mov $@_$MSG3578,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $134
pushq $0
pushq $0
pushq $1
mov $@_$MSG3579,%rbx
push %rbx
mov $@_$MSG3580,%rbx
push %rbx
mov $@_$MSG3581,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $32
pushq $0
pushq $1
mov $@_$MSG3582,%rbx
push %rbx
mov $@_$MSG3583,%rbx
push %rbx
mov $@_$MSG3584,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $32
pushq $0
pushq $1
mov $@_$MSG3585,%rbx
push %rbx
pushq $0
mov $@_$MSG3586,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $130
pushq $0
pushq $0
pushq $1
mov $@_$MSG3587,%rbx
push %rbx
pushq $0
mov $@_$MSG3588,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $154
pushq $32
pushq $0
pushq $1
mov $@_$MSG3589,%rbx
push %rbx
pushq $0
mov $@_$MSG3590,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $32
pushq $0
pushq $1
mov $@_$MSG3591,%rbx
push %rbx
pushq $0
mov $@_$MSG3592,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $26
pushq $32
pushq $72
pushq $1
mov $@_$MSG3593,%rbx
push %rbx
pushq $0
mov $@_$MSG3594,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $32
pushq $72
pushq $1
mov $@_$MSG3595,%rbx
push %rbx
pushq $0
mov $@_$MSG3596,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $150
pushq $32
pushq $0
pushq $1
mov $@_$MSG3597,%rbx
push %rbx
mov $@_$MSG3598,%rbx
push %rbx
mov $@_$MSG3599,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $32
pushq $0
pushq $1
mov $@_$MSG3600,%rbx
push %rbx
mov $@_$MSG3601,%rbx
push %rbx
mov $@_$MSG3602,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $32
pushq $0
pushq $1
mov $@_$MSG3603,%rbx
push %rbx
pushq $0
mov $@_$MSG3604,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3605,%rbx
push %rbx
pushq $0
mov $@_$MSG3606,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3607,%rbx
push %rbx
pushq $0
mov $@_$MSG3608,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3609,%rbx
push %rbx
pushq $0
mov $@_$MSG3610,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3611,%rbx
push %rbx
pushq $0
mov $@_$MSG3612,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3613,%rbx
push %rbx
mov $@_$MSG3614,%rbx
push %rbx
mov $@_$MSG3615,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3616,%rbx
push %rbx
mov $@_$MSG3617,%rbx
push %rbx
mov $@_$MSG3618,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3619,%rbx
push %rbx
pushq $0
mov $@_$MSG3620,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3621,%rbx
push %rbx
pushq $0
mov $@_$MSG3622,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3623,%rbx
push %rbx
pushq $0
mov $@_$MSG3624,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $1
mov $@_$MSG3625,%rbx
push %rbx
pushq $0
mov $@_$MSG3626,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3627,%rbx
push %rbx
mov $@_$MSG3628,%rbx
push %rbx
mov $@_$MSG3629,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3630,%rbx
push %rbx
pushq $0
mov $@_$MSG3631,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $171
pushq $8
pushq $0
pushq $1
mov $@_$MSG3632,%rbx
push %rbx
pushq $0
mov $@_$MSG3633,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $138
pushq $0
pushq $0
pushq $1
mov $@_$MSG3634,%rbx
push %rbx
pushq $0
mov $@_$MSG3635,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $8
pushq $0
pushq $1
mov $@_$MSG3636,%rbx
push %rbx
pushq $0
mov $@_$MSG3637,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $43
pushq $8
pushq $72
pushq $1
mov $@_$MSG3638,%rbx
push %rbx
pushq $0
mov $@_$MSG3639,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $10
pushq $0
pushq $72
pushq $1
mov $@_$MSG3640,%rbx
push %rbx
pushq $0
mov $@_$MSG3641,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $8
pushq $72
pushq $1
mov $@_$MSG3642,%rbx
push %rbx
pushq $0
mov $@_$MSG3643,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $167
pushq $8
pushq $0
pushq $1
mov $@_$MSG3644,%rbx
push %rbx
mov $@_$MSG3645,%rbx
push %rbx
mov $@_$MSG3646,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $134
pushq $0
pushq $0
pushq $1
mov $@_$MSG3647,%rbx
push %rbx
mov $@_$MSG3648,%rbx
push %rbx
mov $@_$MSG3649,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $8
pushq $0
pushq $1
mov $@_$MSG3650,%rbx
push %rbx
mov $@_$MSG3651,%rbx
push %rbx
mov $@_$MSG3652,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $8
pushq $0
pushq $1
mov $@_$MSG3653,%rbx
push %rbx
pushq $0
mov $@_$MSG3654,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $130
pushq $0
pushq $0
pushq $1
mov $@_$MSG3655,%rbx
push %rbx
pushq $0
mov $@_$MSG3656,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $154
pushq $8
pushq $0
pushq $1
mov $@_$MSG3657,%rbx
push %rbx
pushq $0
mov $@_$MSG3658,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $8
pushq $0
pushq $1
mov $@_$MSG3659,%rbx
push %rbx
pushq $0
mov $@_$MSG3660,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $26
pushq $8
pushq $72
pushq $1
mov $@_$MSG3661,%rbx
push %rbx
pushq $0
mov $@_$MSG3662,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $8
pushq $72
pushq $1
mov $@_$MSG3663,%rbx
push %rbx
pushq $0
mov $@_$MSG3664,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $150
pushq $8
pushq $0
pushq $1
mov $@_$MSG3665,%rbx
push %rbx
mov $@_$MSG3666,%rbx
push %rbx
mov $@_$MSG3667,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $8
pushq $0
pushq $1
mov $@_$MSG3668,%rbx
push %rbx
mov $@_$MSG3669,%rbx
push %rbx
mov $@_$MSG3670,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $8
pushq $0
pushq $1
mov $@_$MSG3671,%rbx
push %rbx
pushq $0
mov $@_$MSG3672,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3673,%rbx
push %rbx
pushq $0
mov $@_$MSG3674,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3675,%rbx
push %rbx
pushq $0
mov $@_$MSG3676,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3677,%rbx
push %rbx
pushq $0
mov $@_$MSG3678,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3679,%rbx
push %rbx
pushq $0
mov $@_$MSG3680,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3681,%rbx
push %rbx
mov $@_$MSG3682,%rbx
push %rbx
mov $@_$MSG3683,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3684,%rbx
push %rbx
mov $@_$MSG3685,%rbx
push %rbx
mov $@_$MSG3686,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3687,%rbx
push %rbx
pushq $0
mov $@_$MSG3688,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3689,%rbx
push %rbx
pushq $0
mov $@_$MSG3690,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3691,%rbx
push %rbx
pushq $0
mov $@_$MSG3692,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $1
mov $@_$MSG3693,%rbx
push %rbx
pushq $0
mov $@_$MSG3694,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3695,%rbx
push %rbx
mov $@_$MSG3696,%rbx
push %rbx
mov $@_$MSG3697,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3698,%rbx
push %rbx
pushq $0
mov $@_$MSG3699,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $171
pushq $48
pushq $0
pushq $1
mov $@_$MSG3700,%rbx
push %rbx
pushq $0
mov $@_$MSG3701,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $138
pushq $0
pushq $0
pushq $1
mov $@_$MSG3702,%rbx
push %rbx
pushq $0
mov $@_$MSG3703,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $48
pushq $0
pushq $1
mov $@_$MSG3704,%rbx
push %rbx
pushq $0
mov $@_$MSG3705,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $43
pushq $48
pushq $72
pushq $1
mov $@_$MSG3706,%rbx
push %rbx
pushq $0
mov $@_$MSG3707,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $10
pushq $0
pushq $72
pushq $1
mov $@_$MSG3708,%rbx
push %rbx
pushq $0
mov $@_$MSG3709,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $48
pushq $72
pushq $1
mov $@_$MSG3710,%rbx
push %rbx
pushq $0
mov $@_$MSG3711,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $167
pushq $48
pushq $0
pushq $1
mov $@_$MSG3712,%rbx
push %rbx
mov $@_$MSG3713,%rbx
push %rbx
mov $@_$MSG3714,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $134
pushq $0
pushq $0
pushq $1
mov $@_$MSG3715,%rbx
push %rbx
mov $@_$MSG3716,%rbx
push %rbx
mov $@_$MSG3717,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $48
pushq $0
pushq $1
mov $@_$MSG3718,%rbx
push %rbx
mov $@_$MSG3719,%rbx
push %rbx
mov $@_$MSG3720,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $163
pushq $48
pushq $0
pushq $1
mov $@_$MSG3721,%rbx
push %rbx
pushq $0
mov $@_$MSG3722,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $130
pushq $0
pushq $0
pushq $1
mov $@_$MSG3723,%rbx
push %rbx
pushq $0
mov $@_$MSG3724,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $154
pushq $48
pushq $0
pushq $1
mov $@_$MSG3725,%rbx
push %rbx
pushq $0
mov $@_$MSG3726,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $48
pushq $0
pushq $1
mov $@_$MSG3727,%rbx
push %rbx
pushq $0
mov $@_$MSG3728,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $26
pushq $48
pushq $72
pushq $1
mov $@_$MSG3729,%rbx
push %rbx
pushq $0
mov $@_$MSG3730,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $48
pushq $72
pushq $1
mov $@_$MSG3731,%rbx
push %rbx
pushq $0
mov $@_$MSG3732,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $150
pushq $48
pushq $0
pushq $1
mov $@_$MSG3733,%rbx
push %rbx
mov $@_$MSG3734,%rbx
push %rbx
mov $@_$MSG3735,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $18
pushq $48
pushq $0
pushq $1
mov $@_$MSG3736,%rbx
push %rbx
mov $@_$MSG3737,%rbx
push %rbx
mov $@_$MSG3738,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $146
pushq $48
pushq $0
pushq $1
mov $@_$MSG3739,%rbx
push %rbx
pushq $0
mov $@_$MSG3740,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3741,%rbx
push %rbx
pushq $0
mov $@_$MSG3742,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3743,%rbx
push %rbx
pushq $0
mov $@_$MSG3744,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3745,%rbx
push %rbx
pushq $0
mov $@_$MSG3746,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3747,%rbx
push %rbx
pushq $0
mov $@_$MSG3748,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3749,%rbx
push %rbx
mov $@_$MSG3750,%rbx
push %rbx
mov $@_$MSG3751,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3752,%rbx
push %rbx
mov $@_$MSG3753,%rbx
push %rbx
mov $@_$MSG3754,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3755,%rbx
push %rbx
pushq $0
mov $@_$MSG3756,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3757,%rbx
push %rbx
pushq $0
mov $@_$MSG3758,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $56
pushq $0
pushq $2
mov $@_$MSG3759,%rbx
push %rbx
pushq $0
mov $@_$MSG3760,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $35
pushq $56
pushq $72
pushq $2
mov $@_$MSG3761,%rbx
push %rbx
pushq $0
mov $@_$MSG3762,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
@assembler__ins_init_basic_op$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__ins_init_xchg
push %rbp
mov %rsp,%rbp
sub $1728,%rsp
push %rbx
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3763,%rbx
push %rbx
pushq $0
mov $@_$MSG3764,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3765,%rbx
push %rbx
pushq $0
mov $@_$MSG3766,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3767,%rbx
push %rbx
pushq $0
mov $@_$MSG3768,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3769,%rbx
push %rbx
pushq $0
mov $@_$MSG3770,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3771,%rbx
push %rbx
pushq $0
mov $@_$MSG3772,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3773,%rbx
push %rbx
pushq $0
mov $@_$MSG3774,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3775,%rbx
push %rbx
pushq $0
mov $@_$MSG3776,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3777,%rbx
push %rbx
pushq $0
mov $@_$MSG3778,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3779,%rbx
push %rbx
pushq $0
mov $@_$MSG3780,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3781,%rbx
push %rbx
pushq $0
mov $@_$MSG3782,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3783,%rbx
push %rbx
pushq $0
mov $@_$MSG3784,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3785,%rbx
push %rbx
pushq $0
mov $@_$MSG3786,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3787,%rbx
push %rbx
pushq $0
mov $@_$MSG3788,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3789,%rbx
push %rbx
pushq $0
mov $@_$MSG3790,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3791,%rbx
push %rbx
pushq $0
mov $@_$MSG3792,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3793,%rbx
push %rbx
pushq $0
mov $@_$MSG3794,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3795,%rbx
push %rbx
pushq $0
mov $@_$MSG3796,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3797,%rbx
push %rbx
pushq $0
mov $@_$MSG3798,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3799,%rbx
push %rbx
pushq $0
mov $@_$MSG3800,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3801,%rbx
push %rbx
pushq $0
mov $@_$MSG3802,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3803,%rbx
push %rbx
pushq $0
mov $@_$MSG3804,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3805,%rbx
push %rbx
pushq $0
mov $@_$MSG3806,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3807,%rbx
push %rbx
pushq $0
mov $@_$MSG3808,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3809,%rbx
push %rbx
pushq $0
mov $@_$MSG3810,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3811,%rbx
push %rbx
pushq $0
mov $@_$MSG3812,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3813,%rbx
push %rbx
pushq $0
mov $@_$MSG3814,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3815,%rbx
push %rbx
pushq $0
mov $@_$MSG3816,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3817,%rbx
push %rbx
pushq $0
mov $@_$MSG3818,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3819,%rbx
push %rbx
pushq $0
mov $@_$MSG3820,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3821,%rbx
push %rbx
pushq $0
mov $@_$MSG3822,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3823,%rbx
push %rbx
pushq $0
mov $@_$MSG3824,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $2
mov $@_$MSG3825,%rbx
push %rbx
pushq $0
mov $@_$MSG3826,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $1
mov $@_$MSG3827,%rbx
push %rbx
pushq $0
mov $@_$MSG3828,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG3829,%rbx
push %rbx
pushq $0
mov $@_$MSG3830,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG3831,%rbx
push %rbx
pushq $0
mov $@_$MSG3832,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG3833,%rbx
push %rbx
pushq $0
mov $@_$MSG3834,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG3835,%rbx
push %rbx
pushq $0
mov $@_$MSG3836,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG3837,%rbx
push %rbx
pushq $0
mov $@_$MSG3838,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG3839,%rbx
push %rbx
pushq $0
mov $@_$MSG3840,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG3841,%rbx
push %rbx
pushq $0
mov $@_$MSG3842,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3843,%rbx
push %rbx
pushq $0
mov $@_$MSG3844,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3845,%rbx
push %rbx
pushq $0
mov $@_$MSG3846,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3847,%rbx
push %rbx
pushq $0
mov $@_$MSG3848,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3849,%rbx
push %rbx
pushq $0
mov $@_$MSG3850,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3851,%rbx
push %rbx
pushq $0
mov $@_$MSG3852,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3853,%rbx
push %rbx
pushq $0
mov $@_$MSG3854,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3855,%rbx
push %rbx
pushq $0
mov $@_$MSG3856,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3857,%rbx
push %rbx
pushq $0
mov $@_$MSG3858,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG3859,%rbx
push %rbx
pushq $0
mov $@_$MSG3860,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG3861,%rbx
push %rbx
pushq $0
mov $@_$MSG3862,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG3863,%rbx
push %rbx
pushq $0
mov $@_$MSG3864,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG3865,%rbx
push %rbx
pushq $0
mov $@_$MSG3866,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG3867,%rbx
push %rbx
pushq $0
mov $@_$MSG3868,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG3869,%rbx
push %rbx
pushq $0
mov $@_$MSG3870,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG3871,%rbx
push %rbx
pushq $0
mov $@_$MSG3872,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3873,%rbx
push %rbx
pushq $0
mov $@_$MSG3874,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3875,%rbx
push %rbx
pushq $0
mov $@_$MSG3876,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3877,%rbx
push %rbx
pushq $0
mov $@_$MSG3878,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3879,%rbx
push %rbx
pushq $0
mov $@_$MSG3880,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3881,%rbx
push %rbx
pushq $0
mov $@_$MSG3882,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3883,%rbx
push %rbx
pushq $0
mov $@_$MSG3884,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3885,%rbx
push %rbx
pushq $0
mov $@_$MSG3886,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $73
pushq $1
mov $@_$MSG3887,%rbx
push %rbx
pushq $0
mov $@_$MSG3888,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $2
mov $@_$MSG3889,%rbx
push %rbx
pushq $0
mov $@_$MSG3890,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3891,%rbx
push %rbx
mov $@_$MSG3892,%rbx
push %rbx
mov $@_$MSG3893,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3894,%rbx
push %rbx
mov $@_$MSG3895,%rbx
push %rbx
mov $@_$MSG3896,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3897,%rbx
push %rbx
mov $@_$MSG3898,%rbx
push %rbx
mov $@_$MSG3899,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3900,%rbx
push %rbx
mov $@_$MSG3901,%rbx
push %rbx
mov $@_$MSG3902,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3903,%rbx
push %rbx
mov $@_$MSG3904,%rbx
push %rbx
mov $@_$MSG3905,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3906,%rbx
push %rbx
mov $@_$MSG3907,%rbx
push %rbx
mov $@_$MSG3908,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3909,%rbx
push %rbx
mov $@_$MSG3910,%rbx
push %rbx
mov $@_$MSG3911,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3912,%rbx
push %rbx
mov $@_$MSG3913,%rbx
push %rbx
mov $@_$MSG3914,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3915,%rbx
push %rbx
mov $@_$MSG3916,%rbx
push %rbx
mov $@_$MSG3917,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3918,%rbx
push %rbx
mov $@_$MSG3919,%rbx
push %rbx
mov $@_$MSG3920,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3921,%rbx
push %rbx
mov $@_$MSG3922,%rbx
push %rbx
mov $@_$MSG3923,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3924,%rbx
push %rbx
mov $@_$MSG3925,%rbx
push %rbx
mov $@_$MSG3926,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3927,%rbx
push %rbx
mov $@_$MSG3928,%rbx
push %rbx
mov $@_$MSG3929,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3930,%rbx
push %rbx
mov $@_$MSG3931,%rbx
push %rbx
mov $@_$MSG3932,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3933,%rbx
push %rbx
mov $@_$MSG3934,%rbx
push %rbx
mov $@_$MSG3935,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3936,%rbx
push %rbx
mov $@_$MSG3937,%rbx
push %rbx
mov $@_$MSG3938,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3939,%rbx
push %rbx
mov $@_$MSG3940,%rbx
push %rbx
mov $@_$MSG3941,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3942,%rbx
push %rbx
mov $@_$MSG3943,%rbx
push %rbx
mov $@_$MSG3944,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3945,%rbx
push %rbx
mov $@_$MSG3946,%rbx
push %rbx
mov $@_$MSG3947,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3948,%rbx
push %rbx
mov $@_$MSG3949,%rbx
push %rbx
mov $@_$MSG3950,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3951,%rbx
push %rbx
mov $@_$MSG3952,%rbx
push %rbx
mov $@_$MSG3953,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3954,%rbx
push %rbx
mov $@_$MSG3955,%rbx
push %rbx
mov $@_$MSG3956,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG3957,%rbx
push %rbx
mov $@_$MSG3958,%rbx
push %rbx
mov $@_$MSG3959,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3960,%rbx
push %rbx
mov $@_$MSG3961,%rbx
push %rbx
mov $@_$MSG3962,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3963,%rbx
push %rbx
mov $@_$MSG3964,%rbx
push %rbx
mov $@_$MSG3965,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3966,%rbx
push %rbx
mov $@_$MSG3967,%rbx
push %rbx
mov $@_$MSG3968,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3969,%rbx
push %rbx
mov $@_$MSG3970,%rbx
push %rbx
mov $@_$MSG3971,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3972,%rbx
push %rbx
mov $@_$MSG3973,%rbx
push %rbx
mov $@_$MSG3974,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3975,%rbx
push %rbx
mov $@_$MSG3976,%rbx
push %rbx
mov $@_$MSG3977,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3978,%rbx
push %rbx
mov $@_$MSG3979,%rbx
push %rbx
mov $@_$MSG3980,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $65
pushq $1
mov $@_$MSG3981,%rbx
push %rbx
mov $@_$MSG3982,%rbx
push %rbx
mov $@_$MSG3983,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $2
mov $@_$MSG3984,%rbx
push %rbx
mov $@_$MSG3985,%rbx
push %rbx
mov $@_$MSG3986,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $1
mov $@_$MSG3987,%rbx
push %rbx
pushq $0
mov $@_$MSG3988,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3989,%rbx
push %rbx
pushq $0
mov $@_$MSG3990,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3991,%rbx
push %rbx
pushq $0
mov $@_$MSG3992,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3993,%rbx
push %rbx
pushq $0
mov $@_$MSG3994,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $72
pushq $1
mov $@_$MSG3995,%rbx
push %rbx
pushq $0
mov $@_$MSG3996,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG3997,%rbx
push %rbx
mov $@_$MSG3998,%rbx
push %rbx
mov $@_$MSG3999,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG4000,%rbx
push %rbx
mov $@_$MSG4001,%rbx
push %rbx
mov $@_$MSG4002,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG4003,%rbx
push %rbx
pushq $0
mov $@_$MSG4004,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $1
mov $@_$MSG4005,%rbx
push %rbx
pushq $0
mov $@_$MSG4006,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4007,%rbx
push %rbx
pushq $0
mov $@_$MSG4008,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
@assembler__ins_init_xchg$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__ins_init_io
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
pushq $0
pushq $130
pushq $0
pushq $0
pushq $1
mov $@_$MSG4009,%rbx
push %rbx
pushq $0
mov $@_$MSG4010,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $130
pushq $0
pushq $0
pushq $1
mov $@_$MSG4011,%rbx
push %rbx
pushq $0
mov $@_$MSG4012,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
@assembler__ins_init_io$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__ins_init_system
push %rbp
mov %rsp,%rbp
sub $320,%rsp
push %rbx
pushq $0
pushq $130
pushq $0
pushq $0
pushq $1
mov $@_$MSG4013,%rbx
push %rbx
pushq $0
mov $@_$MSG4014,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG4015,%rbx
push %rbx
pushq $0
mov $@_$MSG4016,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $2
mov $@_$MSG4017,%rbx
push %rbx
pushq $0
mov $@_$MSG4018,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG4019,%rbx
push %rbx
pushq $0
mov $@_$MSG4020,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG4021,%rbx
push %rbx
pushq $0
mov $@_$MSG4022,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG4023,%rbx
push %rbx
pushq $0
mov $@_$MSG4024,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $16
pushq $0
pushq $2
mov $@_$MSG4025,%rbx
push %rbx
pushq $0
mov $@_$MSG4026,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $24
pushq $0
pushq $2
mov $@_$MSG4027,%rbx
push %rbx
pushq $0
mov $@_$MSG4028,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $33
pushq $216
pushq $0
pushq $2
mov $@_$MSG4029,%rbx
push %rbx
pushq $0
mov $@_$MSG4030,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4031,%rbx
push %rbx
pushq $0
mov $@_$MSG4032,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4033,%rbx
push %rbx
pushq $0
mov $@_$MSG4034,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG4035,%rbx
push %rbx
pushq $0
mov $@_$MSG4036,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $72
pushq $1
mov $@_$MSG4037,%rbx
push %rbx
pushq $0
mov $@_$MSG4038,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $2
mov $@_$MSG4039,%rbx
push %rbx
pushq $0
mov $@_$MSG4040,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $2
mov $@_$MSG4041,%rbx
push %rbx
pushq $0
mov $@_$MSG4042,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $2
mov $@_$MSG4043,%rbx
push %rbx
pushq $0
mov $@_$MSG4044,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG4045,%rbx
push %rbx
pushq $0
mov $@_$MSG4046,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG4047,%rbx
push %rbx
pushq $0
mov $@_$MSG4048,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
@assembler__ins_init_system$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__ins_init_fpu
push %rbp
mov %rsp,%rbp
sub $256,%rsp
push %rbx
pushq $0
pushq $16
pushq $0
pushq $0
pushq $1
mov $@_$MSG4049,%rbx
push %rbx
pushq $0
mov $@_$MSG4050,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $24
pushq $0
pushq $1
mov $@_$MSG4051,%rbx
push %rbx
pushq $0
mov $@_$MSG4052,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $0
pushq $0
pushq $1
mov $@_$MSG4053,%rbx
push %rbx
pushq $0
mov $@_$MSG4054,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $24
pushq $0
pushq $1
mov $@_$MSG4055,%rbx
push %rbx
pushq $0
mov $@_$MSG4056,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $40
pushq $0
pushq $1
mov $@_$MSG4057,%rbx
push %rbx
pushq $0
mov $@_$MSG4058,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $16
pushq $56
pushq $0
pushq $1
mov $@_$MSG4059,%rbx
push %rbx
pushq $0
mov $@_$MSG4060,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $2
mov $@_$MSG4061,%rbx
push %rbx
pushq $0
mov $@_$MSG4062,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $2
mov $@_$MSG4063,%rbx
push %rbx
pushq $0
mov $@_$MSG4064,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $2
mov $@_$MSG4065,%rbx
push %rbx
pushq $0
mov $@_$MSG4066,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $2
mov $@_$MSG4067,%rbx
push %rbx
pushq $0
mov $@_$MSG4068,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $2
mov $@_$MSG4069,%rbx
push %rbx
pushq $0
mov $@_$MSG4070,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $2
mov $@_$MSG4071,%rbx
push %rbx
pushq $0
mov $@_$MSG4072,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $2
mov $@_$MSG4073,%rbx
push %rbx
pushq $0
mov $@_$MSG4074,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $0
pushq $0
pushq $0
pushq $2
mov $@_$MSG4075,%rbx
push %rbx
pushq $0
mov $@_$MSG4076,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
@assembler__ins_init_fpu$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__ins_init_sse
push %rbp
mov %rsp,%rbp
sub $1312,%rsp
push %rbx
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4077,%rbx
push %rbx
pushq $0
mov $@_$MSG4078,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4079,%rbx
push %rbx
pushq $0
mov $@_$MSG4080,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4081,%rbx
push %rbx
pushq $0
mov $@_$MSG4082,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $2
mov $@_$MSG4083,%rbx
push %rbx
mov $@_$MSG4084,%rbx
push %rbx
mov $@_$MSG4085,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $2
mov $@_$MSG4086,%rbx
push %rbx
mov $@_$MSG4087,%rbx
push %rbx
mov $@_$MSG4088,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4089,%rbx
push %rbx
mov $@_$MSG4090,%rbx
push %rbx
mov $@_$MSG4091,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4092,%rbx
push %rbx
mov $@_$MSG4093,%rbx
push %rbx
mov $@_$MSG4094,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4095,%rbx
push %rbx
mov $@_$MSG4096,%rbx
push %rbx
mov $@_$MSG4097,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4098,%rbx
push %rbx
mov $@_$MSG4099,%rbx
push %rbx
mov $@_$MSG4100,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4101,%rbx
push %rbx
mov $@_$MSG4102,%rbx
push %rbx
mov $@_$MSG4103,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4104,%rbx
push %rbx
mov $@_$MSG4105,%rbx
push %rbx
mov $@_$MSG4106,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4107,%rbx
push %rbx
mov $@_$MSG4108,%rbx
push %rbx
mov $@_$MSG4109,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4110,%rbx
push %rbx
mov $@_$MSG4111,%rbx
push %rbx
mov $@_$MSG4112,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4113,%rbx
push %rbx
mov $@_$MSG4114,%rbx
push %rbx
mov $@_$MSG4115,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4116,%rbx
push %rbx
mov $@_$MSG4117,%rbx
push %rbx
mov $@_$MSG4118,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4119,%rbx
push %rbx
mov $@_$MSG4120,%rbx
push %rbx
mov $@_$MSG4121,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4122,%rbx
push %rbx
mov $@_$MSG4123,%rbx
push %rbx
mov $@_$MSG4124,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4125,%rbx
push %rbx
mov $@_$MSG4126,%rbx
push %rbx
mov $@_$MSG4127,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4128,%rbx
push %rbx
mov $@_$MSG4129,%rbx
push %rbx
mov $@_$MSG4130,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4131,%rbx
push %rbx
mov $@_$MSG4132,%rbx
push %rbx
mov $@_$MSG4133,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4134,%rbx
push %rbx
mov $@_$MSG4135,%rbx
push %rbx
mov $@_$MSG4136,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4137,%rbx
push %rbx
mov $@_$MSG4138,%rbx
push %rbx
mov $@_$MSG4139,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4140,%rbx
push %rbx
mov $@_$MSG4141,%rbx
push %rbx
mov $@_$MSG4142,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4143,%rbx
push %rbx
mov $@_$MSG4144,%rbx
push %rbx
mov $@_$MSG4145,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4146,%rbx
push %rbx
pushq $0
mov $@_$MSG4147,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4148,%rbx
push %rbx
mov $@_$MSG4149,%rbx
push %rbx
mov $@_$MSG4150,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4151,%rbx
push %rbx
mov $@_$MSG4152,%rbx
push %rbx
mov $@_$MSG4153,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4154,%rbx
push %rbx
mov $@_$MSG4155,%rbx
push %rbx
mov $@_$MSG4156,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4157,%rbx
push %rbx
mov $@_$MSG4158,%rbx
push %rbx
mov $@_$MSG4159,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4160,%rbx
push %rbx
mov $@_$MSG4161,%rbx
push %rbx
mov $@_$MSG4162,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4163,%rbx
push %rbx
mov $@_$MSG4164,%rbx
push %rbx
mov $@_$MSG4165,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $99
pushq $0
pushq $0
pushq $2
mov $@_$MSG4166,%rbx
push %rbx
mov $@_$MSG4167,%rbx
push %rbx
mov $@_$MSG4168,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4169,%rbx
push %rbx
mov $@_$MSG4170,%rbx
push %rbx
mov $@_$MSG4171,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4172,%rbx
push %rbx
mov $@_$MSG4173,%rbx
push %rbx
mov $@_$MSG4174,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4175,%rbx
push %rbx
mov $@_$MSG4176,%rbx
push %rbx
mov $@_$MSG4177,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4178,%rbx
push %rbx
mov $@_$MSG4179,%rbx
push %rbx
mov $@_$MSG4180,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4181,%rbx
push %rbx
mov $@_$MSG4182,%rbx
push %rbx
mov $@_$MSG4183,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4184,%rbx
push %rbx
mov $@_$MSG4185,%rbx
push %rbx
mov $@_$MSG4186,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4187,%rbx
push %rbx
mov $@_$MSG4188,%rbx
push %rbx
mov $@_$MSG4189,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4190,%rbx
push %rbx
mov $@_$MSG4191,%rbx
push %rbx
mov $@_$MSG4192,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4193,%rbx
push %rbx
mov $@_$MSG4194,%rbx
push %rbx
mov $@_$MSG4195,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4196,%rbx
push %rbx
mov $@_$MSG4197,%rbx
push %rbx
mov $@_$MSG4198,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $99
pushq $0
pushq $0
pushq $2
mov $@_$MSG4199,%rbx
push %rbx
mov $@_$MSG4200,%rbx
push %rbx
mov $@_$MSG4201,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4202,%rbx
push %rbx
pushq $0
mov $@_$MSG4203,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4204,%rbx
push %rbx
pushq $0
mov $@_$MSG4205,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4206,%rbx
push %rbx
pushq $0
mov $@_$MSG4207,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4208,%rbx
push %rbx
pushq $0
mov $@_$MSG4209,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4210,%rbx
push %rbx
pushq $0
mov $@_$MSG4211,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4212,%rbx
push %rbx
pushq $0
mov $@_$MSG4213,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4214,%rbx
push %rbx
pushq $0
mov $@_$MSG4215,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4216,%rbx
push %rbx
pushq $0
mov $@_$MSG4217,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4218,%rbx
push %rbx
pushq $0
mov $@_$MSG4219,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4220,%rbx
push %rbx
pushq $0
mov $@_$MSG4221,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4222,%rbx
push %rbx
mov $@_$MSG4223,%rbx
push %rbx
mov $@_$MSG4224,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4225,%rbx
push %rbx
mov $@_$MSG4226,%rbx
push %rbx
mov $@_$MSG4227,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4228,%rbx
push %rbx
mov $@_$MSG4229,%rbx
push %rbx
mov $@_$MSG4230,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4231,%rbx
push %rbx
mov $@_$MSG4232,%rbx
push %rbx
mov $@_$MSG4233,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4234,%rbx
push %rbx
pushq $0
mov $@_$MSG4235,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4236,%rbx
push %rbx
pushq $0
mov $@_$MSG4237,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4238,%rbx
push %rbx
pushq $0
mov $@_$MSG4239,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $2
mov $@_$MSG4240,%rbx
push %rbx
pushq $0
mov $@_$MSG4241,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4242,%rbx
push %rbx
mov $@_$MSG4243,%rbx
push %rbx
mov $@_$MSG4244,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4245,%rbx
push %rbx
mov $@_$MSG4246,%rbx
push %rbx
mov $@_$MSG4247,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4248,%rbx
push %rbx
mov $@_$MSG4249,%rbx
push %rbx
mov $@_$MSG4250,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4251,%rbx
push %rbx
mov $@_$MSG4252,%rbx
push %rbx
mov $@_$MSG4253,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $2
mov $@_$MSG4254,%rbx
push %rbx
mov $@_$MSG4255,%rbx
push %rbx
mov $@_$MSG4256,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $2
mov $@_$MSG4257,%rbx
push %rbx
mov $@_$MSG4258,%rbx
push %rbx
mov $@_$MSG4259,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4260,%rbx
push %rbx
mov $@_$MSG4261,%rbx
push %rbx
mov $@_$MSG4262,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4263,%rbx
push %rbx
mov $@_$MSG4264,%rbx
push %rbx
mov $@_$MSG4265,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $2
mov $@_$MSG4266,%rbx
push %rbx
mov $@_$MSG4267,%rbx
push %rbx
mov $@_$MSG4268,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $72
pushq $2
mov $@_$MSG4269,%rbx
push %rbx
mov $@_$MSG4270,%rbx
push %rbx
mov $@_$MSG4271,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $99
pushq $0
pushq $0
pushq $2
mov $@_$MSG4272,%rbx
push %rbx
pushq $0
mov $@_$MSG4273,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $99
pushq $0
pushq $0
pushq $2
mov $@_$MSG4274,%rbx
push %rbx
mov $@_$MSG4275,%rbx
push %rbx
mov $@_$MSG4276,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $99
pushq $0
pushq $0
pushq $2
mov $@_$MSG4277,%rbx
push %rbx
pushq $0
mov $@_$MSG4278,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $82
pushq $0
pushq $0
pushq $2
mov $@_$MSG4279,%rbx
push %rbx
mov $@_$MSG4280,%rbx
push %rbx
mov $@_$MSG4281,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $82
pushq $0
pushq $0
pushq $2
mov $@_$MSG4282,%rbx
push %rbx
pushq $0
mov $@_$MSG4283,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $82
pushq $0
pushq $0
pushq $2
mov $@_$MSG4284,%rbx
push %rbx
mov $@_$MSG4285,%rbx
push %rbx
mov $@_$MSG4286,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $82
pushq $0
pushq $0
pushq $2
mov $@_$MSG4287,%rbx
push %rbx
mov $@_$MSG4288,%rbx
push %rbx
mov $@_$MSG4289,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4290,%rbx
push %rbx
pushq $0
mov $@_$MSG4291,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $97
pushq $0
pushq $0
pushq $2
mov $@_$MSG4292,%rbx
push %rbx
pushq $0
mov $@_$MSG4293,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
@assembler__ins_init_sse$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__ins_init_avx
push %rbp
mov %rsp,%rbp
sub $64,%rsp
push %rbx
pushq $0
pushq $80
pushq $0
pushq $0
pushq $3
mov $@_$MSG4294,%rbx
push %rbx
pushq $0
mov $@_$MSG4295,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
pushq $0
pushq $80
pushq $0
pushq $0
pushq $3
mov $@_$MSG4296,%rbx
push %rbx
pushq $0
mov $@_$MSG4297,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
@assembler__ins_init_avx$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__ins_write
push %rbp
mov %rsp,%rbp
sub $112,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
mov 16(%rbp),%r9
mov 16(%rbp),%rax
push %rax
call @assembler__format_hash
mov %eax,%ebx
add $8,%rsp
mov %ebx,%esi
lea 16(%rbp),%rbx
push %rbx
call @assembler__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
push %rdi
call @assembler__name_hash
mov %eax,%ebx
add $8,%rsp
add %ebx,%esi
mov %esi,%eax
mov $1021,%ecx
mov %eax,%edx
shr $31,%edx
neg %edx
idiv %ecx
mov %edx,%eax
mov %eax,%ebx
mov %ebx,%esi
mov %esi,%ebx
shl $3,%ebx
lea @_$DATA+11954752,%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11771
@_$LB11769
push %rdi
mov (%r8),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11774
lea 18446744073709551584(%rbp),%rbx
push %rbx
mov 8(%r8),%rbx
push %rbx
mov 16(%rbp),%rax
push %rax
call @assembler__get_ins_args
mov %eax,%ebx
add $24,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11777
mov 40(%r8),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11779
mov 40(%r8),%rsi
lea 18446744073709551584(%rbp),%rbx
push %rbx
mov 24(%r8),%rbx
push %rbx
call *%rsi
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11783
push %rdi
call @free
add $8,%rsp
jmp @assembler__ins_write$END
@_$LB11783
jmp @_$LB11780
@_$LB11779
lea 18446744073709551584(%rbp),%rbx
push %rbx
push %r8
call @assembler__write_default_ins
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11786
push %rdi
call @free
add $8,%rsp
jmp @assembler__ins_write$END
@_$LB11786
@_$LB11780
@_$LB11777
@_$LB11774
mov 48(%r8),%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB11769
@_$LB11771
mov $@_$MSG4298,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@assembler__ins_write$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__ins_init
push %rbp
mov %rsp,%rbp
sub $192,%rsp
push %rbx
pushq $0
pushq $0
pushq $0
pushq $0
pushq $1
mov $@_$MSG4299,%rbx
push %rbx
pushq $0
mov $@_$MSG4300,%rbx
push %rbx
call @assembler__ins_add
add $64,%rsp
call @assembler__ins_init_mov
call @assembler__ins_init_jmp
call @assembler__ins_init_basic_op
call @assembler__ins_init_xchg
call @assembler__ins_init_io
call @assembler__ins_init_system
call @assembler__ins_init_fpu
call @assembler__ins_init_sse
call @assembler__ins_init_avx
@assembler__ins_init$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__parse_pseudo_op
push %rbp
mov %rsp,%rbp
sub $368,%rsp
push %rbx
push %rsi
push %rdi
push %r8
mov 16(%rbp),%r8
mov $@_$MSG4301,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11788
lea 16(%rbp),%rbx
push %rbx
call @assembler__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov (%r8),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
je @_$LB11792
mov $@_$MSG4302,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11792
mov %r8,%rbx
add $1,%rbx
mov %rbx,%rdi
mov (%rdi),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
je @_$LB11795
@_$LB11793
lea 18446744073709551584(%rbp),%rbx
push %rbx
push %rdi
call @assembler__sgetc
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rdi
mov 18446744073709551584(%rbp),%al
movsbq %al,%rax
push %rax
call @assembler__soutc
add $8,%rsp
mov (%rdi),%bl
mov %bl,%al
mov $34,%cl
cmp %cl,%al
jne @_$LB11793
@_$LB11795
push %r8
call @free
add $8,%rsp
pushq $0
call @assembler__soutc
add $8,%rsp
jmp @_$LB11789
@_$LB11788
mov $@_$MSG4303,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11797
mov $1,%eax
mov @_$DATA+11815296,%rcx
mov %eax,32(%rcx)
mov @_$DATA+11815248,%rax
mov %rax,@_$DATA+11880968
jmp @_$LB11798
@_$LB11797
mov $@_$MSG4304,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11800
lea 16(%rbp),%rbx
push %rbx
call @assembler__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11804
push %r8
call @assembler__const_to_num
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,@_$DATA+11815264
push %r8
call @free
add $8,%rsp
@_$LB11804
jmp @_$LB11801
@_$LB11800
mov $@_$MSG4305,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11806
@_$LB11808
lea 18446744073709551504(%rbp),%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_const
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11813
mov $@_$MSG4306,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11813
pushq $1
lea 18446744073709551504(%rbp),%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
mov $@_$MSG4307,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11808
@_$LB11810
jmp @_$LB11807
@_$LB11806
mov $@_$MSG4308,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11815
@_$LB11817
lea 18446744073709551504(%rbp),%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_const
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11822
mov $@_$MSG4309,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11822
pushq $2
lea 18446744073709551504(%rbp),%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
mov $@_$MSG4310,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11817
@_$LB11819
jmp @_$LB11816
@_$LB11815
mov $@_$MSG4311,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11824
@_$LB11826
lea 18446744073709551504(%rbp),%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_const
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11831
mov $@_$MSG4312,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11831
pushq $4
lea 18446744073709551504(%rbp),%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
mov $@_$MSG4313,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11826
@_$LB11828
jmp @_$LB11825
@_$LB11824
mov $@_$MSG4314,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11833
@_$LB11835
lea 18446744073709551504(%rbp),%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__parse_const
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $4294967295,%ecx
cmp %ecx,%eax
jne @_$LB11840
mov $@_$MSG4315,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11840
pushq $8
lea 18446744073709551504(%rbp),%rbx
push %rbx
call @assembler__swrite
add $16,%rsp
mov $@_$MSG4316,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11835
@_$LB11837
jmp @_$LB11834
@_$LB11833
mov $@_$MSG4317,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11842
lea 16(%rbp),%rbx
push %rbx
call @assembler__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11846
push %r8
call @assembler__const_to_num
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,18446744073709551504(%rbp)
push %r8
call @free
add $8,%rsp
mov 18446744073709551504(%rbp),%rax
mov @_$DATA+11881008,%rcx
cmp %rcx,%rax
jae @_$LB11849
mov $@_$MSG4318,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11849
mov 18446744073709551504(%rbp),%rax
mov @_$DATA+11881008,%rcx
cmp %rcx,%rax
je @_$LB11852
@_$LB11850
pushq $0
call @assembler__soutc
add $8,%rsp
mov 18446744073709551504(%rbp),%rax
mov @_$DATA+11881008,%rcx
cmp %rcx,%rax
jne @_$LB11850
@_$LB11852
mov $1,%eax
mov @_$DATA+11815296,%rcx
mov %eax,32(%rcx)
@_$LB11846
jmp @_$LB11843
@_$LB11842
mov $@_$MSG4319,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11854
lea 16(%rbp),%rbx
push %rbx
call @assembler__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11858
push %r8
call @assembler__const_to_num
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,18446744073709551504(%rbp)
push %r8
call @free
add $8,%rsp
mov 18446744073709551504(%rbp),%rax
mov %rax,@_$DATA+11815248
mov $1,%eax
mov @_$DATA+11815296,%rcx
mov %eax,32(%rcx)
@_$LB11858
jmp @_$LB11855
@_$LB11854
mov $@_$MSG4320,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11860
lea 16(%rbp),%rbx
push %rbx
call @assembler__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11864
push %r8
call @assembler__const_to_num
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,@_$DATA+11815280
@_$LB11864
jmp @_$LB11861
@_$LB11860
mov $@_$MSG4321,%rbx
push %rbx
lea 16(%rbp),%rbx
push %rbx
call @assembler__str_match
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11866
lea 16(%rbp),%rbx
push %rbx
call @assembler__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11870
push %r8
call @assembler__const_to_num
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,18446744073709551504(%rbp)
mov 18446744073709551504(%rbp),%rax
mov $20,%rcx
cmp %rcx,%rax
jae @_$LB11873
mov $1,%rax
mov 18446744073709551504(%rbp),%cl
shl %cl,%rax
mov %rax,%rbx
mov %rbx,%rsi
sub $1,%rsi
mov %rsi,%rax
mov @_$DATA+11881008,%rcx
and %rcx,%rax
mov %rax,%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11876
@_$LB11874
pushq $0
call @assembler__soutc
add $8,%rsp
mov $1,%rax
mov 18446744073709551504(%rbp),%cl
shl %cl,%rax
mov %rax,%rbx
mov %rbx,%rsi
sub $1,%rsi
mov %rsi,%rax
mov @_$DATA+11881008,%rcx
and %rcx,%rax
mov %rax,%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB11874
@_$LB11876
mov $1,%eax
mov @_$DATA+11815296,%rcx
mov %eax,32(%rcx)
@_$LB11873
@_$LB11870
jmp @_$LB11867
@_$LB11866
mov $@_$MSG4322,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11867
@_$LB11861
@_$LB11855
@_$LB11843
@_$LB11834
@_$LB11825
@_$LB11816
@_$LB11807
@_$LB11801
@_$LB11798
@_$LB11789
@assembler__parse_pseudo_op$END
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@assembler__main
push %rbp
mov %rsp,%rbp
sub $224,%rsp
push %rbx
push %rsi
push %rdi
mov 16(%rbp),%rdi
push %r8
mov 24(%rbp),%r8
push %r9
mov %edi,%eax
mov $3,%ecx
cmp %ecx,%eax
jge @_$LB11879
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $38,%rbx
push %rbx
mov $@_$MSG4323,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @assembler__main$END
@_$LB11879
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov 8(%r8),%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov %eax,@_$DATA+11815200
mov @_$DATA+11815200,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB11882
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $23,%rbx
push %rbx
mov $@_$MSG4324,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @assembler__main$END
@_$LB11882
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $493,%rbx
push %rbx
mov $578,%rbx
push %rbx
mov 16(%r8),%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov %eax,@_$DATA+11815216
mov @_$DATA+11815216,%eax
mov $0,%ecx
cmp %ecx,%eax
jge @_$LB11885
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $24,%rbx
push %rbx
mov $@_$MSG4325,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @assembler__main$END
@_$LB11885
mov %edi,%eax
mov $4,%ecx
cmp %ecx,%eax
jl @_$LB11887
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $420,%rbx
push %rbx
mov $578,%rbx
push %rbx
mov 24(%r8),%rsi
mov %rsi,%rbx
push %rbx
mov $2,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov %eax,@_$DATA+11815232
jmp @_$LB11888
@_$LB11887
mov $4294967295,%eax
mov %eax,@_$DATA+11815232
@_$LB11888
mov $536870912,%rax
mov %rax,@_$DATA+11815280
call @assembler__load_file
mov $0,%rax
mov %rax,@_$DATA+11880968
mov $65712,%rax
mov %rax,@_$DATA+11815248
call @assembler__ins_init
mov $0,%rbx
mov $0,%rbx
mov $0,%rbx
mov $0,%rax
mov %rax,@_$DATA+11881008
mov @_$DATA+11880912,%rax
mov %rax,@_$DATA+11815296
mov @_$DATA+11815296,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11891
@_$LB11889
mov @_$DATA+11815296,%rax
mov (%rax),%rbx
push %rbx
call @assembler__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,18446744073709551552(%rbp)
mov $0,%eax
mov @_$DATA+11815296,%rcx
mov %eax,36(%rcx)
mov $0,%rax
mov @_$DATA+11815296,%rcx
mov %rax,88(%rcx)
mov $0,%eax
mov @_$DATA+11815296,%rcx
mov %eax,32(%rcx)
mov 18446744073709551552(%rbp),%rax
mov (%rax),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB11894
mov 18446744073709551552(%rbp),%rax
mov (%rax),%bl
mov %bl,%al
mov $35,%cl
cmp %cl,%al
je @_$LB11894
@_$LB11897
mov 18446744073709551552(%rbp),%rax
mov (%rax),%bl
mov %bl,%al
mov $46,%cl
cmp %cl,%al
jne @_$LB11899
mov 18446744073709551552(%rbp),%rbx
add $1,%rbx
push %rbx
call @assembler__parse_pseudo_op
add $8,%rsp
jmp @_$LB11900
@_$LB11899
mov 18446744073709551552(%rbp),%rax
mov (%rax),%bl
mov %bl,%al
mov $64,%cl
cmp %cl,%al
jne @_$LB11902
addq $1,18446744073709551552(%rbp)
lea 18446744073709551552(%rbp),%rbx
push %rbx
call @assembler__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r9
call @assembler__label_tab_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11906
mov $@_$MSG4326,%rbx
push %rbx
mov @_$DATA+11815296,%rax
mov 8(%rax),%rbx
push %rbx
call @assembler__error
add $16,%rsp
@_$LB11906
push %r9
call @assembler__label_tab_add
add $8,%rsp
mov $1,%eax
mov @_$DATA+11815296,%rcx
mov %eax,32(%rcx)
jmp @_$LB11903
@_$LB11902
mov 18446744073709551552(%rbp),%rax
push %rax
call @assembler__ins_write
add $8,%rsp
@_$LB11903
@_$LB11900
@_$LB11894
mov @_$DATA+11815296,%rax
mov 112(%rax),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11815296
mov @_$DATA+11815296,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB11889
@_$LB11891
mov $1,%eax
mov %eax,@_$DATA+11815312
@_$LB11907
mov $0,%edi
mov $0,%esi
mov $0,%rax
mov %rax,@_$DATA+11881008
mov $0,%rax
mov %rax,@_$DATA+11880968
mov $65712,%rax
mov %rax,@_$DATA+11815248
mov @_$DATA+11880912,%rax
mov %rax,@_$DATA+11815296
mov @_$DATA+11815296,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11912
@_$LB11910
mov @_$DATA+11815248,%rax
mov @_$DATA+11815296,%rcx
mov %rax,16(%rcx)
mov @_$DATA+11815296,%rax
mov 32(%rax),%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB11914
mov @_$DATA+11815296,%rax
mov (%rax),%rbx
push %rbx
call @assembler__skip_spaces
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,18446744073709551552(%rbp)
mov 18446744073709551552(%rbp),%rax
mov (%rax),%bl
mov %bl,%al
mov $64,%cl
cmp %cl,%al
jne @_$LB11917
addq $1,18446744073709551552(%rbp)
lea 18446744073709551552(%rbp),%rbx
push %rbx
call @assembler__read_word
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r9
push %r9
call @assembler__label_tab_find
mov %rax,%rbx
add $8,%rsp
mov %rbx,%r8
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11921
mov 8(%r8),%rbx
mov %rbx,%rax
mov @_$DATA+11815248,%rcx
cmp %rcx,%rax
je @_$LB11924
mov @_$DATA+11815248,%rax
mov %rax,8(%r8)
mov $1,%edi
@_$LB11924
@_$LB11921
push %r9
call @free
add $8,%rsp
jmp @_$LB11918
@_$LB11917
mov $0,%eax
mov @_$DATA+11815296,%rcx
mov %eax,36(%rcx)
mov @_$DATA+11815296,%rax
mov 88(%rax),%rbx
push %rbx
call @free
add $8,%rsp
mov $0,%rax
mov @_$DATA+11815296,%rcx
mov %rax,88(%rcx)
mov 18446744073709551552(%rbp),%rax
mov (%rax),%bl
mov %bl,%al
mov $46,%cl
cmp %cl,%al
jne @_$LB11926
mov 18446744073709551552(%rbp),%rbx
add $1,%rbx
push %rbx
call @assembler__parse_pseudo_op
add $8,%rsp
jmp @_$LB11927
@_$LB11926
mov 18446744073709551552(%rbp),%rax
push %rax
call @assembler__ins_write
add $8,%rsp
@_$LB11927
@_$LB11918
jmp @_$LB11915
@_$LB11914
mov @_$DATA+11815296,%rax
mov 36(%rax),%ebx
movslq %ebx,%rbx
add %rbx,@_$DATA+11815248
mov @_$DATA+11815296,%rax
mov 36(%rax),%ebx
movslq %ebx,%rbx
add %rbx,@_$DATA+11881008
@_$LB11915
mov @_$DATA+11815296,%rax
mov 112(%rax),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11815296
add $1,%esi
mov @_$DATA+11815296,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB11910
@_$LB11912
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11907
@_$LB11909
mov @_$DATA+11880912,%rax
mov %rax,@_$DATA+11815296
mov $0,%rax
mov %rax,@_$DATA+11881008
mov @_$DATA+11815296,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB11930
@_$LB11928
mov @_$DATA+11815296,%rax
mov 36(%rax),%ebx
movslq %ebx,%rbx
add %rbx,@_$DATA+11881008
mov @_$DATA+11815296,%rax
mov 112(%rax),%rbx
mov %rbx,%rax
mov %rax,@_$DATA+11815296
mov @_$DATA+11815296,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB11928
@_$LB11930
call @assembler__mkelf
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+11815200,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+11815216,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov @_$DATA+11815232,%eax
mov $0,%ecx
cmp %ecx,%eax
jl @_$LB11933
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+11815232,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB11933
mov $0,%rax
@assembler__main$END
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@exec_cmd
push %rbp
mov %rsp,%rbp
sub $8528,%rsp
push %rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov 24(%rbp),%r13
push %r14
mov 16(%rbp),%r14
push %r15
push %r10
push %r11
mov (%r14),%bl
mov %bl,%al
mov $35,%cl
cmp %cl,%al
jne @_$LB11936
mov $0,%rax
jmp @exec_cmd$END
@_$LB11936
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
push %r14
call @strlen
mov %rax,%rsi
add $8,%rsp
mov %rsi,%rbx
push %rbx
mov %r14,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $@_$MSG4327,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%r12d
mov (%r14),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB11939
@_$LB11937
mov (%r14),%bl
mov %bl,%al
mov $32,%cl
cmp %cl,%al
je @_$LB11945
mov (%r14),%bl
mov %bl,%al
mov $13,%cl
cmp %cl,%al
je @_$LB11945
@_$LB11951
mov (%r14),%bl
mov %bl,%al
mov $9,%cl
cmp %cl,%al
je @_$LB11945
@_$LB11948
mov (%r14),%bl
mov %bl,%al
mov $11,%cl
cmp %cl,%al
jne @_$LB11942
@_$LB11945
@_$LB11940
add $1,%r14
sub $1,%r13d
mov (%r14),%bl
mov %bl,%al
mov $32,%cl
cmp %cl,%al
je @_$LB11940
mov (%r14),%bl
mov %bl,%al
mov $13,%cl
cmp %cl,%al
je @_$LB11940
@_$LB11960
mov (%r14),%bl
mov %bl,%al
mov $9,%cl
cmp %cl,%al
je @_$LB11940
@_$LB11957
mov (%r14),%bl
mov %bl,%al
mov $11,%cl
cmp %cl,%al
je @_$LB11940
@_$LB11954
@_$LB11942
mov %r12d,%esi
shl $3,%esi
lea 18446744073709543376(%rbp),%rbx
movslq %esi,%rsi
add %rsi,%rbx
mov %r14,(%rbx)
add $1,%r12d
mov (%r14),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB11963
mov (%r14),%bl
mov %bl,%al
mov $32,%cl
cmp %cl,%al
je @_$LB11963
mov (%r14),%bl
mov %bl,%al
mov $13,%cl
cmp %cl,%al
je @_$LB11963
@_$LB11975
mov (%r14),%bl
mov %bl,%al
mov $9,%cl
cmp %cl,%al
je @_$LB11963
@_$LB11972
mov (%r14),%bl
mov %bl,%al
mov $11,%cl
cmp %cl,%al
je @_$LB11963
@_$LB11969
@_$LB11966
@_$LB11961
mov %r13d,%eax
mov $0,%ecx
cmp %ecx,%eax
jle @_$LB11978
mov (%r14),%bl
mov %bl,%al
mov $92,%cl
cmp %cl,%al
jne @_$LB11978
@_$LB11984
mov %r14,%rsi
add $1,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB11978
@_$LB11981
movslq %r13d,%r13
push %r13
mov %r14,%rbx
add $1,%rbx
push %rbx
push %r14
call @memmove
mov %rax,%rbx
add $24,%rsp
sub $1,%r13d
@_$LB11978
add $1,%r14
sub $1,%r13d
mov (%r14),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB11987
mov (%r14),%bl
mov %bl,%al
mov $32,%cl
cmp %cl,%al
je @_$LB11990
mov (%r14),%bl
mov %bl,%al
mov $13,%cl
cmp %cl,%al
je @_$LB11990
@_$LB11996
mov (%r14),%bl
mov %bl,%al
mov $9,%cl
cmp %cl,%al
je @_$LB11990
@_$LB11993
mov (%r14),%bl
mov %bl,%al
mov $11,%cl
cmp %cl,%al
jne @_$LB11961
@_$LB11990
@_$LB11987
@_$LB11963
movb $0,(%r14)
add $1,%r14
mov (%r14),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB11937
@_$LB11939
mov %r12d,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB11999
mov $0,%rax
jmp @exec_cmd$END
@_$LB11999
mov $@_$MSG4328,%rbx
push %rbx
mov 18446744073709543376(%rbp),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12002
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052880,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $57,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12004
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $81,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB12008
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB12008
mov $0,%rbx
push %rbx
pushq $2
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
pushq $3
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
pushq $20
call @signal
mov %rax,%rbx
add $16,%rsp
call @unblock_sigwinch
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea 18446744073709543376(%rbp),%rax
push %rax
movslq %r12d,%r12
push %r12
call @scpp__main
mov %eax,%esi
add $16,%rsp
mov %esi,%ebx
movslq %ebx,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12005
@_$LB12004
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jle @_$LB12010
pushq $0
lea 18446744073709543344(%rbp),%rbx
push %rbx
movslq %esi,%rsi
push %rsi
call @waitpid
mov %rax,%rbx
add $24,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12011
@_$LB12010
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @exec_cmd$END
@_$LB12011
@_$LB12005
mov 18446744073709543344(%rbp),%eax
movslq %eax,%rax
jmp @exec_cmd$END
@_$LB12002
mov $@_$MSG4329,%rbx
push %rbx
mov 18446744073709543376(%rbp),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12014
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052880,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $57,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12016
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $81,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB12020
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB12020
mov $0,%rbx
push %rbx
pushq $2
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
pushq $3
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
pushq $20
call @signal
mov %rax,%rbx
add $16,%rsp
call @unblock_sigwinch
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea 18446744073709543376(%rbp),%rax
push %rax
movslq %r12d,%r12
push %r12
call @scc__main
mov %eax,%esi
add $16,%rsp
mov %esi,%ebx
movslq %ebx,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12017
@_$LB12016
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jle @_$LB12022
pushq $0
lea 18446744073709543312(%rbp),%rbx
push %rbx
movslq %esi,%rsi
push %rsi
call @waitpid
mov %rax,%rbx
add $24,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12023
@_$LB12022
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @exec_cmd$END
@_$LB12023
@_$LB12017
mov 18446744073709543312(%rbp),%eax
movslq %eax,%rax
jmp @exec_cmd$END
@_$LB12014
mov $@_$MSG4330,%rbx
push %rbx
mov 18446744073709543376(%rbp),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12026
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052880,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $57,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12028
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $81,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB12032
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB12032
mov $0,%rbx
push %rbx
pushq $2
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
pushq $3
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
pushq $20
call @signal
mov %rax,%rbx
add $16,%rsp
call @unblock_sigwinch
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea 18446744073709543376(%rbp),%rax
push %rax
movslq %r12d,%r12
push %r12
call @assembler__main
mov %eax,%esi
add $16,%rsp
mov %esi,%ebx
movslq %ebx,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12029
@_$LB12028
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jle @_$LB12034
pushq $0
lea 18446744073709543280(%rbp),%rbx
push %rbx
movslq %esi,%rsi
push %rsi
call @waitpid
mov %rax,%rbx
add $24,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12035
@_$LB12034
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @exec_cmd$END
@_$LB12035
@_$LB12029
mov 18446744073709543280(%rbp),%eax
movslq %eax,%rax
jmp @exec_cmd$END
@_$LB12026
mov $@_$MSG4331,%rbx
push %rbx
mov 18446744073709543376(%rbp),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12038
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052880,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $57,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12040
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $81,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB12044
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB12044
mov $0,%rbx
push %rbx
pushq $2
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
pushq $3
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
pushq $20
call @signal
mov %rax,%rbx
add $16,%rsp
call @unblock_sigwinch
mov %r12d,%eax
mov $2,%ecx
cmp %ecx,%eax
jge @_$LB12047
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB12047
mov $1,%edi
mov %edi,%eax
mov %r12d,%ecx
cmp %ecx,%eax
jge @_$LB12050
@_$LB12048
mov %edi,%esi
shl $3,%esi
lea 18446744073709543376(%rbp),%rbx
movslq %esi,%rsi
add %rsi,%rbx
mov (%rbx),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB12053
@_$LB12051
mov %edi,%ebx
shl $3,%ebx
lea 18446744073709543376(%rbp),%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
add $1,%rbx
mov %rbx,(%rsi)
mov %edi,%esi
shl $3,%esi
lea 18446744073709543376(%rbp),%rbx
movslq %esi,%rsi
add %rsi,%rbx
mov (%rbx),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
je @_$LB12051
@_$LB12053
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $493,%rbx
push %rbx
mov %edi,%esi
shl $3,%esi
lea 18446744073709543376(%rbp),%rbx
movslq %esi,%rsi
add %rsi,%rbx
mov (%rbx),%rsi
mov %rsi,%rbx
push %rbx
mov $83,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%r11
mov %r11d,%eax
mov $4294967279,%ecx
cmp %ecx,%eax
jne @_$LB12056
mov $0,%r11d
@_$LB12056
add $1,%edi
mov %r11d,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB12059
jmp @_$LB12050
@_$LB12059
mov %edi,%eax
mov %r12d,%ecx
cmp %ecx,%eax
jl @_$LB12048
@_$LB12050
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r11d,%ebx
movslq %ebx,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12041
@_$LB12040
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jle @_$LB12061
pushq $0
lea 18446744073709543248(%rbp),%rbx
push %rbx
movslq %esi,%rsi
push %rsi
call @waitpid
mov %rax,%rbx
add $24,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12062
@_$LB12061
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @exec_cmd$END
@_$LB12062
@_$LB12041
mov 18446744073709543248(%rbp),%eax
movslq %eax,%rax
jmp @exec_cmd$END
@_$LB12038
mov $@_$MSG4332,%rbx
push %rbx
mov 18446744073709543376(%rbp),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12065
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052880,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $57,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12067
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $81,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB12071
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB12071
mov $0,%rbx
push %rbx
pushq $2
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
pushq $3
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
pushq $20
call @signal
mov %rax,%rbx
add $16,%rsp
call @unblock_sigwinch
mov %r12d,%eax
mov $3,%ecx
cmp %ecx,%eax
jge @_$LB12074
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB12074
mov 18446744073709543384(%rbp),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB12077
@_$LB12075
mov 18446744073709543384(%rbp),%rbx
add $1,%rbx
mov %rbx,18446744073709543384(%rbp)
mov 18446744073709543384(%rbp),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
je @_$LB12075
@_$LB12077
mov 18446744073709543392(%rbp),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
jne @_$LB12080
@_$LB12078
mov 18446744073709543392(%rbp),%rbx
add $1,%rbx
mov %rbx,18446744073709543392(%rbp)
mov 18446744073709543392(%rbp),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $47,%cl
cmp %cl,%al
je @_$LB12078
@_$LB12080
mov 18446744073709543384(%rbp),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
je @_$LB12086
mov 18446744073709543392(%rbp),%rsi
mov (%rsi),%bl
mov %bl,%al
mov $0,%cl
cmp %cl,%al
jne @_$LB12083
@_$LB12086
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB12083
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov 18446744073709543392(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov 18446744073709543384(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov $82,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov %eax,18446744073709543216(%rbp)
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov 18446744073709543216(%rbp),%ebx
movslq %ebx,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12068
@_$LB12067
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jle @_$LB12088
pushq $0
lea 18446744073709543216(%rbp),%rbx
push %rbx
movslq %esi,%rsi
push %rsi
call @waitpid
mov %rax,%rbx
add $24,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12089
@_$LB12088
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @exec_cmd$END
@_$LB12089
@_$LB12068
mov 18446744073709543216(%rbp),%eax
movslq %eax,%rax
jmp @exec_cmd$END
@_$LB12065
mov $@_$MSG4333,%rbx
push %rbx
mov 18446744073709543376(%rbp),%rbx
push %rbx
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12092
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052880,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $57,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12094
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $81,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB12098
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB12098
mov $0,%rbx
push %rbx
pushq $2
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
pushq $3
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
pushq $20
call @signal
mov %rax,%rbx
add $16,%rsp
call @unblock_sigwinch
mov %r12d,%eax
mov $2,%ecx
cmp %ecx,%eax
jge @_$LB12101
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB12101
mov $1,%edi
mov %edi,%eax
mov %r12d,%ecx
cmp %ecx,%eax
jge @_$LB12104
@_$LB12102
mov %edi,%ebx
shl $3,%ebx
lea 18446744073709543376(%rbp),%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov (%rsi),%rbx
push %rbx
call @remove_file
add $8,%rsp
add $1,%edi
mov %edi,%eax
mov %r12d,%ecx
cmp %ecx,%eax
jl @_$LB12102
@_$LB12104
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12095
@_$LB12094
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jle @_$LB12106
pushq $0
lea 18446744073709543168(%rbp),%rbx
push %rbx
movslq %esi,%rsi
push %rsi
call @waitpid
mov %rax,%rbx
add $24,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12107
@_$LB12106
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @exec_cmd$END
@_$LB12107
@_$LB12095
mov 18446744073709543168(%rbp),%eax
movslq %eax,%rax
jmp @exec_cmd$END
@_$LB12092
mov %r12d,%ebx
shl $3,%ebx
lea 18446744073709543376(%rbp),%rsi
movslq %ebx,%rbx
add %rbx,%rsi
mov $0,%rbx
mov %rbx,(%rsi)
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052880,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $57,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rsi
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12109
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $81,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB12113
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB12113
mov $0,%rbx
push %rbx
pushq $2
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
pushq $3
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
pushq $20
call @signal
mov %rax,%rbx
add $16,%rsp
call @unblock_sigwinch
lea 18446744073709543376(%rbp),%rax
push %rax
mov 18446744073709543376(%rbp),%rbx
push %rbx
call @execv
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $231,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12110
@_$LB12109
mov %esi,%eax
mov $0,%ecx
cmp %ecx,%eax
jle @_$LB12115
pushq $0
lea 18446744073709543136(%rbp),%rbx
push %rbx
movslq %esi,%rsi
push %rsi
call @waitpid
mov %rax,%rbx
add $24,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12116
@_$LB12115
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @exec_cmd$END
@_$LB12116
@_$LB12110
mov 18446744073709543136(%rbp),%eax
movslq %eax,%rax
@exec_cmd$END
pop %r11
pop %r10
pop %r15
pop %r14
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@handle_key
push %rbp
mov %rsp,%rbp
sub $3168,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
push %rdi
push %r8
push %r9
push %r12
push %r13
mov %ebx,%eax
mov $88,%ecx
cmp %ecx,%eax
je @_$LB12122
mov %ebx,%eax
mov $120,%ecx
cmp %ecx,%eax
jne @_$LB12119
@_$LB12122
mov $1,%rax
jmp @handle_key$END
@_$LB12119
mov %ebx,%eax
mov $66,%ecx
cmp %ecx,%eax
je @_$LB12128
mov %ebx,%eax
mov $98,%ecx
cmp %ecx,%eax
jne @_$LB12125
@_$LB12128
mov $0,%r13d
mov $0,%r12d
mov $0,%r9d
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $@_$MSG4334,%rsi
mov %rsi,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $257,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%r8
mov %r8d,%eax
mov $0,%ecx
cmp %ecx,%eax
jl @_$LB12131
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $10,%rbx
push %rbx
mov $@_$MSG4335,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB12132
mov %r12d,%eax
mov %r13d,%ecx
cmp %ecx,%eax
jne @_$LB12137
mov $0,%r12d
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1024,%rbx
push %rbx
lea 18446744073709550592(%rbp),%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%r13
mov %r13d,%eax
mov $0,%ecx
cmp %ecx,%eax
jg @_$LB12140
jmp @_$LB12134
@_$LB12140
@_$LB12137
lea 18446744073709549392(%rbp),%rdi
movslq %r9d,%r9
add %r9,%rdi
lea 18446744073709550592(%rbp),%rsi
movslq %r12d,%r12
add %r12,%rsi
mov (%rsi),%bl
mov %bl,(%rdi)
add $1,%r12d
lea 18446744073709549392(%rbp),%rsi
movslq %r9d,%r9
add %r9,%rsi
mov (%rsi),%bl
mov %bl,%al
mov $10,%cl
cmp %cl,%al
jne @_$LB12143
lea 18446744073709549392(%rbp),%rbx
movslq %r9d,%r9
add %r9,%rbx
movb $0,(%rbx)
mov %r9d,%esi
add $1,%esi
lea 18446744073709549392(%rbp),%rbx
movslq %esi,%rsi
add %rsi,%rbx
movb $0,(%rbx)
mov %r9d,%ebx
add $2,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709549392(%rbp),%rax
push %rax
call @exec_cmd
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB12146
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
call @project_files_load
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $27,%rbx
push %rbx
mov $@_$MSG4336,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
call @getc
mov %eax,%ebx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $10,%rbx
push %rbx
mov $@_$MSG4337,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rax
jmp @handle_key$END
@_$LB12146
mov $4294967295,%r9d
@_$LB12143
mov %r9d,%eax
mov $1023,%ecx
cmp %ecx,%eax
jge @_$LB12149
add $1,%r9d
@_$LB12149
jmp @_$LB12132
@_$LB12134
mov %r9d,%eax
mov $0,%ecx
cmp %ecx,%eax
jle @_$LB12152
lea 18446744073709549392(%rbp),%rbx
movslq %r9d,%r9
add %r9,%rbx
movb $0,(%rbx)
mov %r9d,%esi
add $1,%esi
lea 18446744073709549392(%rbp),%rbx
movslq %esi,%rsi
add %rsi,%rbx
movb $0,(%rbx)
mov %r9d,%ebx
add $2,%ebx
movslq %ebx,%rbx
push %rbx
lea 18446744073709549392(%rbp),%rax
push %rax
call @exec_cmd
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB12155
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
call @project_files_load
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $27,%rbx
push %rbx
mov $@_$MSG4338,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
call @getc
mov %eax,%ebx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $10,%rbx
push %rbx
mov $@_$MSG4339,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rax
jmp @handle_key$END
@_$LB12155
@_$LB12152
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov %r8d,%ebx
movslq %ebx,%rbx
push %rbx
mov $3,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
call @project_files_load
@_$LB12131
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $27,%rbx
push %rbx
mov $@_$MSG4340,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
call @getc
mov %eax,%ebx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $10,%rbx
push %rbx
mov $@_$MSG4341,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rax
jmp @handle_key$END
@_$LB12125
mov %ebx,%eax
mov $4283163,%ecx
cmp %ecx,%eax
jne @_$LB12158
mov @_$DATA+1057136,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB12161
subl $1,@_$DATA+1057136
@_$LB12161
mov $0,%rax
jmp @handle_key$END
@_$LB12158
mov %ebx,%eax
mov $4348699,%ecx
cmp %ecx,%eax
jne @_$LB12164
addl $1,@_$DATA+1057136
mov $0,%rax
jmp @handle_key$END
@_$LB12164
mov %ebx,%eax
mov $4479771,%ecx
cmp %ecx,%eax
jne @_$LB12167
call @project_go_to_parent
mov $0,%rax
jmp @handle_key$END
@_$LB12167
mov %ebx,%eax
mov $4414235,%ecx
cmp %ecx,%eax
jne @_$LB12170
call @project_open_file
mov %rax,%rbx
mov %rbx,%r8
mov %r8,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB12173
lea @_$DATA+1053024,%rax
push %rax
call @strlen
mov %rax,%rdi
add $8,%rsp
push %r8
call @strlen
mov %rax,%rbx
add $8,%rsp
lea (%rdi,%rbx),%rsi
mov %rsi,%rbx
add $5,%rbx
push %rbx
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB12176
lea @_$DATA+1053024,%rax
push %rax
push %rdi
call @strcpy
mov %rax,%rbx
add $16,%rsp
push %r8
push %rdi
call @strcat
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $256,%rbx
push %rbx
lea 18446744073709549184(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov %rdi,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $262,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
jne @_$LB12178
mov 18446744073709549192(%rbp),%rbx
push %rbx
mov 18446744073709549184(%rbp),%rbx
push %rbx
call @get_edit_cursor_pos
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
push %rdi
call @edit__edit_file
mov %rax,%rbx
add $16,%rsp
mov %rbx,%rsi
push %rsi
mov 18446744073709549192(%rbp),%rbx
push %rbx
mov 18446744073709549184(%rbp),%rbx
push %rbx
call @set_edit_cursor_pos
add $24,%rsp
jmp @_$LB12179
@_$LB12178
pushq $0
push %rdi
call @edit__edit_file
mov %rax,%rbx
add $16,%rsp
@_$LB12179
push %rdi
call @free
add $8,%rsp
@_$LB12176
@_$LB12173
mov $0,%rax
jmp @handle_key$END
@_$LB12170
mov %ebx,%eax
mov $68,%ecx
cmp %ecx,%eax
je @_$LB12185
mov %ebx,%eax
mov $100,%ecx
cmp %ecx,%eax
jne @_$LB12182
@_$LB12185
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052880,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $10,%rbx
push %rbx
mov $@_$MSG4342,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
mov $@_$MSG4343,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%edi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
lea 18446744073709548880(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB12188
mov 18446744073709548880(%rbp),%al
mov $10,%cl
cmp %cl,%al
je @_$LB12188
@_$LB12191
@_$LB12186
mov %edi,%eax
mov $255,%ecx
cmp %ecx,%eax
jge @_$LB12194
mov 18446744073709548880(%rbp),%al
mov $47,%cl
cmp %cl,%al
je @_$LB12194
@_$LB12197
lea 18446744073709548896(%rbp),%rbx
movslq %edi,%rdi
add %rdi,%rbx
mov 18446744073709548880(%rbp),%al
mov %al,(%rbx)
mov %edi,%ebx
add $1,%ebx
mov %ebx,%edi
@_$LB12194
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
lea 18446744073709548880(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB12200
mov 18446744073709548880(%rbp),%al
mov $10,%cl
cmp %cl,%al
jne @_$LB12186
@_$LB12200
@_$LB12188
lea 18446744073709548896(%rbp),%rbx
movslq %edi,%rdi
add %rdi,%rbx
movb $0,(%rbx)
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB12203
lea @_$DATA+1053024,%rax
push %rax
call @strlen
mov %rax,%rbx
add $8,%rsp
lea (%rbx,%rdi),%rsi
mov %rsi,%rbx
add $5,%rbx
push %rbx
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB12206
lea @_$DATA+1053024,%rax
push %rax
push %rsi
call @strcpy
mov %rax,%rbx
add $16,%rsp
lea 18446744073709548896(%rbp),%rax
push %rax
push %rsi
call @strcat
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $493,%rbx
push %rbx
mov %rsi,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $258,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
call @project_files_load
mov $0,%eax
mov %eax,@_$DATA+1057136
push %rsi
call @free
add $8,%rsp
@_$LB12206
@_$LB12203
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $10,%rbx
push %rbx
mov $@_$MSG4344,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rax
jmp @handle_key$END
@_$LB12182
mov %ebx,%eax
mov $70,%ecx
cmp %ecx,%eax
je @_$LB12212
mov %ebx,%eax
mov $102,%ecx
cmp %ecx,%eax
jne @_$LB12209
@_$LB12212
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052880,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $10,%rbx
push %rbx
mov $@_$MSG4345,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $11,%rbx
push %rbx
mov $@_$MSG4346,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%edi
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
lea 18446744073709548576(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB12215
mov 18446744073709548576(%rbp),%al
mov $10,%cl
cmp %cl,%al
je @_$LB12215
@_$LB12218
@_$LB12213
mov %edi,%eax
mov $255,%ecx
cmp %ecx,%eax
jge @_$LB12221
mov 18446744073709548576(%rbp),%al
mov $47,%cl
cmp %cl,%al
je @_$LB12221
@_$LB12224
lea 18446744073709548592(%rbp),%rbx
movslq %edi,%rdi
add %rdi,%rbx
mov 18446744073709548576(%rbp),%al
mov %al,(%rbx)
mov %edi,%ebx
add $1,%ebx
mov %ebx,%edi
@_$LB12221
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $1,%rbx
push %rbx
lea 18446744073709548576(%rbp),%rsi
mov %rsi,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $1,%rcx
cmp %rcx,%rax
jne @_$LB12227
mov 18446744073709548576(%rbp),%al
mov $10,%cl
cmp %cl,%al
jne @_$LB12213
@_$LB12227
@_$LB12215
lea 18446744073709548592(%rbp),%rbx
movslq %edi,%rdi
add %rdi,%rbx
movb $0,(%rbx)
mov %edi,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB12230
lea @_$DATA+1053024,%rax
push %rax
call @strlen
mov %rax,%rbx
add $8,%rsp
lea (%rbx,%rdi),%rsi
mov %rsi,%rbx
add $5,%rbx
push %rbx
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rsi
mov %rsi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB12233
lea @_$DATA+1053024,%rax
push %rax
push %rsi
call @strcpy
mov %rax,%rbx
add $16,%rsp
lea 18446744073709548592(%rbp),%rax
push %rax
push %rsi
call @strcat
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $33188,%rbx
push %rbx
mov %rsi,%rbx
push %rbx
mov @_$DATA+1053008,%ebx
movslq %ebx,%rbx
push %rbx
mov $259,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
call @project_files_load
mov $0,%eax
mov %eax,@_$DATA+1057136
push %rsi
call @free
add $8,%rsp
@_$LB12233
@_$LB12230
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $10,%rbx
push %rbx
mov $@_$MSG4347,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rax
jmp @handle_key$END
@_$LB12209
mov %ebx,%eax
mov $94,%ecx
cmp %ecx,%eax
jne @_$LB12236
call @project_file_current
mov %rax,%rbx
mov %rbx,%r8
mov $0,%rbx
mov %r8,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB12239
mov $0,%rax
jmp @handle_key$END
@_$LB12239
mov $@_$MSG4348,%rbx
push %rbx
push %r8
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12242
mov $@_$MSG4349,%rbx
push %rbx
lea @_$DATA+1053024,%rax
push %rax
call @strcmp
mov %eax,%ebx
add $16,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12242
@_$LB12245
mov $0,%rax
jmp @handle_key$END
@_$LB12242
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052880,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $10,%rbx
push %rbx
mov $@_$MSG4350,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
lea @_$DATA+1053024,%rax
push %rax
call @strlen
mov %rax,%rsi
add $8,%rsp
mov %rsi,%rbx
add $256,%rbx
push %rbx
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rdi
mov %rdi,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB12248
lea @_$DATA+1053024,%rax
push %rax
push %rdi
call @strcpy
mov %rax,%rbx
add $16,%rsp
push %r8
push %rdi
call @strcat
mov %rax,%rbx
add $16,%rsp
mov 256(%r8),%rbx
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB12250
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $37,%rbx
push %rbx
mov $@_$MSG4351,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
jmp @_$LB12251
@_$LB12250
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $13,%rbx
push %rbx
mov $@_$MSG4352,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
@_$LB12251
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
push %rdi
call @strlen
mov %rax,%rsi
add $8,%rsp
mov %rsi,%rbx
push %rbx
mov %rdi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $9,%rbx
push %rbx
mov $@_$MSG4353,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $2,%rbx
push %rbx
lea 18446744073709548528(%rbp),%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $2,%rcx
cmp %rcx,%rax
jne @_$LB12254
mov 18446744073709548528(%rbp),%bl
mov %bl,%al
mov $121,%cl
cmp %cl,%al
je @_$LB12263
mov 18446744073709548528(%rbp),%bl
mov %bl,%al
mov $89,%cl
cmp %cl,%al
jne @_$LB12254
@_$LB12263
@_$LB12260
mov 18446744073709548529(%rbp),%bl
mov %bl,%al
mov $10,%cl
cmp %cl,%al
jne @_$LB12254
@_$LB12257
push %rdi
call @remove_project_file
add $8,%rsp
call @project_files_load
mov $0,%eax
mov %eax,@_$DATA+1057136
@_$LB12254
push %rdi
call @free
add $8,%rsp
@_$LB12248
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $10,%rbx
push %rbx
mov $@_$MSG4354,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052816,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rax
jmp @handle_key$END
@_$LB12236
mov $0,%rax
@handle_key$END
pop %r13
pop %r12
pop %r9
pop %r8
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@paint_all
push %rbp
mov %rsp,%rbp
sub $80,%rsp
push %rbx
@_$LB12264
call @project_files_display
call @unblock_sigwinch
mov @_$DATA+1052992,%ebx
mov $0,%eax
mov %eax,@_$DATA+1052992
call @block_sigwinch
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
jne @_$LB12264
@_$LB12266
@paint_all$END
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
@main
push %rbp
mov %rsp,%rbp
sub $128,%rsp
push %rbx
mov 16(%rbp),%rbx
push %rsi
mov 24(%rbp),%rsi
push %rdi
mov %ebx,%eax
mov $2,%ecx
cmp %ecx,%eax
jge @_$LB12269
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $32,%rbx
push %rbx
mov $@_$MSG4355,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $69,%rbx
push %rbx
mov $@_$MSG4356,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @main$END
@_$LB12269
mov 8(%rsi),%rbx
push %rbx
call @init_project
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB12272
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $30,%rbx
push %rbx
mov $@_$MSG4357,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $1,%rax
jmp @main$END
@_$LB12272
call @project_files_load
mov $1,%rbx
push %rbx
pushq $2
call @signal
mov %rax,%rbx
add $16,%rsp
mov $1,%rbx
push %rbx
pushq $3
call @signal
mov %rax,%rbx
add $16,%rsp
mov $1,%rbx
push %rbx
pushq $20
call @signal
mov %rax,%rbx
add $16,%rsp
call @block_sigwinch
mov $@SH_winch,%rax
push %rax
pushq $28
call @signal
mov %rax,%rbx
add $16,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052800,%rsi
mov %rsi,%rbx
push %rbx
mov $21523,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov %rbx,%rax
mov $0,%rcx
cmp %rcx,%rax
je @_$LB12275
mov $1,%rax
jmp @main$END
@_$LB12275
pushq $8388608
call @malloc
mov %rax,%rbx
add $8,%rsp
mov %rbx,%rax
mov %rax,@_$DATA+1052944
mov $0,%rbx
mov @_$DATA+1052944,%rax
mov %rbx,%rcx
cmp %rcx,%rax
jne @_$LB12278
mov $1,%rax
jmp @main$END
@_$LB12278
call @term_init
mov %eax,%ebx
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB12281
mov $1,%rax
jmp @main$END
@_$LB12281
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $10,%rbx
push %rbx
mov $@_$MSG4358,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov @_$DATA+1052802,%si
mov %si,%bx
movzwl %bx,%ebx
mov $2,%rax
mov %ebx,%ecx
movslq %ecx,%rcx
imul %rcx
mov %rax,%rdi
mov @_$DATA+1052800,%bx
mov %bx,%si
movzwl %si,%esi
mov %rdi,%rax
mov %esi,%ecx
movslq %ecx,%rcx
mul %rcx
mov %rax,%rbx
push %rbx
pushq $0
mov @_$DATA+1052944,%rax
push %rax
call @memset
mov %rax,%rbx
add $24,%rsp
call @paint_all
call @display_pbuf
@_$LB12282
call @getc
mov %eax,%ebx
mov %ebx,%esi
movslq %esi,%rsi
push %rsi
call @handle_key
mov %eax,%ebx
add $8,%rsp
mov %ebx,%eax
mov $0,%ecx
cmp %ecx,%eax
je @_$LB12287
jmp @_$LB12284
@_$LB12287
mov $0,%eax
mov %eax,@_$DATA+1052992
mov @_$DATA+1052802,%si
mov %si,%bx
movzwl %bx,%ebx
mov $2,%rax
mov %ebx,%ecx
movslq %ecx,%rcx
imul %rcx
mov %rax,%rdi
mov @_$DATA+1052800,%bx
mov %bx,%si
movzwl %si,%esi
mov %rdi,%rax
mov %esi,%ecx
movslq %ecx,%rcx
mul %rcx
mov %rax,%rbx
push %rbx
pushq $0
mov @_$DATA+1052944,%rax
push %rax
call @memset
mov %rax,%rbx
add $24,%rsp
call @paint_all
call @display_pbuf
jmp @_$LB12282
@_$LB12284
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
lea @_$DATA+1052880,%rsi
mov %rsi,%rbx
push %rbx
mov $21506,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $16,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $0,%rbx
push %rbx
mov $10,%rbx
push %rbx
mov $@_$MSG4359,%rsi
mov %rsi,%rbx
push %rbx
mov $1,%rbx
push %rbx
mov $1,%rbx
push %rbx
call @__syscall
mov %rax,%rbx
add $56,%rsp
mov $0,%rax
@main$END
pop %rdi
pop %rsi
pop %rbx
mov %rbp,%rsp
pop %rbp
ret
.datasize 11962928
